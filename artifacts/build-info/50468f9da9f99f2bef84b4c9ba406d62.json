{"id":"50468f9da9f99f2bef84b4c9ba406d62","_format":"hh-sol-build-info-1","solcVersion":"0.8.1","solcLongVersion":"0.8.1+commit.df193b15","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerable.sol\";\nimport \"./AccessControl.sol\";\nimport \"../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual override returns (uint256[] memory) {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory amounts) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC1155/extensions/ERC1155Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155.sol\";\nimport \"../../../security/Pausable.sol\";\n\n/**\n * @dev ERC1155 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract unpausable.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Pausable is ERC1155, Pausable {\n    /**\n     * @dev See {ERC1155-_beforeTokenTransfer}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        require(!paused(), \"ERC1155Pausable: token transfer while paused\");\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/presets/ERC1155PresetMinterPauser.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/presets/ERC1155PresetMinterPauser.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155.sol\";\nimport \"../extensions/ERC1155Burnable.sol\";\nimport \"../extensions/ERC1155Pausable.sol\";\nimport \"../../../access/AccessControlEnumerable.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev {ERC1155} token, including:\n *\n *  - ability for holders to burn (destroy) their tokens\n *  - a minter role that allows for token minting (creation)\n *  - a pauser role that allows to stop all token transfers\n *\n * This contract uses {AccessControl} to lock permissioned functions using the\n * different roles - head to its documentation for details.\n *\n * The account that deploys the contract will be granted the minter and pauser\n * roles, as well as the default admin role, which will let it grant both minter\n * and pauser roles to other accounts.\n *\n * _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._\n */\ncontract ERC1155PresetMinterPauser is Context, AccessControlEnumerable, ERC1155Burnable, ERC1155Pausable {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    /**\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE`, and `PAUSER_ROLE` to the account that\n     * deploys the contract.\n     */\n    constructor(string memory uri) ERC1155(uri) {\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n\n        _setupRole(MINTER_ROLE, _msgSender());\n        _setupRole(PAUSER_ROLE, _msgSender());\n    }\n\n    /**\n     * @dev Creates `amount` new tokens for `to`, of token type `id`.\n     *\n     * See {ERC1155-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MINTER_ROLE`.\n     */\n    function mint(address to, uint256 id, uint256 amount, bytes memory data) public virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have minter role to mint\");\n\n        _mint(to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] variant of {mint}.\n     */\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have minter role to mint\");\n\n        _mintBatch(to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Pauses all token transfers.\n     *\n     * See {ERC1155Pausable} and {Pausable-_pause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function pause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have pauser role to pause\");\n        _pause();\n    }\n\n    /**\n     * @dev Unpauses all token transfers.\n     *\n     * See {ERC1155Pausable} and {Pausable-_unpause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function unpause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have pauser role to unpause\");\n        _unpause();\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override(AccessControlEnumerable, ERC1155) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override(ERC1155, ERC1155Pausable) {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../security/Pausable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract unpausable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_beforeTokenTransfer}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\n        super._beforeTokenTransfer(from, to, amount);\n\n        require(!paused(), \"ERC20Pausable: token transfer while paused\");\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/presets/ERC20PresetMinterPauser.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../extensions/ERC20Burnable.sol\";\nimport \"../extensions/ERC20Pausable.sol\";\nimport \"../../../access/AccessControlEnumerable.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev {ERC20} token, including:\n *\n *  - ability for holders to burn (destroy) their tokens\n *  - a minter role that allows for token minting (creation)\n *  - a pauser role that allows to stop all token transfers\n *\n * This contract uses {AccessControl} to lock permissioned functions using the\n * different roles - head to its documentation for details.\n *\n * The account that deploys the contract will be granted the minter and pauser\n * roles, as well as the default admin role, which will let it grant both minter\n * and pauser roles to other accounts.\n *\n * _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._\n */\ncontract ERC20PresetMinterPauser is Context, AccessControlEnumerable, ERC20Burnable, ERC20Pausable {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    /**\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n     * account that deploys the contract.\n     *\n     * See {ERC20-constructor}.\n     */\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n\n        _setupRole(MINTER_ROLE, _msgSender());\n        _setupRole(PAUSER_ROLE, _msgSender());\n    }\n\n    /**\n     * @dev Creates `amount` new tokens for `to`.\n     *\n     * See {ERC20-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MINTER_ROLE`.\n     */\n    function mint(address to, uint256 amount) public virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have minter role to mint\");\n        _mint(to, amount);\n    }\n\n    /**\n     * @dev Pauses all token transfers.\n     *\n     * See {ERC20Pausable} and {Pausable-_pause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function pause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have pauser role to pause\");\n        _pause();\n    }\n\n    /**\n     * @dev Unpauses all token transfers.\n     *\n     * See {ERC20Pausable} and {Pausable-_unpause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function unpause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have pauser role to unpause\");\n        _unpause();\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override(ERC20, ERC20Pausable) {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"solidity-bytes-utils/contracts/BytesLib.sol":{"content":"// SPDX-License-Identifier: Unlicense\n/*\n * @title Solidity Bytes Arrays Utils\n * @author Gonçalo Sá <goncalo.sa@consensys.net>\n *\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\n */\npragma solidity >=0.8.0 <0.9.0;\n\n\nlibrary BytesLib {\n    function concat(\n        bytes memory _preBytes,\n        bytes memory _postBytes\n    )\n        internal\n        pure\n        returns (bytes memory)\n    {\n        bytes memory tempBytes;\n\n        assembly {\n            // Get a location of some free memory and store it in tempBytes as\n            // Solidity does for memory variables.\n            tempBytes := mload(0x40)\n\n            // Store the length of the first bytes array at the beginning of\n            // the memory for tempBytes.\n            let length := mload(_preBytes)\n            mstore(tempBytes, length)\n\n            // Maintain a memory counter for the current write location in the\n            // temp bytes array by adding the 32 bytes for the array length to\n            // the starting location.\n            let mc := add(tempBytes, 0x20)\n            // Stop copying when the memory counter reaches the length of the\n            // first bytes array.\n            let end := add(mc, length)\n\n            for {\n                // Initialize a copy counter to the start of the _preBytes data,\n                // 32 bytes into its memory.\n                let cc := add(_preBytes, 0x20)\n            } lt(mc, end) {\n                // Increase both counters by 32 bytes each iteration.\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                // Write the _preBytes data into the tempBytes memory 32 bytes\n                // at a time.\n                mstore(mc, mload(cc))\n            }\n\n            // Add the length of _postBytes to the current length of tempBytes\n            // and store it as the new length in the first 32 bytes of the\n            // tempBytes memory.\n            length := mload(_postBytes)\n            mstore(tempBytes, add(length, mload(tempBytes)))\n\n            // Move the memory counter back from a multiple of 0x20 to the\n            // actual end of the _preBytes data.\n            mc := end\n            // Stop copying when the memory counter reaches the new combined\n            // length of the arrays.\n            end := add(mc, length)\n\n            for {\n                let cc := add(_postBytes, 0x20)\n            } lt(mc, end) {\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                mstore(mc, mload(cc))\n            }\n\n            // Update the free-memory pointer by padding our last write location\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\n            // next 32 byte block, then round down to the nearest multiple of\n            // 32. If the sum of the length of the two arrays is zero then add\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\n            mstore(0x40, and(\n              add(add(end, iszero(add(length, mload(_preBytes)))), 31),\n              not(31) // Round down to the nearest 32 bytes.\n            ))\n        }\n\n        return tempBytes;\n    }\n\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\n        assembly {\n            // Read the first 32 bytes of _preBytes storage, which is the length\n            // of the array. (We don't need to use the offset into the slot\n            // because arrays use the entire slot.)\n            let fslot := sload(_preBytes.slot)\n            // Arrays of 31 bytes or less have an even value in their slot,\n            // while longer arrays have an odd value. The actual length is\n            // the slot divided by two for odd values, and the lowest order\n            // byte divided by two for even values.\n            // If the slot is even, bitwise and the slot with 255 and divide by\n            // two to get the length. If the slot is odd, bitwise and the slot\n            // with -1 and divide by two.\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n            let newlength := add(slength, mlength)\n            // slength can contain both the length and contents of the array\n            // if length < 32 bytes so let's prepare for that\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n            switch add(lt(slength, 32), lt(newlength, 32))\n            case 2 {\n                // Since the new array still fits in the slot, we just need to\n                // update the contents of the slot.\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\n                sstore(\n                    _preBytes.slot,\n                    // all the modifications to the slot are inside this\n                    // next block\n                    add(\n                        // we can just add to the slot contents because the\n                        // bytes we want to change are the LSBs\n                        fslot,\n                        add(\n                            mul(\n                                div(\n                                    // load the bytes from memory\n                                    mload(add(_postBytes, 0x20)),\n                                    // zero all bytes to the right\n                                    exp(0x100, sub(32, mlength))\n                                ),\n                                // and now shift left the number of bytes to\n                                // leave space for the length in the slot\n                                exp(0x100, sub(32, newlength))\n                            ),\n                            // increase length by the double of the memory\n                            // bytes length\n                            mul(mlength, 2)\n                        )\n                    )\n                )\n            }\n            case 1 {\n                // The stored value fits in the slot, but the combined value\n                // will exceed it.\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // The contents of the _postBytes array start 32 bytes into\n                // the structure. Our first read should obtain the `submod`\n                // bytes that can fit into the unused space in the last word\n                // of the stored array. To get this, we read 32 bytes starting\n                // from `submod`, so the data we read overlaps with the array\n                // contents by `submod` bytes. Masking the lowest-order\n                // `submod` bytes allows us to add that value directly to the\n                // stored value.\n\n                let submod := sub(32, slength)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(\n                    sc,\n                    add(\n                        and(\n                            fslot,\n                            0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n                        ),\n                        and(mload(mc), mask)\n                    )\n                )\n\n                for {\n                    mc := add(mc, 0x20)\n                    sc := add(sc, 1)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n            default {\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                // Start copying to the last used word of the stored array.\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // Copy over the first `submod` bytes of the new data as in\n                // case 1 above.\n                let slengthmod := mod(slength, 32)\n                let mlengthmod := mod(mlength, 32)\n                let submod := sub(32, slengthmod)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\n\n                for {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n        }\n    }\n\n    function slice(\n        bytes memory _bytes,\n        uint256 _start,\n        uint256 _length\n    )\n        internal\n        pure\n        returns (bytes memory)\n    {\n        require(_length + 31 >= _length, \"slice_overflow\");\n        require(_bytes.length >= _start + _length, \"slice_outOfBounds\");\n\n        bytes memory tempBytes;\n\n        assembly {\n            switch iszero(_length)\n            case 0 {\n                // Get a location of some free memory and store it in tempBytes as\n                // Solidity does for memory variables.\n                tempBytes := mload(0x40)\n\n                // The first word of the slice result is potentially a partial\n                // word read from the original array. To read it, we calculate\n                // the length of that partial word and start copying that many\n                // bytes into the array. The first word we copy will start with\n                // data we don't care about, but the last `lengthmod` bytes will\n                // land at the beginning of the contents of the new array. When\n                // we're done copying, we overwrite the full first word with\n                // the actual length of the slice.\n                let lengthmod := and(_length, 31)\n\n                // The multiplication in the next line is necessary\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\n                // the following copy loop was copying the origin's length\n                // and then ending prematurely not copying everything it should.\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\n                let end := add(mc, _length)\n\n                for {\n                    // The multiplication in the next line has the same exact purpose\n                    // as the one above.\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\n                } lt(mc, end) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    mstore(mc, mload(cc))\n                }\n\n                mstore(tempBytes, _length)\n\n                //update free-memory pointer\n                //allocating the array padded to 32 bytes like the compiler does now\n                mstore(0x40, and(add(mc, 31), not(31)))\n            }\n            //if we want a zero-length slice let's just return a zero-length array\n            default {\n                tempBytes := mload(0x40)\n                //zero out the 32 bytes slice we are about to return\n                //we need to do it because Solidity does not garbage collect\n                mstore(tempBytes, 0)\n\n                mstore(0x40, add(tempBytes, 0x20))\n            }\n        }\n\n        return tempBytes;\n    }\n\n    function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {\n        require(_bytes.length >= _start + 20, \"toAddress_outOfBounds\");\n        address tempAddress;\n\n        assembly {\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\n        }\n\n        return tempAddress;\n    }\n\n    function toUint8(bytes memory _bytes, uint256 _start) internal pure returns (uint8) {\n        require(_bytes.length >= _start + 1 , \"toUint8_outOfBounds\");\n        uint8 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x1), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint16(bytes memory _bytes, uint256 _start) internal pure returns (uint16) {\n        require(_bytes.length >= _start + 2, \"toUint16_outOfBounds\");\n        uint16 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x2), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint32(bytes memory _bytes, uint256 _start) internal pure returns (uint32) {\n        require(_bytes.length >= _start + 4, \"toUint32_outOfBounds\");\n        uint32 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x4), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint64(bytes memory _bytes, uint256 _start) internal pure returns (uint64) {\n        require(_bytes.length >= _start + 8, \"toUint64_outOfBounds\");\n        uint64 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x8), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint96(bytes memory _bytes, uint256 _start) internal pure returns (uint96) {\n        require(_bytes.length >= _start + 12, \"toUint96_outOfBounds\");\n        uint96 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0xc), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint128(bytes memory _bytes, uint256 _start) internal pure returns (uint128) {\n        require(_bytes.length >= _start + 16, \"toUint128_outOfBounds\");\n        uint128 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x10), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint256(bytes memory _bytes, uint256 _start) internal pure returns (uint256) {\n        require(_bytes.length >= _start + 32, \"toUint256_outOfBounds\");\n        uint256 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toBytes32(bytes memory _bytes, uint256 _start) internal pure returns (bytes32) {\n        require(_bytes.length >= _start + 32, \"toBytes32_outOfBounds\");\n        bytes32 tempBytes32;\n\n        assembly {\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempBytes32;\n    }\n\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\n        bool success = true;\n\n        assembly {\n            let length := mload(_preBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(length, mload(_postBytes))\n            case 1 {\n                // cb is a circuit breaker in the for loop since there's\n                //  no said feature for inline assembly loops\n                // cb = 1 - don't breaker\n                // cb = 0 - break\n                let cb := 1\n\n                let mc := add(_preBytes, 0x20)\n                let end := add(mc, length)\n\n                for {\n                    let cc := add(_postBytes, 0x20)\n                // the next line is the loop condition:\n                // while(uint256(mc < end) + cb == 2)\n                } eq(add(lt(mc, end), cb), 2) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    // if any of these checks fails then arrays are not equal\n                    if iszero(eq(mload(mc), mload(cc))) {\n                        // unsuccess:\n                        success := 0\n                        cb := 0\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n\n    function equalStorage(\n        bytes storage _preBytes,\n        bytes memory _postBytes\n    )\n        internal\n        view\n        returns (bool)\n    {\n        bool success = true;\n\n        assembly {\n            // we know _preBytes_offset is 0\n            let fslot := sload(_preBytes.slot)\n            // Decode the length of the stored array like in concatStorage().\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(slength, mlength)\n            case 1 {\n                // slength can contain both the length and contents of the array\n                // if length < 32 bytes so let's prepare for that\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n                if iszero(iszero(slength)) {\n                    switch lt(slength, 32)\n                    case 1 {\n                        // blank the last byte which is the length\n                        fslot := mul(div(fslot, 0x100), 0x100)\n\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\n                            // unsuccess:\n                            success := 0\n                        }\n                    }\n                    default {\n                        // cb is a circuit breaker in the for loop since there's\n                        //  no said feature for inline assembly loops\n                        // cb = 1 - don't breaker\n                        // cb = 0 - break\n                        let cb := 1\n\n                        // get the keccak hash to get the contents of the array\n                        mstore(0x0, _preBytes.slot)\n                        let sc := keccak256(0x0, 0x20)\n\n                        let mc := add(_postBytes, 0x20)\n                        let end := add(mc, mlength)\n\n                        // the next line is the loop condition:\n                        // while(uint256(mc < end) + cb == 2)\n                        for {} eq(add(lt(mc, end), cb), 2) {\n                            sc := add(sc, 1)\n                            mc := add(mc, 0x20)\n                        } {\n                            if iszero(eq(sload(sc), mload(mc))) {\n                                // unsuccess:\n                                success := 0\n                                cb := 0\n                            }\n                        }\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":1000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:199:5:\n    |\n199 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9616,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":8633},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:241:5:\n    |\n241 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10014,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":9769},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:199:5:\n    |\n199 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9616,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":8633},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:241:5:\n    |\n241 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10014,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":9769},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:199:5:\n    |\n199 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9616,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":8633},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:241:5:\n    |\n241 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10014,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":9769},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:169:5:\n    |\n169 |     function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":6042,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":5919},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:243:5:\n    |\n243 |     function add(AddressSet storage set, address value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":8455,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":8305},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:317:5:\n    |\n317 |     function add(UintSet storage set, uint256 value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10922,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":10793},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:169:5:\n    |\n169 |     function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":6042,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":5919},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:243:5:\n    |\n243 |     function add(AddressSet storage set, address value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":8455,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":8305},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:317:5:\n    |\n317 |     function add(UintSet storage set, uint256 value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10922,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":10793},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:169:5:\n    |\n169 |     function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":6042,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":5919},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:243:5:\n    |\n243 |     function add(AddressSet storage set, address value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":8455,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":8305},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:317:5:\n    |\n317 |     function add(UintSet storage set, uint256 value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10922,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":10793},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:200:30:\n    |\n200 |     ) internal view returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":7863,"file":"@openzeppelin/contracts/utils/Address.sol","start":7851},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:223:30:\n    |\n223 |     ) internal pure returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":8678,"file":"@openzeppelin/contracts/utils/Address.sol","start":8666},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[3799],"ERC165":[4052],"IAccessControl":[513],"IERC165":[4064],"Math":[4930],"SignedMath":[5347],"Strings":[4028]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nodeType":"ImportDirective","scope":316,"sourceUnit":514,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nodeType":"ImportDirective","scope":316,"sourceUnit":3800,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nodeType":"ImportDirective","scope":316,"sourceUnit":4029,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nodeType":"ImportDirective","scope":316,"sourceUnit":4053,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3799,"src":"1967:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1967:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":513,"src":"1976:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1976:14:0"},{"baseName":{"id":11,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":4052,"src":"1992:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1992:6:0"}],"contractDependencies":[513,3799,4052,4064],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,4052,4064,513,3799],"name":"AccessControl","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nodeType":"VariableDeclaration","scope":19,"src":"2031:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2031:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"2050:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nodeType":"VariableDeclaration","scope":19,"src":"2073:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2073:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nodeType":"StructDefinition","scope":315,"src":"2005:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nodeType":"VariableDeclaration","scope":315,"src":"2103:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2103:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nodeType":"IdentifierPath","referencedDeclaration":19,"src":"2122:8:0"},"referencedDeclaration":19,"src":"2122:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nodeType":"VariableDeclaration","scope":315,"src":"2153:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2621:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2642:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2631:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2631:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2631:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2657:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2209:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":38,"src":"2607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2606:14:0"},"src":"2589:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[4051],"body":{"id":59,"nodeType":"Block","src":"2823:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2840:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"2860:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$513_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$513_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2855:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2855:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$513","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2855:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2840:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2915:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2891:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4051,"src":"2891:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2891:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2840:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2833:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2671:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2799:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":60,"src":"2759:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2759:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2758:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":60,"src":"2817:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2816:6:0"},"scope":315,"src":"2732:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[480],"body":{"id":78,"nodeType":"Block","src":"3113:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3130:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3137:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3130:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3151:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"3123:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2940:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3089:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":79,"src":"3038:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":79,"src":"3052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3037:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":79,"src":"3107:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"3107:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3106:6:0"},"scope":315,"src":"3021:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3516:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3537:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"3543:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3543:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3526:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3526:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3526:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3172:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":92,"src":"3480:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3479:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3516:0:0"},"scope":315,"src":"3460:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3917:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3931:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3940:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3932:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3932:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3927:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3956:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4064:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4135:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"4115:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4028_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":4002,"src":"4115:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4115:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4242:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4234:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4234:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"4214:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4028_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":3982,"src":"4214:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4214:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4022:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"4022:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4022:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3994:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3994:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3970:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3970:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3970:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3569:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":131,"src":"3864:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":131,"src":"3878:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3863:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3917:0:0"},"scope":315,"src":"3844:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[488],"body":{"id":145,"nodeType":"Block","src":"4587:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4611:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4604:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4604:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4597:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4329:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4560:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":146,"src":"4526:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4525:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":146,"src":"4578:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4578:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4577:9:0"},"scope":315,"src":"4504:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[496],"body":{"id":165,"nodeType":"Block","src":"5032:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5053:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"5059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5042:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5042:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"5042:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4639:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5025:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5012:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5012:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"modifierName":{"id":154,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5003:8:0"},"nodeType":"ModifierInvocation","src":"5003:28:0"}],"name":"grantRole","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4994:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":166,"src":"4948:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":166,"src":"4962:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4947:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"5032:0:0"},"scope":315,"src":"4929:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[504],"body":{"id":185,"nodeType":"Block","src":"5458:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5480:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5486:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5468:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5468:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5468:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"5080:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5451:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5438:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5438:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"modifierName":{"id":174,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5429:8:0"},"nodeType":"ModifierInvocation","src":"5429:28:0"}],"name":"revokeRole","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5420:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":186,"src":"5374:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5374:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":186,"src":"5388:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5373:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5458:0:0"},"scope":315,"src":"5354:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[512],"body":{"id":208,"nodeType":"Block","src":"6115:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"6144:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6144:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6133:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6125:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6125:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"6125:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6231:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6237:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6219:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6219:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6219:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5507:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"6106:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":209,"src":"6060:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6060:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":209,"src":"6074:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"6074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6059:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"6115:0:0"},"scope":315,"src":"6038:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"7005:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"7026:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7015:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7015:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"7015:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6258:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":223,"src":"6957:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6957:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":223,"src":"6971:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6956:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"7005:0:0"},"scope":315,"src":"6937:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7245:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nodeType":"VariableDeclaration","scope":250,"src":"7255:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7255:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7296:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7283:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7255:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7311:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7318:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7311:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7311:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7336:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7311:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7311:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7377:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7383:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7402:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"7360:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7360:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7355:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"7053:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":251,"src":"7195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nodeType":"VariableDeclaration","scope":251,"src":"7209:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7194:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7245:0:0"},"scope":315,"src":"7172:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7655:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7669:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7678:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7670:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7670:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7665:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7694:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7708:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7715:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7708:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7708:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7729:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7708:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7740:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7708:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7708:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7775:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7781:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"7790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7763:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7758:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7425:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":283,"src":"7607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":283,"src":"7621:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7606:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7655:0:0"},"scope":315,"src":"7587:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"8060:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8082:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8088:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"8074:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8074:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"8070:149:0","trueBody":{"id":311,"nodeType":"Block","src":"8098:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"8112:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8119:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8112:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"8112:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8112:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8144:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8112:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"8112:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8180:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8186:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"8195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"8168:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8168:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8163:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7826:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":314,"src":"8012:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8012:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":314,"src":"8026:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"8026:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8011:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"8060:0:0"},"scope":315,"src":"7991:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1932:6295:0"}],"src":"108:8120:0"},"id":0},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","exportedSymbols":{"AccessControl":[315],"AccessControlEnumerable":[440],"Context":[3799],"ERC165":[4052],"EnumerableSet":[5960],"IAccessControl":[513],"IAccessControlEnumerable":[538],"IERC165":[4064],"Math":[4930],"SignedMath":[5347],"Strings":[4028]},"id":441,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:1"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControlEnumerable.sol","file":"./IAccessControlEnumerable.sol","id":318,"nodeType":"ImportDirective","scope":441,"sourceUnit":539,"src":"143:40:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"./AccessControl.sol","id":319,"nodeType":"ImportDirective","scope":441,"sourceUnit":316,"src":"184:29:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"../utils/structs/EnumerableSet.sol","id":320,"nodeType":"ImportDirective","scope":441,"sourceUnit":5961,"src":"214:44:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":322,"name":"IAccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":538,"src":"400:24:1"},"id":323,"nodeType":"InheritanceSpecifier","src":"400:24:1"},{"baseName":{"id":324,"name":"AccessControl","nodeType":"IdentifierPath","referencedDeclaration":315,"src":"426:13:1"},"id":325,"nodeType":"InheritanceSpecifier","src":"426:13:1"}],"contractDependencies":[315,513,538,3799,4052,4064],"contractKind":"contract","documentation":{"id":321,"nodeType":"StructuredDocumentation","src":"260:94:1","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":440,"linearizedBaseContracts":[440,315,4052,4064,538,513,3799],"name":"AccessControlEnumerable","nodeType":"ContractDefinition","nodes":[{"id":329,"libraryName":{"id":326,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":5960,"src":"452:13:1"},"nodeType":"UsingForDirective","src":"446:49:1","typeName":{"id":328,"nodeType":"UserDefinedTypeName","pathNode":{"id":327,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":5673,"src":"470:24:1"},"referencedDeclaration":5673,"src":"470:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":334,"mutability":"mutable","name":"_roleMembers","nodeType":"VariableDeclaration","scope":440,"src":"501:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5673_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":333,"keyType":{"id":330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"509:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"501:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5673_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueType":{"id":332,"nodeType":"UserDefinedTypeName","pathNode":{"id":331,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":5673,"src":"520:24:1"},"referencedDeclaration":5673,"src":"520:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"baseFunctions":[60],"body":{"id":355,"nodeType":"Block","src":"725:121:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":343,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"742:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":345,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"762:24:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$538_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$538_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":344,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"757:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"757:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$538","typeString":"type(contract IAccessControlEnumerable)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"757:42:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"742:57:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":351,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"827:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":349,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"803:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$440_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":60,"src":"803:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"803:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"742:97:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":342,"id":354,"nodeType":"Return","src":"735:104:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"573:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":356,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":339,"nodeType":"OverrideSpecifier","overrides":[],"src":"701:8:1"},"parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":356,"src":"661:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":336,"name":"bytes4","nodeType":"ElementaryTypeName","src":"661:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"660:20:1"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":356,"src":"719:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":340,"name":"bool","nodeType":"ElementaryTypeName","src":"719:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"718:6:1"},"scope":440,"src":"634:212:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[529],"body":{"id":374,"nodeType":"Block","src":"1530:52:1","statements":[{"expression":{"arguments":[{"id":371,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"1569:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":367,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"1547:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5673_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":369,"indexExpression":{"id":368,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"1560:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1547:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":5796,"src":"1547:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5673_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$5673_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1547:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":366,"id":373,"nodeType":"Return","src":"1540:35:1"}]},"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"852:574:1","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":375,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nodeType":"FunctionDefinition","overrides":{"id":363,"nodeType":"OverrideSpecifier","overrides":[],"src":"1503:8:1"},"parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":375,"src":"1454:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1454:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":375,"src":"1468:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1453:29:1"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":375,"src":"1521:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1520:9:1"},"scope":440,"src":"1431:151:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[537],"body":{"id":390,"nodeType":"Block","src":"1839:51:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":384,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"1856:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5673_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":386,"indexExpression":{"id":385,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"1869:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1856:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":5769,"src":"1856:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5673_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$5673_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1856:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":383,"id":389,"nodeType":"Return","src":"1849:34:1"}]},"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"1588:157:1","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":391,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nodeType":"FunctionDefinition","overrides":{"id":380,"nodeType":"OverrideSpecifier","overrides":[],"src":"1812:8:1"},"parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":391,"src":"1778:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1778:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1777:14:1"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":391,"src":"1830:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1830:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1829:9:1"},"scope":440,"src":"1750:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[283],"body":{"id":414,"nodeType":"Block","src":"2055:89:1","statements":[{"expression":{"arguments":[{"id":403,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2082:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":404,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2088:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":400,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2065:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$440_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":283,"src":"2065:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2065:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":406,"nodeType":"ExpressionStatement","src":"2065:31:1"},{"expression":{"arguments":[{"id":411,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2129:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":407,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2106:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5673_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":409,"indexExpression":{"id":408,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2119:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2106:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5700,"src":"2106:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$5673_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$5673_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2106:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":413,"nodeType":"ExpressionStatement","src":"2106:31:1"}]},"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"1896:77:1","text":" @dev Overload {_grantRole} to track enumerable memberships"},"id":415,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nodeType":"FunctionDefinition","overrides":{"id":398,"nodeType":"OverrideSpecifier","overrides":[],"src":"2046:8:1"},"parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":415,"src":"1998:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1998:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":415,"src":"2012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"2012:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1997:31:1"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[],"src":"2055:0:1"},"scope":440,"src":"1978:166:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[314],"body":{"id":438,"nodeType":"Block","src":"2311:93:1","statements":[{"expression":{"arguments":[{"id":427,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2339:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":428,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2345:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":424,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2321:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$440_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":314,"src":"2321:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"2321:32:1"},{"expression":{"arguments":[{"id":435,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2389:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":431,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2363:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5673_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":433,"indexExpression":{"id":432,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2376:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2363:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":5727,"src":"2363:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$5673_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$5673_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2363:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":437,"nodeType":"ExpressionStatement","src":"2363:34:1"}]},"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"2150:78:1","text":" @dev Overload {_revokeRole} to track enumerable memberships"},"id":439,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nodeType":"FunctionDefinition","overrides":{"id":422,"nodeType":"OverrideSpecifier","overrides":[],"src":"2302:8:1"},"parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":439,"src":"2254:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2254:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":439,"src":"2268:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2253:31:1"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"2311:0:1"},"scope":440,"src":"2233:171:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":441,"src":"355:2051:1"}],"src":"118:2289:1"},"id":1},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[513]},"id":514,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":442,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"119:89:2","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":513,"linearizedBaseContracts":[513],"name":"IAccessControl","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"240:292:2","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"id":452,"name":"RoleAdminChanged","nodeType":"EventDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"indexed":true,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":452,"src":"560:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":448,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nodeType":"VariableDeclaration","scope":452,"src":"582:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":450,"indexed":true,"mutability":"mutable","name":"newAdminRole","nodeType":"VariableDeclaration","scope":452,"src":"617:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:2"},"src":"537:110:2"},{"anonymous":false,"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"653:212:2","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"id":461,"name":"RoleGranted","nodeType":"EventDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"indexed":true,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":461,"src":"888:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":457,"indexed":true,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":461,"src":"910:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":459,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":461,"src":"935:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:2"},"src":"870:89:2"},{"anonymous":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"965:275:2","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"id":470,"name":"RoleRevoked","nodeType":"EventDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"indexed":true,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":470,"src":"1263:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":466,"indexed":true,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":470,"src":"1285:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":468,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":470,"src":"1310:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:2"},"src":"1245:89:2"},{"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"1340:76:2","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":480,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":480,"src":"1438:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":475,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":480,"src":"1452:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:2"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":480,"src":"1492:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":477,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:2"},"scope":513,"src":"1421:77:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"1504:184:2","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":488,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":488,"src":"1715:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:2"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":488,"src":"1752:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:2"},"scope":513,"src":"1693:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"1767:239:2","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":496,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":496,"src":"2030:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":496,"src":"2044:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:2"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[],"src":"2069:0:2"},"scope":513,"src":"2011:59:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"2076:223:2","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":504,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":504,"src":"2324:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":504,"src":"2338:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:2"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"2363:0:2"},"scope":513,"src":"2304:60:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"2370:480:2","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":512,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":512,"src":"2877:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":512,"src":"2891:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:2"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"2916:0:2"},"scope":513,"src":"2855:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":514,"src":"209:2710:2"}],"src":"94:2826:2"},"id":2},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[513],"IAccessControlEnumerable":[538]},"id":539,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":515,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:3"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":516,"nodeType":"ImportDirective","scope":539,"sourceUnit":514,"src":"129:30:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":518,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":513,"src":"299:14:3"},"id":519,"nodeType":"InheritanceSpecifier","src":"299:14:3"}],"contractDependencies":[513],"contractKind":"interface","documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"161:99:3","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":538,"linearizedBaseContracts":[538,513],"name":"IAccessControlEnumerable","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"320:574:3","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":529,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":529,"src":"922:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"922:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":529,"src":"936:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"921:29:3"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":529,"src":"974:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"973:9:3"},"scope":538,"src":"899:84:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"989:157:3","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":537,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nodeType":"FunctionDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":537,"src":"1179:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1179:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1178:14:3"},"returnParameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":537,"src":"1216:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1215:9:3"},"scope":538,"src":"1151:74:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":539,"src":"261:966:3"}],"src":"104:1124:3"},"id":3},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3799],"Ownable":[651]},"id":652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":540,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":541,"nodeType":"ImportDirective","scope":652,"sourceUnit":3800,"src":"127:30:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":543,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3799,"src":"683:7:4"},"id":544,"nodeType":"InheritanceSpecifier","src":"683:7:4"}],"contractDependencies":[3799],"contractKind":"contract","documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"159:494:4","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":651,"linearizedBaseContracts":[651,3799],"name":"Ownable","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":546,"mutability":"mutable","name":"_owner","nodeType":"VariableDeclaration","scope":651,"src":"697:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":552,"name":"OwnershipTransferred","nodeType":"EventDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"indexed":true,"mutability":"mutable","name":"previousOwner","nodeType":"VariableDeclaration","scope":552,"src":"753:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":550,"indexed":true,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":552,"src":"784:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:4"},"src":"726:84:4"},{"body":{"id":561,"nodeType":"Block","src":"926:49:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":557,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"955:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":556,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"936:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":560,"nodeType":"ExpressionStatement","src":"936:32:4"}]},"documentation":{"id":553,"nodeType":"StructuredDocumentation","src":"816:91:4","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":562,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[],"src":"923:2:4"},"returnParameters":{"id":555,"nodeType":"ParameterList","parameters":[],"src":"926:0:4"},"scope":651,"src":"912:63:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":569,"nodeType":"Block","src":"1084:41:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":565,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"1094:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":567,"nodeType":"ExpressionStatement","src":"1094:13:4"},{"id":568,"nodeType":"PlaceholderStatement","src":"1117:1:4"}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"981:77:4","text":" @dev Throws if called by any account other than the owner."},"id":570,"name":"onlyOwner","nodeType":"ModifierDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"1081:2:4"},"src":"1063:62:4","virtual":false,"visibility":"internal"},{"body":{"id":578,"nodeType":"Block","src":"1256:30:4","statements":[{"expression":{"id":576,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1273:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":575,"id":577,"nodeType":"Return","src":"1266:13:4"}]},"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"1131:65:4","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":579,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"1215:2:4"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":579,"src":"1247:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:4"},"scope":651,"src":"1201:85:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":592,"nodeType":"Block","src":"1404:85:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":584,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"1422:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":586,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"1433:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":583,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":591,"nodeType":"ExpressionStatement","src":"1414:68:4"}]},"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"1292:62:4","text":" @dev Throws if the sender is not the owner."},"id":593,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nodeType":"FunctionDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[],"src":"1379:2:4"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[],"src":"1404:0:4"},"scope":651,"src":"1359:130:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":606,"nodeType":"Block","src":"1878:47:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:4","typeDescriptions":{}}},"id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":599,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"1888:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":605,"nodeType":"ExpressionStatement","src":"1888:30:4"}]},"documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"1495:324:4","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":607,"implemented":true,"kind":"function","modifiers":[{"id":597,"modifierName":{"id":596,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":570,"src":"1868:9:4"},"nodeType":"ModifierInvocation","src":"1868:9:4"}],"name":"renounceOwnership","nodeType":"FunctionDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"1850:2:4"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[],"src":"1878:0:4"},"scope":651,"src":"1824:101:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":629,"nodeType":"Block","src":"2144:128:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":616,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"2162:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:4","typeDescriptions":{}}},"id":620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":615,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"ExpressionStatement","src":"2154:73:4"},{"expression":{"arguments":[{"id":626,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"2256:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":625,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"2237:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2237:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":628,"nodeType":"ExpressionStatement","src":"2237:28:4"}]},"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"1931:138:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":630,"implemented":true,"kind":"function","modifiers":[{"id":613,"modifierName":{"id":612,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":570,"src":"2134:9:4"},"nodeType":"ModifierInvocation","src":"2134:9:4"}],"name":"transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":630,"src":"2101:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:4"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"2144:0:4"},"scope":651,"src":"2074:198:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":649,"nodeType":"Block","src":"2489:124:4","statements":[{"assignments":[637],"declarations":[{"constant":false,"id":637,"mutability":"mutable","name":"oldOwner","nodeType":"VariableDeclaration","scope":649,"src":"2499:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":639,"initialValue":{"id":638,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2518:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:4"},{"expression":{"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":640,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2534:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":641,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"2543:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":643,"nodeType":"ExpressionStatement","src":"2534:17:4"},{"eventCall":{"arguments":[{"id":645,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"2587:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":646,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"2597:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":644,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"2566:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2566:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"EmitStatement","src":"2561:45:4"}]},"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"2278:143:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":650,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":650,"src":"2454:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:4"},"returnParameters":{"id":635,"nodeType":"ParameterList","parameters":[],"src":"2489:0:4"},"scope":651,"src":"2426:187:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":652,"src":"654:1961:4"}],"src":"102:2514:4"},"id":4},"@openzeppelin/contracts/security/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[3799],"Pausable":[759]},"id":760,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":653,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":654,"nodeType":"ImportDirective","scope":760,"sourceUnit":3800,"src":"130:30:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":656,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3799,"src":"632:7:5"},"id":657,"nodeType":"InheritanceSpecifier","src":"632:7:5"}],"contractDependencies":[3799],"contractKind":"contract","documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"162:439:5","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":759,"linearizedBaseContracts":[759,3799],"name":"Pausable","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"646:73:5","text":" @dev Emitted when the pause is triggered by `account`."},"id":662,"name":"Paused","nodeType":"EventDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"indexed":false,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":662,"src":"737:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:5"},"src":"724:30:5"},{"anonymous":false,"documentation":{"id":663,"nodeType":"StructuredDocumentation","src":"760:70:5","text":" @dev Emitted when the pause is lifted by `account`."},"id":667,"name":"Unpaused","nodeType":"EventDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"indexed":false,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":667,"src":"850:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:5"},"src":"835:32:5"},{"constant":false,"id":669,"mutability":"mutable","name":"_paused","nodeType":"VariableDeclaration","scope":759,"src":"873:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":668,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":677,"nodeType":"Block","src":"986:32:5","statements":[{"expression":{"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":673,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"996:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":676,"nodeType":"ExpressionStatement","src":"996:15:5"}]},"documentation":{"id":670,"nodeType":"StructuredDocumentation","src":"900:67:5","text":" @dev Initializes the contract in unpaused state."},"id":678,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"983:2:5"},"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"986:0:5"},"scope":759,"src":"972:46:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":685,"nodeType":"Block","src":"1229:47:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":681,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"1239:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1239:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":683,"nodeType":"ExpressionStatement","src":"1239:19:5"},{"id":684,"nodeType":"PlaceholderStatement","src":"1268:1:5"}]},"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"1024:175:5","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":686,"name":"whenNotPaused","nodeType":"ModifierDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[],"src":"1226:2:5"},"src":"1204:72:5","virtual":false,"visibility":"internal"},{"body":{"id":693,"nodeType":"Block","src":"1476:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":689,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"1486:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1486:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"ExpressionStatement","src":"1486:16:5"},{"id":692,"nodeType":"PlaceholderStatement","src":"1512:1:5"}]},"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"1282:167:5","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":694,"name":"whenPaused","nodeType":"ModifierDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[],"src":"1473:2:5"},"src":"1454:66:5","virtual":false,"visibility":"internal"},{"body":{"id":702,"nodeType":"Block","src":"1668:31:5","statements":[{"expression":{"id":700,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"1685:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":699,"id":701,"nodeType":"Return","src":"1678:14:5"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"1526:84:5","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":703,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"1630:2:5"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":703,"src":"1662:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":697,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:5"},"scope":759,"src":"1615:84:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":714,"nodeType":"Block","src":"1818:55:5","statements":[{"expression":{"arguments":[{"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:5","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":708,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"1837:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1837:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":707,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1828:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"1828:38:5"}]},"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"1705:57:5","text":" @dev Throws if the contract is paused."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[],"src":"1793:2:5"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"1818:0:5"},"scope":759,"src":"1767:106:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":725,"nodeType":"Block","src":"1993:58:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":720,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2011:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2011:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":719,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2003:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":724,"nodeType":"ExpressionStatement","src":"2003:41:5"}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"1879:61:5","text":" @dev Throws if the contract is not paused."},"id":726,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[],"src":"1968:2:5"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[],"src":"1993:0:5"},"scope":759,"src":"1945:106:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":741,"nodeType":"Block","src":"2235:66:5","statements":[{"expression":{"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":732,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"2245:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":735,"nodeType":"ExpressionStatement","src":"2245:14:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":737,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"2281:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2281:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":736,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"2274:6:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2274:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":740,"nodeType":"EmitStatement","src":"2269:25:5"}]},"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"2057:124:5","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":742,"implemented":true,"kind":"function","modifiers":[{"id":730,"modifierName":{"id":729,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":686,"src":"2221:13:5"},"nodeType":"ModifierInvocation","src":"2221:13:5"}],"name":"_pause","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"2201:2:5"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[],"src":"2235:0:5"},"scope":759,"src":"2186:115:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":757,"nodeType":"Block","src":"2481:69:5","statements":[{"expression":{"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":748,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"2491:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":751,"nodeType":"ExpressionStatement","src":"2491:15:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":753,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"2530:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2530:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":752,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"2521:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2521:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":756,"nodeType":"EmitStatement","src":"2516:27:5"}]},"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"2307:121:5","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":758,"implemented":true,"kind":"function","modifiers":[{"id":746,"modifierName":{"id":745,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":694,"src":"2470:10:5"},"nodeType":"ModifierInvocation","src":"2470:10:5"}],"name":"_unpause","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"2450:2:5"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[],"src":"2481:0:5"},"scope":759,"src":"2433:117:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":760,"src":"602:1950:5"}],"src":"105:2448:5"},"id":5},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[824]},"id":825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":761,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:6"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":762,"nodeType":"StructuredDocumentation","src":"137:750:6","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":824,"linearizedBaseContracts":[824],"name":"ReentrancyGuard","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":765,"mutability":"constant","name":"_NOT_ENTERED","nodeType":"VariableDeclaration","scope":824,"src":"1676:41:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":763,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":768,"mutability":"constant","name":"_ENTERED","nodeType":"VariableDeclaration","scope":824,"src":"1723:37:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":766,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":770,"mutability":"mutable","name":"_status","nodeType":"VariableDeclaration","scope":824,"src":"1767:23:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":777,"nodeType":"Block","src":"1811:39:6","statements":[{"expression":{"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":773,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"1821:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":774,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"1831:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":776,"nodeType":"ExpressionStatement","src":"1821:22:6"}]},"id":778,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":771,"nodeType":"ParameterList","parameters":[],"src":"1808:2:6"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[],"src":"1811:0:6"},"scope":824,"src":"1797:53:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":788,"nodeType":"Block","src":"2251:79:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":781,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"2261:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":783,"nodeType":"ExpressionStatement","src":"2261:21:6"},{"id":784,"nodeType":"PlaceholderStatement","src":"2292:1:6"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":785,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2303:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2303:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":787,"nodeType":"ExpressionStatement","src":"2303:20:6"}]},"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"1856:366:6","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":789,"name":"nonReentrant","nodeType":"ModifierDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[],"src":"2248:2:6"},"src":"2227:103:6","virtual":false,"visibility":"internal"},{"body":{"id":803,"nodeType":"Block","src":"2375:248:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":793,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"2468:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":794,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"2479:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":792,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2460:63:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":798,"nodeType":"ExpressionStatement","src":"2460:63:6"},{"expression":{"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":799,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"2598:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":800,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"2608:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":802,"nodeType":"ExpressionStatement","src":"2598:18:6"}]},"id":804,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[],"src":"2364:2:6"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"2375:0:6"},"scope":824,"src":"2336:287:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":811,"nodeType":"Block","src":"2667:171:6","statements":[{"expression":{"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":807,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"2809:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":808,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"2819:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":810,"nodeType":"ExpressionStatement","src":"2809:22:6"}]},"id":812,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nodeType":"FunctionDefinition","parameters":{"id":805,"nodeType":"ParameterList","parameters":[],"src":"2656:2:6"},"returnParameters":{"id":806,"nodeType":"ParameterList","parameters":[],"src":"2667:0:6"},"scope":824,"src":"2629:209:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":822,"nodeType":"Block","src":"3081:43:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":818,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"3098:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":819,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"3109:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":817,"id":821,"nodeType":"Return","src":"3091:26:6"}]},"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"2844:168:6","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[],"src":"3049:2:6"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":823,"src":"3075:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":815,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:6"},"scope":824,"src":"3017:107:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":825,"src":"888:2238:6"}],"src":"112:3015:6"},"id":6},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Address":[3777],"Context":[3799],"ERC1155":[2047],"ERC165":[4052],"IERC1155":[2169],"IERC1155MetadataURI":[2342],"IERC1155Receiver":[2210],"IERC165":[4064]},"id":2048,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":826,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":827,"nodeType":"ImportDirective","scope":2048,"sourceUnit":2170,"src":"134:24:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"./IERC1155Receiver.sol","id":828,"nodeType":"ImportDirective","scope":2048,"sourceUnit":2211,"src":"159:32:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":829,"nodeType":"ImportDirective","scope":2048,"sourceUnit":2343,"src":"192:46:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":830,"nodeType":"ImportDirective","scope":2048,"sourceUnit":3778,"src":"239:33:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":831,"nodeType":"ImportDirective","scope":2048,"sourceUnit":3800,"src":"273:33:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":832,"nodeType":"ImportDirective","scope":2048,"sourceUnit":4053,"src":"307:46:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":834,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3799,"src":"590:7:7"},"id":835,"nodeType":"InheritanceSpecifier","src":"590:7:7"},{"baseName":{"id":836,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":4052,"src":"599:6:7"},"id":837,"nodeType":"InheritanceSpecifier","src":"599:6:7"},{"baseName":{"id":838,"name":"IERC1155","nodeType":"IdentifierPath","referencedDeclaration":2169,"src":"607:8:7"},"id":839,"nodeType":"InheritanceSpecifier","src":"607:8:7"},{"baseName":{"id":840,"name":"IERC1155MetadataURI","nodeType":"IdentifierPath","referencedDeclaration":2342,"src":"617:19:7"},"id":841,"nodeType":"InheritanceSpecifier","src":"617:19:7"}],"contractDependencies":[2169,2342,3799,4052,4064],"contractKind":"contract","documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"355:214:7","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"},"fullyImplemented":true,"id":2047,"linearizedBaseContracts":[2047,2342,2169,4052,4064,3799],"name":"ERC1155","nodeType":"ContractDefinition","nodes":[{"id":844,"libraryName":{"id":842,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":3777,"src":"649:7:7"},"nodeType":"UsingForDirective","src":"643:26:7","typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"661:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":false,"id":850,"mutability":"mutable","name":"_balances","nodeType":"VariableDeclaration","scope":2047,"src":"724:65:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":849,"keyType":{"id":845,"name":"uint256","nodeType":"ElementaryTypeName","src":"732:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"724:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueType":{"id":848,"keyType":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"751:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"743:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"762:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":856,"mutability":"mutable","name":"_operatorApprovals","nodeType":"VariableDeclaration","scope":2047,"src":"846:71:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":855,"keyType":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"846:44:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":854,"keyType":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"865:24:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":853,"name":"bool","nodeType":"ElementaryTypeName","src":"884:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":858,"mutability":"mutable","name":"_uri","nodeType":"VariableDeclaration","scope":2047,"src":"1038:19:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":857,"name":"string","nodeType":"ElementaryTypeName","src":"1038:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":868,"nodeType":"Block","src":"1139:30:7","statements":[{"expression":{"arguments":[{"id":865,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"1157:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":864,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"1149:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1149:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":867,"nodeType":"ExpressionStatement","src":"1149:13:7"}]},"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"1064:38:7","text":" @dev See {_setURI}."},"id":869,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"uri_","nodeType":"VariableDeclaration","scope":869,"src":"1119:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":860,"name":"string","nodeType":"ElementaryTypeName","src":"1119:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1118:20:7"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[],"src":"1139:0:7"},"scope":2047,"src":"1107:62:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4051,4063],"body":{"id":899,"nodeType":"Block","src":"1344:197:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":880,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"1373:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":882,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"1393:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$2169_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$2169_$","typeString":"type(contract IERC1155)"}],"id":881,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1388:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1388:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$2169","typeString":"type(contract IERC1155)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1388:26:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1373:41:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":886,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"1430:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":888,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"1450:19:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$2342_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$2342_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":887,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1445:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1445:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$2342","typeString":"type(contract IERC1155MetadataURI)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1445:37:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1430:52:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1373:109:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":895,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"1522:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":893,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1498:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$2047_$","typeString":"type(contract super ERC1155)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4051,"src":"1498:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1498:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1373:161:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":879,"id":898,"nodeType":"Return","src":"1354:180:7"}]},"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"1175:56:7","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":900,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":876,"nodeType":"OverrideSpecifier","overrides":[{"id":874,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":4052,"src":"1312:6:7"},{"id":875,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":4064,"src":"1320:7:7"}],"src":"1303:25:7"},"parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":900,"src":"1263:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":871,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1263:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1262:20:7"},"returnParameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":900,"src":"1338:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":877,"name":"bool","nodeType":"ElementaryTypeName","src":"1338:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1337:6:7"},"scope":2047,"src":"1236:305:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2341],"body":{"id":911,"nodeType":"Block","src":"2015:28:7","statements":[{"expression":{"id":909,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"2032:4:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":908,"id":910,"nodeType":"Return","src":"2025:11:7"}]},"documentation":{"id":901,"nodeType":"StructuredDocumentation","src":"1547:388:7","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":912,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nodeType":"FunctionDefinition","overrides":{"id":905,"nodeType":"OverrideSpecifier","overrides":[],"src":"1982:8:7"},"parameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":912,"src":"1953:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1952:9:7"},"returnParameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":912,"src":"2000:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":906,"name":"string","nodeType":"ElementaryTypeName","src":"2000:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1999:15:7"},"scope":2047,"src":"1940:103:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2107],"body":{"id":939,"nodeType":"Block","src":"2280:132:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":924,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"2298:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2309:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"2309:7:7","typeDescriptions":{}}},"id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2309:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2298:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2321:44:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","typeString":"literal_string \"ERC1155: address zero is not a valid owner\""},"value":"ERC1155: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","typeString":"literal_string \"ERC1155: address zero is not a valid owner\""}],"id":923,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2290:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2290:76:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":932,"nodeType":"ExpressionStatement","src":"2290:76:7"},{"expression":{"baseExpression":{"baseExpression":{"id":933,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"2383:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":935,"indexExpression":{"id":934,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"2393:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2383:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":937,"indexExpression":{"id":936,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"2397:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2383:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":922,"id":938,"nodeType":"Return","src":"2376:29:7"}]},"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"2049:131:7","text":" @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":940,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","overrides":{"id":919,"nodeType":"OverrideSpecifier","overrides":[],"src":"2253:8:7"},"parameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":940,"src":"2204:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"2204:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":917,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":940,"src":"2221:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2221:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2203:29:7"},"returnParameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":940,"src":"2271:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint256","nodeType":"ElementaryTypeName","src":"2271:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2270:9:7"},"scope":2047,"src":"2185:227:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2120],"body":{"id":1003,"nodeType":"Block","src":"2720:335:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":955,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"2738:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2738:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":957,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"2757:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2757:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""},"value":"ERC1155: accounts and ids length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""}],"id":954,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2730:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2730:83:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":962,"nodeType":"ExpressionStatement","src":"2730:83:7"},{"assignments":[967],"declarations":[{"constant":false,"id":967,"mutability":"mutable","name":"batchBalances","nodeType":"VariableDeclaration","scope":1003,"src":"2824:30:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"2824:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":966,"nodeType":"ArrayTypeName","src":"2824:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":974,"initialValue":{"arguments":[{"expression":{"id":971,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"2871:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2871:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2857:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"2861:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":969,"nodeType":"ArrayTypeName","src":"2861:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2857:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2824:63:7"},{"body":{"id":999,"nodeType":"Block","src":"2944:74:7","statements":[{"expression":{"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":986,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"2958:13:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":988,"indexExpression":{"id":987,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"2972:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2958:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":990,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"2987:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":992,"indexExpression":{"id":991,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"2996:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2987:11:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":993,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"3000:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":995,"indexExpression":{"id":994,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"3004:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3000:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":989,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"2977:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2977:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2958:49:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":998,"nodeType":"ExpressionStatement","src":"2958:49:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":979,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"2918:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":980,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"2922:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2922:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2918:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1000,"initializationExpression":{"assignments":[976],"declarations":[{"constant":false,"id":976,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":1000,"src":"2903:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":978,"initialValue":{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2915:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2903:13:7"},"loopExpression":{"expression":{"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2939:3:7","subExpression":{"id":983,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"2941:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":985,"nodeType":"ExpressionStatement","src":"2939:3:7"},"nodeType":"ForStatement","src":"2898:120:7"},{"expression":{"id":1001,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"3035:13:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":953,"id":1002,"nodeType":"Return","src":"3028:20:7"}]},"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"2418:146:7","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1004,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nodeType":"FunctionDefinition","overrides":{"id":949,"nodeType":"OverrideSpecifier","overrides":[],"src":"2684:8:7"},"parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"accounts","nodeType":"VariableDeclaration","scope":1004,"src":"2602:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"2602:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":943,"nodeType":"ArrayTypeName","src":"2602:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":1004,"src":"2637:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"2637:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":946,"nodeType":"ArrayTypeName","src":"2637:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2592:71:7"},"returnParameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1004,"src":"2702:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"2702:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":951,"nodeType":"ArrayTypeName","src":"2702:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2701:18:7"},"scope":2047,"src":"2569:486:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2128],"body":{"id":1020,"nodeType":"Block","src":"3207:69:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1014,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"3236:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3236:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1016,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"3250:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1017,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"3260:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1013,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"3217:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3217:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1019,"nodeType":"ExpressionStatement","src":"3217:52:7"}]},"documentation":{"id":1005,"nodeType":"StructuredDocumentation","src":"3061:57:7","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":1021,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nodeType":"FunctionDefinition","overrides":{"id":1011,"nodeType":"OverrideSpecifier","overrides":[],"src":"3198:8:7"},"parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1007,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1021,"src":"3150:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"3150:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1009,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":1021,"src":"3168:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1008,"name":"bool","nodeType":"ElementaryTypeName","src":"3168:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3149:33:7"},"returnParameters":{"id":1012,"nodeType":"ParameterList","parameters":[],"src":"3207:0:7"},"scope":2047,"src":"3123:153:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2138],"body":{"id":1038,"nodeType":"Block","src":"3448:61:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1032,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"3465:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1034,"indexExpression":{"id":1033,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"3484:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3465:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1036,"indexExpression":{"id":1035,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"3493:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3465:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1031,"id":1037,"nodeType":"Return","src":"3458:44:7"}]},"documentation":{"id":1022,"nodeType":"StructuredDocumentation","src":"3282:56:7","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nodeType":"FunctionDefinition","overrides":{"id":1028,"nodeType":"OverrideSpecifier","overrides":[],"src":"3424:8:7"},"parameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":1039,"src":"3369:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"3369:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1026,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1039,"src":"3386:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3368:35:7"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1039,"src":"3442:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1029,"name":"bool","nodeType":"ElementaryTypeName","src":"3442:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3441:6:7"},"scope":2047,"src":"3343:166:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2152],"body":{"id":1076,"nodeType":"Block","src":"3745:225:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1055,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"3776:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1056,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"3784:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3784:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3776:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1060,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"3817:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1061,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"3823:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3823:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1059,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"3800:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3776:60:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3850:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":1054,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3755:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3755:153:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1067,"nodeType":"ExpressionStatement","src":"3755:153:7"},{"expression":{"arguments":[{"id":1069,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"3936:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1070,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"3942:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1071,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"3946:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1072,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"3950:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1073,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"3958:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1068,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"3918:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3918:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1075,"nodeType":"ExpressionStatement","src":"3918:45:7"}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"3515:56:7","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":1077,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","overrides":{"id":1052,"nodeType":"OverrideSpecifier","overrides":[],"src":"3736:8:7"},"parameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1077,"src":"3611:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"3611:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1077,"src":"3633:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"3633:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":1077,"src":"3653:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1045,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1077,"src":"3673:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1047,"name":"uint256","nodeType":"ElementaryTypeName","src":"3673:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1050,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1077,"src":"3697:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1049,"name":"bytes","nodeType":"ElementaryTypeName","src":"3697:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3601:119:7"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"3745:0:7"},"scope":2047,"src":"3576:394:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2168],"body":{"id":1116,"nodeType":"Block","src":"4236:232:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1095,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"4267:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1096,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"4275:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4275:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4267:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1100,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"4308:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1101,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"4314:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4314:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1099,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"4291:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4291:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4267:60:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4341:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":1094,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4246:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4246:153:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1107,"nodeType":"ExpressionStatement","src":"4246:153:7"},{"expression":{"arguments":[{"id":1109,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"4432:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1110,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"4438:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1111,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"4442:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1112,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"4447:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1113,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"4456:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1108,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"4409:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4409:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1115,"nodeType":"ExpressionStatement","src":"4409:52:7"}]},"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"3976:61:7","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":1117,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nodeType":"FunctionDefinition","overrides":{"id":1092,"nodeType":"OverrideSpecifier","overrides":[],"src":"4227:8:7"},"parameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1117,"src":"4082:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1079,"name":"address","nodeType":"ElementaryTypeName","src":"4082:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1117,"src":"4104:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"4104:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":1117,"src":"4124:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1084,"nodeType":"ArrayTypeName","src":"4124:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1088,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":1117,"src":"4154:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1086,"name":"uint256","nodeType":"ElementaryTypeName","src":"4154:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1087,"nodeType":"ArrayTypeName","src":"4154:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1117,"src":"4188:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1089,"name":"bytes","nodeType":"ElementaryTypeName","src":"4188:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4072:139:7"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[],"src":"4236:0:7"},"scope":2047,"src":"4042:426:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1233,"nodeType":"Block","src":"5081:784:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1132,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"5099:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5113:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5105:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"5105:7:7","typeDescriptions":{}}},"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5105:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5099:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5117:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":1131,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5091:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5091:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1140,"nodeType":"ExpressionStatement","src":"5091:66:7"},{"assignments":[1142],"declarations":[{"constant":false,"id":1142,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1233,"src":"5168:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"5168:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1145,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1143,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"5187:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5187:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5168:31:7"},{"assignments":[1150],"declarations":[{"constant":false,"id":1150,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":1233,"src":"5209:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1148,"name":"uint256","nodeType":"ElementaryTypeName","src":"5209:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1149,"nodeType":"ArrayTypeName","src":"5209:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1154,"initialValue":{"arguments":[{"id":1152,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"5250:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1151,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"5232:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5232:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5209:44:7"},{"assignments":[1159],"declarations":[{"constant":false,"id":1159,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":1233,"src":"5263:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1158,"nodeType":"ArrayTypeName","src":"5263:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1163,"initialValue":{"arguments":[{"id":1161,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"5308:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1160,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"5290:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5290:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5263:52:7"},{"expression":{"arguments":[{"id":1165,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"5347:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1166,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"5357:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1167,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"5363:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1168,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"5367:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1169,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"5372:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1170,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5381:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1164,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"5326:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5326:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1172,"nodeType":"ExpressionStatement","src":"5326:60:7"},{"assignments":[1174],"declarations":[{"constant":false,"id":1174,"mutability":"mutable","name":"fromBalance","nodeType":"VariableDeclaration","scope":1233,"src":"5397:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"5397:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1180,"initialValue":{"baseExpression":{"baseExpression":{"id":1175,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"5419:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1177,"indexExpression":{"id":1176,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"5429:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5419:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1179,"indexExpression":{"id":1178,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"5433:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5419:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5397:41:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1182,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"5456:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1183,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"5471:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5456:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":1185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5479:44:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":1181,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5448:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5448:76:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1187,"nodeType":"ExpressionStatement","src":"5448:76:7"},{"id":1198,"nodeType":"UncheckedBlock","src":"5534:77:7","statements":[{"expression":{"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1188,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"5558:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1191,"indexExpression":{"id":1189,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"5568:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5558:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1192,"indexExpression":{"id":1190,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"5572:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5558:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1193,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"5580:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1194,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"5594:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5580:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5558:42:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1197,"nodeType":"ExpressionStatement","src":"5558:42:7"}]},{"expression":{"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1199,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"5620:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1202,"indexExpression":{"id":1200,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"5630:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5620:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1203,"indexExpression":{"id":1201,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"5634:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5620:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1204,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"5641:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5620:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1206,"nodeType":"ExpressionStatement","src":"5620:27:7"},{"eventCall":{"arguments":[{"id":1208,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"5678:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"5688:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1210,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"5694:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1211,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"5698:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1212,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"5702:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1207,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"5663:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5663:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1214,"nodeType":"EmitStatement","src":"5658:51:7"},{"expression":{"arguments":[{"id":1216,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"5740:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1217,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"5750:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1218,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"5756:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1219,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"5760:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1220,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"5765:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1221,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5774:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1215,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"5720:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5720:59:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1223,"nodeType":"ExpressionStatement","src":"5720:59:7"},{"expression":{"arguments":[{"id":1225,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"5821:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1226,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"5831:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1227,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"5837:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1228,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"5841:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1229,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"5845:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1230,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5853:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1224,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"5790:30:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5790:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1232,"nodeType":"ExpressionStatement","src":"5790:68:7"}]},"documentation":{"id":1118,"nodeType":"StructuredDocumentation","src":"4474:439:7","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1234,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1234,"src":"4954:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1119,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1234,"src":"4976:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"4976:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":1234,"src":"4996:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"4996:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1234,"src":"5016:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"5016:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1234,"src":"5040:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1127,"name":"bytes","nodeType":"ElementaryTypeName","src":"5040:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4944:119:7"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"5081:0:7"},"scope":2047,"src":"4918:947:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1368,"nodeType":"Block","src":"6399:927:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1251,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"6417:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6417:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1253,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6431:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6431:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6417:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6447:42:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":1250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6409:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6409:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1258,"nodeType":"ExpressionStatement","src":"6409:81:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1260,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"6508:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6522:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6514:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"6514:7:7","typeDescriptions":{}}},"id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6514:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6508:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6526:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":1259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6500:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6500:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1268,"nodeType":"ExpressionStatement","src":"6500:66:7"},{"assignments":[1270],"declarations":[{"constant":false,"id":1270,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1368,"src":"6577:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"6577:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1273,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1271,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"6596:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6596:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6577:31:7"},{"expression":{"arguments":[{"id":1275,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"6640:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1276,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"6650:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1277,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"6656:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1278,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"6660:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1279,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6665:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1280,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"6674:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1274,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"6619:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6619:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1282,"nodeType":"ExpressionStatement","src":"6619:60:7"},{"body":{"id":1340,"nodeType":"Block","src":"6731:370:7","statements":[{"assignments":[1295],"declarations":[{"constant":false,"id":1295,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":1340,"src":"6745:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"6745:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1299,"initialValue":{"baseExpression":{"id":1296,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"6758:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1298,"indexExpression":{"id":1297,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"6762:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6758:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6745:19:7"},{"assignments":[1301],"declarations":[{"constant":false,"id":1301,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1340,"src":"6778:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"6778:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1305,"initialValue":{"baseExpression":{"id":1302,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6795:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1304,"indexExpression":{"id":1303,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"6803:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6795:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6778:27:7"},{"assignments":[1307],"declarations":[{"constant":false,"id":1307,"mutability":"mutable","name":"fromBalance","nodeType":"VariableDeclaration","scope":1340,"src":"6820:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1306,"name":"uint256","nodeType":"ElementaryTypeName","src":"6820:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1313,"initialValue":{"baseExpression":{"baseExpression":{"id":1308,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"6842:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1310,"indexExpression":{"id":1309,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"6852:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6842:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1312,"indexExpression":{"id":1311,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"6856:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6842:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6820:41:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1315,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"6883:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1316,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"6898:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6883:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6906:44:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":1314,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6875:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6875:76:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1320,"nodeType":"ExpressionStatement","src":"6875:76:7"},{"id":1331,"nodeType":"UncheckedBlock","src":"6965:85:7","statements":[{"expression":{"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1321,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"6993:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1324,"indexExpression":{"id":1322,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"7003:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6993:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1325,"indexExpression":{"id":1323,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"7007:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6993:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1326,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"7015:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1327,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"7029:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7015:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6993:42:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1330,"nodeType":"ExpressionStatement","src":"6993:42:7"}]},{"expression":{"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1332,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"7063:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1335,"indexExpression":{"id":1333,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"7073:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7063:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1336,"indexExpression":{"id":1334,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"7077:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7063:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1337,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"7084:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7063:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1339,"nodeType":"ExpressionStatement","src":"7063:27:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1287,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"6710:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1288,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"6714:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6714:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6710:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1341,"initializationExpression":{"assignments":[1284],"declarations":[{"constant":false,"id":1284,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":1341,"src":"6695:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"6695:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1286,"initialValue":{"hexValue":"30","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6707:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6695:13:7"},"loopExpression":{"expression":{"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6726:3:7","subExpression":{"id":1291,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"6728:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1293,"nodeType":"ExpressionStatement","src":"6726:3:7"},"nodeType":"ForStatement","src":"6690:411:7"},{"eventCall":{"arguments":[{"id":1343,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"7130:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"7140:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1345,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"7146:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1346,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"7150:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1347,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"7155:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1342,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"7116:13:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7116:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1349,"nodeType":"EmitStatement","src":"7111:52:7"},{"expression":{"arguments":[{"id":1351,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"7194:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1352,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"7204:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1353,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"7210:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1354,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"7214:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1355,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"7219:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1356,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"7228:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1350,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"7174:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7174:59:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1358,"nodeType":"ExpressionStatement","src":"7174:59:7"},{"expression":{"arguments":[{"id":1360,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"7280:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1361,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"7290:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1362,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"7296:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1363,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"7300:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1364,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"7305:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1365,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"7314:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1359,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"7244:35:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7244:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1367,"nodeType":"ExpressionStatement","src":"7244:75:7"}]},"documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"5871:335:7","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1369,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1369,"src":"6252:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"6252:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1369,"src":"6274:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"6274:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":1369,"src":"6294:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1241,"nodeType":"ArrayTypeName","src":"6294:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":1369,"src":"6324:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"6324:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1244,"nodeType":"ArrayTypeName","src":"6324:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1369,"src":"6358:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1246,"name":"bytes","nodeType":"ElementaryTypeName","src":"6358:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6242:139:7"},"returnParameters":{"id":1249,"nodeType":"ParameterList","parameters":[],"src":"6399:0:7"},"scope":2047,"src":"6211:1115:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1379,"nodeType":"Block","src":"8205:30:7","statements":[{"expression":{"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1375,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"8215:4:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1376,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"8222:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8215:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1378,"nodeType":"ExpressionStatement","src":"8215:13:7"}]},"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"7332:812:7","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":1380,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nodeType":"FunctionDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"newuri","nodeType":"VariableDeclaration","scope":1380,"src":"8166:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1371,"name":"string","nodeType":"ElementaryTypeName","src":"8166:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8165:22:7"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[],"src":"8205:0:7"},"scope":2047,"src":"8149:86:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1480,"nodeType":"Block","src":"8699:580:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1393,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"8717:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8731:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8723:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1394,"name":"address","nodeType":"ElementaryTypeName","src":"8723:7:7","typeDescriptions":{}}},"id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8723:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8717:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8735:35:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":1392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8709:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8709:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1401,"nodeType":"ExpressionStatement","src":"8709:62:7"},{"assignments":[1403],"declarations":[{"constant":false,"id":1403,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1480,"src":"8782:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1402,"name":"address","nodeType":"ElementaryTypeName","src":"8782:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1406,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1404,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"8801:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8801:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8782:31:7"},{"assignments":[1411],"declarations":[{"constant":false,"id":1411,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":1480,"src":"8823:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"8823:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1410,"nodeType":"ArrayTypeName","src":"8823:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1415,"initialValue":{"arguments":[{"id":1413,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"8864:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1412,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"8846:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8846:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8823:44:7"},{"assignments":[1420],"declarations":[{"constant":false,"id":1420,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":1480,"src":"8877:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"8877:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1419,"nodeType":"ArrayTypeName","src":"8877:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1424,"initialValue":{"arguments":[{"id":1422,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"8922:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1421,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"8904:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8904:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8877:52:7"},{"expression":{"arguments":[{"id":1426,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"8961:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8979:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8971:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1427,"name":"address","nodeType":"ElementaryTypeName","src":"8971:7:7","typeDescriptions":{}}},"id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8971:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"8983:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1432,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"8987:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1433,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"8992:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1434,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"9001:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1425,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"8940:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8940:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1436,"nodeType":"ExpressionStatement","src":"8940:66:7"},{"expression":{"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1437,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"9017:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1440,"indexExpression":{"id":1438,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"9027:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9017:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1441,"indexExpression":{"id":1439,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"9031:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9017:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1442,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"9038:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9017:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1444,"nodeType":"ExpressionStatement","src":"9017:27:7"},{"eventCall":{"arguments":[{"id":1446,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"9074:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9092:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9084:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1447,"name":"address","nodeType":"ElementaryTypeName","src":"9084:7:7","typeDescriptions":{}}},"id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9084:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1451,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"9096:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1452,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"9100:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1453,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"9104:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1445,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"9059:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9059:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1455,"nodeType":"EmitStatement","src":"9054:57:7"},{"expression":{"arguments":[{"id":1457,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"9142:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9160:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"9152:7:7","typeDescriptions":{}}},"id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9152:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1462,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"9164:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1463,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"9168:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1464,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"9173:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1465,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"9182:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1456,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"9122:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9122:65:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1467,"nodeType":"ExpressionStatement","src":"9122:65:7"},{"expression":{"arguments":[{"id":1469,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"9229:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9247:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9239:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1470,"name":"address","nodeType":"ElementaryTypeName","src":"9239:7:7","typeDescriptions":{}}},"id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9239:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1474,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"9251:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1475,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"9255:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1476,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"9259:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1477,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"9267:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1468,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"9198:30:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9198:74:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1479,"nodeType":"ExpressionStatement","src":"9198:74:7"}]},"documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"8241:362:7","text":" @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1481,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nodeType":"FunctionDefinition","parameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1481,"src":"8623:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"8623:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":1481,"src":"8635:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1481,"src":"8647:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1389,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1481,"src":"8663:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1388,"name":"bytes","nodeType":"ElementaryTypeName","src":"8663:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8622:59:7"},"returnParameters":{"id":1391,"nodeType":"ParameterList","parameters":[],"src":"8699:0:7"},"scope":2047,"src":"8608:671:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1591,"nodeType":"Block","src":"9823:637:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1496,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"9841:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9855:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9847:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1497,"name":"address","nodeType":"ElementaryTypeName","src":"9847:7:7","typeDescriptions":{}}},"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9847:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9841:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9859:35:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":1495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9833:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9833:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1504,"nodeType":"ExpressionStatement","src":"9833:62:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1506,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"9913:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9913:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1508,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"9927:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9927:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9913:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9943:42:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":1505,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9905:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9905:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1513,"nodeType":"ExpressionStatement","src":"9905:81:7"},{"assignments":[1515],"declarations":[{"constant":false,"id":1515,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1591,"src":"9997:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1514,"name":"address","nodeType":"ElementaryTypeName","src":"9997:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1518,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1516,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"10016:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10016:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9997:31:7"},{"expression":{"arguments":[{"id":1520,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"10060:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1521,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:7","typeDescriptions":{}}},"id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10070:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1525,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"10082:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1526,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"10086:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1527,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"10091:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1528,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"10100:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1519,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"10039:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10039:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1530,"nodeType":"ExpressionStatement","src":"10039:66:7"},{"body":{"id":1554,"nodeType":"Block","src":"10157:60:7","statements":[{"expression":{"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1542,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"10171:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1547,"indexExpression":{"baseExpression":{"id":1543,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"10181:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1545,"indexExpression":{"id":1544,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"10185:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10181:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10171:17:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1548,"indexExpression":{"id":1546,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"10189:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10171:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":1549,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"10196:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1551,"indexExpression":{"id":1550,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"10204:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10196:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1553,"nodeType":"ExpressionStatement","src":"10171:35:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1535,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"10136:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1536,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"10140:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10140:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10136:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1555,"initializationExpression":{"assignments":[1532],"declarations":[{"constant":false,"id":1532,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":1555,"src":"10121:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"10121:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1534,"initialValue":{"hexValue":"30","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10133:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10121:13:7"},"loopExpression":{"expression":{"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10152:3:7","subExpression":{"id":1539,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"10152:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1541,"nodeType":"ExpressionStatement","src":"10152:3:7"},"nodeType":"ForStatement","src":"10116:101:7"},{"eventCall":{"arguments":[{"id":1557,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"10246:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10264:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10256:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1558,"name":"address","nodeType":"ElementaryTypeName","src":"10256:7:7","typeDescriptions":{}}},"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10256:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1562,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"10268:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1563,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"10272:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1564,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"10277:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1556,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"10232:13:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10232:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1566,"nodeType":"EmitStatement","src":"10227:58:7"},{"expression":{"arguments":[{"id":1568,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"10316:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10334:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10326:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1569,"name":"address","nodeType":"ElementaryTypeName","src":"10326:7:7","typeDescriptions":{}}},"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10326:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1573,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"10338:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1574,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"10342:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1575,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"10347:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1576,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"10356:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1567,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"10296:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10296:65:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1578,"nodeType":"ExpressionStatement","src":"10296:65:7"},{"expression":{"arguments":[{"id":1580,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"10408:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10426:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10418:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"10418:7:7","typeDescriptions":{}}},"id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10418:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1585,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"10430:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1586,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"10434:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1587,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"10439:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1588,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"10448:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1579,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"10372:35:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10372:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1590,"nodeType":"ExpressionStatement","src":"10372:81:7"}]},"documentation":{"id":1482,"nodeType":"StructuredDocumentation","src":"9285:379:7","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1592,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1592,"src":"9698:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"9698:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1487,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":1592,"src":"9718:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"9718:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1486,"nodeType":"ArrayTypeName","src":"9718:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":1592,"src":"9748:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"9748:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1489,"nodeType":"ArrayTypeName","src":"9748:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1592,"src":"9782:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1491,"name":"bytes","nodeType":"ElementaryTypeName","src":"9782:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9688:117:7"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[],"src":"9823:0:7"},"scope":2047,"src":"9669:791:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1696,"nodeType":"Block","src":"10820:682:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1603,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"10838:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10854:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10846:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"10846:7:7","typeDescriptions":{}}},"id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10846:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10838:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10858:37:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":1602,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10830:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10830:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1611,"nodeType":"ExpressionStatement","src":"10830:66:7"},{"assignments":[1613],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1696,"src":"10907:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1612,"name":"address","nodeType":"ElementaryTypeName","src":"10907:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1616,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1614,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"10926:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10926:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10907:31:7"},{"assignments":[1621],"declarations":[{"constant":false,"id":1621,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":1696,"src":"10948:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1619,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1620,"nodeType":"ArrayTypeName","src":"10948:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1625,"initialValue":{"arguments":[{"id":1623,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"10989:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1622,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"10971:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10971:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10948:44:7"},{"assignments":[1630],"declarations":[{"constant":false,"id":1630,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":1696,"src":"11002:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"11002:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1629,"nodeType":"ArrayTypeName","src":"11002:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1634,"initialValue":{"arguments":[{"id":1632,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"11047:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1631,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"11029:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11029:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11002:52:7"},{"expression":{"arguments":[{"id":1636,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"11086:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1637,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"11096:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11110:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11102:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"11102:7:7","typeDescriptions":{}}},"id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11102:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1642,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"11114:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1643,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"11119:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11128:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1635,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"11065:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1646,"nodeType":"ExpressionStatement","src":"11065:66:7"},{"assignments":[1648],"declarations":[{"constant":false,"id":1648,"mutability":"mutable","name":"fromBalance","nodeType":"VariableDeclaration","scope":1696,"src":"11142:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"11142:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1654,"initialValue":{"baseExpression":{"baseExpression":{"id":1649,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"11164:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1651,"indexExpression":{"id":1650,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"11174:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11164:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1653,"indexExpression":{"id":1652,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"11178:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11164:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11142:41:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1656,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"11201:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1657,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"11216:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11201:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11224:38:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":1655,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11193:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11193:70:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1661,"nodeType":"ExpressionStatement","src":"11193:70:7"},{"id":1672,"nodeType":"UncheckedBlock","src":"11273:77:7","statements":[{"expression":{"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1662,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"11297:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1665,"indexExpression":{"id":1663,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"11307:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11297:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1666,"indexExpression":{"id":1664,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"11311:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11297:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1667,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"11319:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1668,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"11333:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11319:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11297:42:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1671,"nodeType":"ExpressionStatement","src":"11297:42:7"}]},{"eventCall":{"arguments":[{"id":1674,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"11380:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1675,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"11390:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11404:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11396:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1676,"name":"address","nodeType":"ElementaryTypeName","src":"11396:7:7","typeDescriptions":{}}},"id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11396:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1680,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"11408:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1681,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"11412:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1673,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"11365:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11365:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1683,"nodeType":"EmitStatement","src":"11360:59:7"},{"expression":{"arguments":[{"id":1685,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"11450:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1686,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"11460:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11474:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11466:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1687,"name":"address","nodeType":"ElementaryTypeName","src":"11466:7:7","typeDescriptions":{}}},"id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11466:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1691,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"11478:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1692,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"11483:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11492:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1684,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"11430:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11430:65:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1695,"nodeType":"ExpressionStatement","src":"11430:65:7"}]},"documentation":{"id":1593,"nodeType":"StructuredDocumentation","src":"10466:275:7","text":" @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."},"id":1697,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nodeType":"FunctionDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1697,"src":"10761:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"10761:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":1697,"src":"10775:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1596,"name":"uint256","nodeType":"ElementaryTypeName","src":"10775:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1599,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1697,"src":"10787:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10760:42:7"},"returnParameters":{"id":1601,"nodeType":"ParameterList","parameters":[],"src":"10820:0:7"},"scope":2047,"src":"10746:756:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1819,"nodeType":"Block","src":"11840:814:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1710,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"11858:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11874:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11866:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1711,"name":"address","nodeType":"ElementaryTypeName","src":"11866:7:7","typeDescriptions":{}}},"id":1714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11866:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11858:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11878:37:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":1709,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11850:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11850:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1718,"nodeType":"ExpressionStatement","src":"11850:66:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1720,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"11934:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11934:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1722,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"11948:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11948:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11934:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11964:42:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":1719,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11926:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11926:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1727,"nodeType":"ExpressionStatement","src":"11926:81:7"},{"assignments":[1729],"declarations":[{"constant":false,"id":1729,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1819,"src":"12018:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1728,"name":"address","nodeType":"ElementaryTypeName","src":"12018:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1732,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1730,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"12037:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12037:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12018:31:7"},{"expression":{"arguments":[{"id":1734,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"12081:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1735,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"12091:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12105:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12097:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1736,"name":"address","nodeType":"ElementaryTypeName","src":"12097:7:7","typeDescriptions":{}}},"id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12097:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1740,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"12109:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1741,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"12114:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12123:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1733,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"12060:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12060:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1744,"nodeType":"ExpressionStatement","src":"12060:66:7"},{"body":{"id":1794,"nodeType":"Block","src":"12178:323:7","statements":[{"assignments":[1757],"declarations":[{"constant":false,"id":1757,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":1794,"src":"12192:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"12192:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1761,"initialValue":{"baseExpression":{"id":1758,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"12205:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1760,"indexExpression":{"id":1759,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"12209:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12205:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12192:19:7"},{"assignments":[1763],"declarations":[{"constant":false,"id":1763,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1794,"src":"12225:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1767,"initialValue":{"baseExpression":{"id":1764,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"12242:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1766,"indexExpression":{"id":1765,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"12250:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12242:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12225:27:7"},{"assignments":[1769],"declarations":[{"constant":false,"id":1769,"mutability":"mutable","name":"fromBalance","nodeType":"VariableDeclaration","scope":1794,"src":"12267:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1768,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1775,"initialValue":{"baseExpression":{"baseExpression":{"id":1770,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"12289:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1772,"indexExpression":{"id":1771,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"12299:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12289:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1774,"indexExpression":{"id":1773,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"12303:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12289:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12267:41:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1777,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"12330:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1778,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"12345:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12330:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12353:38:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":1776,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12322:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12322:70:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1782,"nodeType":"ExpressionStatement","src":"12322:70:7"},{"id":1793,"nodeType":"UncheckedBlock","src":"12406:85:7","statements":[{"expression":{"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1783,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"12434:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1786,"indexExpression":{"id":1784,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"12444:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12434:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1787,"indexExpression":{"id":1785,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"12448:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12434:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1788,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"12456:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1789,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"12470:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12456:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12434:42:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1792,"nodeType":"ExpressionStatement","src":"12434:42:7"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1749,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"12157:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1750,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"12161:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12161:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12157:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1795,"initializationExpression":{"assignments":[1746],"declarations":[{"constant":false,"id":1746,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":1795,"src":"12142:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"12142:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1748,"initialValue":{"hexValue":"30","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12154:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12142:13:7"},"loopExpression":{"expression":{"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12173:3:7","subExpression":{"id":1753,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"12173:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1755,"nodeType":"ExpressionStatement","src":"12173:3:7"},"nodeType":"ForStatement","src":"12137:364:7"},{"eventCall":{"arguments":[{"id":1797,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"12530:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1798,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"12540:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12554:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12546:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"12546:7:7","typeDescriptions":{}}},"id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12546:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1803,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"12558:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1804,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"12563:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1796,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"12516:13:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12516:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1806,"nodeType":"EmitStatement","src":"12511:60:7"},{"expression":{"arguments":[{"id":1808,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"12602:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1809,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"12612:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12618:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1810,"name":"address","nodeType":"ElementaryTypeName","src":"12618:7:7","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12618:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1814,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"12630:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1815,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"12635:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12644:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1807,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"12582:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12582:65:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1818,"nodeType":"ExpressionStatement","src":"12582:65:7"}]},"documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"11508:228:7","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length."},"id":1820,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nodeType":"FunctionDefinition","parameters":{"id":1707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1820,"src":"11761:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1699,"name":"address","nodeType":"ElementaryTypeName","src":"11761:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1703,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":1820,"src":"11775:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1701,"name":"uint256","nodeType":"ElementaryTypeName","src":"11775:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1702,"nodeType":"ArrayTypeName","src":"11775:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1706,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":1820,"src":"11797:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1704,"name":"uint256","nodeType":"ElementaryTypeName","src":"11797:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1705,"nodeType":"ArrayTypeName","src":"11797:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11760:62:7"},"returnParameters":{"id":1708,"nodeType":"ParameterList","parameters":[],"src":"11840:0:7"},"scope":2047,"src":"11741:913:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1851,"nodeType":"Block","src":"12883:200:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1831,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"12901:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1832,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"12910:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12901:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12920:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""},"value":"ERC1155: setting approval status for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""}],"id":1830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12893:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12893:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1836,"nodeType":"ExpressionStatement","src":"12893:71:7"},{"expression":{"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1837,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"12974:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1840,"indexExpression":{"id":1838,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"12993:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12974:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1841,"indexExpression":{"id":1839,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"13000:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12974:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1842,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"13012:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12974:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1844,"nodeType":"ExpressionStatement","src":"12974:46:7"},{"eventCall":{"arguments":[{"id":1846,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"13050:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1847,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"13057:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1848,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"13067:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1845,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"13035:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13035:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1850,"nodeType":"EmitStatement","src":"13030:46:7"}]},"documentation":{"id":1821,"nodeType":"StructuredDocumentation","src":"12660:125:7","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1852,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nodeType":"FunctionDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1852,"src":"12818:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1822,"name":"address","nodeType":"ElementaryTypeName","src":"12818:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1825,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1852,"src":"12833:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1824,"name":"address","nodeType":"ElementaryTypeName","src":"12833:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1827,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":1852,"src":"12851:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1826,"name":"bool","nodeType":"ElementaryTypeName","src":"12851:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12817:48:7"},"returnParameters":{"id":1829,"nodeType":"ParameterList","parameters":[],"src":"12883:0:7"},"scope":2047,"src":"12790:293:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1870,"nodeType":"Block","src":"14231:2:7","statements":[]},"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"13089:925:7","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1871,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nodeType":"FunctionDefinition","parameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1871,"src":"14058:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"14058:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1871,"src":"14084:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1856,"name":"address","nodeType":"ElementaryTypeName","src":"14084:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1859,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1871,"src":"14106:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1858,"name":"address","nodeType":"ElementaryTypeName","src":"14106:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1862,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":1871,"src":"14126:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"14126:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1861,"nodeType":"ArrayTypeName","src":"14126:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1865,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":1871,"src":"14156:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"14156:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1864,"nodeType":"ArrayTypeName","src":"14156:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1867,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1871,"src":"14190:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1866,"name":"bytes","nodeType":"ElementaryTypeName","src":"14190:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14048:165:7"},"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[],"src":"14231:0:7"},"scope":2047,"src":"14019:214:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1889,"nodeType":"Block","src":"15377:2:7","statements":[]},"documentation":{"id":1872,"nodeType":"StructuredDocumentation","src":"14239:922:7","text":" @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1890,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nodeType":"FunctionDefinition","parameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1890,"src":"15204:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"15204:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1876,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1890,"src":"15230:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1875,"name":"address","nodeType":"ElementaryTypeName","src":"15230:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1890,"src":"15252:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"15252:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":1890,"src":"15272:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1879,"name":"uint256","nodeType":"ElementaryTypeName","src":"15272:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1880,"nodeType":"ArrayTypeName","src":"15272:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":1890,"src":"15302:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"15302:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1883,"nodeType":"ArrayTypeName","src":"15302:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1886,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1890,"src":"15336:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1885,"name":"bytes","nodeType":"ElementaryTypeName","src":"15336:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15194:165:7"},"returnParameters":{"id":1888,"nodeType":"ParameterList","parameters":[],"src":"15377:0:7"},"scope":2047,"src":"15166:213:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1952,"nodeType":"Block","src":"15578:532:7","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1905,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"15592:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":3465,"src":"15592:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15592:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1951,"nodeType":"IfStatement","src":"15588:516:7","trueBody":{"id":1950,"nodeType":"Block","src":"15609:495:7","statements":[{"clauses":[{"block":{"id":1932,"nodeType":"Block","src":"15726:184:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1921,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"15748:8:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1922,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"15760:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2210_$","typeString":"type(contract IERC1155Receiver)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":2191,"src":"15760:34:7","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"15760:43:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"15748:55:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1931,"nodeType":"IfStatement","src":"15744:152:7","trueBody":{"id":1930,"nodeType":"Block","src":"15805:91:7","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15834:42:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1926,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"15827:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15827:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1929,"nodeType":"ExpressionStatement","src":"15827:50:7"}]}}]},"errorName":"","id":1933,"nodeType":"TryCatchClause","parameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"response","nodeType":"VariableDeclaration","scope":1933,"src":"15709:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1918,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15709:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"15708:17:7"},"src":"15700:210:7"},{"block":{"id":1941,"nodeType":"Block","src":"15945:47:7","statements":[{"expression":{"arguments":[{"id":1938,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"15970:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1937,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"15963:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15963:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1940,"nodeType":"ExpressionStatement","src":"15963:14:7"}]},"errorName":"Error","id":1942,"nodeType":"TryCatchClause","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"reason","nodeType":"VariableDeclaration","scope":1942,"src":"15923:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1934,"name":"string","nodeType":"ElementaryTypeName","src":"15923:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15922:22:7"},"src":"15911:81:7"},{"block":{"id":1947,"nodeType":"Block","src":"15999:95:7","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572","id":1944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16024:54:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non-ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""}],"id":1943,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16017:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16017:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1946,"nodeType":"ExpressionStatement","src":"16017:62:7"}]},"errorName":"","id":1948,"nodeType":"TryCatchClause","src":"15993:101:7"}],"externalCall":{"arguments":[{"id":1912,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"15666:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1913,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"15676:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1914,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"15682:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1915,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"15686:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1916,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"15694:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1909,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"15644:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1908,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"15627:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2210_$","typeString":"type(contract IERC1155Receiver)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15627:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$2210","typeString":"contract IERC1155Receiver"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":2191,"src":"15627:38:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15627:72:7","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1949,"nodeType":"TryStatement","src":"15623:471:7"}]}}]},"id":1953,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeTransferAcceptanceCheck","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1953,"src":"15434:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1891,"name":"address","nodeType":"ElementaryTypeName","src":"15434:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1894,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1953,"src":"15460:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"15460:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1953,"src":"15482:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1895,"name":"address","nodeType":"ElementaryTypeName","src":"15482:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":1953,"src":"15502:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1897,"name":"uint256","nodeType":"ElementaryTypeName","src":"15502:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1953,"src":"15522:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"15522:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1953,"src":"15546:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1901,"name":"bytes","nodeType":"ElementaryTypeName","src":"15546:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15424:145:7"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[],"src":"15578:0:7"},"scope":2047,"src":"15385:725:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2017,"nodeType":"Block","src":"16334:574:7","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1970,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"16348:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":3465,"src":"16348:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16348:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2016,"nodeType":"IfStatement","src":"16344:558:7","trueBody":{"id":2015,"nodeType":"Block","src":"16365:537:7","statements":[{"clauses":[{"block":{"id":1997,"nodeType":"Block","src":"16519:189:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1986,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"16541:8:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1987,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"16553:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2210_$","typeString":"type(contract IERC1155Receiver)"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":2209,"src":"16553:39:7","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"16553:48:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"16541:60:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1996,"nodeType":"IfStatement","src":"16537:157:7","trueBody":{"id":1995,"nodeType":"Block","src":"16603:91:7","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16632:42:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1991,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16625:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16625:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1994,"nodeType":"ExpressionStatement","src":"16625:50:7"}]}}]},"errorName":"","id":1998,"nodeType":"TryCatchClause","parameters":{"id":1985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1984,"mutability":"mutable","name":"response","nodeType":"VariableDeclaration","scope":1998,"src":"16489:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1983,"name":"bytes4","nodeType":"ElementaryTypeName","src":"16489:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"16471:47:7"},"src":"16463:245:7"},{"block":{"id":2006,"nodeType":"Block","src":"16743:47:7","statements":[{"expression":{"arguments":[{"id":2003,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"16768:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2002,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16761:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16761:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2005,"nodeType":"ExpressionStatement","src":"16761:14:7"}]},"errorName":"Error","id":2007,"nodeType":"TryCatchClause","parameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"reason","nodeType":"VariableDeclaration","scope":2007,"src":"16721:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1999,"name":"string","nodeType":"ElementaryTypeName","src":"16721:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16720:22:7"},"src":"16709:81:7"},{"block":{"id":2012,"nodeType":"Block","src":"16797:95:7","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16822:54:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non-ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""}],"id":2008,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16815:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16815:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2011,"nodeType":"ExpressionStatement","src":"16815:62:7"}]},"errorName":"","id":2013,"nodeType":"TryCatchClause","src":"16791:101:7"}],"externalCall":{"arguments":[{"id":1977,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"16427:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1978,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"16437:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1979,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"16443:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1980,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"16448:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1981,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"16457:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1974,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"16400:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1973,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"16383:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2210_$","typeString":"type(contract IERC1155Receiver)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16383:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$2210","typeString":"contract IERC1155Receiver"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":2209,"src":"16383:43:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16383:79:7","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2014,"nodeType":"TryStatement","src":"16379:513:7"}]}}]},"id":2018,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"FunctionDefinition","parameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":2018,"src":"16170:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1954,"name":"address","nodeType":"ElementaryTypeName","src":"16170:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1957,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":2018,"src":"16196:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1956,"name":"address","nodeType":"ElementaryTypeName","src":"16196:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1959,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2018,"src":"16218:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"16218:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":2018,"src":"16238:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"16238:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1961,"nodeType":"ArrayTypeName","src":"16238:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1965,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":2018,"src":"16268:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"16268:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1964,"nodeType":"ArrayTypeName","src":"16268:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1967,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":2018,"src":"16302:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1966,"name":"bytes","nodeType":"ElementaryTypeName","src":"16302:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16160:165:7"},"returnParameters":{"id":1969,"nodeType":"ParameterList","parameters":[],"src":"16334:0:7"},"scope":2047,"src":"16116:792:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2045,"nodeType":"Block","src":"16998:109:7","statements":[{"assignments":[2030],"declarations":[{"constant":false,"id":2030,"mutability":"mutable","name":"array","nodeType":"VariableDeclaration","scope":2045,"src":"17008:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"17008:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2029,"nodeType":"ArrayTypeName","src":"17008:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2036,"initialValue":{"arguments":[{"hexValue":"31","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17047:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17033:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"17037:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2032,"nodeType":"ArrayTypeName","src":"17037:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17033:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17008:41:7"},{"expression":{"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2037,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"17059:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2039,"indexExpression":{"hexValue":"30","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17065:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17059:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2040,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"17070:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17059:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2042,"nodeType":"ExpressionStatement","src":"17059:18:7"},{"expression":{"id":2043,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"17095:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2025,"id":2044,"nodeType":"Return","src":"17088:12:7"}]},"id":2046,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArray","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"element","nodeType":"VariableDeclaration","scope":2046,"src":"16941:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"16941:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16940:17:7"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2046,"src":"16980:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2022,"name":"uint256","nodeType":"ElementaryTypeName","src":"16980:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2023,"nodeType":"ArrayTypeName","src":"16980:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16979:18:7"},"scope":2047,"src":"16914:193:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2048,"src":"570:16539:7"}],"src":"109:17001:7"},"id":7},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[2169],"IERC165":[4064]},"id":2170,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2049,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2050,"nodeType":"ImportDirective","scope":2170,"sourceUnit":4065,"src":"135:47:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2052,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":4064,"src":"372:7:8"},"id":2053,"nodeType":"InheritanceSpecifier","src":"372:7:8"}],"contractDependencies":[4064],"contractKind":"interface","documentation":{"id":2051,"nodeType":"StructuredDocumentation","src":"184:165:8","text":" @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":2169,"linearizedBaseContracts":[2169,4064],"name":"IERC1155","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2054,"nodeType":"StructuredDocumentation","src":"386:121:8","text":" @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"id":2066,"name":"TransferSingle","nodeType":"EventDefinition","parameters":{"id":2065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"indexed":true,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":2066,"src":"533:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"533:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2058,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":2066,"src":"559:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2057,"name":"address","nodeType":"ElementaryTypeName","src":"559:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2060,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2066,"src":"581:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2059,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2062,"indexed":false,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":2066,"src":"601:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2064,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2066,"src":"613:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"532:95:8"},"src":"512:116:8"},{"anonymous":false,"documentation":{"id":2067,"nodeType":"StructuredDocumentation","src":"634:144:8","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"id":2081,"name":"TransferBatch","nodeType":"EventDefinition","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"indexed":true,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":2081,"src":"812:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2068,"name":"address","nodeType":"ElementaryTypeName","src":"812:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2071,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":2081,"src":"846:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2070,"name":"address","nodeType":"ElementaryTypeName","src":"846:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2073,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2081,"src":"876:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2072,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2076,"indexed":false,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":2081,"src":"904:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2074,"name":"uint256","nodeType":"ElementaryTypeName","src":"904:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2075,"nodeType":"ArrayTypeName","src":"904:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2079,"indexed":false,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","scope":2081,"src":"927:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2077,"name":"uint256","nodeType":"ElementaryTypeName","src":"927:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2078,"nodeType":"ArrayTypeName","src":"927:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"802:147:8"},"src":"783:167:8"},{"anonymous":false,"documentation":{"id":2082,"nodeType":"StructuredDocumentation","src":"956:147:8","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"id":2090,"name":"ApprovalForAll","nodeType":"EventDefinition","parameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"indexed":true,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":2090,"src":"1129:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2083,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2086,"indexed":true,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":2090,"src":"1154:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2085,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2088,"indexed":false,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":2090,"src":"1180:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2087,"name":"bool","nodeType":"ElementaryTypeName","src":"1180:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1128:66:8"},"src":"1108:87:8"},{"anonymous":false,"documentation":{"id":2091,"nodeType":"StructuredDocumentation","src":"1201:343:8","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"id":2097,"name":"URI","nodeType":"EventDefinition","parameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2097,"src":"1559:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2092,"name":"string","nodeType":"ElementaryTypeName","src":"1559:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2095,"indexed":true,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":2097,"src":"1573:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2094,"name":"uint256","nodeType":"ElementaryTypeName","src":"1573:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1558:34:8"},"src":"1549:44:8"},{"documentation":{"id":2098,"nodeType":"StructuredDocumentation","src":"1599:173:8","text":" @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":2107,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":2107,"src":"1796:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2099,"name":"address","nodeType":"ElementaryTypeName","src":"1796:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2102,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":2107,"src":"1813:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1795:29:8"},"returnParameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2107,"src":"1848:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1848:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1847:9:8"},"scope":2169,"src":"1777:80:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2108,"nodeType":"StructuredDocumentation","src":"1863:188:8","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":2120,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nodeType":"FunctionDefinition","parameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2111,"mutability":"mutable","name":"accounts","nodeType":"VariableDeclaration","scope":2120,"src":"2089:27:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2109,"name":"address","nodeType":"ElementaryTypeName","src":"2089:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2110,"nodeType":"ArrayTypeName","src":"2089:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":2120,"src":"2126:22:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2113,"nodeType":"ArrayTypeName","src":"2126:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2079:75:8"},"returnParameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2120,"src":"2178:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2116,"name":"uint256","nodeType":"ElementaryTypeName","src":"2178:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2117,"nodeType":"ArrayTypeName","src":"2178:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2177:18:8"},"scope":2169,"src":"2056:140:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2121,"nodeType":"StructuredDocumentation","src":"2202:248:8","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."},"functionSelector":"a22cb465","id":2128,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nodeType":"FunctionDefinition","parameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":2128,"src":"2482:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2122,"name":"address","nodeType":"ElementaryTypeName","src":"2482:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":2128,"src":"2500:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2124,"name":"bool","nodeType":"ElementaryTypeName","src":"2500:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2481:33:8"},"returnParameters":{"id":2127,"nodeType":"ParameterList","parameters":[],"src":"2523:0:8"},"scope":2169,"src":"2455:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"2530:135:8","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":2138,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nodeType":"FunctionDefinition","parameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":2138,"src":"2696:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2130,"name":"address","nodeType":"ElementaryTypeName","src":"2696:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2133,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":2138,"src":"2713:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2132,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2695:35:8"},"returnParameters":{"id":2137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2136,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2138,"src":"2754:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2135,"name":"bool","nodeType":"ElementaryTypeName","src":"2754:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2753:6:8"},"scope":2169,"src":"2670:90:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2139,"nodeType":"StructuredDocumentation","src":"2766:556:8","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":2152,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":2150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":2152,"src":"3353:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2140,"name":"address","nodeType":"ElementaryTypeName","src":"3353:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2143,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2152,"src":"3367:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2142,"name":"address","nodeType":"ElementaryTypeName","src":"3367:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2145,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":2152,"src":"3379:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2144,"name":"uint256","nodeType":"ElementaryTypeName","src":"3379:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2147,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2152,"src":"3391:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2146,"name":"uint256","nodeType":"ElementaryTypeName","src":"3391:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2149,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":2152,"src":"3407:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2148,"name":"bytes","nodeType":"ElementaryTypeName","src":"3407:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3352:75:8"},"returnParameters":{"id":2151,"nodeType":"ParameterList","parameters":[],"src":"3436:0:8"},"scope":2169,"src":"3327:110:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2153,"nodeType":"StructuredDocumentation","src":"3443:390:8","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":2168,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":2168,"src":"3878:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2154,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2157,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2168,"src":"3900:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2156,"name":"address","nodeType":"ElementaryTypeName","src":"3900:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2160,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":2168,"src":"3920:22:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2158,"name":"uint256","nodeType":"ElementaryTypeName","src":"3920:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2159,"nodeType":"ArrayTypeName","src":"3920:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":2168,"src":"3952:26:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"3952:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2162,"nodeType":"ArrayTypeName","src":"3952:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":2168,"src":"3988:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2164,"name":"bytes","nodeType":"ElementaryTypeName","src":"3988:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3868:145:8"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[],"src":"4022:0:8"},"scope":2169,"src":"3838:185:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2170,"src":"350:3675:8"}],"src":"110:3916:8"},"id":8},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[2210],"IERC165":[4064]},"id":2211,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2171,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2172,"nodeType":"ImportDirective","scope":2211,"sourceUnit":4065,"src":"143:47:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2174,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":4064,"src":"262:7:9"},"id":2175,"nodeType":"InheritanceSpecifier","src":"262:7:9"}],"contractDependencies":[4064],"contractKind":"interface","documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"192:39:9","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":2210,"linearizedBaseContracts":[2210,4064],"name":"IERC1155Receiver","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"276:826:9","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":2191,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":2191,"src":"1143:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":2191,"src":"1169:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2179,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2182,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":2191,"src":"1191:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2191,"src":"1211:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2186,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":2191,"src":"1234:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2185,"name":"bytes","nodeType":"ElementaryTypeName","src":"1234:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1133:126:9"},"returnParameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2191,"src":"1278:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2188,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1278:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1277:8:9"},"scope":2210,"src":"1107:179:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2192,"nodeType":"StructuredDocumentation","src":"1292:994:9","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":2209,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nodeType":"FunctionDefinition","parameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":2209,"src":"2332:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2193,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2196,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":2209,"src":"2358:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"2358:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2199,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":2209,"src":"2380:22:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2198,"nodeType":"ArrayTypeName","src":"2380:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2202,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","scope":2209,"src":"2412:25:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2200,"name":"uint256","nodeType":"ElementaryTypeName","src":"2412:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2201,"nodeType":"ArrayTypeName","src":"2412:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2204,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":2209,"src":"2447:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2203,"name":"bytes","nodeType":"ElementaryTypeName","src":"2447:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2322:150:9"},"returnParameters":{"id":2208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2207,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2209,"src":"2491:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2206,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2491:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2490:8:9"},"scope":2210,"src":"2291:208:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2211,"src":"232:2269:9"}],"src":"118:2384:9"},"id":9},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","exportedSymbols":{"Address":[3777],"Context":[3799],"ERC1155":[2047],"ERC1155Burnable":[2279],"ERC165":[4052],"IERC1155":[2169],"IERC1155MetadataURI":[2342],"IERC1155Receiver":[2210],"IERC165":[4064]},"id":2280,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2212,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":2213,"nodeType":"ImportDirective","scope":2280,"sourceUnit":2048,"src":"153:24:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2215,"name":"ERC1155","nodeType":"IdentifierPath","referencedDeclaration":2047,"src":"394:7:10"},"id":2216,"nodeType":"InheritanceSpecifier","src":"394:7:10"}],"contractDependencies":[2047,2169,2342,3799,4052,4064],"contractKind":"contract","documentation":{"id":2214,"nodeType":"StructuredDocumentation","src":"179:177:10","text":" @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use.\n _Available since v3.1._"},"fullyImplemented":false,"id":2279,"linearizedBaseContracts":[2279,2047,2342,2169,4052,4064,3799],"name":"ERC1155Burnable","nodeType":"ContractDefinition","nodes":[{"body":{"id":2245,"nodeType":"Block","src":"481:212:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2226,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"512:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2227,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"523:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"523:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"512:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2231,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"556:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2232,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"565:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"565:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2230,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"539:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"539:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"512:66:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"592:48:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":2225,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"491:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"491:159:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2238,"nodeType":"ExpressionStatement","src":"491:159:10"},{"expression":{"arguments":[{"id":2240,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"667:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2241,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"676:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"680:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2239,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"661:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"661:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2244,"nodeType":"ExpressionStatement","src":"661:25:10"}]},"functionSelector":"f5298aca","id":2246,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nodeType":"FunctionDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":2246,"src":"422:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2217,"name":"address","nodeType":"ElementaryTypeName","src":"422:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2220,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":2246,"src":"439:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2219,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2222,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2246,"src":"451:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"421:44:10"},"returnParameters":{"id":2224,"nodeType":"ParameterList","parameters":[],"src":"481:0:10"},"scope":2279,"src":"408:285:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2277,"nodeType":"Block","src":"797:219:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2258,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"828:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2259,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"839:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"839:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"828:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2263,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"872:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2264,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"881:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2262,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"855:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"855:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"828:66:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"908:48:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":2257,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"807:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"807:159:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2270,"nodeType":"ExpressionStatement","src":"807:159:10"},{"expression":{"arguments":[{"id":2272,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"988:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2273,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"997:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2274,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"1002:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2271,"name":"_burnBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"977:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory)"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"977:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2276,"nodeType":"ExpressionStatement","src":"977:32:10"}]},"functionSelector":"6b20c454","id":2278,"implemented":true,"kind":"function","modifiers":[],"name":"burnBatch","nodeType":"FunctionDefinition","parameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":2278,"src":"718:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2247,"name":"address","nodeType":"ElementaryTypeName","src":"718:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2251,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":2278,"src":"735:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"735:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2250,"nodeType":"ArrayTypeName","src":"735:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2254,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","scope":2278,"src":"757:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"757:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2253,"nodeType":"ArrayTypeName","src":"757:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"717:64:10"},"returnParameters":{"id":2256,"nodeType":"ParameterList","parameters":[],"src":"797:0:10"},"scope":2279,"src":"699:317:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":2280,"src":"357:661:10"}],"src":"128:891:10"},"id":10},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol","exportedSymbols":{"Address":[3777],"Context":[3799],"ERC1155":[2047],"ERC1155Pausable":[2327],"ERC165":[4052],"IERC1155":[2169],"IERC1155MetadataURI":[2342],"IERC1155Receiver":[2210],"IERC165":[4064],"Pausable":[759]},"id":2328,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2281,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":2282,"nodeType":"ImportDirective","scope":2328,"sourceUnit":2048,"src":"153:24:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"../../../security/Pausable.sol","id":2283,"nodeType":"ImportDirective","scope":2328,"sourceUnit":760,"src":"178:40:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2285,"name":"ERC1155","nodeType":"IdentifierPath","referencedDeclaration":2047,"src":"925:7:11"},"id":2286,"nodeType":"InheritanceSpecifier","src":"925:7:11"},{"baseName":{"id":2287,"name":"Pausable","nodeType":"IdentifierPath","referencedDeclaration":759,"src":"934:8:11"},"id":2288,"nodeType":"InheritanceSpecifier","src":"934:8:11"}],"contractDependencies":[759,2047,2169,2342,3799,4052,4064],"contractKind":"contract","documentation":{"id":2284,"nodeType":"StructuredDocumentation","src":"220:667:11","text":" @dev ERC1155 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract unpausable.\n _Available since v3.1._"},"fullyImplemented":false,"id":2327,"linearizedBaseContracts":[2327,759,2047,2342,2169,4052,4064,3799],"name":"ERC1155Pausable","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1871],"body":{"id":2325,"nodeType":"Block","src":"1311:160:11","statements":[{"expression":{"arguments":[{"id":2310,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"1348:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2311,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"1358:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2312,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"1364:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2313,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"1368:3:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2314,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"1373:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2315,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"1382:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2307,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1321:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Pausable_$2327_$","typeString":"type(contract super ERC1155Pausable)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1871,"src":"1321:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1321:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2317,"nodeType":"ExpressionStatement","src":"1321:66:11"},{"expression":{"arguments":[{"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1406:9:11","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2319,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"1407:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1407:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135355061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1417:46:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_382791644f51336ed3667770955aa8eb4efb839029c48708cadb22e92d271435","typeString":"literal_string \"ERC1155Pausable: token transfer while paused\""},"value":"ERC1155Pausable: token transfer while paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_382791644f51336ed3667770955aa8eb4efb839029c48708cadb22e92d271435","typeString":"literal_string \"ERC1155Pausable: token transfer while paused\""}],"id":2318,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1398:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1398:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2324,"nodeType":"ExpressionStatement","src":"1398:66:11"}]},"documentation":{"id":2289,"nodeType":"StructuredDocumentation","src":"949:136:11","text":" @dev See {ERC1155-_beforeTokenTransfer}.\n Requirements:\n - the contract must not be paused."},"id":2326,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nodeType":"FunctionDefinition","overrides":{"id":2305,"nodeType":"OverrideSpecifier","overrides":[],"src":"1302:8:11"},"parameters":{"id":2304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":2326,"src":"1129:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2290,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2293,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":2326,"src":"1155:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2292,"name":"address","nodeType":"ElementaryTypeName","src":"1155:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2295,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2326,"src":"1177:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2294,"name":"address","nodeType":"ElementaryTypeName","src":"1177:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":2326,"src":"1197:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1197:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2297,"nodeType":"ArrayTypeName","src":"1197:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2301,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":2326,"src":"1227:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1227:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2300,"nodeType":"ArrayTypeName","src":"1227:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2303,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":2326,"src":"1261:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2302,"name":"bytes","nodeType":"ElementaryTypeName","src":"1261:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1119:165:11"},"returnParameters":{"id":2306,"nodeType":"ParameterList","parameters":[],"src":"1311:0:11"},"scope":2327,"src":"1090:381:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2328,"src":"888:585:11"}],"src":"128:1346:11"},"id":11},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[2169],"IERC1155MetadataURI":[2342],"IERC165":[4064]},"id":2343,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2329,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"117:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":2330,"nodeType":"ImportDirective","scope":2343,"sourceUnit":2170,"src":"142:25:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2332,"name":"IERC1155","nodeType":"IdentifierPath","referencedDeclaration":2169,"src":"397:8:12"},"id":2333,"nodeType":"InheritanceSpecifier","src":"397:8:12"}],"contractDependencies":[2169,4064],"contractKind":"interface","documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"169:194:12","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":2342,"linearizedBaseContracts":[2342,2169,4064],"name":"IERC1155MetadataURI","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2334,"nodeType":"StructuredDocumentation","src":"412:192:12","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":2341,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nodeType":"FunctionDefinition","parameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":2341,"src":"622:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"622:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"621:12:12"},"returnParameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2341,"src":"657:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2338,"name":"string","nodeType":"ElementaryTypeName","src":"657:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"656:15:12"},"scope":2342,"src":"609:63:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2343,"src":"364:310:12"}],"src":"117:558:12"},"id":12},"@openzeppelin/contracts/token/ERC1155/presets/ERC1155PresetMinterPauser.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/presets/ERC1155PresetMinterPauser.sol","exportedSymbols":{"AccessControl":[315],"AccessControlEnumerable":[440],"Address":[3777],"Context":[3799],"ERC1155":[2047],"ERC1155Burnable":[2279],"ERC1155Pausable":[2327],"ERC1155PresetMinterPauser":[2540],"ERC165":[4052],"EnumerableSet":[5960],"IAccessControl":[513],"IAccessControlEnumerable":[538],"IERC1155":[2169],"IERC1155MetadataURI":[2342],"IERC1155Receiver":[2210],"IERC165":[4064],"Math":[4930],"Pausable":[759],"SignedMath":[5347],"Strings":[4028]},"id":2541,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2344,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"135:23:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":2345,"nodeType":"ImportDirective","scope":2541,"sourceUnit":2048,"src":"160:24:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","file":"../extensions/ERC1155Burnable.sol","id":2346,"nodeType":"ImportDirective","scope":2541,"sourceUnit":2280,"src":"185:43:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol","file":"../extensions/ERC1155Pausable.sol","id":2347,"nodeType":"ImportDirective","scope":2541,"sourceUnit":2328,"src":"229:43:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","file":"../../../access/AccessControlEnumerable.sol","id":2348,"nodeType":"ImportDirective","scope":2541,"sourceUnit":441,"src":"273:53:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":2349,"nodeType":"ImportDirective","scope":2541,"sourceUnit":3800,"src":"327:36:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2351,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3799,"src":"1055:7:13"},"id":2352,"nodeType":"InheritanceSpecifier","src":"1055:7:13"},{"baseName":{"id":2353,"name":"AccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":440,"src":"1064:23:13"},"id":2354,"nodeType":"InheritanceSpecifier","src":"1064:23:13"},{"baseName":{"id":2355,"name":"ERC1155Burnable","nodeType":"IdentifierPath","referencedDeclaration":2279,"src":"1089:15:13"},"id":2356,"nodeType":"InheritanceSpecifier","src":"1089:15:13"},{"baseName":{"id":2357,"name":"ERC1155Pausable","nodeType":"IdentifierPath","referencedDeclaration":2327,"src":"1106:15:13"},"id":2358,"nodeType":"InheritanceSpecifier","src":"1106:15:13"}],"contractDependencies":[315,440,513,538,759,2047,2169,2279,2327,2342,3799,4052,4064],"contractKind":"contract","documentation":{"id":2350,"nodeType":"StructuredDocumentation","src":"365:651:13","text":" @dev {ERC1155} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts.\n _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._"},"fullyImplemented":true,"id":2540,"linearizedBaseContracts":[2540,2327,759,2279,2047,2342,2169,440,315,4052,4064,538,513,3799],"name":"ERC1155PresetMinterPauser","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":2363,"mutability":"constant","name":"MINTER_ROLE","nodeType":"VariableDeclaration","scope":2540,"src":"1128:62:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1128:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1176:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":2360,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1166:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1166:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"e63ab1e9","id":2368,"mutability":"constant","name":"PAUSER_ROLE","nodeType":"VariableDeclaration","scope":2540,"src":"1196:62:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1196:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1244:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":2365,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1234:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1234:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":2395,"nodeType":"Block","src":"1448:156:13","statements":[{"expression":{"arguments":[{"id":2378,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1469:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2379,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"1489:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1489:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2377,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1458:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1458:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2382,"nodeType":"ExpressionStatement","src":"1458:44:13"},{"expression":{"arguments":[{"id":2384,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"1524:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2385,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"1537:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1537:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2383,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1513:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1513:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2388,"nodeType":"ExpressionStatement","src":"1513:37:13"},{"expression":{"arguments":[{"id":2390,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"1571:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2391,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"1584:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1584:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2389,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1560:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1560:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2394,"nodeType":"ExpressionStatement","src":"1560:37:13"}]},"documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"1265:134:13","text":" @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE`, and `PAUSER_ROLE` to the account that\n deploys the contract."},"id":2396,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2374,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"1443:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":2375,"modifierName":{"id":2373,"name":"ERC1155","nodeType":"IdentifierPath","referencedDeclaration":2047,"src":"1435:7:13"},"nodeType":"ModifierInvocation","src":"1435:12:13"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"uri","nodeType":"VariableDeclaration","scope":2396,"src":"1416:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2370,"name":"string","nodeType":"ElementaryTypeName","src":"1416:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1415:19:13"},"returnParameters":{"id":2376,"nodeType":"ParameterList","parameters":[],"src":"1448:0:13"},"scope":2540,"src":"1404:200:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2424,"nodeType":"Block","src":"1903:158:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2410,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"1929:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2411,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"1942:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1942:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2409,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"1921:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1921:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135355072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74","id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1957:58:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c","typeString":"literal_string \"ERC1155PresetMinterPauser: must have minter role to mint\""},"value":"ERC1155PresetMinterPauser: must have minter role to mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c","typeString":"literal_string \"ERC1155PresetMinterPauser: must have minter role to mint\""}],"id":2408,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1913:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1913:103:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2416,"nodeType":"ExpressionStatement","src":"1913:103:13"},{"expression":{"arguments":[{"id":2418,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"2033:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2419,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"2037:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2420,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"2041:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2421,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"2049:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2417,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"2027:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2027:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2423,"nodeType":"ExpressionStatement","src":"2027:27:13"}]},"documentation":{"id":2397,"nodeType":"StructuredDocumentation","src":"1610:200:13","text":" @dev Creates `amount` new tokens for `to`, of token type `id`.\n See {ERC1155-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."},"functionSelector":"731133e9","id":2425,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nodeType":"FunctionDefinition","parameters":{"id":2406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2399,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2425,"src":"1829:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2398,"name":"address","nodeType":"ElementaryTypeName","src":"1829:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2401,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":2425,"src":"1841:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2400,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2403,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2425,"src":"1853:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1853:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2405,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":2425,"src":"1869:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2404,"name":"bytes","nodeType":"ElementaryTypeName","src":"1869:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1828:59:13"},"returnParameters":{"id":2407,"nodeType":"ParameterList","parameters":[],"src":"1903:0:13"},"scope":2540,"src":"1815:246:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2455,"nodeType":"Block","src":"2276:165:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2441,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"2302:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2442,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"2315:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2315:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2440,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"2294:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2294:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135355072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2330:58:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c","typeString":"literal_string \"ERC1155PresetMinterPauser: must have minter role to mint\""},"value":"ERC1155PresetMinterPauser: must have minter role to mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c","typeString":"literal_string \"ERC1155PresetMinterPauser: must have minter role to mint\""}],"id":2439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2286:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2286:103:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2447,"nodeType":"ExpressionStatement","src":"2286:103:13"},{"expression":{"arguments":[{"id":2449,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"2411:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2450,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"2415:3:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2451,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"2420:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2452,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"2429:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2448,"name":"_mintBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"2400:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2400:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2454,"nodeType":"ExpressionStatement","src":"2400:34:13"}]},"documentation":{"id":2426,"nodeType":"StructuredDocumentation","src":"2067:91:13","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] variant of {mint}."},"functionSelector":"1f7fdffa","id":2456,"implemented":true,"kind":"function","modifiers":[],"name":"mintBatch","nodeType":"FunctionDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2456,"src":"2182:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2427,"name":"address","nodeType":"ElementaryTypeName","src":"2182:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2431,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":2456,"src":"2194:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2429,"name":"uint256","nodeType":"ElementaryTypeName","src":"2194:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2430,"nodeType":"ArrayTypeName","src":"2194:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2434,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":2456,"src":"2216:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"2216:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2433,"nodeType":"ArrayTypeName","src":"2216:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2436,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":2456,"src":"2242:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2435,"name":"bytes","nodeType":"ElementaryTypeName","src":"2242:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2181:79:13"},"returnParameters":{"id":2438,"nodeType":"ParameterList","parameters":[],"src":"2276:0:13"},"scope":2540,"src":"2163:278:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2472,"nodeType":"Block","src":"2678:139:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2462,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"2704:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2463,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"2717:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2717:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2461,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"2696:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2696:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2732:59:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d5053a301adec69bf5c7c3782556a354b14090e41fa7ca93c4de3863fd6a98b9","typeString":"literal_string \"ERC1155PresetMinterPauser: must have pauser role to pause\""},"value":"ERC1155PresetMinterPauser: must have pauser role to pause"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d5053a301adec69bf5c7c3782556a354b14090e41fa7ca93c4de3863fd6a98b9","typeString":"literal_string \"ERC1155PresetMinterPauser: must have pauser role to pause\""}],"id":2460,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2688:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2688:104:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2468,"nodeType":"ExpressionStatement","src":"2688:104:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2469,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"2802:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2802:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2471,"nodeType":"ExpressionStatement","src":"2802:8:13"}]},"documentation":{"id":2457,"nodeType":"StructuredDocumentation","src":"2447:194:13","text":" @dev Pauses all token transfers.\n See {ERC1155Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."},"functionSelector":"8456cb59","id":2473,"implemented":true,"kind":"function","modifiers":[],"name":"pause","nodeType":"FunctionDefinition","parameters":{"id":2458,"nodeType":"ParameterList","parameters":[],"src":"2660:2:13"},"returnParameters":{"id":2459,"nodeType":"ParameterList","parameters":[],"src":"2678:0:13"},"scope":2540,"src":"2646:171:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2489,"nodeType":"Block","src":"3060:143:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2479,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"3086:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2480,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"3099:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3099:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2478,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3078:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3078:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3114:61:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_be510562063387b7714478be5eff01a8c39efbb1b76d9be224d34aac440c9e31","typeString":"literal_string \"ERC1155PresetMinterPauser: must have pauser role to unpause\""},"value":"ERC1155PresetMinterPauser: must have pauser role to unpause"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be510562063387b7714478be5eff01a8c39efbb1b76d9be224d34aac440c9e31","typeString":"literal_string \"ERC1155PresetMinterPauser: must have pauser role to unpause\""}],"id":2477,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3070:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3070:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2485,"nodeType":"ExpressionStatement","src":"3070:106:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2486,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"3186:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3186:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2488,"nodeType":"ExpressionStatement","src":"3186:10:13"}]},"documentation":{"id":2474,"nodeType":"StructuredDocumentation","src":"2823:198:13","text":" @dev Unpauses all token transfers.\n See {ERC1155Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."},"functionSelector":"3f4ba83a","id":2490,"implemented":true,"kind":"function","modifiers":[],"name":"unpause","nodeType":"FunctionDefinition","parameters":{"id":2475,"nodeType":"ParameterList","parameters":[],"src":"3042:2:13"},"returnParameters":{"id":2476,"nodeType":"ParameterList","parameters":[],"src":"3060:0:13"},"scope":2540,"src":"3026:177:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[356,900],"body":{"id":2506,"nodeType":"Block","src":"3409:60:13","statements":[{"expression":{"arguments":[{"id":2503,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"3450:11:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2501,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3426:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155PresetMinterPauser_$2540_$","typeString":"type(contract super ERC1155PresetMinterPauser)"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":900,"src":"3426:23:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3426:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2500,"id":2505,"nodeType":"Return","src":"3419:43:13"}]},"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"3209:56:13","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2507,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":2497,"nodeType":"OverrideSpecifier","overrides":[{"id":2495,"name":"AccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":440,"src":"3360:23:13"},{"id":2496,"name":"ERC1155","nodeType":"IdentifierPath","referencedDeclaration":2047,"src":"3385:7:13"}],"src":"3351:42:13"},"parameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":2507,"src":"3306:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2492,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3306:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3296:34:13"},"returnParameters":{"id":2500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2499,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2507,"src":"3403:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2498,"name":"bool","nodeType":"ElementaryTypeName","src":"3403:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3402:6:13"},"scope":2540,"src":"3270:199:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1871,2326],"body":{"id":2538,"nodeType":"Block","src":"3722:83:13","statements":[{"expression":{"arguments":[{"id":2530,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"3759:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2531,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"3769:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"3775:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2533,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"3779:3:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2534,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"3784:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2535,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"3793:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2527,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3732:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155PresetMinterPauser_$2540_$","typeString":"type(contract super ERC1155PresetMinterPauser)"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2326,"src":"3732:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3732:66:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2537,"nodeType":"ExpressionStatement","src":"3732:66:13"}]},"id":2539,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nodeType":"FunctionDefinition","overrides":{"id":2525,"nodeType":"OverrideSpecifier","overrides":[{"id":2523,"name":"ERC1155","nodeType":"IdentifierPath","referencedDeclaration":2047,"src":"3696:7:13"},{"id":2524,"name":"ERC1155Pausable","nodeType":"IdentifierPath","referencedDeclaration":2327,"src":"3705:15:13"}],"src":"3687:34:13"},"parameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":2539,"src":"3514:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2508,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2511,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":2539,"src":"3540:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2510,"name":"address","nodeType":"ElementaryTypeName","src":"3540:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2513,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2539,"src":"3562:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2512,"name":"address","nodeType":"ElementaryTypeName","src":"3562:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2516,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":2539,"src":"3582:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2514,"name":"uint256","nodeType":"ElementaryTypeName","src":"3582:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2515,"nodeType":"ArrayTypeName","src":"3582:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2519,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":2539,"src":"3612:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2517,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2518,"nodeType":"ArrayTypeName","src":"3612:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2521,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":2539,"src":"3646:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2520,"name":"bytes","nodeType":"ElementaryTypeName","src":"3646:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3504:165:13"},"returnParameters":{"id":2526,"nodeType":"ParameterList","parameters":[],"src":"3722:0:13"},"scope":2540,"src":"3475:330:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2541,"src":"1017:2790:13"}],"src":"135:3673:13"},"id":13},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[3799],"ERC20":[3127],"IERC20":[3205],"IERC20Metadata":[3311]},"id":3128,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2542,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":2543,"nodeType":"ImportDirective","scope":3128,"sourceUnit":3206,"src":"130:22:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":2544,"nodeType":"ImportDirective","scope":3128,"sourceUnit":3312,"src":"153:41:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":2545,"nodeType":"ImportDirective","scope":3128,"sourceUnit":3800,"src":"195:33:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2547,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3799,"src":"1550:7:14"},"id":2548,"nodeType":"InheritanceSpecifier","src":"1550:7:14"},{"baseName":{"id":2549,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":3205,"src":"1559:6:14"},"id":2550,"nodeType":"InheritanceSpecifier","src":"1559:6:14"},{"baseName":{"id":2551,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":3311,"src":"1567:14:14"},"id":2552,"nodeType":"InheritanceSpecifier","src":"1567:14:14"}],"contractDependencies":[3205,3311,3799],"contractKind":"contract","documentation":{"id":2546,"nodeType":"StructuredDocumentation","src":"230:1301:14","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":3127,"linearizedBaseContracts":[3127,3311,3205,3799],"name":"ERC20","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2556,"mutability":"mutable","name":"_balances","nodeType":"VariableDeclaration","scope":3127,"src":"1588:45:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2555,"keyType":{"id":2553,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2562,"mutability":"mutable","name":"_allowances","nodeType":"VariableDeclaration","scope":3127,"src":"1640:67:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":2561,"keyType":{"id":2557,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":2560,"keyType":{"id":2558,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":2564,"mutability":"mutable","name":"_totalSupply","nodeType":"VariableDeclaration","scope":3127,"src":"1714:28:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2566,"mutability":"mutable","name":"_name","nodeType":"VariableDeclaration","scope":3127,"src":"1749:20:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2565,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2568,"mutability":"mutable","name":"_symbol","nodeType":"VariableDeclaration","scope":3127,"src":"1775:22:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2567,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2584,"nodeType":"Block","src":"2036:57:14","statements":[{"expression":{"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2576,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"2046:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2577,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"2054:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2579,"nodeType":"ExpressionStatement","src":"2046:13:14"},{"expression":{"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2580,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"2069:7:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2581,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"2079:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2583,"nodeType":"ExpressionStatement","src":"2069:17:14"}]},"documentation":{"id":2569,"nodeType":"StructuredDocumentation","src":"1804:171:14","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":2585,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"name_","nodeType":"VariableDeclaration","scope":2585,"src":"1992:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2570,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2573,"mutability":"mutable","name":"symbol_","nodeType":"VariableDeclaration","scope":2585,"src":"2013:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2572,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:14"},"returnParameters":{"id":2575,"nodeType":"ParameterList","parameters":[],"src":"2036:0:14"},"scope":3127,"src":"1980:113:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3298],"body":{"id":2594,"nodeType":"Block","src":"2227:29:14","statements":[{"expression":{"id":2592,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"2244:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2591,"id":2593,"nodeType":"Return","src":"2237:12:14"}]},"documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"2099:54:14","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2595,"implemented":true,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","overrides":{"id":2588,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:14"},"parameters":{"id":2587,"nodeType":"ParameterList","parameters":[],"src":"2171:2:14"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2595,"src":"2212:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2589,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:14"},"scope":3127,"src":"2158:98:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3304],"body":{"id":2604,"nodeType":"Block","src":"2440:31:14","statements":[{"expression":{"id":2602,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"2457:7:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2601,"id":2603,"nodeType":"Return","src":"2450:14:14"}]},"documentation":{"id":2596,"nodeType":"StructuredDocumentation","src":"2262:102:14","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":2605,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","overrides":{"id":2598,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:14"},"parameters":{"id":2597,"nodeType":"ParameterList","parameters":[],"src":"2384:2:14"},"returnParameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2605,"src":"2425:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2599,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:14"},"scope":3127,"src":"2369:102:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3310],"body":{"id":2614,"nodeType":"Block","src":"3169:26:14","statements":[{"expression":{"hexValue":"3138","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":2611,"id":2613,"nodeType":"Return","src":"3179:9:14"}]},"documentation":{"id":2606,"nodeType":"StructuredDocumentation","src":"2477:622:14","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":2615,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","overrides":{"id":2608,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:14"},"parameters":{"id":2607,"nodeType":"ParameterList","parameters":[],"src":"3121:2:14"},"returnParameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2615,"src":"3162:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2609,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:14"},"scope":3127,"src":"3104:91:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3154],"body":{"id":2624,"nodeType":"Block","src":"3325:36:14","statements":[{"expression":{"id":2622,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"3342:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2621,"id":2623,"nodeType":"Return","src":"3335:19:14"}]},"documentation":{"id":2616,"nodeType":"StructuredDocumentation","src":"3201:49:14","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":2625,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","overrides":{"id":2618,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:14"},"parameters":{"id":2617,"nodeType":"ParameterList","parameters":[],"src":"3275:2:14"},"returnParameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2625,"src":"3316:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:14"},"scope":3127,"src":"3255:106:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3162],"body":{"id":2638,"nodeType":"Block","src":"3502:42:14","statements":[{"expression":{"baseExpression":{"id":2634,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"3519:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2636,"indexExpression":{"id":2635,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"3529:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2633,"id":2637,"nodeType":"Return","src":"3512:25:14"}]},"documentation":{"id":2626,"nodeType":"StructuredDocumentation","src":"3367:47:14","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":2639,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","overrides":{"id":2630,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:14"},"parameters":{"id":2629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":2639,"src":"3438:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2627,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:14"},"returnParameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2639,"src":"3493:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:14"},"scope":3127,"src":"3419:125:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3172],"body":{"id":2663,"nodeType":"Block","src":"3825:104:14","statements":[{"assignments":[2651],"declarations":[{"constant":false,"id":2651,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":2663,"src":"3835:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2650,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2654,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2652,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"3851:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3851:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:14"},{"expression":{"arguments":[{"id":2656,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"3883:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2657,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"3890:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2658,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"3894:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2655,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"3873:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3873:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2660,"nodeType":"ExpressionStatement","src":"3873:28:14"},{"expression":{"hexValue":"74727565","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2649,"id":2662,"nodeType":"Return","src":"3911:11:14"}]},"documentation":{"id":2640,"nodeType":"StructuredDocumentation","src":"3550:185:14","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":2664,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","overrides":{"id":2646,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:14"},"parameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2664,"src":"3758:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2644,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2664,"src":"3770:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:14"},"returnParameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2664,"src":"3819:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2647,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:14"},"scope":3127,"src":"3740:189:14","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3182],"body":{"id":2681,"nodeType":"Block","src":"4085:51:14","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2675,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"4102:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2677,"indexExpression":{"id":2676,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"4114:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2679,"indexExpression":{"id":2678,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"4121:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2674,"id":2680,"nodeType":"Return","src":"4095:34:14"}]},"documentation":{"id":2665,"nodeType":"StructuredDocumentation","src":"3935:47:14","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":2682,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","overrides":{"id":2671,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:14"},"parameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":2682,"src":"4006:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2666,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2669,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2682,"src":"4021:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2668,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:14"},"returnParameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2682,"src":"4076:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2672,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:14"},"scope":3127,"src":"3987:149:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3192],"body":{"id":2706,"nodeType":"Block","src":"4533:108:14","statements":[{"assignments":[2694],"declarations":[{"constant":false,"id":2694,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":2706,"src":"4543:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2693,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2697,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2695,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"4559:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4559:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:14"},{"expression":{"arguments":[{"id":2699,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"4590:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2700,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"4597:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2701,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"4606:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2698,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"4581:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4581:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2703,"nodeType":"ExpressionStatement","src":"4581:32:14"},{"expression":{"hexValue":"74727565","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2692,"id":2705,"nodeType":"Return","src":"4623:11:14"}]},"documentation":{"id":2683,"nodeType":"StructuredDocumentation","src":"4142:297:14","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":2707,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","overrides":{"id":2689,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:14"},"parameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2707,"src":"4461:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2684,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2687,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2707,"src":"4478:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2686,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:14"},"returnParameters":{"id":2692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2691,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2707,"src":"4527:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2690,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:14"},"scope":3127,"src":"4444:197:14","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3204],"body":{"id":2739,"nodeType":"Block","src":"5306:153:14","statements":[{"assignments":[2721],"declarations":[{"constant":false,"id":2721,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2739,"src":"5316:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2720,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2724,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2722,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"5334:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5334:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:14"},{"expression":{"arguments":[{"id":2726,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"5372:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2727,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"5378:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2728,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"5387:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2725,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"5356:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5356:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2730,"nodeType":"ExpressionStatement","src":"5356:38:14"},{"expression":{"arguments":[{"id":2732,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"5414:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2733,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"5420:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2734,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"5424:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2731,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"5404:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5404:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2736,"nodeType":"ExpressionStatement","src":"5404:27:14"},{"expression":{"hexValue":"74727565","id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2719,"id":2738,"nodeType":"Return","src":"5441:11:14"}]},"documentation":{"id":2708,"nodeType":"StructuredDocumentation","src":"4647:551:14","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":2740,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","overrides":{"id":2716,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:14"},"parameters":{"id":2715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":2740,"src":"5225:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2709,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2712,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2740,"src":"5239:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2711,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2714,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2740,"src":"5251:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2713,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:14"},"returnParameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2740,"src":"5300:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2717,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:14"},"scope":3127,"src":"5203:256:14","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2768,"nodeType":"Block","src":"5948:140:14","statements":[{"assignments":[2751],"declarations":[{"constant":false,"id":2751,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":2768,"src":"5958:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2750,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2754,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2752,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"5974:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5974:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:14"},{"expression":{"arguments":[{"id":2756,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"6005:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2757,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"6012:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2759,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"6031:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2760,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"6038:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2758,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"6021:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6021:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2762,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"6049:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2755,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"5996:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5996:64:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2765,"nodeType":"ExpressionStatement","src":"5996:64:14"},{"expression":{"hexValue":"74727565","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2749,"id":2767,"nodeType":"Return","src":"6070:11:14"}]},"documentation":{"id":2741,"nodeType":"StructuredDocumentation","src":"5465:384:14","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":2769,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nodeType":"FunctionDefinition","parameters":{"id":2746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2769,"src":"5881:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2742,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2745,"mutability":"mutable","name":"addedValue","nodeType":"VariableDeclaration","scope":2769,"src":"5898:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2744,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:14"},"returnParameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2769,"src":"5942:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2747,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:14"},"scope":3127,"src":"5854:234:14","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2809,"nodeType":"Block","src":"6674:328:14","statements":[{"assignments":[2780],"declarations":[{"constant":false,"id":2780,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":2809,"src":"6684:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2779,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2783,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2781,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"6700:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6700:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:14"},{"assignments":[2785],"declarations":[{"constant":false,"id":2785,"mutability":"mutable","name":"currentAllowance","nodeType":"VariableDeclaration","scope":2809,"src":"6722:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2784,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2790,"initialValue":{"arguments":[{"id":2787,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"6759:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2788,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"6766:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2786,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"6749:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6749:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2792,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"6792:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2793,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"6812:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":2791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6784:85:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2797,"nodeType":"ExpressionStatement","src":"6784:85:14"},{"id":2806,"nodeType":"UncheckedBlock","src":"6879:95:14","statements":[{"expression":{"arguments":[{"id":2799,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"6912:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2800,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"6919:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2801,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"6928:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2802,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"6947:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2798,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"6903:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6903:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2805,"nodeType":"ExpressionStatement","src":"6903:60:14"}]},{"expression":{"hexValue":"74727565","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2778,"id":2808,"nodeType":"Return","src":"6984:11:14"}]},"documentation":{"id":2770,"nodeType":"StructuredDocumentation","src":"6094:476:14","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":2810,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nodeType":"FunctionDefinition","parameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2810,"src":"6602:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2771,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2774,"mutability":"mutable","name":"subtractedValue","nodeType":"VariableDeclaration","scope":2810,"src":"6619:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2773,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:14"},"returnParameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2810,"src":"6668:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2776,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:14"},"scope":3127,"src":"6575:427:14","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2886,"nodeType":"Block","src":"7534:710:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2821,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"7552:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2822,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:14","typeDescriptions":{}}},"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7560:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":2820,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7544:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2829,"nodeType":"ExpressionStatement","src":"7544:68:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2831,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"7630:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2832,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:14","typeDescriptions":{}}},"id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7636:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":2830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7622:64:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2839,"nodeType":"ExpressionStatement","src":"7622:64:14"},{"expression":{"arguments":[{"id":2841,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"7718:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2842,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"7724:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2843,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"7728:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2840,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"7697:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7697:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2845,"nodeType":"ExpressionStatement","src":"7697:38:14"},{"assignments":[2847],"declarations":[{"constant":false,"id":2847,"mutability":"mutable","name":"fromBalance","nodeType":"VariableDeclaration","scope":2886,"src":"7746:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2851,"initialValue":{"baseExpression":{"id":2848,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"7768:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2850,"indexExpression":{"id":2849,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"7778:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2853,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"7801:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2854,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"7816:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":2852,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7793:72:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2858,"nodeType":"ExpressionStatement","src":"7793:72:14"},{"id":2873,"nodeType":"UncheckedBlock","src":"7875:273:14","statements":[{"expression":{"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2859,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"7899:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2861,"indexExpression":{"id":2860,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"7909:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2862,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"7917:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2863,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"7931:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2866,"nodeType":"ExpressionStatement","src":"7899:38:14"},{"expression":{"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2867,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"8114:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2869,"indexExpression":{"id":2868,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"8124:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2870,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"8131:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2872,"nodeType":"ExpressionStatement","src":"8114:23:14"}]},{"eventCall":{"arguments":[{"id":2875,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"8172:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2876,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"8178:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2877,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"8182:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2874,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"8163:8:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8163:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2879,"nodeType":"EmitStatement","src":"8158:31:14"},{"expression":{"arguments":[{"id":2881,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"8220:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2882,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"8226:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2883,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"8230:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2880,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"8200:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8200:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2885,"nodeType":"ExpressionStatement","src":"8200:37:14"}]},"documentation":{"id":2811,"nodeType":"StructuredDocumentation","src":"7008:443:14","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":2887,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":2887,"src":"7475:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2812,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2815,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2887,"src":"7489:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2814,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2817,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2887,"src":"7501:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2816,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:14"},"returnParameters":{"id":2819,"nodeType":"ParameterList","parameters":[],"src":"7534:0:14"},"scope":3127,"src":"7456:788:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2943,"nodeType":"Block","src":"8585:470:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2896,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"8603:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2897,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:14","typeDescriptions":{}}},"id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8614:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":2895,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8595:65:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2904,"nodeType":"ExpressionStatement","src":"8595:65:14"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2906,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:14","typeDescriptions":{}}},"id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8692:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2910,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"8704:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2911,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"8713:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2905,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"8671:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8671:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2913,"nodeType":"ExpressionStatement","src":"8671:49:14"},{"expression":{"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2914,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"8731:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2915,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"8747:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2917,"nodeType":"ExpressionStatement","src":"8731:22:14"},{"id":2924,"nodeType":"UncheckedBlock","src":"8763:175:14","statements":[{"expression":{"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2918,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"8899:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2920,"indexExpression":{"id":2919,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"8909:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2921,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"8921:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2923,"nodeType":"ExpressionStatement","src":"8899:28:14"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2926,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:14","typeDescriptions":{}}},"id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8961:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2930,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"8973:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2931,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"8982:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2925,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"8952:8:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8952:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2933,"nodeType":"EmitStatement","src":"8947:42:14"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2935,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:14","typeDescriptions":{}}},"id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9020:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2939,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"9032:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2940,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"9041:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2934,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"9000:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9000:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2942,"nodeType":"ExpressionStatement","src":"9000:48:14"}]},"documentation":{"id":2888,"nodeType":"StructuredDocumentation","src":"8250:265:14","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":2944,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nodeType":"FunctionDefinition","parameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":2944,"src":"8535:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2889,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2892,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2944,"src":"8552:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:14"},"returnParameters":{"id":2894,"nodeType":"ParameterList","parameters":[],"src":"8585:0:14"},"scope":3127,"src":"8520:535:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3015,"nodeType":"Block","src":"9440:594:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2953,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"9458:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2954,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:14","typeDescriptions":{}}},"id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9469:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":2952,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9450:67:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2961,"nodeType":"ExpressionStatement","src":"9450:67:14"},{"expression":{"arguments":[{"id":2963,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"9549:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2964,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:14","typeDescriptions":{}}},"id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9558:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2968,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"9570:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2962,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"9528:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9528:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2970,"nodeType":"ExpressionStatement","src":"9528:49:14"},{"assignments":[2972],"declarations":[{"constant":false,"id":2972,"mutability":"mutable","name":"accountBalance","nodeType":"VariableDeclaration","scope":3015,"src":"9588:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2971,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2976,"initialValue":{"baseExpression":{"id":2973,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"9613:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2975,"indexExpression":{"id":2974,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"9623:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2978,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"9649:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2979,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"9667:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":2977,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9641:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2983,"nodeType":"ExpressionStatement","src":"9641:71:14"},{"id":2996,"nodeType":"UncheckedBlock","src":"9722:194:14","statements":[{"expression":{"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2984,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"9746:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2986,"indexExpression":{"id":2985,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"9756:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2987,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"9767:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2988,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"9784:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2991,"nodeType":"ExpressionStatement","src":"9746:44:14"},{"expression":{"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2992,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"9883:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2993,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"9899:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2995,"nodeType":"ExpressionStatement","src":"9883:22:14"}]},{"eventCall":{"arguments":[{"id":2998,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"9940:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2999,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:14","typeDescriptions":{}}},"id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9949:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3003,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"9961:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2997,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"9931:8:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9931:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3005,"nodeType":"EmitStatement","src":"9926:42:14"},{"expression":{"arguments":[{"id":3007,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"9999:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3008,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:14","typeDescriptions":{}}},"id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10008:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3012,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"10020:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3006,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"9979:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9979:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3014,"nodeType":"ExpressionStatement","src":"9979:48:14"}]},"documentation":{"id":2945,"nodeType":"StructuredDocumentation","src":"9061:309:14","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":3016,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nodeType":"FunctionDefinition","parameters":{"id":2950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":3016,"src":"9390:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2946,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2949,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3016,"src":"9407:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2948,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:14"},"returnParameters":{"id":2951,"nodeType":"ParameterList","parameters":[],"src":"9440:0:14"},"scope":3127,"src":"9375:659:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3060,"nodeType":"Block","src":"10540:257:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3027,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"10558:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3028,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:14","typeDescriptions":{}}},"id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10567:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":3026,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10550:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3035,"nodeType":"ExpressionStatement","src":"10550:68:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3037,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"10636:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3038,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:14","typeDescriptions":{}}},"id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10647:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":3036,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10628:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3045,"nodeType":"ExpressionStatement","src":"10628:68:14"},{"expression":{"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3046,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"10707:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3049,"indexExpression":{"id":3047,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"10719:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3050,"indexExpression":{"id":3048,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"10726:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3051,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"10737:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3053,"nodeType":"ExpressionStatement","src":"10707:36:14"},{"eventCall":{"arguments":[{"id":3055,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"10767:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3056,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"10774:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3057,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"10783:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3054,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"10758:8:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10758:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3059,"nodeType":"EmitStatement","src":"10753:37:14"}]},"documentation":{"id":3017,"nodeType":"StructuredDocumentation","src":"10040:412:14","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":3061,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nodeType":"FunctionDefinition","parameters":{"id":3024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3019,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":3061,"src":"10475:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3018,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3021,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":3061,"src":"10490:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3020,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3023,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3061,"src":"10507:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:14"},"returnParameters":{"id":3025,"nodeType":"ParameterList","parameters":[],"src":"10540:0:14"},"scope":3127,"src":"10457:340:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3103,"nodeType":"Block","src":"11168:321:14","statements":[{"assignments":[3072],"declarations":[{"constant":false,"id":3072,"mutability":"mutable","name":"currentAllowance","nodeType":"VariableDeclaration","scope":3103,"src":"11178:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3071,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3077,"initialValue":{"arguments":[{"id":3074,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"11215:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3075,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"11222:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3073,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"11205:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11205:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3078,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"11244:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":3081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3080,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3079,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11264:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11264:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3102,"nodeType":"IfStatement","src":"11240:243:14","trueBody":{"id":3101,"nodeType":"Block","src":"11283:200:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3086,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"11305:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3087,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"11325:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":3085,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11297:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3091,"nodeType":"ExpressionStatement","src":"11297:68:14"},{"id":3100,"nodeType":"UncheckedBlock","src":"11379:94:14","statements":[{"expression":{"arguments":[{"id":3093,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"11416:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3094,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"11423:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3095,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"11432:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3096,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"11451:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3092,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"11407:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11407:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3099,"nodeType":"ExpressionStatement","src":"11407:51:14"}]}]}}]},"documentation":{"id":3062,"nodeType":"StructuredDocumentation","src":"10803:270:14","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":3104,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nodeType":"FunctionDefinition","parameters":{"id":3069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3064,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":3104,"src":"11103:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3063,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3066,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":3104,"src":"11118:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3065,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3068,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3104,"src":"11135:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3067,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:14"},"returnParameters":{"id":3070,"nodeType":"ParameterList","parameters":[],"src":"11168:0:14"},"scope":3127,"src":"11078:411:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3114,"nodeType":"Block","src":"12162:2:14","statements":[]},"documentation":{"id":3105,"nodeType":"StructuredDocumentation","src":"11495:573:14","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":3115,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nodeType":"FunctionDefinition","parameters":{"id":3112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":3115,"src":"12103:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3106,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3109,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":3115,"src":"12117:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3108,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3111,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3115,"src":"12129:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:14"},"returnParameters":{"id":3113,"nodeType":"ParameterList","parameters":[],"src":"12162:0:14"},"scope":3127,"src":"12073:91:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3125,"nodeType":"Block","src":"12840:2:14","statements":[]},"documentation":{"id":3116,"nodeType":"StructuredDocumentation","src":"12170:577:14","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":3126,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nodeType":"FunctionDefinition","parameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":3126,"src":"12781:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3117,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3120,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":3126,"src":"12795:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3119,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3122,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3126,"src":"12807:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3121,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:14"},"returnParameters":{"id":3124,"nodeType":"ParameterList","parameters":[],"src":"12840:0:14"},"scope":3127,"src":"12752:90:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3128,"src":"1532:11312:14"}],"src":"105:12740:14"},"id":14},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[3205]},"id":3206,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3129,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3130,"nodeType":"StructuredDocumentation","src":"131:70:15","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":3205,"linearizedBaseContracts":[3205],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3131,"nodeType":"StructuredDocumentation","src":"225:158:15","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":3139,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":3138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3133,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":3139,"src":"403:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3135,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":3139,"src":"425:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3134,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3137,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3139,"src":"445:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3136,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:15"},"src":"388:72:15"},{"anonymous":false,"documentation":{"id":3140,"nodeType":"StructuredDocumentation","src":"466:148:15","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":3148,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":3147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":3148,"src":"634:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3141,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3144,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":3148,"src":"657:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3143,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3146,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3148,"src":"682:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3145,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:15"},"src":"619:78:15"},{"documentation":{"id":3149,"nodeType":"StructuredDocumentation","src":"703:66:15","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":3154,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":3150,"nodeType":"ParameterList","parameters":[],"src":"794:2:15"},"returnParameters":{"id":3153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3152,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3154,"src":"820:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3151,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:15"},"scope":3205,"src":"774:55:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3155,"nodeType":"StructuredDocumentation","src":"835:72:15","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":3162,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":3162,"src":"931:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3156,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:15"},"returnParameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3162,"src":"971:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3159,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:15"},"scope":3205,"src":"912:68:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3163,"nodeType":"StructuredDocumentation","src":"986:202:15","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":3172,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":3172,"src":"1211:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3164,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3172,"src":"1223:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:15"},"returnParameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3172,"src":"1257:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3169,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:15"},"scope":3205,"src":"1193:70:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3173,"nodeType":"StructuredDocumentation","src":"1269:264:15","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":3182,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3175,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":3182,"src":"1557:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3174,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":3182,"src":"1572:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3176,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:15"},"returnParameters":{"id":3181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3182,"src":"1612:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:15"},"scope":3205,"src":"1538:83:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"1627:642:15","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3192,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":3188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":3192,"src":"2291:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3184,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3187,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3192,"src":"2308:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:15"},"returnParameters":{"id":3191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3190,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3192,"src":"2342:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3189,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:15"},"scope":3205,"src":"2274:74:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3193,"nodeType":"StructuredDocumentation","src":"2354:287:15","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3204,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":3200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":3204,"src":"2668:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3194,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3197,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":3204,"src":"2682:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3196,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3199,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3204,"src":"2694:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3198,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:15"},"returnParameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3204,"src":"2728:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3201,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:15"},"scope":3205,"src":"2646:88:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3206,"src":"202:2534:15"}],"src":"106:2631:15"},"id":15},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[3799],"ERC20":[3127],"ERC20Burnable":[3249],"IERC20":[3205],"IERC20Metadata":[3311]},"id":3250,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3207,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":3208,"nodeType":"ImportDirective","scope":3250,"sourceUnit":3128,"src":"149:22:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":3209,"nodeType":"ImportDirective","scope":3250,"sourceUnit":3800,"src":"172:36:16","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3211,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3799,"src":"454:7:16"},"id":3212,"nodeType":"InheritanceSpecifier","src":"454:7:16"},{"baseName":{"id":3213,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":3127,"src":"463:5:16"},"id":3214,"nodeType":"InheritanceSpecifier","src":"463:5:16"}],"contractDependencies":[3127,3205,3311,3799],"contractKind":"contract","documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"210:208:16","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":false,"id":3249,"linearizedBaseContracts":[3249,3127,3311,3205,3799],"name":"ERC20Burnable","nodeType":"ContractDefinition","nodes":[{"body":{"id":3226,"nodeType":"Block","src":"623:44:16","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3221,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"639:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"639:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3223,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"653:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3220,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"633:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"633:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3225,"nodeType":"ExpressionStatement","src":"633:27:16"}]},"documentation":{"id":3215,"nodeType":"StructuredDocumentation","src":"475:98:16","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":3227,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nodeType":"FunctionDefinition","parameters":{"id":3218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3217,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3227,"src":"592:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3216,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"591:16:16"},"returnParameters":{"id":3219,"nodeType":"ParameterList","parameters":[],"src":"623:0:16"},"scope":3249,"src":"578:89:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3247,"nodeType":"Block","src":"1039:95:16","statements":[{"expression":{"arguments":[{"id":3236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"1065:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3237,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"1074:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1074:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3239,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"1088:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3235,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"1049:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1049:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3241,"nodeType":"ExpressionStatement","src":"1049:46:16"},{"expression":{"arguments":[{"id":3243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"1111:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3244,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"1120:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3242,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"1105:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1105:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3246,"nodeType":"ExpressionStatement","src":"1105:22:16"}]},"documentation":{"id":3228,"nodeType":"StructuredDocumentation","src":"673:295:16","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":3248,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nodeType":"FunctionDefinition","parameters":{"id":3233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":3248,"src":"991:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3229,"name":"address","nodeType":"ElementaryTypeName","src":"991:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3232,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3248,"src":"1008:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3231,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"990:33:16"},"returnParameters":{"id":3234,"nodeType":"ParameterList","parameters":[],"src":"1039:0:16"},"scope":3249,"src":"973:161:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":3250,"src":"419:717:16"}],"src":"124:1013:16"},"id":16},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","exportedSymbols":{"Context":[3799],"ERC20":[3127],"ERC20Pausable":[3286],"IERC20":[3205],"IERC20Metadata":[3311],"Pausable":[759]},"id":3287,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3251,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":3252,"nodeType":"ImportDirective","scope":3287,"sourceUnit":3128,"src":"149:22:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"../../../security/Pausable.sol","id":3253,"nodeType":"ImportDirective","scope":3287,"sourceUnit":760,"src":"172:40:17","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3255,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":3127,"src":"885:5:17"},"id":3256,"nodeType":"InheritanceSpecifier","src":"885:5:17"},{"baseName":{"id":3257,"name":"Pausable","nodeType":"IdentifierPath","referencedDeclaration":759,"src":"892:8:17"},"id":3258,"nodeType":"InheritanceSpecifier","src":"892:8:17"}],"contractDependencies":[759,3127,3205,3311,3799],"contractKind":"contract","documentation":{"id":3254,"nodeType":"StructuredDocumentation","src":"214:635:17","text":" @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract unpausable."},"fullyImplemented":false,"id":3286,"linearizedBaseContracts":[3286,759,3127,3311,3205,3799],"name":"ERC20Pausable","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3115],"body":{"id":3284,"nodeType":"Block","src":"1144:136:17","statements":[{"expression":{"arguments":[{"id":3272,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"1181:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3273,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"1187:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3274,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"1191:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3269,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1154:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Pausable_$3286_$","typeString":"type(contract super ERC20Pausable)"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":3115,"src":"1154:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1154:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3276,"nodeType":"ExpressionStatement","src":"1154:44:17"},{"expression":{"arguments":[{"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1217:9:17","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3278,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"1218:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1218:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1228:44:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4","typeString":"literal_string \"ERC20Pausable: token transfer while paused\""},"value":"ERC20Pausable: token transfer while paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4","typeString":"literal_string \"ERC20Pausable: token transfer while paused\""}],"id":3277,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1209:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1209:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3283,"nodeType":"ExpressionStatement","src":"1209:64:17"}]},"documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"907:134:17","text":" @dev See {ERC20-_beforeTokenTransfer}.\n Requirements:\n - the contract must not be paused."},"id":3285,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nodeType":"FunctionDefinition","overrides":{"id":3267,"nodeType":"OverrideSpecifier","overrides":[],"src":"1135:8:17"},"parameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":3285,"src":"1076:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3260,"name":"address","nodeType":"ElementaryTypeName","src":"1076:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3263,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":3285,"src":"1090:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3262,"name":"address","nodeType":"ElementaryTypeName","src":"1090:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3265,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3285,"src":"1102:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1075:42:17"},"returnParameters":{"id":3268,"nodeType":"ParameterList","parameters":[],"src":"1144:0:17"},"scope":3286,"src":"1046:234:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3287,"src":"850:432:17"}],"src":"124:1159:17"},"id":17},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[3205],"IERC20Metadata":[3311]},"id":3312,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3288,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":3289,"nodeType":"ImportDirective","scope":3312,"sourceUnit":3206,"src":"135:23:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3291,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":3205,"src":"305:6:18"},"id":3292,"nodeType":"InheritanceSpecifier","src":"305:6:18"}],"contractDependencies":[3205],"contractKind":"interface","documentation":{"id":3290,"nodeType":"StructuredDocumentation","src":"160:116:18","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":3311,"linearizedBaseContracts":[3311,3205],"name":"IERC20Metadata","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3293,"nodeType":"StructuredDocumentation","src":"318:54:18","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":3298,"implemented":false,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[],"src":"390:2:18"},"returnParameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3298,"src":"416:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3295,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:18"},"scope":3311,"src":"377:54:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3299,"nodeType":"StructuredDocumentation","src":"437:56:18","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":3304,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","parameters":{"id":3300,"nodeType":"ParameterList","parameters":[],"src":"513:2:18"},"returnParameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3304,"src":"539:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3301,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:18"},"scope":3311,"src":"498:56:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3305,"nodeType":"StructuredDocumentation","src":"560:65:18","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":3310,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","parameters":{"id":3306,"nodeType":"ParameterList","parameters":[],"src":"647:2:18"},"returnParameters":{"id":3309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3308,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3310,"src":"673:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3307,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:18"},"scope":3311,"src":"630:50:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3312,"src":"277:405:18"}],"src":"110:573:18"},"id":18},"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol","exportedSymbols":{"AccessControl":[315],"AccessControlEnumerable":[440],"Context":[3799],"ERC165":[4052],"ERC20":[3127],"ERC20Burnable":[3249],"ERC20Pausable":[3286],"ERC20PresetMinterPauser":[3447],"EnumerableSet":[5960],"IAccessControl":[513],"IAccessControlEnumerable":[538],"IERC165":[4064],"IERC20":[3205],"IERC20Metadata":[3311],"Math":[4930],"Pausable":[759],"SignedMath":[5347],"Strings":[4028]},"id":3448,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3313,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"131:23:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":3314,"nodeType":"ImportDirective","scope":3448,"sourceUnit":3128,"src":"156:22:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"../extensions/ERC20Burnable.sol","id":3315,"nodeType":"ImportDirective","scope":3448,"sourceUnit":3250,"src":"179:41:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","file":"../extensions/ERC20Pausable.sol","id":3316,"nodeType":"ImportDirective","scope":3448,"sourceUnit":3287,"src":"221:41:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","file":"../../../access/AccessControlEnumerable.sol","id":3317,"nodeType":"ImportDirective","scope":3448,"sourceUnit":441,"src":"263:53:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":3318,"nodeType":"ImportDirective","scope":3448,"sourceUnit":3800,"src":"317:36:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3320,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3799,"src":"1041:7:19"},"id":3321,"nodeType":"InheritanceSpecifier","src":"1041:7:19"},{"baseName":{"id":3322,"name":"AccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":440,"src":"1050:23:19"},"id":3323,"nodeType":"InheritanceSpecifier","src":"1050:23:19"},{"baseName":{"id":3324,"name":"ERC20Burnable","nodeType":"IdentifierPath","referencedDeclaration":3249,"src":"1075:13:19"},"id":3325,"nodeType":"InheritanceSpecifier","src":"1075:13:19"},{"baseName":{"id":3326,"name":"ERC20Pausable","nodeType":"IdentifierPath","referencedDeclaration":3286,"src":"1090:13:19"},"id":3327,"nodeType":"InheritanceSpecifier","src":"1090:13:19"}],"contractDependencies":[315,440,513,538,759,3127,3205,3249,3286,3311,3799,4052,4064],"contractKind":"contract","documentation":{"id":3319,"nodeType":"StructuredDocumentation","src":"355:649:19","text":" @dev {ERC20} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts.\n _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._"},"fullyImplemented":true,"id":3447,"linearizedBaseContracts":[3447,3286,759,3249,3127,3311,3205,440,315,4052,4064,538,513,3799],"name":"ERC20PresetMinterPauser","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":3332,"mutability":"constant","name":"MINTER_ROLE","nodeType":"VariableDeclaration","scope":3447,"src":"1110:62:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1110:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":3330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1158:13:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":3329,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1148:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1148:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"e63ab1e9","id":3337,"mutability":"constant","name":"PAUSER_ROLE","nodeType":"VariableDeclaration","scope":3447,"src":"1178:62:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1178:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1226:13:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":3334,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1216:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1216:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":3367,"nodeType":"Block","src":"1498:156:19","statements":[{"expression":{"arguments":[{"id":3350,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1519:18:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3351,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"1539:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1539:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3349,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1508:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1508:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3354,"nodeType":"ExpressionStatement","src":"1508:44:19"},{"expression":{"arguments":[{"id":3356,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"1574:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3357,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"1587:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1587:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3355,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1563:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1563:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3360,"nodeType":"ExpressionStatement","src":"1563:37:19"},{"expression":{"arguments":[{"id":3362,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"1621:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3363,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"1634:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1634:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3361,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1610:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1610:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3366,"nodeType":"ExpressionStatement","src":"1610:37:19"}]},"documentation":{"id":3338,"nodeType":"StructuredDocumentation","src":"1247:172:19","text":" @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n See {ERC20-constructor}."},"id":3368,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3345,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"1484:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3346,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"1490:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":3347,"modifierName":{"id":3344,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":3127,"src":"1478:5:19"},"nodeType":"ModifierInvocation","src":"1478:19:19"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":3343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":3368,"src":"1436:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3339,"name":"string","nodeType":"ElementaryTypeName","src":"1436:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3342,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":3368,"src":"1456:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3341,"name":"string","nodeType":"ElementaryTypeName","src":"1456:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1435:42:19"},"returnParameters":{"id":3348,"nodeType":"ParameterList","parameters":[],"src":"1498:0:19"},"scope":3447,"src":"1424:230:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3390,"nodeType":"Block","src":"1900:145:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3378,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"1926:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3379,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"1939:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1939:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3377,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"1918:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1918:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74","id":3382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1954:56:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342","typeString":"literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""},"value":"ERC20PresetMinterPauser: must have minter role to mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342","typeString":"literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""}],"id":3376,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1910:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1910:101:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3384,"nodeType":"ExpressionStatement","src":"1910:101:19"},{"expression":{"arguments":[{"id":3386,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"2027:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3387,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"2031:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3385,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2021:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2021:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3389,"nodeType":"ExpressionStatement","src":"2021:17:19"}]},"documentation":{"id":3369,"nodeType":"StructuredDocumentation","src":"1660:178:19","text":" @dev Creates `amount` new tokens for `to`.\n See {ERC20-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."},"functionSelector":"40c10f19","id":3391,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nodeType":"FunctionDefinition","parameters":{"id":3374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3371,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":3391,"src":"1857:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3370,"name":"address","nodeType":"ElementaryTypeName","src":"1857:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3373,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3391,"src":"1869:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3372,"name":"uint256","nodeType":"ElementaryTypeName","src":"1869:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1856:28:19"},"returnParameters":{"id":3375,"nodeType":"ParameterList","parameters":[],"src":"1900:0:19"},"scope":3447,"src":"1843:202:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3407,"nodeType":"Block","src":"2280:137:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3397,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"2306:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3398,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"2319:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2319:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3396,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"2298:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2298:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365","id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2334:57:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330","typeString":"literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""},"value":"ERC20PresetMinterPauser: must have pauser role to pause"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330","typeString":"literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""}],"id":3395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2290:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2290:102:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3403,"nodeType":"ExpressionStatement","src":"2290:102:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3404,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"2402:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2402:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3406,"nodeType":"ExpressionStatement","src":"2402:8:19"}]},"documentation":{"id":3392,"nodeType":"StructuredDocumentation","src":"2051:192:19","text":" @dev Pauses all token transfers.\n See {ERC20Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."},"functionSelector":"8456cb59","id":3408,"implemented":true,"kind":"function","modifiers":[],"name":"pause","nodeType":"FunctionDefinition","parameters":{"id":3393,"nodeType":"ParameterList","parameters":[],"src":"2262:2:19"},"returnParameters":{"id":3394,"nodeType":"ParameterList","parameters":[],"src":"2280:0:19"},"scope":3447,"src":"2248:169:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3424,"nodeType":"Block","src":"2658:141:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3414,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"2684:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3415,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"2697:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2697:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3413,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"2676:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2676:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2712:59:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186","typeString":"literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""},"value":"ERC20PresetMinterPauser: must have pauser role to unpause"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186","typeString":"literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""}],"id":3412,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2668:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2668:104:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3420,"nodeType":"ExpressionStatement","src":"2668:104:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3421,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"2782:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2782:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3423,"nodeType":"ExpressionStatement","src":"2782:10:19"}]},"documentation":{"id":3409,"nodeType":"StructuredDocumentation","src":"2423:196:19","text":" @dev Unpauses all token transfers.\n See {ERC20Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."},"functionSelector":"3f4ba83a","id":3425,"implemented":true,"kind":"function","modifiers":[],"name":"unpause","nodeType":"FunctionDefinition","parameters":{"id":3410,"nodeType":"ParameterList","parameters":[],"src":"2640:2:19"},"returnParameters":{"id":3411,"nodeType":"ParameterList","parameters":[],"src":"2658:0:19"},"scope":3447,"src":"2624:175:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3115,3285],"body":{"id":3445,"nodeType":"Block","src":"2955:61:19","statements":[{"expression":{"arguments":[{"id":3440,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"2992:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3441,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"2998:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3442,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"3002:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3437,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2965:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20PresetMinterPauser_$3447_$","typeString":"type(contract super ERC20PresetMinterPauser)"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":3285,"src":"2965:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2965:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3444,"nodeType":"ExpressionStatement","src":"2965:44:19"}]},"id":3446,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nodeType":"FunctionDefinition","overrides":{"id":3435,"nodeType":"OverrideSpecifier","overrides":[{"id":3433,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":3127,"src":"2933:5:19"},{"id":3434,"name":"ERC20Pausable","nodeType":"IdentifierPath","referencedDeclaration":3286,"src":"2940:13:19"}],"src":"2924:30:19"},"parameters":{"id":3432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3427,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":3446,"src":"2844:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3426,"name":"address","nodeType":"ElementaryTypeName","src":"2844:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3429,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":3446,"src":"2866:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3428,"name":"address","nodeType":"ElementaryTypeName","src":"2866:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3431,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3446,"src":"2886:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3430,"name":"uint256","nodeType":"ElementaryTypeName","src":"2886:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2834:72:19"},"returnParameters":{"id":3436,"nodeType":"ParameterList","parameters":[],"src":"2955:0:19"},"scope":3447,"src":"2805:211:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3448,"src":"1005:2013:19"}],"src":"131:2888:19"},"id":19},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3777]},"id":3778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3449,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:20"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3450,"nodeType":"StructuredDocumentation","src":"126:67:20","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3777,"linearizedBaseContracts":[3777],"name":"Address","nodeType":"ContractDefinition","nodes":[{"body":{"id":3464,"nodeType":"Block","src":"1478:254:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3458,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"1702:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1702:12:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1702:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3457,"id":3463,"nodeType":"Return","src":"1695:30:20"}]},"documentation":{"id":3451,"nodeType":"StructuredDocumentation","src":"216:1191:20","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":3465,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nodeType":"FunctionDefinition","parameters":{"id":3454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":3465,"src":"1432:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3452,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:20"},"returnParameters":{"id":3457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3465,"src":"1472:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3455,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:20"},"scope":3777,"src":"1412:320:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3498,"nodeType":"Block","src":"2718:241:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3476,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3777","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3777","typeString":"library Address"}],"id":3475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3474,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:20","typeDescriptions":{}}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2736:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3479,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"2761:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":3473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3483,"nodeType":"ExpressionStatement","src":"2728:73:20"},{"assignments":[3485,null],"declarations":[{"constant":false,"id":3485,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":3498,"src":"2813:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3484,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3492,"initialValue":{"arguments":[{"hexValue":"","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3486,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"2831:9:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2831:14:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3488,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"2853:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2831:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:20"},{"expression":{"arguments":[{"id":3494,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"2882:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":3493,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2874:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3497,"nodeType":"ExpressionStatement","src":"2874:78:20"}]},"documentation":{"id":3466,"nodeType":"StructuredDocumentation","src":"1738:904:20","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3499,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nodeType":"FunctionDefinition","parameters":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3468,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":3499,"src":"2666:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3467,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3470,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3499,"src":"2693:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3469,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:20"},"returnParameters":{"id":3472,"nodeType":"ParameterList","parameters":[],"src":"2718:0:20"},"scope":3777,"src":"2647:312:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3516,"nodeType":"Block","src":"3790:96:20","statements":[{"expression":{"arguments":[{"id":3510,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"3829:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3511,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"3837:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":3509,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3557,3601],"referencedDeclaration":3601,"src":"3807:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3807:72:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3508,"id":3515,"nodeType":"Return","src":"3800:79:20"}]},"documentation":{"id":3500,"nodeType":"StructuredDocumentation","src":"2965:731:20","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":3517,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nodeType":"FunctionDefinition","parameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":3517,"src":"3723:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3501,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3504,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":3517,"src":"3739:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3503,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:20"},"returnParameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3517,"src":"3776:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3506,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:20"},"scope":3777,"src":"3701:185:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3536,"nodeType":"Block","src":"4255:76:20","statements":[{"expression":{"arguments":[{"id":3530,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"4294:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3531,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"4302:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3533,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"4311:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3529,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3557,3601],"referencedDeclaration":3601,"src":"4272:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3528,"id":3535,"nodeType":"Return","src":"4265:59:20"}]},"documentation":{"id":3518,"nodeType":"StructuredDocumentation","src":"3892:211:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3537,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nodeType":"FunctionDefinition","parameters":{"id":3525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":3537,"src":"4139:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3519,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3522,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":3537,"src":"4163:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3521,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3524,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":3537,"src":"4190:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3523,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:20"},"returnParameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3527,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3537,"src":"4241:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3526,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:20"},"scope":3777,"src":"4108:223:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3556,"nodeType":"Block","src":"4806:111:20","statements":[{"expression":{"arguments":[{"id":3550,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"4845:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3551,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"4853:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"4859:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":3549,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3557,3601],"referencedDeclaration":3601,"src":"4823:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4823:87:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3548,"id":3555,"nodeType":"Return","src":"4816:94:20"}]},"documentation":{"id":3538,"nodeType":"StructuredDocumentation","src":"4337:351:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":3557,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nodeType":"FunctionDefinition","parameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3540,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":3557,"src":"4724:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3539,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3542,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":3557,"src":"4740:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3541,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3544,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3557,"src":"4759:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:20"},"returnParameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3557,"src":"4792:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3546,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:20"},"scope":3777,"src":"4693:224:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3600,"nodeType":"Block","src":"5344:267:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3574,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3777","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3777","typeString":"library Address"}],"id":3573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3572,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:20","typeDescriptions":{}}},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5362:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5362:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"5387:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":3571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5354:81:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3581,"nodeType":"ExpressionStatement","src":"5354:81:20"},{"assignments":[3583,3585],"declarations":[{"constant":false,"id":3583,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":3600,"src":"5446:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3582,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3585,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":3600,"src":"5460:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3584,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3592,"initialValue":{"arguments":[{"id":3590,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"5513:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3586,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"5487:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5487:11:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"5506:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5487:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:20"},{"expression":{"arguments":[{"id":3594,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"5562:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3595,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"5570:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3596,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"5579:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3597,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"5591:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3593,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"5535:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5535:69:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3570,"id":3599,"nodeType":"Return","src":"5528:76:20"}]},"documentation":{"id":3558,"nodeType":"StructuredDocumentation","src":"4923:237:20","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3601,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nodeType":"FunctionDefinition","parameters":{"id":3567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3560,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":3601,"src":"5205:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3559,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3562,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":3601,"src":"5229:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3561,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3564,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3601,"src":"5256:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3563,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3566,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":3601,"src":"5279:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3565,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:20"},"returnParameters":{"id":3570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3601,"src":"5330:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3568,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:20"},"scope":3777,"src":"5165:446:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3617,"nodeType":"Block","src":"5888:97:20","statements":[{"expression":{"arguments":[{"id":3612,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"5924:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3613,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"5932:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":3611,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[3618,3647],"referencedDeclaration":3647,"src":"5905:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5905:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3610,"id":3616,"nodeType":"Return","src":"5898:80:20"}]},"documentation":{"id":3602,"nodeType":"StructuredDocumentation","src":"5617:166:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3618,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nodeType":"FunctionDefinition","parameters":{"id":3607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":3618,"src":"5816:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3603,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3606,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":3618,"src":"5832:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3605,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:20"},"returnParameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3618,"src":"5874:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3608,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:20"},"scope":3777,"src":"5788:197:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3646,"nodeType":"Block","src":"6327:168:20","statements":[{"assignments":[3631,3633],"declarations":[{"constant":false,"id":3631,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":3646,"src":"6338:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3630,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3633,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":3646,"src":"6352:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3632,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3638,"initialValue":{"arguments":[{"id":3636,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"6397:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3634,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"6379:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:20","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6379:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:20"},{"expression":{"arguments":[{"id":3640,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"6446:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3641,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"6454:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3642,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"6463:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3643,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"6475:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3639,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"6419:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6419:69:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3629,"id":3645,"nodeType":"Return","src":"6412:76:20"}]},"documentation":{"id":3619,"nodeType":"StructuredDocumentation","src":"5991:173:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3647,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nodeType":"FunctionDefinition","parameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":3647,"src":"6206:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3620,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3623,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":3647,"src":"6230:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3622,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":3647,"src":"6257:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3624,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:20"},"returnParameters":{"id":3629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3647,"src":"6313:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3627,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:20"},"scope":3777,"src":"6169:326:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3663,"nodeType":"Block","src":"6771:101:20","statements":[{"expression":{"arguments":[{"id":3658,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"6809:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3659,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"6817:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":3657,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[3664,3693],"referencedDeclaration":3693,"src":"6788:20:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6788:77:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3656,"id":3662,"nodeType":"Return","src":"6781:84:20"}]},"documentation":{"id":3648,"nodeType":"StructuredDocumentation","src":"6501:168:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3664,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nodeType":"FunctionDefinition","parameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3650,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":3664,"src":"6704:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3649,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3652,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":3664,"src":"6720:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3651,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:20"},"returnParameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3664,"src":"6757:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3654,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:20"},"scope":3777,"src":"6674:198:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3692,"nodeType":"Block","src":"7213:170:20","statements":[{"assignments":[3677,3679],"declarations":[{"constant":false,"id":3677,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":3692,"src":"7224:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3676,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3679,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":3692,"src":"7238:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3678,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3684,"initialValue":{"arguments":[{"id":3682,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"7285:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3680,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"7265:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:20","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:20"},{"expression":{"arguments":[{"id":3686,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"7334:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3687,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"7342:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3688,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"7351:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3689,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"7363:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3685,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"7307:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7307:69:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3675,"id":3691,"nodeType":"Return","src":"7300:76:20"}]},"documentation":{"id":3665,"nodeType":"StructuredDocumentation","src":"6878:175:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3693,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nodeType":"FunctionDefinition","parameters":{"id":3672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3667,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":3693,"src":"7097:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3666,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3669,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":3693,"src":"7121:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3668,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3671,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":3693,"src":"7148:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3670,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:20"},"returnParameters":{"id":3675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3674,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3693,"src":"7199:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3673,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:20"},"scope":3777,"src":"7058:325:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3731,"nodeType":"Block","src":"7865:434:20","statements":[{"condition":{"id":3707,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"7879:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3729,"nodeType":"Block","src":"8235:58:20","statements":[{"expression":{"arguments":[{"id":3725,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"8257:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3726,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"8269:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3724,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"8249:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8249:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3728,"nodeType":"ExpressionStatement","src":"8249:33:20"}]},"id":3730,"nodeType":"IfStatement","src":"7875:418:20","trueBody":{"id":3723,"nodeType":"Block","src":"7888:341:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3708,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"7906:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7906:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3720,"nodeType":"IfStatement","src":"7902:286:20","trueBody":{"id":3719,"nodeType":"Block","src":"7930:258:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":3714,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"8132:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3713,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"8121:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":3712,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8113:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3718,"nodeType":"ExpressionStatement","src":"8113:60:20"}]}},{"expression":{"id":3721,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"8208:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3706,"id":3722,"nodeType":"Return","src":"8201:17:20"}]}}]},"documentation":{"id":3694,"nodeType":"StructuredDocumentation","src":"7389:277:20","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":3732,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nodeType":"FunctionDefinition","parameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3696,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":3732,"src":"7716:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3695,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3698,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":3732,"src":"7740:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3697,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3700,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":3732,"src":"7762:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3699,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3702,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":3732,"src":"7795:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3701,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:20"},"returnParameters":{"id":3706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3705,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3732,"src":"7851:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3704,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:20"},"scope":3777,"src":"7671:628:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3755,"nodeType":"Block","src":"8680:135:20","statements":[{"condition":{"id":3744,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"8694:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3753,"nodeType":"Block","src":"8751:58:20","statements":[{"expression":{"arguments":[{"id":3749,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"8773:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3750,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"8785:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3748,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"8765:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8765:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3752,"nodeType":"ExpressionStatement","src":"8765:33:20"}]},"id":3754,"nodeType":"IfStatement","src":"8690:119:20","trueBody":{"id":3747,"nodeType":"Block","src":"8703:42:20","statements":[{"expression":{"id":3745,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"8724:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3743,"id":3746,"nodeType":"Return","src":"8717:17:20"}]}}]},"documentation":{"id":3733,"nodeType":"StructuredDocumentation","src":"8305:210:20","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":3756,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nodeType":"FunctionDefinition","parameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3735,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":3756,"src":"8555:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3734,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3737,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":3756,"src":"8577:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3736,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3739,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":3756,"src":"8610:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3738,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:20"},"returnParameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3756,"src":"8666:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3741,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:20"},"scope":3777,"src":"8520:295:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3775,"nodeType":"Block","src":"8904:457:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3763,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"8980:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8980:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3773,"nodeType":"Block","src":"9310:45:20","statements":[{"expression":{"arguments":[{"id":3770,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"9331:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3769,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:20","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9324:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3772,"nodeType":"ExpressionStatement","src":"9324:20:20"}]},"id":3774,"nodeType":"IfStatement","src":"8976:379:20","trueBody":{"id":3768,"nodeType":"Block","src":"9003:301:20","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:20","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:20"},"nodeType":"YulFunctionCall","src":"9202:17:20"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:20","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:20"},"nodeType":"YulFunctionCall","src":"9243:19:20"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:20"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:20"},"nodeType":"YulFunctionCall","src":"9236:44:20"},"nodeType":"YulExpressionStatement","src":"9236:44:20"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3758,"isOffset":false,"isSlot":false,"src":"9208:10:20","valueSize":1},{"declaration":3758,"isOffset":false,"isSlot":false,"src":"9251:10:20","valueSize":1}],"id":3767,"nodeType":"InlineAssembly","src":"9152:142:20"}]}}]},"id":3776,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nodeType":"FunctionDefinition","parameters":{"id":3761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":3776,"src":"8838:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3757,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3760,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":3776,"src":"8863:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3759,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:20"},"returnParameters":{"id":3762,"nodeType":"ParameterList","parameters":[],"src":"8904:0:20"},"scope":3777,"src":"8821:540:20","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3778,"src":"194:9169:20"}],"src":"101:9263:20"},"id":20},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3799]},"id":3800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3779,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:21"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3780,"nodeType":"StructuredDocumentation","src":"111:496:21","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3799,"linearizedBaseContracts":[3799],"name":"Context","nodeType":"ContractDefinition","nodes":[{"body":{"id":3788,"nodeType":"Block","src":"702:34:21","statements":[{"expression":{"expression":{"id":3785,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3784,"id":3787,"nodeType":"Return","src":"712:17:21"}]},"id":3789,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nodeType":"FunctionDefinition","parameters":{"id":3781,"nodeType":"ParameterList","parameters":[],"src":"659:2:21"},"returnParameters":{"id":3784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3783,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3789,"src":"693:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3782,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:21"},"scope":3799,"src":"640:96:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3797,"nodeType":"Block","src":"809:32:21","statements":[{"expression":{"expression":{"id":3794,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3793,"id":3796,"nodeType":"Return","src":"819:15:21"}]},"id":3798,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nodeType":"FunctionDefinition","parameters":{"id":3790,"nodeType":"ParameterList","parameters":[],"src":"759:2:21"},"returnParameters":{"id":3793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3792,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3798,"src":"793:14:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3791,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:21"},"scope":3799,"src":"742:99:21","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3800,"src":"608:235:21"}],"src":"86:758:21"},"id":21},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4930],"SignedMath":[5347],"Strings":[4028]},"id":4029,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3801,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:22"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3802,"nodeType":"ImportDirective","scope":4029,"sourceUnit":4931,"src":"126:25:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3803,"nodeType":"ImportDirective","scope":4029,"sourceUnit":5348,"src":"152:31:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3804,"nodeType":"StructuredDocumentation","src":"185:34:22","text":" @dev String operations."},"fullyImplemented":true,"id":4028,"linearizedBaseContracts":[4028],"name":"Strings","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3807,"mutability":"constant","name":"_SYMBOLS","nodeType":"VariableDeclaration","scope":4028,"src":"242:54:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3805,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:22","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3810,"mutability":"constant","name":"_ADDRESS_LENGTH","nodeType":"VariableDeclaration","scope":4028,"src":"302:43:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3808,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:22","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":3857,"nodeType":"Block","src":"518:625:22","statements":[{"id":3856,"nodeType":"UncheckedBlock","src":"528:609:22","statements":[{"assignments":[3819],"declarations":[{"constant":false,"id":3819,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","scope":3856,"src":"552:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3818,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3826,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"580:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3820,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"569:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4930_$","typeString":"type(library Math)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4767,"src":"569:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"569:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:22"},{"assignments":[3828],"declarations":[{"constant":false,"id":3828,"mutability":"mutable","name":"buffer","nodeType":"VariableDeclaration","scope":3856,"src":"604:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3827,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3833,"initialValue":{"arguments":[{"id":3831,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"638:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3829,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"627:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:22"},{"assignments":[3835],"declarations":[{"constant":false,"id":3835,"mutability":"mutable","name":"ptr","nodeType":"VariableDeclaration","scope":3856,"src":"659:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3836,"nodeType":"VariableDeclarationStatement","src":"659:11:22"},{"AST":{"nodeType":"YulBlock","src":"740:67:22","statements":[{"nodeType":"YulAssignment","src":"758:35:22","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:22","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:22"},"nodeType":"YulFunctionCall","src":"777:15:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:22"},"nodeType":"YulFunctionCall","src":"765:28:22"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:22"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3828,"isOffset":false,"isSlot":false,"src":"769:6:22","valueSize":1},{"declaration":3819,"isOffset":false,"isSlot":false,"src":"785:6:22","valueSize":1},{"declaration":3835,"isOffset":false,"isSlot":false,"src":"758:3:22","valueSize":1}],"id":3837,"nodeType":"InlineAssembly","src":"731:76:22"},{"body":{"id":3852,"nodeType":"Block","src":"833:267:22","statements":[{"expression":{"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:22","subExpression":{"id":3839,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"851:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3841,"nodeType":"ExpressionStatement","src":"851:5:22"},{"AST":{"nodeType":"YulBlock","src":"934:84:22","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:22"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:22","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:22"},"nodeType":"YulFunctionCall","src":"974:14:22"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:22"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:22"},"nodeType":"YulFunctionCall","src":"969:30:22"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:22"},"nodeType":"YulFunctionCall","src":"956:44:22"},"nodeType":"YulExpressionStatement","src":"956:44:22"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3807,"isOffset":false,"isSlot":false,"src":"990:8:22","valueSize":1},{"declaration":3835,"isOffset":false,"isSlot":false,"src":"964:3:22","valueSize":1},{"declaration":3813,"isOffset":false,"isSlot":false,"src":"978:5:22","valueSize":1}],"id":3842,"nodeType":"InlineAssembly","src":"925:93:22"},{"expression":{"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"1035:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3846,"nodeType":"ExpressionStatement","src":"1035:11:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"1068:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3851,"nodeType":"IfStatement","src":"1064:21:22","trueBody":{"id":3850,"nodeType":"Break","src":"1080:5:22"}}]},"condition":{"hexValue":"74727565","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3853,"nodeType":"WhileStatement","src":"820:280:22"},{"expression":{"id":3854,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"1120:6:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3817,"id":3855,"nodeType":"Return","src":"1113:13:22"}]}]},"documentation":{"id":3811,"nodeType":"StructuredDocumentation","src":"352:90:22","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3858,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nodeType":"FunctionDefinition","parameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3813,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3858,"src":"465:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3812,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:22"},"returnParameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3816,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3858,"src":"503:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3815,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:22"},"scope":4028,"src":"447:696:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3885,"nodeType":"Block","src":"1313:103:22","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"1354:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:22","trueExpression":{"hexValue":"2d","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"1400:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3877,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"1385:10:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5347_$","typeString":"type(library SignedMath)"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5346,"src":"1385:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1385:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3876,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[3858,3886],"referencedDeclaration":3858,"src":"1376:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3868,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1337:71:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3866,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:22","typeDescriptions":{}}},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1330:79:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3865,"id":3884,"nodeType":"Return","src":"1323:86:22"}]},"documentation":{"id":3859,"nodeType":"StructuredDocumentation","src":"1149:89:22","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3886,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nodeType":"FunctionDefinition","parameters":{"id":3862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3861,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3886,"src":"1261:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3860,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:22"},"returnParameters":{"id":3865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3886,"src":"1298:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3863,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:22"},"scope":4028,"src":"1243:173:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3905,"nodeType":"Block","src":"1595:100:22","statements":[{"id":3904,"nodeType":"UncheckedBlock","src":"1605:84:22","statements":[{"expression":{"arguments":[{"id":3895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"1648:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"1667:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3896,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"1655:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4930_$","typeString":"type(library Math)"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4890,"src":"1655:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3894,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3906,3982,4002],"referencedDeclaration":3982,"src":"1636:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1636:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3893,"id":3903,"nodeType":"Return","src":"1629:49:22"}]}]},"documentation":{"id":3887,"nodeType":"StructuredDocumentation","src":"1422:94:22","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3906,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nodeType":"FunctionDefinition","parameters":{"id":3890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3889,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3906,"src":"1542:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:22"},"returnParameters":{"id":3893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3892,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3906,"src":"1580:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3891,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:22"},"scope":4028,"src":"1521:174:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3981,"nodeType":"Block","src":"1908:347:22","statements":[{"assignments":[3917],"declarations":[{"constant":false,"id":3917,"mutability":"mutable","name":"buffer","nodeType":"VariableDeclaration","scope":3981,"src":"1918:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3916,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3926,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3921,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"1954:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3918,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1940:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:22"},{"expression":{"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3927,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"1975:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3929,"indexExpression":{"hexValue":"30","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3932,"nodeType":"ExpressionStatement","src":"1975:15:22"},{"expression":{"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3933,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"2000:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3935,"indexExpression":{"hexValue":"31","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3938,"nodeType":"ExpressionStatement","src":"2000:15:22"},{"body":{"id":3967,"nodeType":"Block","src":"2070:83:22","statements":[{"expression":{"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3953,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"2084:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3955,"indexExpression":{"id":3954,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"2091:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3956,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"2096:8:22","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3960,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"2105:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3962,"nodeType":"ExpressionStatement","src":"2084:33:22"},{"expression":{"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"2131:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3966,"nodeType":"ExpressionStatement","src":"2131:11:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3947,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"2058:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3968,"initializationExpression":{"assignments":[3940],"declarations":[{"constant":false,"id":3940,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":3968,"src":"2030:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3946,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3942,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"2046:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:22"},"loopExpression":{"expression":{"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:22","subExpression":{"id":3950,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"2067:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3952,"nodeType":"ExpressionStatement","src":"2065:3:22"},"nodeType":"ForStatement","src":"2025:128:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"2170:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":3969,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2162:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3975,"nodeType":"ExpressionStatement","src":"2162:55:22"},{"expression":{"arguments":[{"id":3978,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"2241:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3976,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:22","typeDescriptions":{}}},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2234:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3915,"id":3980,"nodeType":"Return","src":"2227:21:22"}]},"documentation":{"id":3907,"nodeType":"StructuredDocumentation","src":"1701:112:22","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3982,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nodeType":"FunctionDefinition","parameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3909,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3982,"src":"1839:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3911,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","scope":3982,"src":"1854:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:22"},"returnParameters":{"id":3915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3914,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3982,"src":"1893:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3913,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:22"},"scope":4028,"src":"1818:437:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4001,"nodeType":"Block","src":"2480:76:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3995,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"2525:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3993,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:22","typeDescriptions":{}}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3991,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:22","typeDescriptions":{}}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3998,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"2533:15:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3990,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3906,3982,4002],"referencedDeclaration":3982,"src":"2497:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:52:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3989,"id":4000,"nodeType":"Return","src":"2490:59:22"}]},"documentation":{"id":3983,"nodeType":"StructuredDocumentation","src":"2261:141:22","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":4002,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nodeType":"FunctionDefinition","parameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3985,"mutability":"mutable","name":"addr","nodeType":"VariableDeclaration","scope":4002,"src":"2428:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3984,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:22"},"returnParameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3988,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4002,"src":"2465:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3987,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:22"},"scope":4028,"src":"2407:149:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4026,"nodeType":"Block","src":"2711:66:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4015,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"2744:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4013,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:22","typeDescriptions":{}}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2738:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4012,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4021,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"2767:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4019,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:22","typeDescriptions":{}}},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2761:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4018,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2751:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4011,"id":4025,"nodeType":"Return","src":"2721:49:22"}]},"documentation":{"id":4003,"nodeType":"StructuredDocumentation","src":"2562:66:22","text":" @dev Returns true if the two strings are equal."},"id":4027,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nodeType":"FunctionDefinition","parameters":{"id":4008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":4027,"src":"2648:15:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4004,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4007,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":4027,"src":"2665:15:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4006,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:22"},"returnParameters":{"id":4011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4010,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4027,"src":"2705:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4009,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:22"},"scope":4028,"src":"2633:144:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4029,"src":"220:2559:22"}],"src":"101:2679:22"},"id":22},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4052],"IERC165":[4064]},"id":4053,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4030,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:23"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4031,"nodeType":"ImportDirective","scope":4053,"sourceUnit":4065,"src":"124:23:23","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4033,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":4064,"src":"754:7:23"},"id":4034,"nodeType":"InheritanceSpecifier","src":"754:7:23"}],"contractDependencies":[4064],"contractKind":"contract","documentation":{"id":4032,"nodeType":"StructuredDocumentation","src":"149:576:23","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":4052,"linearizedBaseContracts":[4052,4064],"name":"ERC165","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4063],"body":{"id":4050,"nodeType":"Block","src":"920:64:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4043,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"937:11:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4045,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"957:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4064_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4064_$","typeString":"type(contract IERC165)"}],"id":4044,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4064","typeString":"type(contract IERC165)"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4042,"id":4049,"nodeType":"Return","src":"930:47:23"}]},"documentation":{"id":4035,"nodeType":"StructuredDocumentation","src":"768:56:23","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4051,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":4039,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:23"},"parameters":{"id":4038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":4051,"src":"856:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4036,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:23"},"returnParameters":{"id":4042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4041,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4051,"src":"914:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4040,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:23"},"scope":4052,"src":"829:155:23","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4053,"src":"726:260:23"}],"src":"99:888:23"},"id":23},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4064]},"id":4065,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4054,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:24"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":4055,"nodeType":"StructuredDocumentation","src":"125:279:24","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4064,"linearizedBaseContracts":[4064],"name":"IERC165","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4056,"nodeType":"StructuredDocumentation","src":"429:340:24","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4063,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","parameters":{"id":4059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4058,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":4063,"src":"801:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4057,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:24"},"returnParameters":{"id":4062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4061,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4063,"src":"844:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4060,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:24"},"scope":4064,"src":"774:76:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4065,"src":"405:447:24"}],"src":"100:753:24"},"id":24},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4930]},"id":4931,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4066,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:25"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":4067,"nodeType":"StructuredDocumentation","src":"128:73:25","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4930,"linearizedBaseContracts":[4930],"name":"Math","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4071,"members":[{"id":4068,"name":"Down","nodeType":"EnumValue","src":"245:4:25"},{"id":4069,"name":"Up","nodeType":"EnumValue","src":"287:2:25"},{"id":4070,"name":"Zero","nodeType":"EnumValue","src":"318:4:25"}],"name":"Rounding","nodeType":"EnumDefinition","src":"221:122:25"},{"body":{"id":4088,"nodeType":"Block","src":"480:37:25","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4081,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"497:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4082,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"501:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4085,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"509:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:25","trueExpression":{"id":4084,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"505:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4080,"id":4087,"nodeType":"Return","src":"490:20:25"}]},"documentation":{"id":4072,"nodeType":"StructuredDocumentation","src":"349:59:25","text":" @dev Returns the largest of two numbers."},"id":4089,"implemented":true,"kind":"function","modifiers":[],"name":"max","nodeType":"FunctionDefinition","parameters":{"id":4077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4074,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":4089,"src":"426:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4073,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4076,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":4089,"src":"437:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4075,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:25"},"returnParameters":{"id":4080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4079,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4089,"src":"471:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4078,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:25"},"scope":4930,"src":"413:104:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4106,"nodeType":"Block","src":"655:37:25","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4099,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"672:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4100,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"676:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4103,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"684:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:25","trueExpression":{"id":4102,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"680:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4098,"id":4105,"nodeType":"Return","src":"665:20:25"}]},"documentation":{"id":4090,"nodeType":"StructuredDocumentation","src":"523:60:25","text":" @dev Returns the smallest of two numbers."},"id":4107,"implemented":true,"kind":"function","modifiers":[],"name":"min","nodeType":"FunctionDefinition","parameters":{"id":4095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4092,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":4107,"src":"601:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4091,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4094,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":4107,"src":"612:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4093,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:25"},"returnParameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4107,"src":"646:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4096,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:25"},"scope":4930,"src":"588:104:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4129,"nodeType":"Block","src":"876:82:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4117,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"931:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4118,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4112,"src":"935:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4120,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4121,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"941:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4122,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4112,"src":"945:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4116,"id":4128,"nodeType":"Return","src":"923:28:25"}]},"documentation":{"id":4108,"nodeType":"StructuredDocumentation","src":"698:102:25","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4130,"implemented":true,"kind":"function","modifiers":[],"name":"average","nodeType":"FunctionDefinition","parameters":{"id":4113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":4130,"src":"822:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4109,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4112,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":4130,"src":"833:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4111,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:25"},"returnParameters":{"id":4116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4115,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4130,"src":"867:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4114,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:25"},"scope":4930,"src":"805:153:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4154,"nodeType":"Block","src":"1228:123:25","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4140,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"1316:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4144,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"1330:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4147,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4148,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"1339:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:25","trueExpression":{"hexValue":"30","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4139,"id":4153,"nodeType":"Return","src":"1309:35:25"}]},"documentation":{"id":4131,"nodeType":"StructuredDocumentation","src":"964:188:25","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":4155,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nodeType":"FunctionDefinition","parameters":{"id":4136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4133,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":4155,"src":"1174:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4135,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":4155,"src":"1185:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4134,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:25"},"returnParameters":{"id":4139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4138,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4155,"src":"1219:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4137,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:25"},"scope":4930,"src":"1157:194:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4277,"nodeType":"Block","src":"1765:4115:25","statements":[{"id":4276,"nodeType":"UncheckedBlock","src":"1775:4099:25","statements":[{"assignments":[4168],"declarations":[{"constant":false,"id":4168,"mutability":"mutable","name":"prod0","nodeType":"VariableDeclaration","scope":4276,"src":"2096:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4169,"nodeType":"VariableDeclarationStatement","src":"2096:13:25"},{"assignments":[4171],"declarations":[{"constant":false,"id":4171,"mutability":"mutable","name":"prod1","nodeType":"VariableDeclaration","scope":4276,"src":"2168:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4170,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4172,"nodeType":"VariableDeclarationStatement","src":"2168:13:25"},{"AST":{"nodeType":"YulBlock","src":"2248:157:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:25"},"nodeType":"YulFunctionCall","src":"2289:6:25"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:25"},"nodeType":"YulFunctionCall","src":"2276:20:25"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:25","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:25"},"nodeType":"YulFunctionCall","src":"2322:9:25"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:25"}]},{"nodeType":"YulAssignment","src":"2348:43:25","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:25"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:25"},"nodeType":"YulFunctionCall","src":"2361:14:25"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:25"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:25"},"nodeType":"YulFunctionCall","src":"2377:13:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:25"},"nodeType":"YulFunctionCall","src":"2357:34:25"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:25"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4168,"isOffset":false,"isSlot":false,"src":"2313:5:25","valueSize":1},{"declaration":4168,"isOffset":false,"isSlot":false,"src":"2369:5:25","valueSize":1},{"declaration":4168,"isOffset":false,"isSlot":false,"src":"2384:5:25","valueSize":1},{"declaration":4171,"isOffset":false,"isSlot":false,"src":"2348:5:25","valueSize":1},{"declaration":4158,"isOffset":false,"isSlot":false,"src":"2283:1:25","valueSize":1},{"declaration":4158,"isOffset":false,"isSlot":false,"src":"2326:1:25","valueSize":1},{"declaration":4160,"isOffset":false,"isSlot":false,"src":"2286:1:25","valueSize":1},{"declaration":4160,"isOffset":false,"isSlot":false,"src":"2329:1:25","valueSize":1}],"id":4173,"nodeType":"InlineAssembly","src":"2239:166:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4174,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"2486:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4182,"nodeType":"IfStatement","src":"2482:368:25","trueBody":{"id":4181,"nodeType":"Block","src":"2498:352:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4177,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"2816:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4178,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"2824:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4166,"id":4180,"nodeType":"Return","src":"2809:26:25"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4184,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"2960:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4185,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"2974:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":4183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2952:53:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4189,"nodeType":"ExpressionStatement","src":"2952:53:25"},{"assignments":[4191],"declarations":[{"constant":false,"id":4191,"mutability":"mutable","name":"remainder","nodeType":"VariableDeclaration","scope":4276,"src":"3261:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4190,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4192,"nodeType":"VariableDeclarationStatement","src":"3261:17:25"},{"AST":{"nodeType":"YulBlock","src":"3301:291:25","statements":[{"nodeType":"YulAssignment","src":"3370:38:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:25"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:25"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:25"},"nodeType":"YulFunctionCall","src":"3383:25:25"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:25"}]},{"nodeType":"YulAssignment","src":"3490:41:25","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:25"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:25"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:25"},"nodeType":"YulFunctionCall","src":"3510:20:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:25"},"nodeType":"YulFunctionCall","src":"3499:32:25"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:25"}]},{"nodeType":"YulAssignment","src":"3548:30:25","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:25"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:25"},"nodeType":"YulFunctionCall","src":"3557:21:25"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:25"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4162,"isOffset":false,"isSlot":false,"src":"3396:11:25","valueSize":1},{"declaration":4168,"isOffset":false,"isSlot":false,"src":"3524:5:25","valueSize":1},{"declaration":4168,"isOffset":false,"isSlot":false,"src":"3548:5:25","valueSize":1},{"declaration":4168,"isOffset":false,"isSlot":false,"src":"3561:5:25","valueSize":1},{"declaration":4171,"isOffset":false,"isSlot":false,"src":"3490:5:25","valueSize":1},{"declaration":4171,"isOffset":false,"isSlot":false,"src":"3503:5:25","valueSize":1},{"declaration":4191,"isOffset":false,"isSlot":false,"src":"3370:9:25","valueSize":1},{"declaration":4191,"isOffset":false,"isSlot":false,"src":"3513:9:25","valueSize":1},{"declaration":4191,"isOffset":false,"isSlot":false,"src":"3568:9:25","valueSize":1},{"declaration":4158,"isOffset":false,"isSlot":false,"src":"3390:1:25","valueSize":1},{"declaration":4160,"isOffset":false,"isSlot":false,"src":"3393:1:25","valueSize":1}],"id":4193,"nodeType":"InlineAssembly","src":"3292:300:25"},{"assignments":[4195],"declarations":[{"constant":false,"id":4195,"mutability":"mutable","name":"twos","nodeType":"VariableDeclaration","scope":4276,"src":"3899:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4194,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4203,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4196,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"3914:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:25","subExpression":{"id":4197,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"3930:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:25"},{"AST":{"nodeType":"YulBlock","src":"3969:362:25","statements":[{"nodeType":"YulAssignment","src":"4034:37:25","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:25"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:25"},"nodeType":"YulFunctionCall","src":"4049:22:25"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:25"}]},{"nodeType":"YulAssignment","src":"4138:25:25","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:25"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:25"},"nodeType":"YulFunctionCall","src":"4147:16:25"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:25"}]},{"nodeType":"YulAssignment","src":"4278:39:25","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:25","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:25"},"nodeType":"YulFunctionCall","src":"4294:12:25"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:25"},"nodeType":"YulFunctionCall","src":"4290:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:25"},"nodeType":"YulFunctionCall","src":"4286:31:25"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:25"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4162,"isOffset":false,"isSlot":false,"src":"4034:11:25","valueSize":1},{"declaration":4162,"isOffset":false,"isSlot":false,"src":"4053:11:25","valueSize":1},{"declaration":4168,"isOffset":false,"isSlot":false,"src":"4138:5:25","valueSize":1},{"declaration":4168,"isOffset":false,"isSlot":false,"src":"4151:5:25","valueSize":1},{"declaration":4195,"isOffset":false,"isSlot":false,"src":"4066:4:25","valueSize":1},{"declaration":4195,"isOffset":false,"isSlot":false,"src":"4158:4:25","valueSize":1},{"declaration":4195,"isOffset":false,"isSlot":false,"src":"4278:4:25","valueSize":1},{"declaration":4195,"isOffset":false,"isSlot":false,"src":"4301:4:25","valueSize":1},{"declaration":4195,"isOffset":false,"isSlot":false,"src":"4308:4:25","valueSize":1}],"id":4204,"nodeType":"InlineAssembly","src":"3960:371:25"},{"expression":{"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4205,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"4397:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4206,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"4406:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4207,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"4414:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4210,"nodeType":"ExpressionStatement","src":"4397:21:25"},{"assignments":[4212],"declarations":[{"constant":false,"id":4212,"mutability":"mutable","name":"inverse","nodeType":"VariableDeclaration","scope":4276,"src":"4736:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4211,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4219,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4214,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"4759:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:25"},{"expression":{"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4220,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"4992:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4222,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"5007:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4223,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"5021:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4227,"nodeType":"ExpressionStatement","src":"4992:36:25"},{"expression":{"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4228,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"5061:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4230,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"5076:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4231,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"5090:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4235,"nodeType":"ExpressionStatement","src":"5061:36:25"},{"expression":{"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4236,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"5131:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4238,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"5146:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4239,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"5160:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4243,"nodeType":"ExpressionStatement","src":"5131:36:25"},{"expression":{"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4244,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"5201:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4246,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"5216:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4247,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"5230:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4251,"nodeType":"ExpressionStatement","src":"5201:36:25"},{"expression":{"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4252,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"5271:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4254,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"5286:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4255,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"5300:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4259,"nodeType":"ExpressionStatement","src":"5271:36:25"},{"expression":{"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4260,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"5342:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4262,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"5357:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4263,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"5371:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4267,"nodeType":"ExpressionStatement","src":"5342:36:25"},{"expression":{"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"5812:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4269,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"5821:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4270,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"5829:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4273,"nodeType":"ExpressionStatement","src":"5812:24:25"},{"expression":{"id":4274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"5857:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4166,"id":4275,"nodeType":"Return","src":"5850:13:25"}]}]},"documentation":{"id":4156,"nodeType":"StructuredDocumentation","src":"1357:305:25","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":4278,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nodeType":"FunctionDefinition","parameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4158,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":4278,"src":"1683:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4160,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":4278,"src":"1694:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4159,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4162,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":4278,"src":"1705:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:25"},"returnParameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":4278,"src":"1749:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:25"},"scope":4930,"src":"1667:4213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4321,"nodeType":"Block","src":"6122:189:25","statements":[{"assignments":[4294],"declarations":[{"constant":false,"id":4294,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":4321,"src":"6132:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4293,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4300,"initialValue":{"arguments":[{"id":4296,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"6156:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4297,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"6159:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4298,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"6162:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4295,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4278,4322],"referencedDeclaration":4278,"src":"6149:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6149:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:25"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4301,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"6188:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4302,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"6200:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4071_$","typeString":"type(enum Math.Rounding)"}},"id":4303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"6200:11:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"}},"src":"6188:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4306,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"6222:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4307,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"6225:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4308,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"6228:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4305,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:25","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6215:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4318,"nodeType":"IfStatement","src":"6184:98:25","trueBody":{"id":4317,"nodeType":"Block","src":"6246:36:25","statements":[{"expression":{"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4313,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"6260:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4316,"nodeType":"ExpressionStatement","src":"6260:11:25"}]}},{"expression":{"id":4319,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"6298:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4292,"id":4320,"nodeType":"Return","src":"6291:13:25"}]},"documentation":{"id":4279,"nodeType":"StructuredDocumentation","src":"5886:121:25","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4322,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nodeType":"FunctionDefinition","parameters":{"id":4289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4281,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":4322,"src":"6028:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4283,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":4322,"src":"6039:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4282,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4285,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":4322,"src":"6050:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4284,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4288,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":4322,"src":"6071:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"},"typeName":{"id":4287,"nodeType":"UserDefinedTypeName","pathNode":{"id":4286,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4071,"src":"6071:8:25"},"referencedDeclaration":4071,"src":"6071:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:25"},"returnParameters":{"id":4292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4291,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4322,"src":"6113:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4290,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:25"},"scope":4930,"src":"6012:299:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4433,"nodeType":"Block","src":"6587:1585:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4330,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"6601:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4336,"nodeType":"IfStatement","src":"6597:45:25","trueBody":{"id":4335,"nodeType":"Block","src":"6609:33:25","statements":[{"expression":{"hexValue":"30","id":4333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4329,"id":4334,"nodeType":"Return","src":"6623:8:25"}]}},{"assignments":[4338],"declarations":[{"constant":false,"id":4338,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":4433,"src":"7321:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4337,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4347,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4341,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"7349:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4340,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4602,4638],"referencedDeclaration":4602,"src":"7344:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:7:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4345,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:25"},{"id":4432,"nodeType":"UncheckedBlock","src":"7758:408:25","statements":[{"expression":{"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4348,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"7782:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4349,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"7792:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4350,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"7801:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4351,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"7805:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4358,"nodeType":"ExpressionStatement","src":"7782:35:25"},{"expression":{"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4359,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"7831:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"7841:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4361,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"7850:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4362,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"7854:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4369,"nodeType":"ExpressionStatement","src":"7831:35:25"},{"expression":{"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4370,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"7880:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4371,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"7890:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4372,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"7899:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4373,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"7903:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4380,"nodeType":"ExpressionStatement","src":"7880:35:25"},{"expression":{"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4381,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"7929:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4382,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"7939:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4383,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"7948:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4384,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"7952:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4391,"nodeType":"ExpressionStatement","src":"7929:35:25"},{"expression":{"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"7978:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4393,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"7988:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4394,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"7997:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4395,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"8001:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4398,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4402,"nodeType":"ExpressionStatement","src":"7978:35:25"},{"expression":{"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4403,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"8027:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4404,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"8037:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4405,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"8046:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4406,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"8050:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4413,"nodeType":"ExpressionStatement","src":"8027:35:25"},{"expression":{"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"8076:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4415,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"8086:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4416,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"8095:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4417,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"8099:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4424,"nodeType":"ExpressionStatement","src":"8076:35:25"},{"expression":{"arguments":[{"id":4426,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"8136:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4427,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"8144:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4428,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"8148:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4425,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"8132:3:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4329,"id":4431,"nodeType":"Return","src":"8125:30:25"}]}]},"documentation":{"id":4323,"nodeType":"StructuredDocumentation","src":"6317:208:25","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4434,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nodeType":"FunctionDefinition","parameters":{"id":4326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4325,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":4434,"src":"6544:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4324,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:25"},"returnParameters":{"id":4329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4328,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4434,"src":"6578:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:25"},"scope":4930,"src":"6530:1642:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4469,"nodeType":"Block","src":"8348:161:25","statements":[{"id":4468,"nodeType":"UncheckedBlock","src":"8358:145:25","statements":[{"assignments":[4446],"declarations":[{"constant":false,"id":4446,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":4468,"src":"8382:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4445,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4450,"initialValue":{"arguments":[{"id":4448,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"8404:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4447,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4434,4470],"referencedDeclaration":4434,"src":"8399:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8399:7:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4451,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"8427:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4452,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"8437:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4453,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"8449:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4071_$","typeString":"type(enum Math.Rounding)"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"8449:11:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"}},"src":"8437:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4456,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"8464:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"8473:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4459,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"8482:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:25","trueExpression":{"hexValue":"31","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4444,"id":4467,"nodeType":"Return","src":"8420:72:25"}]}]},"documentation":{"id":4435,"nodeType":"StructuredDocumentation","src":"8178:89:25","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4470,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nodeType":"FunctionDefinition","parameters":{"id":4441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4437,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":4470,"src":"8286:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4436,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4440,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":4470,"src":"8297:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"},"typeName":{"id":4439,"nodeType":"UserDefinedTypeName","pathNode":{"id":4438,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4071,"src":"8297:8:25"},"referencedDeclaration":4071,"src":"8297:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:25"},"returnParameters":{"id":4444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4443,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4470,"src":"8339:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4442,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:25"},"scope":4930,"src":"8272:237:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4601,"nodeType":"Block","src":"8694:922:25","statements":[{"assignments":[4479],"declarations":[{"constant":false,"id":4479,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":4601,"src":"8704:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4478,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4481,"initialValue":{"hexValue":"30","id":4480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:25"},{"id":4598,"nodeType":"UncheckedBlock","src":"8732:855:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"8760:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4496,"nodeType":"IfStatement","src":"8756:99:25","trueBody":{"id":4495,"nodeType":"Block","src":"8778:77:25","statements":[{"expression":{"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"8796:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4490,"nodeType":"ExpressionStatement","src":"8796:13:25"},{"expression":{"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"8827:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4494,"nodeType":"ExpressionStatement","src":"8827:13:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"8872:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4511,"nodeType":"IfStatement","src":"8868:96:25","trueBody":{"id":4510,"nodeType":"Block","src":"8889:75:25","statements":[{"expression":{"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"8907:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4505,"nodeType":"ExpressionStatement","src":"8907:12:25"},{"expression":{"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4506,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"8937:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4509,"nodeType":"ExpressionStatement","src":"8937:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"8981:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4526,"nodeType":"IfStatement","src":"8977:96:25","trueBody":{"id":4525,"nodeType":"Block","src":"8998:75:25","statements":[{"expression":{"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"9016:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4520,"nodeType":"ExpressionStatement","src":"9016:12:25"},{"expression":{"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"9046:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4524,"nodeType":"ExpressionStatement","src":"9046:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"9090:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4541,"nodeType":"IfStatement","src":"9086:96:25","trueBody":{"id":4540,"nodeType":"Block","src":"9107:75:25","statements":[{"expression":{"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"9125:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4535,"nodeType":"ExpressionStatement","src":"9125:12:25"},{"expression":{"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4536,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"9155:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4539,"nodeType":"ExpressionStatement","src":"9155:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"9199:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4556,"nodeType":"IfStatement","src":"9195:93:25","trueBody":{"id":4555,"nodeType":"Block","src":"9215:73:25","statements":[{"expression":{"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"9233:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4550,"nodeType":"ExpressionStatement","src":"9233:11:25"},{"expression":{"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"9262:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4554,"nodeType":"ExpressionStatement","src":"9262:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"9305:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4571,"nodeType":"IfStatement","src":"9301:93:25","trueBody":{"id":4570,"nodeType":"Block","src":"9321:73:25","statements":[{"expression":{"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"9339:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4565,"nodeType":"ExpressionStatement","src":"9339:11:25"},{"expression":{"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"9368:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4569,"nodeType":"ExpressionStatement","src":"9368:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"9411:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4586,"nodeType":"IfStatement","src":"9407:93:25","trueBody":{"id":4585,"nodeType":"Block","src":"9427:73:25","statements":[{"expression":{"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"9445:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4580,"nodeType":"ExpressionStatement","src":"9445:11:25"},{"expression":{"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4581,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"9474:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4584,"nodeType":"ExpressionStatement","src":"9474:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"9517:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4597,"nodeType":"IfStatement","src":"9513:64:25","trueBody":{"id":4596,"nodeType":"Block","src":"9533:44:25","statements":[{"expression":{"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4592,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"9551:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4595,"nodeType":"ExpressionStatement","src":"9551:11:25"}]}}]},{"expression":{"id":4599,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"9603:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4477,"id":4600,"nodeType":"Return","src":"9596:13:25"}]},"documentation":{"id":4471,"nodeType":"StructuredDocumentation","src":"8515:113:25","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4602,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nodeType":"FunctionDefinition","parameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":4602,"src":"8647:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:25"},"returnParameters":{"id":4477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4476,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4602,"src":"8685:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4475,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:25"},"scope":4930,"src":"8633:983:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4637,"nodeType":"Block","src":"9849:165:25","statements":[{"id":4636,"nodeType":"UncheckedBlock","src":"9859:149:25","statements":[{"assignments":[4614],"declarations":[{"constant":false,"id":4614,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":4636,"src":"9883:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4613,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4618,"initialValue":{"arguments":[{"id":4616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"9905:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4615,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4602,4638],"referencedDeclaration":4602,"src":"9900:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9900:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4619,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"9932:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4620,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"9942:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4621,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"9954:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4071_$","typeString":"type(enum Math.Rounding)"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"9954:11:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"}},"src":"9942:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4625,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"9974:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"9983:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:25","trueExpression":{"hexValue":"31","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4633,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4612,"id":4635,"nodeType":"Return","src":"9925:72:25"}]}]},"documentation":{"id":4603,"nodeType":"StructuredDocumentation","src":"9622:142:25","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4638,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nodeType":"FunctionDefinition","parameters":{"id":4609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":4638,"src":"9783:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4608,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":4638,"src":"9798:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"},"typeName":{"id":4607,"nodeType":"UserDefinedTypeName","pathNode":{"id":4606,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4071,"src":"9798:8:25"},"referencedDeclaration":4071,"src":"9798:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:25"},"returnParameters":{"id":4612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4611,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4638,"src":"9840:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4610,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:25"},"scope":4930,"src":"9769:245:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4766,"nodeType":"Block","src":"10201:854:25","statements":[{"assignments":[4647],"declarations":[{"constant":false,"id":4647,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":4766,"src":"10211:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4649,"initialValue":{"hexValue":"30","id":4648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:25"},{"id":4763,"nodeType":"UncheckedBlock","src":"10239:787:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10267:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4666,"nodeType":"IfStatement","src":"10263:103:25","trueBody":{"id":4665,"nodeType":"Block","src":"10286:80:25","statements":[{"expression":{"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10304:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4660,"nodeType":"ExpressionStatement","src":"10304:17:25"},{"expression":{"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"10339:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4664,"nodeType":"ExpressionStatement","src":"10339:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10383:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4683,"nodeType":"IfStatement","src":"10379:103:25","trueBody":{"id":4682,"nodeType":"Block","src":"10402:80:25","statements":[{"expression":{"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10420:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4677,"nodeType":"ExpressionStatement","src":"10420:17:25"},{"expression":{"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"10455:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4681,"nodeType":"ExpressionStatement","src":"10455:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10499:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4700,"nodeType":"IfStatement","src":"10495:103:25","trueBody":{"id":4699,"nodeType":"Block","src":"10518:80:25","statements":[{"expression":{"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10536:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4694,"nodeType":"ExpressionStatement","src":"10536:17:25"},{"expression":{"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4695,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"10571:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4698,"nodeType":"ExpressionStatement","src":"10571:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10615:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4717,"nodeType":"IfStatement","src":"10611:100:25","trueBody":{"id":4716,"nodeType":"Block","src":"10633:78:25","statements":[{"expression":{"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10651:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4711,"nodeType":"ExpressionStatement","src":"10651:16:25"},{"expression":{"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"10685:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4715,"nodeType":"ExpressionStatement","src":"10685:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10728:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4734,"nodeType":"IfStatement","src":"10724:100:25","trueBody":{"id":4733,"nodeType":"Block","src":"10746:78:25","statements":[{"expression":{"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10764:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4728,"nodeType":"ExpressionStatement","src":"10764:16:25"},{"expression":{"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4729,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"10798:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4732,"nodeType":"ExpressionStatement","src":"10798:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10841:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4751,"nodeType":"IfStatement","src":"10837:100:25","trueBody":{"id":4750,"nodeType":"Block","src":"10859:78:25","statements":[{"expression":{"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10877:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4745,"nodeType":"ExpressionStatement","src":"10877:16:25"},{"expression":{"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4746,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"10911:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4749,"nodeType":"ExpressionStatement","src":"10911:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10954:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4762,"nodeType":"IfStatement","src":"10950:66:25","trueBody":{"id":4761,"nodeType":"Block","src":"10972:44:25","statements":[{"expression":{"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"10990:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4760,"nodeType":"ExpressionStatement","src":"10990:11:25"}]}}]},{"expression":{"id":4764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"11042:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4645,"id":4765,"nodeType":"Return","src":"11035:13:25"}]},"documentation":{"id":4639,"nodeType":"StructuredDocumentation","src":"10020:114:25","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4767,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nodeType":"FunctionDefinition","parameters":{"id":4642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4641,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":4767,"src":"10154:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4640,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:25"},"returnParameters":{"id":4645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4644,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4767,"src":"10192:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4643,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:25"},"scope":4930,"src":"10139:916:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4802,"nodeType":"Block","src":"11290:167:25","statements":[{"id":4801,"nodeType":"UncheckedBlock","src":"11300:151:25","statements":[{"assignments":[4779],"declarations":[{"constant":false,"id":4779,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":4801,"src":"11324:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4778,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4783,"initialValue":{"arguments":[{"id":4781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"11347:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4780,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4767,4803],"referencedDeclaration":4767,"src":"11341:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11341:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4784,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"11374:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4785,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4773,"src":"11384:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4786,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"11396:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4071_$","typeString":"type(enum Math.Rounding)"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"11396:11:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"}},"src":"11384:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4790,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"11417:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"11426:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:25","trueExpression":{"hexValue":"31","id":4795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4777,"id":4800,"nodeType":"Return","src":"11367:73:25"}]}]},"documentation":{"id":4768,"nodeType":"StructuredDocumentation","src":"11061:143:25","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4803,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nodeType":"FunctionDefinition","parameters":{"id":4774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4770,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":4803,"src":"11224:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4769,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4773,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":4803,"src":"11239:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"},"typeName":{"id":4772,"nodeType":"UserDefinedTypeName","pathNode":{"id":4771,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4071,"src":"11239:8:25"},"referencedDeclaration":4071,"src":"11239:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:25"},"returnParameters":{"id":4777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4776,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4803,"src":"11281:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4775,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:25"},"scope":4930,"src":"11209:248:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4889,"nodeType":"Block","src":"11771:600:25","statements":[{"assignments":[4812],"declarations":[{"constant":false,"id":4812,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":4889,"src":"11781:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4811,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4814,"initialValue":{"hexValue":"30","id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:25"},{"id":4886,"nodeType":"UncheckedBlock","src":"11809:533:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"11837:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4829,"nodeType":"IfStatement","src":"11833:98:25","trueBody":{"id":4828,"nodeType":"Block","src":"11855:76:25","statements":[{"expression":{"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"11873:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4823,"nodeType":"ExpressionStatement","src":"11873:13:25"},{"expression":{"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"11904:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4827,"nodeType":"ExpressionStatement","src":"11904:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"11948:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4844,"nodeType":"IfStatement","src":"11944:95:25","trueBody":{"id":4843,"nodeType":"Block","src":"11965:74:25","statements":[{"expression":{"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"11983:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4838,"nodeType":"ExpressionStatement","src":"11983:12:25"},{"expression":{"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"12013:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4842,"nodeType":"ExpressionStatement","src":"12013:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"12056:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4859,"nodeType":"IfStatement","src":"12052:95:25","trueBody":{"id":4858,"nodeType":"Block","src":"12073:74:25","statements":[{"expression":{"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"12091:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4853,"nodeType":"ExpressionStatement","src":"12091:12:25"},{"expression":{"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4854,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"12121:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4857,"nodeType":"ExpressionStatement","src":"12121:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"12164:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4874,"nodeType":"IfStatement","src":"12160:95:25","trueBody":{"id":4873,"nodeType":"Block","src":"12181:74:25","statements":[{"expression":{"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"12199:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4868,"nodeType":"ExpressionStatement","src":"12199:12:25"},{"expression":{"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4869,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"12229:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4872,"nodeType":"ExpressionStatement","src":"12229:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"12272:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4885,"nodeType":"IfStatement","src":"12268:64:25","trueBody":{"id":4884,"nodeType":"Block","src":"12288:44:25","statements":[{"expression":{"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4880,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"12306:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4883,"nodeType":"ExpressionStatement","src":"12306:11:25"}]}}]},{"expression":{"id":4887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"12358:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4810,"id":4888,"nodeType":"Return","src":"12351:13:25"}]},"documentation":{"id":4804,"nodeType":"StructuredDocumentation","src":"11463:240:25","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4890,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nodeType":"FunctionDefinition","parameters":{"id":4807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4806,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":4890,"src":"11724:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4805,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:25"},"returnParameters":{"id":4810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4809,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4890,"src":"11762:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:25"},"scope":4930,"src":"11708:663:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4928,"nodeType":"Block","src":"12608:174:25","statements":[{"id":4927,"nodeType":"UncheckedBlock","src":"12618:158:25","statements":[{"assignments":[4902],"declarations":[{"constant":false,"id":4902,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":4927,"src":"12642:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4901,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4906,"initialValue":{"arguments":[{"id":4904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"12666:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4903,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4890,4929],"referencedDeclaration":4890,"src":"12659:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12659:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"12693:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4908,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"12703:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4909,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"12715:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4071_$","typeString":"type(enum Math.Rounding)"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"12715:11:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"}},"src":"12703:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4913,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"12736:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4916,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"12751:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:25","trueExpression":{"hexValue":"31","id":4921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4900,"id":4926,"nodeType":"Return","src":"12686:79:25"}]}]},"documentation":{"id":4891,"nodeType":"StructuredDocumentation","src":"12377:144:25","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4929,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nodeType":"FunctionDefinition","parameters":{"id":4897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":4929,"src":"12542:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4892,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4896,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":4929,"src":"12557:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"},"typeName":{"id":4895,"nodeType":"UserDefinedTypeName","pathNode":{"id":4894,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4071,"src":"12557:8:25"},"referencedDeclaration":4071,"src":"12557:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4071","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:25"},"returnParameters":{"id":4900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4899,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4929,"src":"12599:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4898,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:25"},"scope":4930,"src":"12526:256:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4931,"src":"202:12582:25"}],"src":"103:12682:25"},"id":25},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[5242]},"id":5243,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4932,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:26"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":4933,"nodeType":"StructuredDocumentation","src":"285:196:26","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":5242,"linearizedBaseContracts":[5242],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":4964,"nodeType":"Block","src":"717:140:26","statements":[{"id":4963,"nodeType":"UncheckedBlock","src":"727:124:26","statements":[{"assignments":[4946],"declarations":[{"constant":false,"id":4946,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":4963,"src":"751:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4945,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4950,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4947,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"763:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4948,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"767:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4951,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"786:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4952,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"790:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4958,"nodeType":"IfStatement","src":"782:28:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4956,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4944,"id":4957,"nodeType":"Return","src":"793:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":4959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4960,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"838:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4944,"id":4962,"nodeType":"Return","src":"824:16:26"}]}]},"documentation":{"id":4934,"nodeType":"StructuredDocumentation","src":"505:131:26","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":4965,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nodeType":"FunctionDefinition","parameters":{"id":4939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4936,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":4965,"src":"657:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4935,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4938,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":4965,"src":"668:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4937,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:26"},"returnParameters":{"id":4944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4941,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4965,"src":"702:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4940,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4943,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4965,"src":"708:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4942,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:26"},"scope":5242,"src":"641:216:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4992,"nodeType":"Block","src":"1078:113:26","statements":[{"id":4991,"nodeType":"UncheckedBlock","src":"1088:97:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4977,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"1116:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4978,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"1120:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4984,"nodeType":"IfStatement","src":"1112:28:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4976,"id":4983,"nodeType":"Return","src":"1123:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":4985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4986,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"1168:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4987,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"1172:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4976,"id":4990,"nodeType":"Return","src":"1154:20:26"}]}]},"documentation":{"id":4966,"nodeType":"StructuredDocumentation","src":"863:134:26","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":4993,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nodeType":"FunctionDefinition","parameters":{"id":4971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4968,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":4993,"src":"1018:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4967,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4970,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":4993,"src":"1029:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4969,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:26"},"returnParameters":{"id":4976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4993,"src":"1063:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4972,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4975,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4993,"src":"1069:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4974,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:26"},"scope":5242,"src":"1002:189:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5034,"nodeType":"Block","src":"1415:417:26","statements":[{"id":5033,"nodeType":"UncheckedBlock","src":"1425:401:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5005,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"1683:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5012,"nodeType":"IfStatement","src":"1679:28:26","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5010,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5004,"id":5011,"nodeType":"Return","src":"1691:16:26"}},{"assignments":[5014],"declarations":[{"constant":false,"id":5014,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":5033,"src":"1721:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5013,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5018,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5015,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"1733:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5016,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"1737:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5019,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"1756:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5020,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"1760:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5022,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"1765:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5028,"nodeType":"IfStatement","src":"1752:33:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5004,"id":5027,"nodeType":"Return","src":"1768:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5030,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"1813:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5004,"id":5032,"nodeType":"Return","src":"1799:16:26"}]}]},"documentation":{"id":4994,"nodeType":"StructuredDocumentation","src":"1197:137:26","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":5035,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nodeType":"FunctionDefinition","parameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5035,"src":"1355:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4995,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4998,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5035,"src":"1366:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4997,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:26"},"returnParameters":{"id":5004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5035,"src":"1400:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5000,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5003,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5035,"src":"1406:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5002,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:26"},"scope":5242,"src":"1339:493:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5062,"nodeType":"Block","src":"2057:114:26","statements":[{"id":5061,"nodeType":"UncheckedBlock","src":"2067:98:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5047,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"2095:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5054,"nodeType":"IfStatement","src":"2091:29:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5052,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5046,"id":5053,"nodeType":"Return","src":"2103:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":5055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5056,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"2148:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5057,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"2152:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5046,"id":5060,"nodeType":"Return","src":"2134:20:26"}]}]},"documentation":{"id":5036,"nodeType":"StructuredDocumentation","src":"1838:138:26","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":5063,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nodeType":"FunctionDefinition","parameters":{"id":5041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5038,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5063,"src":"1997:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5040,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5063,"src":"2008:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5039,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:26"},"returnParameters":{"id":5046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5043,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5063,"src":"2042:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5042,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5045,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5063,"src":"2048:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5044,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:26"},"scope":5242,"src":"1981:190:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5090,"nodeType":"Block","src":"2406:114:26","statements":[{"id":5089,"nodeType":"UncheckedBlock","src":"2416:98:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5075,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5068,"src":"2444:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5082,"nodeType":"IfStatement","src":"2440:29:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5074,"id":5081,"nodeType":"Return","src":"2452:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":5083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5084,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"2497:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5085,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5068,"src":"2501:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5074,"id":5088,"nodeType":"Return","src":"2483:20:26"}]}]},"documentation":{"id":5064,"nodeType":"StructuredDocumentation","src":"2177:148:26","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":5091,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nodeType":"FunctionDefinition","parameters":{"id":5069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5066,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5091,"src":"2346:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5065,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5068,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5091,"src":"2357:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5067,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:26"},"returnParameters":{"id":5074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5071,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5091,"src":"2391:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5070,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5073,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5091,"src":"2397:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5072,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:26"},"scope":5242,"src":"2330:190:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5105,"nodeType":"Block","src":"2822:29:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5101,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"2839:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5102,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"2843:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5100,"id":5104,"nodeType":"Return","src":"2832:12:26"}]},"documentation":{"id":5092,"nodeType":"StructuredDocumentation","src":"2526:224:26","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":5106,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":5097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5094,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5106,"src":"2768:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5096,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5106,"src":"2779:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5095,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:26"},"returnParameters":{"id":5100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5099,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5106,"src":"2813:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5098,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:26"},"scope":5242,"src":"2755:96:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5120,"nodeType":"Block","src":"3189:29:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5116,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5109,"src":"3206:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5117,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5111,"src":"3210:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5115,"id":5119,"nodeType":"Return","src":"3199:12:26"}]},"documentation":{"id":5107,"nodeType":"StructuredDocumentation","src":"2857:260:26","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":5121,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":5112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5109,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5121,"src":"3135:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5111,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5121,"src":"3146:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5110,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:26"},"returnParameters":{"id":5115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5114,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5121,"src":"3180:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5113,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:26"},"scope":5242,"src":"3122:96:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5135,"nodeType":"Block","src":"3532:29:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5131,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"3549:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5132,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"3553:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5130,"id":5134,"nodeType":"Return","src":"3542:12:26"}]},"documentation":{"id":5122,"nodeType":"StructuredDocumentation","src":"3224:236:26","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":5136,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":5127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5124,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5136,"src":"3478:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5123,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5126,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5136,"src":"3489:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5125,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:26"},"returnParameters":{"id":5130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5129,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5136,"src":"3523:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5128,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:26"},"scope":5242,"src":"3465:96:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5150,"nodeType":"Block","src":"3917:29:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5146,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"3934:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5147,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"3938:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5145,"id":5149,"nodeType":"Return","src":"3927:12:26"}]},"documentation":{"id":5137,"nodeType":"StructuredDocumentation","src":"3567:278:26","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":5151,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":5142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5139,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5151,"src":"3863:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5138,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5141,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5151,"src":"3874:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5140,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:26"},"returnParameters":{"id":5145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5144,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5151,"src":"3908:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5143,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:26"},"scope":5242,"src":"3850:96:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5165,"nodeType":"Block","src":"4466:29:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5161,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"4483:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5162,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"4487:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5160,"id":5164,"nodeType":"Return","src":"4476:12:26"}]},"documentation":{"id":5152,"nodeType":"StructuredDocumentation","src":"3952:442:26","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":5166,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":5157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5154,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5166,"src":"4412:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5153,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5156,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5166,"src":"4423:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5155,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:26"},"returnParameters":{"id":5160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5159,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5166,"src":"4457:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5158,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:26"},"scope":5242,"src":"4399:96:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5190,"nodeType":"Block","src":"5054:106:26","statements":[{"id":5189,"nodeType":"UncheckedBlock","src":"5064:90:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5179,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"5096:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5180,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"5101:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5096:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5182,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"5104:12:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5088:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5088:29:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5184,"nodeType":"ExpressionStatement","src":"5088:29:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5185,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"5138:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5186,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"5142:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5138:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5177,"id":5188,"nodeType":"Return","src":"5131:12:26"}]}]},"documentation":{"id":5167,"nodeType":"StructuredDocumentation","src":"4501:453:26","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":5191,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":5174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5191,"src":"4972:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5168,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5171,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5191,"src":"4983:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5170,"name":"uint256","nodeType":"ElementaryTypeName","src":"4983:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5173,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":5191,"src":"4994:26:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5172,"name":"string","nodeType":"ElementaryTypeName","src":"4994:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:50:26"},"returnParameters":{"id":5177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5176,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5191,"src":"5045:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5175,"name":"uint256","nodeType":"ElementaryTypeName","src":"5045:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5044:9:26"},"scope":5242,"src":"4959:201:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5215,"nodeType":"Block","src":"5739:105:26","statements":[{"id":5214,"nodeType":"UncheckedBlock","src":"5749:89:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5204,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"5781:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5785:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5781:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5207,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"5788:12:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5203,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5773:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5773:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5209,"nodeType":"ExpressionStatement","src":"5773:28:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5210,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"5822:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5211,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"5826:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5822:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5202,"id":5213,"nodeType":"Return","src":"5815:12:26"}]}]},"documentation":{"id":5192,"nodeType":"StructuredDocumentation","src":"5166:473:26","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":5216,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":5199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5194,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5216,"src":"5657:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5193,"name":"uint256","nodeType":"ElementaryTypeName","src":"5657:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5196,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5216,"src":"5668:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5195,"name":"uint256","nodeType":"ElementaryTypeName","src":"5668:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5198,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":5216,"src":"5679:26:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5197,"name":"string","nodeType":"ElementaryTypeName","src":"5679:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5656:50:26"},"returnParameters":{"id":5202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5201,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5216,"src":"5730:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5200,"name":"uint256","nodeType":"ElementaryTypeName","src":"5730:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5729:9:26"},"scope":5242,"src":"5644:200:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5240,"nodeType":"Block","src":"6585:105:26","statements":[{"id":5239,"nodeType":"UncheckedBlock","src":"6595:89:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5229,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"6627:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6627:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5232,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"6634:12:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5228,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6619:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6619:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5234,"nodeType":"ExpressionStatement","src":"6619:28:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5235,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"6668:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5236,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"6672:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6668:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5227,"id":5238,"nodeType":"Return","src":"6661:12:26"}]}]},"documentation":{"id":5217,"nodeType":"StructuredDocumentation","src":"5850:635:26","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":5241,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":5224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5219,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5241,"src":"6503:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5218,"name":"uint256","nodeType":"ElementaryTypeName","src":"6503:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5221,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5241,"src":"6514:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5220,"name":"uint256","nodeType":"ElementaryTypeName","src":"6514:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5223,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":5241,"src":"6525:26:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5222,"name":"string","nodeType":"ElementaryTypeName","src":"6525:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6502:50:26"},"returnParameters":{"id":5227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5226,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5241,"src":"6576:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5225,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6575:9:26"},"scope":5242,"src":"6490:200:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5243,"src":"482:6210:26"}],"src":"107:6586:26"},"id":26},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[5347]},"id":5348,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5244,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:27"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":5245,"nodeType":"StructuredDocumentation","src":"134:80:27","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5347,"linearizedBaseContracts":[5347],"name":"SignedMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":5262,"nodeType":"Block","src":"375:37:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5255,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"392:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5256,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"396:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5259,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"404:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:27","trueExpression":{"id":5258,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"400:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5254,"id":5261,"nodeType":"Return","src":"385:20:27"}]},"documentation":{"id":5246,"nodeType":"StructuredDocumentation","src":"240:66:27","text":" @dev Returns the largest of two signed numbers."},"id":5263,"implemented":true,"kind":"function","modifiers":[],"name":"max","nodeType":"FunctionDefinition","parameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5248,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5263,"src":"324:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5247,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5250,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5263,"src":"334:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5249,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:27"},"returnParameters":{"id":5254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5263,"src":"367:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5252,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:27"},"scope":5347,"src":"311:101:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5280,"nodeType":"Block","src":"554:37:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5273,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"571:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5274,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"575:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5277,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"583:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:27","trueExpression":{"id":5276,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"579:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5272,"id":5279,"nodeType":"Return","src":"564:20:27"}]},"documentation":{"id":5264,"nodeType":"StructuredDocumentation","src":"418:67:27","text":" @dev Returns the smallest of two signed numbers."},"id":5281,"implemented":true,"kind":"function","modifiers":[],"name":"min","nodeType":"FunctionDefinition","parameters":{"id":5269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5266,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5281,"src":"503:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5265,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5268,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5281,"src":"513:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5267,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:27"},"returnParameters":{"id":5272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5271,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5281,"src":"546:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5270,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:27"},"scope":5347,"src":"490:101:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5324,"nodeType":"Block","src":"796:162:27","statements":[{"assignments":[5292],"declarations":[{"constant":false,"id":5292,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":5324,"src":"858:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5291,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5305,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5293,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"870:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5294,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"874:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5296,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5297,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"881:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5298,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"885:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5303,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:27"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5306,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"910:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5311,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"930:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5309,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:27","typeDescriptions":{}}},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"922:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:27","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5307,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:27","typeDescriptions":{}}},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"915:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5316,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"944:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5317,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"948:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5321,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5290,"id":5323,"nodeType":"Return","src":"903:48:27"}]},"documentation":{"id":5282,"nodeType":"StructuredDocumentation","src":"597:126:27","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5325,"implemented":true,"kind":"function","modifiers":[],"name":"average","nodeType":"FunctionDefinition","parameters":{"id":5287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5284,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5325,"src":"745:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5283,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5286,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5325,"src":"755:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5285,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:27"},"returnParameters":{"id":5290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5289,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5325,"src":"788:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5288,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:27"},"scope":5347,"src":"728:230:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5345,"nodeType":"Block","src":"1102:158:27","statements":[{"id":5344,"nodeType":"UncheckedBlock","src":"1112:142:27","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5335,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"1227:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:27","subExpression":{"id":5339,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"1241:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:27","trueExpression":{"id":5338,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"1236:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:27","typeDescriptions":{}}},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1219:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5332,"id":5343,"nodeType":"Return","src":"1212:31:27"}]}]},"documentation":{"id":5326,"nodeType":"StructuredDocumentation","src":"964:78:27","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5346,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nodeType":"FunctionDefinition","parameters":{"id":5329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5328,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":5346,"src":"1060:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5327,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:27"},"returnParameters":{"id":5332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5331,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5346,"src":"1093:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:27"},"scope":5347,"src":"1047:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5348,"src":"215:1047:27"}],"src":"109:1154:27"},"id":27},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[5960]},"id":5961,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5349,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:28"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":5350,"nodeType":"StructuredDocumentation","src":"230:1098:28","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":5960,"linearizedBaseContracts":[5960],"name":"EnumerableSet","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":5358,"members":[{"constant":false,"id":5353,"mutability":"mutable","name":"_values","nodeType":"VariableDeclaration","scope":5358,"src":"1851:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1851:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5352,"nodeType":"ArrayTypeName","src":"1851:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5357,"mutability":"mutable","name":"_indexes","nodeType":"VariableDeclaration","scope":5358,"src":"2001:36:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":5356,"keyType":{"id":5354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2009:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2001:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":5355,"name":"uint256","nodeType":"ElementaryTypeName","src":"2020:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nodeType":"StructDefinition","scope":5960,"src":"1797:247:28","visibility":"public"},{"body":{"id":5399,"nodeType":"Block","src":"2283:335:28","statements":[{"condition":{"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2297:22:28","subExpression":{"arguments":[{"id":5370,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"2308:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":5371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"2313:5:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5369,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"2298:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5358_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2298:21:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5397,"nodeType":"Block","src":"2575:37:28","statements":[{"expression":{"hexValue":"66616c7365","id":5395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2596:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5368,"id":5396,"nodeType":"Return","src":"2589:12:28"}]},"id":5398,"nodeType":"IfStatement","src":"2293:319:28","trueBody":{"id":5394,"nodeType":"Block","src":"2321:248:28","statements":[{"expression":{"arguments":[{"id":5379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"2352:5:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":5374,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"2335:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5353,"src":"2335:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2335:16:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5381,"nodeType":"ExpressionStatement","src":"2335:23:28"},{"expression":{"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":5382,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"2493:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5357,"src":"2493:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5386,"indexExpression":{"id":5384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"2506:5:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2493:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":5387,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"2515:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5353,"src":"2515:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2515:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2493:40:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5391,"nodeType":"ExpressionStatement","src":"2493:40:28"},{"expression":{"hexValue":"74727565","id":5392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2554:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5368,"id":5393,"nodeType":"Return","src":"2547:11:28"}]}}]},"documentation":{"id":5359,"nodeType":"StructuredDocumentation","src":"2050:159:28","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5400,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nodeType":"FunctionDefinition","parameters":{"id":5365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5362,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5400,"src":"2228:15:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5361,"nodeType":"UserDefinedTypeName","pathNode":{"id":5360,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":5358,"src":"2228:3:28"},"referencedDeclaration":5358,"src":"2228:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":5364,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":5400,"src":"2245:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2245:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2227:32:28"},"returnParameters":{"id":5368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5367,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5400,"src":"2277:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5366,"name":"bool","nodeType":"ElementaryTypeName","src":"2277:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2276:6:28"},"scope":5960,"src":"2214:404:28","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5483,"nodeType":"Block","src":"2858:1316:28","statements":[{"assignments":[5412],"declarations":[{"constant":false,"id":5412,"mutability":"mutable","name":"valueIndex","nodeType":"VariableDeclaration","scope":5483,"src":"2968:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5411,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5417,"initialValue":{"baseExpression":{"expression":{"id":5413,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"2989:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5357,"src":"2989:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5416,"indexExpression":{"id":5415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"3002:5:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2968:40:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5418,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"3023:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3023:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5481,"nodeType":"Block","src":"4131:37:28","statements":[{"expression":{"hexValue":"66616c7365","id":5479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4152:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5410,"id":5480,"nodeType":"Return","src":"4145:12:28"}]},"id":5482,"nodeType":"IfStatement","src":"3019:1149:28","trueBody":{"id":5478,"nodeType":"Block","src":"3040:1085:28","statements":[{"assignments":[5422],"declarations":[{"constant":false,"id":5422,"mutability":"mutable","name":"toDeleteIndex","nodeType":"VariableDeclaration","scope":5478,"src":"3392:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5421,"name":"uint256","nodeType":"ElementaryTypeName","src":"3392:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5426,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5423,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"3416:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3429:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3416:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3392:38:28"},{"assignments":[5428],"declarations":[{"constant":false,"id":5428,"mutability":"mutable","name":"lastIndex","nodeType":"VariableDeclaration","scope":5478,"src":"3444:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5427,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5434,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":5429,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"3464:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5353,"src":"3464:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3464:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3485:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3464:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3444:42:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5435,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"3505:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5436,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"3518:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3505:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5462,"nodeType":"IfStatement","src":"3501:398:28","trueBody":{"id":5461,"nodeType":"Block","src":"3533:366:28","statements":[{"assignments":[5439],"declarations":[{"constant":false,"id":5439,"mutability":"mutable","name":"lastValue","nodeType":"VariableDeclaration","scope":5461,"src":"3551:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3551:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5444,"initialValue":{"baseExpression":{"expression":{"id":5440,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"3571:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5353,"src":"3571:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5443,"indexExpression":{"id":5442,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"3583:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3571:22:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3551:42:28"},{"expression":{"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":5445,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"3693:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5353,"src":"3693:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5449,"indexExpression":{"id":5447,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"3705:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3693:26:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5450,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"3722:9:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3693:38:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5452,"nodeType":"ExpressionStatement","src":"3693:38:28"},{"expression":{"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":5453,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"3805:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5357,"src":"3805:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5457,"indexExpression":{"id":5455,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"3818:9:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3805:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5458,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"3831:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3805:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5460,"nodeType":"ExpressionStatement","src":"3805:36:28"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":5463,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"3977:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5353,"src":"3977:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3977:15:28","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3977:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5469,"nodeType":"ExpressionStatement","src":"3977:17:28"},{"expression":{"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4062:26:28","subExpression":{"baseExpression":{"expression":{"id":5470,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"4069:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5357,"src":"4069:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5473,"indexExpression":{"id":5472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"4082:5:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4069:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5475,"nodeType":"ExpressionStatement","src":"4062:26:28"},{"expression":{"hexValue":"74727565","id":5476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4110:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5410,"id":5477,"nodeType":"Return","src":"4103:11:28"}]}}]},"documentation":{"id":5401,"nodeType":"StructuredDocumentation","src":"2624:157:28","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5484,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nodeType":"FunctionDefinition","parameters":{"id":5407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5484,"src":"2803:15:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5403,"nodeType":"UserDefinedTypeName","pathNode":{"id":5402,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":5358,"src":"2803:3:28"},"referencedDeclaration":5358,"src":"2803:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":5406,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":5484,"src":"2820:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2820:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2802:32:28"},"returnParameters":{"id":5410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5409,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5484,"src":"2852:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5408,"name":"bool","nodeType":"ElementaryTypeName","src":"2852:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2851:6:28"},"scope":5960,"src":"2786:1388:28","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5502,"nodeType":"Block","src":"4334:48:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":5495,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"4351:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5357,"src":"4351:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5498,"indexExpression":{"id":5497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"4364:5:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4351:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4351:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5494,"id":5501,"nodeType":"Return","src":"4344:31:28"}]},"documentation":{"id":5485,"nodeType":"StructuredDocumentation","src":"4180:70:28","text":" @dev Returns true if the value is in the set. O(1)."},"id":5503,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nodeType":"FunctionDefinition","parameters":{"id":5491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5488,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5503,"src":"4274:15:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5487,"nodeType":"UserDefinedTypeName","pathNode":{"id":5486,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":5358,"src":"4274:3:28"},"referencedDeclaration":5358,"src":"4274:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":5490,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":5503,"src":"4291:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4273:32:28"},"returnParameters":{"id":5494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5493,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5503,"src":"4328:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5492,"name":"bool","nodeType":"ElementaryTypeName","src":"4328:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4327:6:28"},"scope":5960,"src":"4255:127:28","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5516,"nodeType":"Block","src":"4528:42:28","statements":[{"expression":{"expression":{"expression":{"id":5512,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"4545:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5353,"src":"4545:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4545:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5511,"id":5515,"nodeType":"Return","src":"4538:25:28"}]},"documentation":{"id":5504,"nodeType":"StructuredDocumentation","src":"4388:70:28","text":" @dev Returns the number of values on the set. O(1)."},"id":5517,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nodeType":"FunctionDefinition","parameters":{"id":5508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5507,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5517,"src":"4480:15:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5506,"nodeType":"UserDefinedTypeName","pathNode":{"id":5505,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":5358,"src":"4480:3:28"},"referencedDeclaration":5358,"src":"4480:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4479:17:28"},"returnParameters":{"id":5511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5510,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5517,"src":"4519:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5509,"name":"uint256","nodeType":"ElementaryTypeName","src":"4519:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4518:9:28"},"scope":5960,"src":"4463:107:28","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5533,"nodeType":"Block","src":"4988:42:28","statements":[{"expression":{"baseExpression":{"expression":{"id":5528,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"5005:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5353,"src":"5005:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5531,"indexExpression":{"id":5530,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"5017:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5005:18:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5527,"id":5532,"nodeType":"Return","src":"4998:25:28"}]},"documentation":{"id":5518,"nodeType":"StructuredDocumentation","src":"4576:331:28","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5534,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nodeType":"FunctionDefinition","parameters":{"id":5524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5521,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5534,"src":"4925:15:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5520,"nodeType":"UserDefinedTypeName","pathNode":{"id":5519,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":5358,"src":"4925:3:28"},"referencedDeclaration":5358,"src":"4925:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":5523,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":5534,"src":"4942:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5522,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4924:32:28"},"returnParameters":{"id":5527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5526,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5534,"src":"4979:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4979:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4978:9:28"},"scope":5960,"src":"4912:118:28","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5547,"nodeType":"Block","src":"5644:35:28","statements":[{"expression":{"expression":{"id":5544,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"5661:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5545,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5353,"src":"5661:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":5543,"id":5546,"nodeType":"Return","src":"5654:18:28"}]},"documentation":{"id":5535,"nodeType":"StructuredDocumentation","src":"5036:529:28","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5548,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nodeType":"FunctionDefinition","parameters":{"id":5539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5538,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5548,"src":"5587:15:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5537,"nodeType":"UserDefinedTypeName","pathNode":{"id":5536,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":5358,"src":"5587:3:28"},"referencedDeclaration":5358,"src":"5587:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5586:17:28"},"returnParameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5548,"src":"5626:16:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5626:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5541,"nodeType":"ArrayTypeName","src":"5626:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5625:18:28"},"scope":5960,"src":"5570:109:28","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":5552,"members":[{"constant":false,"id":5551,"mutability":"mutable","name":"_inner","nodeType":"VariableDeclaration","scope":5552,"src":"5732:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5550,"nodeType":"UserDefinedTypeName","pathNode":{"id":5549,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":5358,"src":"5732:3:28"},"referencedDeclaration":5358,"src":"5732:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nodeType":"StructDefinition","scope":5960,"src":"5704:45:28","visibility":"public"},{"body":{"id":5569,"nodeType":"Block","src":"5995:47:28","statements":[{"expression":{"arguments":[{"expression":{"id":5564,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"6017:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5551,"src":"6017:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"6029:5:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5563,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"6012:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5358_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6012:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5562,"id":5568,"nodeType":"Return","src":"6005:30:28"}]},"documentation":{"id":5553,"nodeType":"StructuredDocumentation","src":"5755:159:28","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5570,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":5559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5556,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5570,"src":"5932:22:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5555,"nodeType":"UserDefinedTypeName","pathNode":{"id":5554,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":5552,"src":"5932:10:28"},"referencedDeclaration":5552,"src":"5932:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5558,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":5570,"src":"5956:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5956:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5931:39:28"},"returnParameters":{"id":5562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5561,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5570,"src":"5989:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5560,"name":"bool","nodeType":"ElementaryTypeName","src":"5989:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5988:6:28"},"scope":5960,"src":"5919:123:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5587,"nodeType":"Block","src":"6289:50:28","statements":[{"expression":{"arguments":[{"expression":{"id":5582,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"6314:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5551,"src":"6314:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"6326:5:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5581,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"6306:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5358_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6306:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5580,"id":5586,"nodeType":"Return","src":"6299:33:28"}]},"documentation":{"id":5571,"nodeType":"StructuredDocumentation","src":"6048:157:28","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5588,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nodeType":"FunctionDefinition","parameters":{"id":5577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5574,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5588,"src":"6226:22:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5573,"nodeType":"UserDefinedTypeName","pathNode":{"id":5572,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":5552,"src":"6226:10:28"},"referencedDeclaration":5552,"src":"6226:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5576,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":5588,"src":"6250:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6225:39:28"},"returnParameters":{"id":5580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5579,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5588,"src":"6283:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5578,"name":"bool","nodeType":"ElementaryTypeName","src":"6283:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6282:6:28"},"scope":5960,"src":"6210:129:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5605,"nodeType":"Block","src":"6506:52:28","statements":[{"expression":{"arguments":[{"expression":{"id":5600,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"6533:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5551,"src":"6533:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"6545:5:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5599,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"6523:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5358_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6523:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5598,"id":5604,"nodeType":"Return","src":"6516:35:28"}]},"documentation":{"id":5589,"nodeType":"StructuredDocumentation","src":"6345:70:28","text":" @dev Returns true if the value is in the set. O(1)."},"id":5606,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nodeType":"FunctionDefinition","parameters":{"id":5595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5592,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5606,"src":"6438:22:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5591,"nodeType":"UserDefinedTypeName","pathNode":{"id":5590,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":5552,"src":"6438:10:28"},"referencedDeclaration":5552,"src":"6438:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5594,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":5606,"src":"6462:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6462:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6437:39:28"},"returnParameters":{"id":5598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5597,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5606,"src":"6500:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5596,"name":"bool","nodeType":"ElementaryTypeName","src":"6500:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6499:6:28"},"scope":5960,"src":"6420:138:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5620,"nodeType":"Block","src":"6711:43:28","statements":[{"expression":{"arguments":[{"expression":{"id":5616,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"6736:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5617,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5551,"src":"6736:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5615,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"6728:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5358_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6728:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5614,"id":5619,"nodeType":"Return","src":"6721:26:28"}]},"documentation":{"id":5607,"nodeType":"StructuredDocumentation","src":"6564:70:28","text":" @dev Returns the number of values in the set. O(1)."},"id":5621,"implemented":true,"kind":"function","modifiers":[],"name":"length","nodeType":"FunctionDefinition","parameters":{"id":5611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5610,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5621,"src":"6655:22:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5609,"nodeType":"UserDefinedTypeName","pathNode":{"id":5608,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":5552,"src":"6655:10:28"},"referencedDeclaration":5552,"src":"6655:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6654:24:28"},"returnParameters":{"id":5614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5613,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5621,"src":"6702:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5612,"name":"uint256","nodeType":"ElementaryTypeName","src":"6702:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6701:9:28"},"scope":5960,"src":"6639:115:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5638,"nodeType":"Block","src":"7179:46:28","statements":[{"expression":{"arguments":[{"expression":{"id":5633,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"7200:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5551,"src":"7200:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5635,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"7212:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5632,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5534,"src":"7196:3:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5358_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7196:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5631,"id":5637,"nodeType":"Return","src":"7189:29:28"}]},"documentation":{"id":5622,"nodeType":"StructuredDocumentation","src":"6760:331:28","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5639,"implemented":true,"kind":"function","modifiers":[],"name":"at","nodeType":"FunctionDefinition","parameters":{"id":5628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5625,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5639,"src":"7108:22:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5624,"nodeType":"UserDefinedTypeName","pathNode":{"id":5623,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":5552,"src":"7108:10:28"},"referencedDeclaration":5552,"src":"7108:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5627,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":5639,"src":"7132:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5626,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:39:28"},"returnParameters":{"id":5631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5639,"src":"7170:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7170:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7169:9:28"},"scope":5960,"src":"7096:129:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5668,"nodeType":"Block","src":"7846:219:28","statements":[{"assignments":[5653],"declarations":[{"constant":false,"id":5653,"mutability":"mutable","name":"store","nodeType":"VariableDeclaration","scope":5668,"src":"7856:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7856:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5652,"nodeType":"ArrayTypeName","src":"7856:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5658,"initialValue":{"arguments":[{"expression":{"id":5655,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5643,"src":"7889:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5551,"src":"7889:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5654,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"7881:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5358_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7881:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7856:44:28"},{"assignments":[5663],"declarations":[{"constant":false,"id":5663,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":5668,"src":"7910:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7910:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5662,"nodeType":"ArrayTypeName","src":"7910:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5664,"nodeType":"VariableDeclarationStatement","src":"7910:23:28"},{"AST":{"nodeType":"YulBlock","src":"7996:39:28","statements":[{"nodeType":"YulAssignment","src":"8010:15:28","value":{"name":"store","nodeType":"YulIdentifier","src":"8020:5:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8010:6:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":5663,"isOffset":false,"isSlot":false,"src":"8010:6:28","valueSize":1},{"declaration":5653,"isOffset":false,"isSlot":false,"src":"8020:5:28","valueSize":1}],"id":5665,"nodeType":"InlineAssembly","src":"7987:48:28"},{"expression":{"id":5666,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"8052:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":5648,"id":5667,"nodeType":"Return","src":"8045:13:28"}]},"documentation":{"id":5640,"nodeType":"StructuredDocumentation","src":"7231:529:28","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5669,"implemented":true,"kind":"function","modifiers":[],"name":"values","nodeType":"FunctionDefinition","parameters":{"id":5644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5643,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5669,"src":"7781:22:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5642,"nodeType":"UserDefinedTypeName","pathNode":{"id":5641,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":5552,"src":"7781:10:28"},"referencedDeclaration":5552,"src":"7781:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5552_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7780:24:28"},"returnParameters":{"id":5648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5647,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5669,"src":"7828:16:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7828:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5646,"nodeType":"ArrayTypeName","src":"7828:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7827:18:28"},"scope":5960,"src":"7765:300:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":5673,"members":[{"constant":false,"id":5672,"mutability":"mutable","name":"_inner","nodeType":"VariableDeclaration","scope":5673,"src":"8118:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5671,"nodeType":"UserDefinedTypeName","pathNode":{"id":5670,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":5358,"src":"8118:3:28"},"referencedDeclaration":5358,"src":"8118:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nodeType":"StructDefinition","scope":5960,"src":"8090:45:28","visibility":"public"},{"body":{"id":5699,"nodeType":"Block","src":"8381:74:28","statements":[{"expression":{"arguments":[{"expression":{"id":5685,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"8403:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5672,"src":"8403:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"8439:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8431:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5691,"name":"uint160","nodeType":"ElementaryTypeName","src":"8431:7:28","typeDescriptions":{}}},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8431:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5689,"name":"uint256","nodeType":"ElementaryTypeName","src":"8423:7:28","typeDescriptions":{}}},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8423:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8415:7:28","typeDescriptions":{}}},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8415:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5684,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"8398:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5358_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8398:50:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5683,"id":5698,"nodeType":"Return","src":"8391:57:28"}]},"documentation":{"id":5674,"nodeType":"StructuredDocumentation","src":"8141:159:28","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5700,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":5680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5677,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5700,"src":"8318:22:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5676,"nodeType":"UserDefinedTypeName","pathNode":{"id":5675,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":5673,"src":"8318:10:28"},"referencedDeclaration":5673,"src":"8318:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5679,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":5700,"src":"8342:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5678,"name":"address","nodeType":"ElementaryTypeName","src":"8342:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8317:39:28"},"returnParameters":{"id":5683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5682,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5700,"src":"8375:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5681,"name":"bool","nodeType":"ElementaryTypeName","src":"8375:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8374:6:28"},"scope":5960,"src":"8305:150:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5726,"nodeType":"Block","src":"8702:77:28","statements":[{"expression":{"arguments":[{"expression":{"id":5712,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"8727:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5672,"src":"8727:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"8763:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8755:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5718,"name":"uint160","nodeType":"ElementaryTypeName","src":"8755:7:28","typeDescriptions":{}}},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8755:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5716,"name":"uint256","nodeType":"ElementaryTypeName","src":"8747:7:28","typeDescriptions":{}}},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8747:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8739:7:28","typeDescriptions":{}}},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8739:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5711,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"8719:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5358_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8719:53:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5710,"id":5725,"nodeType":"Return","src":"8712:60:28"}]},"documentation":{"id":5701,"nodeType":"StructuredDocumentation","src":"8461:157:28","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5727,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nodeType":"FunctionDefinition","parameters":{"id":5707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5704,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5727,"src":"8639:22:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5703,"nodeType":"UserDefinedTypeName","pathNode":{"id":5702,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":5673,"src":"8639:10:28"},"referencedDeclaration":5673,"src":"8639:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5706,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":5727,"src":"8663:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5705,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8638:39:28"},"returnParameters":{"id":5710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5709,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5727,"src":"8696:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5708,"name":"bool","nodeType":"ElementaryTypeName","src":"8696:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8695:6:28"},"scope":5960,"src":"8623:156:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5753,"nodeType":"Block","src":"8946:79:28","statements":[{"expression":{"arguments":[{"expression":{"id":5739,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"8973:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5672,"src":"8973:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"9009:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5745,"name":"uint160","nodeType":"ElementaryTypeName","src":"9001:7:28","typeDescriptions":{}}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9001:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5743,"name":"uint256","nodeType":"ElementaryTypeName","src":"8993:7:28","typeDescriptions":{}}},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8993:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8985:7:28","typeDescriptions":{}}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8985:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5738,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"8963:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5358_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8963:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5737,"id":5752,"nodeType":"Return","src":"8956:62:28"}]},"documentation":{"id":5728,"nodeType":"StructuredDocumentation","src":"8785:70:28","text":" @dev Returns true if the value is in the set. O(1)."},"id":5754,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nodeType":"FunctionDefinition","parameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5731,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5754,"src":"8878:22:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5730,"nodeType":"UserDefinedTypeName","pathNode":{"id":5729,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":5673,"src":"8878:10:28"},"referencedDeclaration":5673,"src":"8878:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5733,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":5754,"src":"8902:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5732,"name":"address","nodeType":"ElementaryTypeName","src":"8902:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:39:28"},"returnParameters":{"id":5737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5736,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5754,"src":"8940:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5735,"name":"bool","nodeType":"ElementaryTypeName","src":"8940:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8939:6:28"},"scope":5960,"src":"8860:165:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5768,"nodeType":"Block","src":"9178:43:28","statements":[{"expression":{"arguments":[{"expression":{"id":5764,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"9203:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5765,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5672,"src":"9203:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5763,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"9195:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5358_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9195:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5762,"id":5767,"nodeType":"Return","src":"9188:26:28"}]},"documentation":{"id":5755,"nodeType":"StructuredDocumentation","src":"9031:70:28","text":" @dev Returns the number of values in the set. O(1)."},"id":5769,"implemented":true,"kind":"function","modifiers":[],"name":"length","nodeType":"FunctionDefinition","parameters":{"id":5759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5758,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5769,"src":"9122:22:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5757,"nodeType":"UserDefinedTypeName","pathNode":{"id":5756,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":5673,"src":"9122:10:28"},"referencedDeclaration":5673,"src":"9122:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9121:24:28"},"returnParameters":{"id":5762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5761,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5769,"src":"9169:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5760,"name":"uint256","nodeType":"ElementaryTypeName","src":"9169:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9168:9:28"},"scope":5960,"src":"9106:115:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5795,"nodeType":"Block","src":"9646:73:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":5787,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"9691:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5672,"src":"9691:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5789,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5775,"src":"9703:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5786,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5534,"src":"9687:3:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5358_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9687:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9679:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5784,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:28","typeDescriptions":{}}},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9679:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5782,"name":"uint160","nodeType":"ElementaryTypeName","src":"9671:7:28","typeDescriptions":{}}},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9671:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5780,"name":"address","nodeType":"ElementaryTypeName","src":"9663:7:28","typeDescriptions":{}}},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9663:49:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5779,"id":5794,"nodeType":"Return","src":"9656:56:28"}]},"documentation":{"id":5770,"nodeType":"StructuredDocumentation","src":"9227:331:28","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5796,"implemented":true,"kind":"function","modifiers":[],"name":"at","nodeType":"FunctionDefinition","parameters":{"id":5776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5773,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5796,"src":"9575:22:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5772,"nodeType":"UserDefinedTypeName","pathNode":{"id":5771,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":5673,"src":"9575:10:28"},"referencedDeclaration":5673,"src":"9575:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5775,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":5796,"src":"9599:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5774,"name":"uint256","nodeType":"ElementaryTypeName","src":"9599:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9574:39:28"},"returnParameters":{"id":5779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5778,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5796,"src":"9637:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5777,"name":"address","nodeType":"ElementaryTypeName","src":"9637:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9636:9:28"},"scope":5960,"src":"9563:156:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5825,"nodeType":"Block","src":"10340:219:28","statements":[{"assignments":[5810],"declarations":[{"constant":false,"id":5810,"mutability":"mutable","name":"store","nodeType":"VariableDeclaration","scope":5825,"src":"10350:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10350:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5809,"nodeType":"ArrayTypeName","src":"10350:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5815,"initialValue":{"arguments":[{"expression":{"id":5812,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"10383:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5672,"src":"10383:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5811,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"10375:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5358_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10375:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10350:44:28"},{"assignments":[5820],"declarations":[{"constant":false,"id":5820,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":5825,"src":"10404:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5818,"name":"address","nodeType":"ElementaryTypeName","src":"10404:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5819,"nodeType":"ArrayTypeName","src":"10404:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5821,"nodeType":"VariableDeclarationStatement","src":"10404:23:28"},{"AST":{"nodeType":"YulBlock","src":"10490:39:28","statements":[{"nodeType":"YulAssignment","src":"10504:15:28","value":{"name":"store","nodeType":"YulIdentifier","src":"10514:5:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10504:6:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":5820,"isOffset":false,"isSlot":false,"src":"10504:6:28","valueSize":1},{"declaration":5810,"isOffset":false,"isSlot":false,"src":"10514:5:28","valueSize":1}],"id":5822,"nodeType":"InlineAssembly","src":"10481:48:28"},{"expression":{"id":5823,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"10546:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5805,"id":5824,"nodeType":"Return","src":"10539:13:28"}]},"documentation":{"id":5797,"nodeType":"StructuredDocumentation","src":"9725:529:28","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5826,"implemented":true,"kind":"function","modifiers":[],"name":"values","nodeType":"FunctionDefinition","parameters":{"id":5801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5800,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5826,"src":"10275:22:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5799,"nodeType":"UserDefinedTypeName","pathNode":{"id":5798,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":5673,"src":"10275:10:28"},"referencedDeclaration":5673,"src":"10275:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5673_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10274:24:28"},"returnParameters":{"id":5805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5804,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5826,"src":"10322:16:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5802,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5803,"nodeType":"ArrayTypeName","src":"10322:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10321:18:28"},"scope":5960,"src":"10259:300:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":5830,"members":[{"constant":false,"id":5829,"mutability":"mutable","name":"_inner","nodeType":"VariableDeclaration","scope":5830,"src":"10606:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5828,"nodeType":"UserDefinedTypeName","pathNode":{"id":5827,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":5358,"src":"10606:3:28"},"referencedDeclaration":5358,"src":"10606:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nodeType":"StructDefinition","scope":5960,"src":"10581:42:28","visibility":"public"},{"body":{"id":5850,"nodeType":"Block","src":"10866:56:28","statements":[{"expression":{"arguments":[{"expression":{"id":5842,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5834,"src":"10888:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5843,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5829,"src":"10888:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":5846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"10908:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10900:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10900:7:28","typeDescriptions":{}}},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10900:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5841,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"10883:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5358_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10883:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5840,"id":5849,"nodeType":"Return","src":"10876:39:28"}]},"documentation":{"id":5831,"nodeType":"StructuredDocumentation","src":"10629:159:28","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5851,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":5837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5834,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5851,"src":"10806:19:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5833,"nodeType":"UserDefinedTypeName","pathNode":{"id":5832,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":5830,"src":"10806:7:28"},"referencedDeclaration":5830,"src":"10806:7:28","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":5836,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":5851,"src":"10827:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5835,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10805:36:28"},"returnParameters":{"id":5840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5839,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5851,"src":"10860:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5838,"name":"bool","nodeType":"ElementaryTypeName","src":"10860:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10859:6:28"},"scope":5960,"src":"10793:129:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5871,"nodeType":"Block","src":"11166:59:28","statements":[{"expression":{"arguments":[{"expression":{"id":5863,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"11191:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5829,"src":"11191:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":5867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"11211:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11203:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11203:7:28","typeDescriptions":{}}},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11203:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5862,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"11183:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5358_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11183:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5861,"id":5870,"nodeType":"Return","src":"11176:42:28"}]},"documentation":{"id":5852,"nodeType":"StructuredDocumentation","src":"10928:157:28","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5872,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nodeType":"FunctionDefinition","parameters":{"id":5858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5855,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5872,"src":"11106:19:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5854,"nodeType":"UserDefinedTypeName","pathNode":{"id":5853,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":5830,"src":"11106:7:28"},"referencedDeclaration":5830,"src":"11106:7:28","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":5857,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":5872,"src":"11127:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5856,"name":"uint256","nodeType":"ElementaryTypeName","src":"11127:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11105:36:28"},"returnParameters":{"id":5861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5860,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5872,"src":"11160:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5859,"name":"bool","nodeType":"ElementaryTypeName","src":"11160:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11159:6:28"},"scope":5960,"src":"11090:135:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5892,"nodeType":"Block","src":"11389:61:28","statements":[{"expression":{"arguments":[{"expression":{"id":5884,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5876,"src":"11416:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5829,"src":"11416:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":5888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"11436:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11428:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11428:7:28","typeDescriptions":{}}},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11428:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5883,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"11406:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5358_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11406:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5882,"id":5891,"nodeType":"Return","src":"11399:44:28"}]},"documentation":{"id":5873,"nodeType":"StructuredDocumentation","src":"11231:70:28","text":" @dev Returns true if the value is in the set. O(1)."},"id":5893,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nodeType":"FunctionDefinition","parameters":{"id":5879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5876,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5893,"src":"11324:19:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5875,"nodeType":"UserDefinedTypeName","pathNode":{"id":5874,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":5830,"src":"11324:7:28"},"referencedDeclaration":5830,"src":"11324:7:28","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":5878,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":5893,"src":"11345:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5877,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11323:36:28"},"returnParameters":{"id":5882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5881,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5893,"src":"11383:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5880,"name":"bool","nodeType":"ElementaryTypeName","src":"11383:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11382:6:28"},"scope":5960,"src":"11306:144:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5907,"nodeType":"Block","src":"11600:43:28","statements":[{"expression":{"arguments":[{"expression":{"id":5903,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"11625:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5829,"src":"11625:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5902,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"11617:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5358_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11617:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5901,"id":5906,"nodeType":"Return","src":"11610:26:28"}]},"documentation":{"id":5894,"nodeType":"StructuredDocumentation","src":"11456:70:28","text":" @dev Returns the number of values in the set. O(1)."},"id":5908,"implemented":true,"kind":"function","modifiers":[],"name":"length","nodeType":"FunctionDefinition","parameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5897,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5908,"src":"11547:19:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5896,"nodeType":"UserDefinedTypeName","pathNode":{"id":5895,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":5830,"src":"11547:7:28"},"referencedDeclaration":5830,"src":"11547:7:28","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11546:21:28"},"returnParameters":{"id":5901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5900,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5908,"src":"11591:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5899,"name":"uint256","nodeType":"ElementaryTypeName","src":"11591:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11590:9:28"},"scope":5960,"src":"11531:112:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5928,"nodeType":"Block","src":"12065:55:28","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":5922,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"12094:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5829,"src":"12094:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5924,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"12106:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5921,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5534,"src":"12090:3:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5358_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12090:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12082:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5919,"name":"uint256","nodeType":"ElementaryTypeName","src":"12082:7:28","typeDescriptions":{}}},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12082:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5918,"id":5927,"nodeType":"Return","src":"12075:38:28"}]},"documentation":{"id":5909,"nodeType":"StructuredDocumentation","src":"11649:331:28","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5929,"implemented":true,"kind":"function","modifiers":[],"name":"at","nodeType":"FunctionDefinition","parameters":{"id":5915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5912,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5929,"src":"11997:19:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5911,"nodeType":"UserDefinedTypeName","pathNode":{"id":5910,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":5830,"src":"11997:7:28"},"referencedDeclaration":5830,"src":"11997:7:28","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":5914,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":5929,"src":"12018:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5913,"name":"uint256","nodeType":"ElementaryTypeName","src":"12018:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11996:36:28"},"returnParameters":{"id":5918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5917,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5929,"src":"12056:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5916,"name":"uint256","nodeType":"ElementaryTypeName","src":"12056:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12055:9:28"},"scope":5960,"src":"11985:135:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5958,"nodeType":"Block","src":"12738:219:28","statements":[{"assignments":[5943],"declarations":[{"constant":false,"id":5943,"mutability":"mutable","name":"store","nodeType":"VariableDeclaration","scope":5958,"src":"12748:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5941,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12748:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5942,"nodeType":"ArrayTypeName","src":"12748:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5948,"initialValue":{"arguments":[{"expression":{"id":5945,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"12781:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5829,"src":"12781:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5358_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5944,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"12773:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5358_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12773:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12748:44:28"},{"assignments":[5953],"declarations":[{"constant":false,"id":5953,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":5958,"src":"12802:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5951,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5952,"nodeType":"ArrayTypeName","src":"12802:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5954,"nodeType":"VariableDeclarationStatement","src":"12802:23:28"},{"AST":{"nodeType":"YulBlock","src":"12888:39:28","statements":[{"nodeType":"YulAssignment","src":"12902:15:28","value":{"name":"store","nodeType":"YulIdentifier","src":"12912:5:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12902:6:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":5953,"isOffset":false,"isSlot":false,"src":"12902:6:28","valueSize":1},{"declaration":5943,"isOffset":false,"isSlot":false,"src":"12912:5:28","valueSize":1}],"id":5955,"nodeType":"InlineAssembly","src":"12879:48:28"},{"expression":{"id":5956,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"12944:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5938,"id":5957,"nodeType":"Return","src":"12937:13:28"}]},"documentation":{"id":5930,"nodeType":"StructuredDocumentation","src":"12126:529:28","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5959,"implemented":true,"kind":"function","modifiers":[],"name":"values","nodeType":"FunctionDefinition","parameters":{"id":5934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5933,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":5959,"src":"12676:19:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5932,"nodeType":"UserDefinedTypeName","pathNode":{"id":5931,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":5830,"src":"12676:7:28"},"referencedDeclaration":5830,"src":"12676:7:28","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5830_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12675:21:28"},"returnParameters":{"id":5938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5937,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5959,"src":"12720:16:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5935,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5936,"nodeType":"ArrayTypeName","src":"12720:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12719:18:28"},"scope":5960,"src":"12660:297:28","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5961,"src":"1329:11630:28"}],"src":"205:12755:28"},"id":28},"solidity-bytes-utils/contracts/BytesLib.sol":{"ast":{"absolutePath":"solidity-bytes-utils/contracts/BytesLib.sol","exportedSymbols":{"BytesLib":[6293]},"id":6294,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":5962,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"336:31:29"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":6293,"linearizedBaseContracts":[6293],"name":"BytesLib","nodeType":"ContractDefinition","nodes":[{"body":{"id":5977,"nodeType":"Block","src":"545:2803:29","statements":[{"assignments":[5972],"declarations":[{"constant":false,"id":5972,"mutability":"mutable","name":"tempBytes","nodeType":"VariableDeclaration","scope":5977,"src":"555:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5971,"name":"bytes","nodeType":"ElementaryTypeName","src":"555:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5973,"nodeType":"VariableDeclarationStatement","src":"555:22:29"},{"AST":{"nodeType":"YulBlock","src":"597:2718:29","statements":[{"nodeType":"YulAssignment","src":"741:24:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"760:4:29","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"754:5:29"},"nodeType":"YulFunctionCall","src":"754:11:29"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"741:9:29"}]},{"nodeType":"YulVariableDeclaration","src":"897:30:29","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"917:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"911:5:29"},"nodeType":"YulFunctionCall","src":"911:16:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"901:6:29","type":""}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"947:9:29"},{"name":"length","nodeType":"YulIdentifier","src":"958:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"940:6:29"},"nodeType":"YulFunctionCall","src":"940:25:29"},"nodeType":"YulExpressionStatement","src":"940:25:29"},{"nodeType":"YulVariableDeclaration","src":"1175:30:29","value":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"1189:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1200:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1185:3:29"},"nodeType":"YulFunctionCall","src":"1185:20:29"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"1179:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1330:26:29","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1345:2:29"},{"name":"length","nodeType":"YulIdentifier","src":"1349:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1341:3:29"},"nodeType":"YulFunctionCall","src":"1341:15:29"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"1334:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1733:162:29","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1867:2:29"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1877:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1871:5:29"},"nodeType":"YulFunctionCall","src":"1871:9:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1860:6:29"},"nodeType":"YulFunctionCall","src":"1860:21:29"},"nodeType":"YulExpressionStatement","src":"1860:21:29"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1566:2:29"},{"name":"end","nodeType":"YulIdentifier","src":"1570:3:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1563:2:29"},"nodeType":"YulFunctionCall","src":"1563:11:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1575:157:29","statements":[{"nodeType":"YulAssignment","src":"1663:19:29","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1673:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"1677:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1669:3:29"},"nodeType":"YulFunctionCall","src":"1669:13:29"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"1663:2:29"}]},{"nodeType":"YulAssignment","src":"1699:19:29","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1709:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"1713:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1705:3:29"},"nodeType":"YulFunctionCall","src":"1705:13:29"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"1699:2:29"}]}]},"pre":{"nodeType":"YulBlock","src":"1374:188:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1518:30:29","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"1532:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1543:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1528:3:29"},"nodeType":"YulFunctionCall","src":"1528:20:29"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"1522:2:29","type":""}]}]},"src":"1370:525:29"},{"nodeType":"YulAssignment","src":"2096:27:29","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2112:10:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2106:5:29"},"nodeType":"YulFunctionCall","src":"2106:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2096:6:29"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2143:9:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2158:6:29"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2172:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2166:5:29"},"nodeType":"YulFunctionCall","src":"2166:16:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2154:3:29"},"nodeType":"YulFunctionCall","src":"2154:29:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2136:6:29"},"nodeType":"YulFunctionCall","src":"2136:48:29"},"nodeType":"YulExpressionStatement","src":"2136:48:29"},{"nodeType":"YulAssignment","src":"2322:9:29","value":{"name":"end","nodeType":"YulIdentifier","src":"2328:3:29"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2322:2:29"}]},{"nodeType":"YulAssignment","src":"2458:22:29","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2469:2:29"},{"name":"length","nodeType":"YulIdentifier","src":"2473:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2465:3:29"},"nodeType":"YulFunctionCall","src":"2465:15:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2458:3:29"}]},{"body":{"nodeType":"YulBlock","src":"2662:53:29","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2687:2:29"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2697:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2691:5:29"},"nodeType":"YulFunctionCall","src":"2691:9:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2680:6:29"},"nodeType":"YulFunctionCall","src":"2680:21:29"},"nodeType":"YulExpressionStatement","src":"2680:21:29"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2565:2:29"},{"name":"end","nodeType":"YulIdentifier","src":"2569:3:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:29"},"nodeType":"YulFunctionCall","src":"2562:11:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2574:87:29","statements":[{"nodeType":"YulAssignment","src":"2592:19:29","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2602:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"2606:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2598:3:29"},"nodeType":"YulFunctionCall","src":"2598:13:29"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2592:2:29"}]},{"nodeType":"YulAssignment","src":"2628:19:29","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2638:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"2642:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:29"},"nodeType":"YulFunctionCall","src":"2634:13:29"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"2628:2:29"}]}]},"pre":{"nodeType":"YulBlock","src":"2498:63:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2516:31:29","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2530:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"2542:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2526:3:29"},"nodeType":"YulFunctionCall","src":"2526:21:29"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"2520:2:29","type":""}]}]},"src":"2494:221:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3147:4:29","type":"","value":"0x40"},{"arguments":[{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3180:3:29"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3196:6:29"},{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"3210:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3204:5:29"},"nodeType":"YulFunctionCall","src":"3204:16:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3192:3:29"},"nodeType":"YulFunctionCall","src":"3192:29:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3185:6:29"},"nodeType":"YulFunctionCall","src":"3185:37:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3176:3:29"},"nodeType":"YulFunctionCall","src":"3176:47:29"},{"kind":"number","nodeType":"YulLiteral","src":"3225:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3172:3:29"},"nodeType":"YulFunctionCall","src":"3172:56:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3248:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3244:3:29"},"nodeType":"YulFunctionCall","src":"3244:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3153:3:29"},"nodeType":"YulFunctionCall","src":"3153:151:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3140:6:29"},"nodeType":"YulFunctionCall","src":"3140:165:29"},"nodeType":"YulExpressionStatement","src":"3140:165:29"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":5966,"isOffset":false,"isSlot":false,"src":"2112:10:29","valueSize":1},{"declaration":5966,"isOffset":false,"isSlot":false,"src":"2530:10:29","valueSize":1},{"declaration":5964,"isOffset":false,"isSlot":false,"src":"1532:9:29","valueSize":1},{"declaration":5964,"isOffset":false,"isSlot":false,"src":"3210:9:29","valueSize":1},{"declaration":5964,"isOffset":false,"isSlot":false,"src":"917:9:29","valueSize":1},{"declaration":5972,"isOffset":false,"isSlot":false,"src":"1189:9:29","valueSize":1},{"declaration":5972,"isOffset":false,"isSlot":false,"src":"2143:9:29","valueSize":1},{"declaration":5972,"isOffset":false,"isSlot":false,"src":"2172:9:29","valueSize":1},{"declaration":5972,"isOffset":false,"isSlot":false,"src":"741:9:29","valueSize":1},{"declaration":5972,"isOffset":false,"isSlot":false,"src":"947:9:29","valueSize":1}],"id":5974,"nodeType":"InlineAssembly","src":"588:2727:29"},{"expression":{"id":5975,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"3332:9:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5970,"id":5976,"nodeType":"Return","src":"3325:16:29"}]},"id":5978,"implemented":true,"kind":"function","modifiers":[],"name":"concat","nodeType":"FunctionDefinition","parameters":{"id":5967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5964,"mutability":"mutable","name":"_preBytes","nodeType":"VariableDeclaration","scope":5978,"src":"418:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5963,"name":"bytes","nodeType":"ElementaryTypeName","src":"418:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5966,"mutability":"mutable","name":"_postBytes","nodeType":"VariableDeclaration","scope":5978,"src":"450:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5965,"name":"bytes","nodeType":"ElementaryTypeName","src":"450:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"408:71:29"},"returnParameters":{"id":5970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5969,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5978,"src":"527:12:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5968,"name":"bytes","nodeType":"ElementaryTypeName","src":"527:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"526:14:29"},"scope":6293,"src":"393:2955:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5986,"nodeType":"Block","src":"3436:6015:29","statements":[{"AST":{"nodeType":"YulBlock","src":"3455:5990:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:34:29","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"3697:14:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3691:5:29"},"nodeType":"YulFunctionCall","src":"3691:21:29"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"3682:5:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4205:76:29","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4228:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4243:5:29","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4261:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"4268:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4257:3:29"},"nodeType":"YulFunctionCall","src":"4257:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4250:6:29"},"nodeType":"YulFunctionCall","src":"4250:21:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4239:3:29"},"nodeType":"YulFunctionCall","src":"4239:33:29"},{"kind":"number","nodeType":"YulLiteral","src":"4274:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4235:3:29"},"nodeType":"YulFunctionCall","src":"4235:41:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4224:3:29"},"nodeType":"YulFunctionCall","src":"4224:53:29"},{"kind":"number","nodeType":"YulLiteral","src":"4279:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4220:3:29"},"nodeType":"YulFunctionCall","src":"4220:61:29"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"4209:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4294:32:29","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"4315:10:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4309:5:29"},"nodeType":"YulFunctionCall","src":"4309:17:29"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"4298:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4339:38:29","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4360:7:29"},{"name":"mlength","nodeType":"YulIdentifier","src":"4369:7:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4356:3:29"},"nodeType":"YulFunctionCall","src":"4356:21:29"},"variables":[{"name":"newlength","nodeType":"YulTypedName","src":"4343:9:29","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4710:1485:29","statements":[{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"4991:14:29"},{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"5303:5:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"5521:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"5533:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5517:3:29"},"nodeType":"YulFunctionCall","src":"5517:21:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5511:5:29"},"nodeType":"YulFunctionCall","src":"5511:28:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5648:5:29","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5659:2:29","type":"","value":"32"},{"name":"mlength","nodeType":"YulIdentifier","src":"5663:7:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5655:3:29"},"nodeType":"YulFunctionCall","src":"5655:16:29"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5644:3:29"},"nodeType":"YulFunctionCall","src":"5644:28:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5404:3:29"},"nodeType":"YulFunctionCall","src":"5404:302:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5895:5:29","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5906:2:29","type":"","value":"32"},{"name":"newlength","nodeType":"YulIdentifier","src":"5910:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5902:3:29"},"nodeType":"YulFunctionCall","src":"5902:18:29"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5891:3:29"},"nodeType":"YulFunctionCall","src":"5891:30:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5367:3:29"},"nodeType":"YulFunctionCall","src":"5367:584:29"},{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"6104:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"6113:1:29","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6100:3:29"},"nodeType":"YulFunctionCall","src":"6100:15:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5334:3:29"},"nodeType":"YulFunctionCall","src":"5334:807:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5134:3:29"},"nodeType":"YulFunctionCall","src":"5134:1029:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4963:6:29"},"nodeType":"YulFunctionCall","src":"4963:1218:29"},"nodeType":"YulExpressionStatement","src":"4963:1218:29"}]},"nodeType":"YulCase","src":"4703:1492:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4708:1:29","type":"","value":"2"}},{"body":{"nodeType":"YulBlock","src":"6215:1935:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6424:3:29","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6429:14:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6417:6:29"},"nodeType":"YulFunctionCall","src":"6417:27:29"},"nodeType":"YulExpressionStatement","src":"6417:27:29"},{"nodeType":"YulVariableDeclaration","src":"6461:53:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6485:3:29","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"6490:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"6475:9:29"},"nodeType":"YulFunctionCall","src":"6475:20:29"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"6501:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"6510:2:29","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6497:3:29"},"nodeType":"YulFunctionCall","src":"6497:16:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6471:3:29"},"nodeType":"YulFunctionCall","src":"6471:43:29"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"6465:2:29","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6574:14:29"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"6598:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6609:1:29","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6594:3:29"},"nodeType":"YulFunctionCall","src":"6594:17:29"},{"kind":"number","nodeType":"YulLiteral","src":"6613:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6590:3:29"},"nodeType":"YulFunctionCall","src":"6590:25:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6567:6:29"},"nodeType":"YulFunctionCall","src":"6567:49:29"},"nodeType":"YulExpressionStatement","src":"6567:49:29"},{"nodeType":"YulVariableDeclaration","src":"7204:30:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7222:2:29","type":"","value":"32"},{"name":"slength","nodeType":"YulIdentifier","src":"7226:7:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7218:3:29"},"nodeType":"YulFunctionCall","src":"7218:16:29"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"7208:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7251:33:29","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7265:10:29"},{"name":"submod","nodeType":"YulIdentifier","src":"7277:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7261:3:29"},"nodeType":"YulFunctionCall","src":"7261:23:29"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"7255:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7301:35:29","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7316:10:29"},{"name":"mlength","nodeType":"YulIdentifier","src":"7328:7:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7312:3:29"},"nodeType":"YulFunctionCall","src":"7312:24:29"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"7305:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7353:38:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:5:29","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"7380:6:29"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7369:3:29"},"nodeType":"YulFunctionCall","src":"7369:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"7389:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7365:3:29"},"nodeType":"YulFunctionCall","src":"7365:26:29"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7357:4:29","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7437:2:29"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"7523:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"7558:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7490:3:29"},"nodeType":"YulFunctionCall","src":"7490:160:29"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7686:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7680:5:29"},"nodeType":"YulFunctionCall","src":"7680:9:29"},{"name":"mask","nodeType":"YulIdentifier","src":"7691:4:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7676:3:29"},"nodeType":"YulFunctionCall","src":"7676:20:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7461:3:29"},"nodeType":"YulFunctionCall","src":"7461:257:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7409:6:29"},"nodeType":"YulFunctionCall","src":"7409:327:29"},"nodeType":"YulExpressionStatement","src":"7409:327:29"},{"body":{"nodeType":"YulBlock","src":"7964:61:29","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7993:2:29"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8003:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7997:5:29"},"nodeType":"YulFunctionCall","src":"7997:9:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7986:6:29"},"nodeType":"YulFunctionCall","src":"7986:21:29"},"nodeType":"YulExpressionStatement","src":"7986:21:29"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7858:2:29"},{"name":"end","nodeType":"YulIdentifier","src":"7862:3:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7855:2:29"},"nodeType":"YulFunctionCall","src":"7855:11:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7867:96:29","statements":[{"nodeType":"YulAssignment","src":"7889:16:29","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7899:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"7903:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7895:3:29"},"nodeType":"YulFunctionCall","src":"7895:10:29"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7889:2:29"}]},{"nodeType":"YulAssignment","src":"7926:19:29","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7936:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"7940:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7932:3:29"},"nodeType":"YulFunctionCall","src":"7932:13:29"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7926:2:29"}]}]},"pre":{"nodeType":"YulBlock","src":"7758:96:29","statements":[{"nodeType":"YulAssignment","src":"7780:19:29","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7790:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"7794:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7786:3:29"},"nodeType":"YulFunctionCall","src":"7786:13:29"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7780:2:29"}]},{"nodeType":"YulAssignment","src":"7820:16:29","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7830:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"7834:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7826:3:29"},"nodeType":"YulFunctionCall","src":"7826:10:29"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7820:2:29"}]}]},"src":"7754:271:29"},{"nodeType":"YulAssignment","src":"8043:32:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8055:5:29","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8066:2:29"},{"name":"end","nodeType":"YulIdentifier","src":"8070:3:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8062:3:29"},"nodeType":"YulFunctionCall","src":"8062:12:29"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8051:3:29"},"nodeType":"YulFunctionCall","src":"8051:24:29"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"8043:4:29"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8100:2:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8118:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8112:5:29"},"nodeType":"YulFunctionCall","src":"8112:9:29"},{"name":"mask","nodeType":"YulIdentifier","src":"8123:4:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8108:3:29"},"nodeType":"YulFunctionCall","src":"8108:20:29"},{"name":"mask","nodeType":"YulIdentifier","src":"8130:4:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8104:3:29"},"nodeType":"YulFunctionCall","src":"8104:31:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8093:6:29"},"nodeType":"YulFunctionCall","src":"8093:43:29"},"nodeType":"YulExpressionStatement","src":"8093:43:29"}]},"nodeType":"YulCase","src":"6208:1942:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6213:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8171:1264:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8268:3:29","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8273:14:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8261:6:29"},"nodeType":"YulFunctionCall","src":"8261:27:29"},"nodeType":"YulExpressionStatement","src":"8261:27:29"},{"nodeType":"YulVariableDeclaration","src":"8381:53:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8405:3:29","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"8410:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8395:9:29"},"nodeType":"YulFunctionCall","src":"8395:20:29"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8421:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"8430:2:29","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8417:3:29"},"nodeType":"YulFunctionCall","src":"8417:16:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8391:3:29"},"nodeType":"YulFunctionCall","src":"8391:43:29"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"8385:2:29","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8494:14:29"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"8518:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8529:1:29","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8514:3:29"},"nodeType":"YulFunctionCall","src":"8514:17:29"},{"kind":"number","nodeType":"YulLiteral","src":"8533:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8510:3:29"},"nodeType":"YulFunctionCall","src":"8510:25:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8487:6:29"},"nodeType":"YulFunctionCall","src":"8487:49:29"},"nodeType":"YulExpressionStatement","src":"8487:49:29"},{"nodeType":"YulVariableDeclaration","src":"8663:34:29","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8685:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"8694:2:29","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8681:3:29"},"nodeType":"YulFunctionCall","src":"8681:16:29"},"variables":[{"name":"slengthmod","nodeType":"YulTypedName","src":"8667:10:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8714:34:29","value":{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"8736:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"8745:2:29","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8732:3:29"},"nodeType":"YulFunctionCall","src":"8732:16:29"},"variables":[{"name":"mlengthmod","nodeType":"YulTypedName","src":"8718:10:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8765:33:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8783:2:29","type":"","value":"32"},{"name":"slengthmod","nodeType":"YulIdentifier","src":"8787:10:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8779:3:29"},"nodeType":"YulFunctionCall","src":"8779:19:29"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"8769:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8815:33:29","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8829:10:29"},{"name":"submod","nodeType":"YulIdentifier","src":"8841:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8825:3:29"},"nodeType":"YulFunctionCall","src":"8825:23:29"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"8819:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8865:35:29","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8880:10:29"},{"name":"mlength","nodeType":"YulIdentifier","src":"8892:7:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8876:3:29"},"nodeType":"YulFunctionCall","src":"8876:24:29"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"8869:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8917:38:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8937:5:29","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"8944:6:29"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8933:3:29"},"nodeType":"YulFunctionCall","src":"8933:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"8953:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8929:3:29"},"nodeType":"YulFunctionCall","src":"8929:26:29"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"8921:4:29","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8980:2:29"},{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8994:2:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8988:5:29"},"nodeType":"YulFunctionCall","src":"8988:9:29"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9009:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9003:5:29"},"nodeType":"YulFunctionCall","src":"9003:9:29"},{"name":"mask","nodeType":"YulIdentifier","src":"9014:4:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8999:3:29"},"nodeType":"YulFunctionCall","src":"8999:20:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8984:3:29"},"nodeType":"YulFunctionCall","src":"8984:36:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8973:6:29"},"nodeType":"YulFunctionCall","src":"8973:48:29"},"nodeType":"YulExpressionStatement","src":"8973:48:29"},{"body":{"nodeType":"YulBlock","src":"9249:61:29","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9278:2:29"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9288:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9282:5:29"},"nodeType":"YulFunctionCall","src":"9282:9:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9271:6:29"},"nodeType":"YulFunctionCall","src":"9271:21:29"},"nodeType":"YulExpressionStatement","src":"9271:21:29"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9143:2:29"},{"name":"end","nodeType":"YulIdentifier","src":"9147:3:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9140:2:29"},"nodeType":"YulFunctionCall","src":"9140:11:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9152:96:29","statements":[{"nodeType":"YulAssignment","src":"9174:16:29","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9184:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"9188:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9180:3:29"},"nodeType":"YulFunctionCall","src":"9180:10:29"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"9174:2:29"}]},{"nodeType":"YulAssignment","src":"9211:19:29","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9221:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"9225:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9217:3:29"},"nodeType":"YulFunctionCall","src":"9217:13:29"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"9211:2:29"}]}]},"pre":{"nodeType":"YulBlock","src":"9043:96:29","statements":[{"nodeType":"YulAssignment","src":"9065:16:29","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9075:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"9079:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9071:3:29"},"nodeType":"YulFunctionCall","src":"9071:10:29"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"9065:2:29"}]},{"nodeType":"YulAssignment","src":"9102:19:29","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9112:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"9116:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9108:3:29"},"nodeType":"YulFunctionCall","src":"9108:13:29"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"9102:2:29"}]}]},"src":"9039:271:29"},{"nodeType":"YulAssignment","src":"9328:32:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9340:5:29","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9351:2:29"},{"name":"end","nodeType":"YulIdentifier","src":"9355:3:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9347:3:29"},"nodeType":"YulFunctionCall","src":"9347:12:29"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"9336:3:29"},"nodeType":"YulFunctionCall","src":"9336:24:29"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"9328:4:29"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9385:2:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9403:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9397:5:29"},"nodeType":"YulFunctionCall","src":"9397:9:29"},{"name":"mask","nodeType":"YulIdentifier","src":"9408:4:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9393:3:29"},"nodeType":"YulFunctionCall","src":"9393:20:29"},{"name":"mask","nodeType":"YulIdentifier","src":"9415:4:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9389:3:29"},"nodeType":"YulFunctionCall","src":"9389:31:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9378:6:29"},"nodeType":"YulFunctionCall","src":"9378:43:29"},"nodeType":"YulExpressionStatement","src":"9378:43:29"}]},"nodeType":"YulCase","src":"8163:1272:29","value":"default"}],"expression":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4658:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"4667:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4655:2:29"},"nodeType":"YulFunctionCall","src":"4655:15:29"},{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"4675:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4686:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4672:2:29"},"nodeType":"YulFunctionCall","src":"4672:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4651:3:29"},"nodeType":"YulFunctionCall","src":"4651:39:29"},"nodeType":"YulSwitch","src":"4644:4791:29"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":5982,"isOffset":false,"isSlot":false,"src":"4315:10:29","valueSize":1},{"declaration":5982,"isOffset":false,"isSlot":false,"src":"5521:10:29","valueSize":1},{"declaration":5982,"isOffset":false,"isSlot":false,"src":"7265:10:29","valueSize":1},{"declaration":5982,"isOffset":false,"isSlot":false,"src":"7316:10:29","valueSize":1},{"declaration":5982,"isOffset":false,"isSlot":false,"src":"8829:10:29","valueSize":1},{"declaration":5982,"isOffset":false,"isSlot":false,"src":"8880:10:29","valueSize":1},{"declaration":5980,"isOffset":false,"isSlot":true,"src":"3697:14:29","suffix":"slot","valueSize":1},{"declaration":5980,"isOffset":false,"isSlot":true,"src":"4991:14:29","suffix":"slot","valueSize":1},{"declaration":5980,"isOffset":false,"isSlot":true,"src":"6429:14:29","suffix":"slot","valueSize":1},{"declaration":5980,"isOffset":false,"isSlot":true,"src":"6574:14:29","suffix":"slot","valueSize":1},{"declaration":5980,"isOffset":false,"isSlot":true,"src":"8273:14:29","suffix":"slot","valueSize":1},{"declaration":5980,"isOffset":false,"isSlot":true,"src":"8494:14:29","suffix":"slot","valueSize":1}],"id":5985,"nodeType":"InlineAssembly","src":"3446:5999:29"}]},"id":5987,"implemented":true,"kind":"function","modifiers":[],"name":"concatStorage","nodeType":"FunctionDefinition","parameters":{"id":5983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5980,"mutability":"mutable","name":"_preBytes","nodeType":"VariableDeclaration","scope":5987,"src":"3377:23:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5979,"name":"bytes","nodeType":"ElementaryTypeName","src":"3377:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5982,"mutability":"mutable","name":"_postBytes","nodeType":"VariableDeclaration","scope":5987,"src":"3402:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5981,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3376:50:29"},"returnParameters":{"id":5984,"nodeType":"ParameterList","parameters":[],"src":"3436:0:29"},"scope":6293,"src":"3354:6097:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6023,"nodeType":"Block","src":"9621:2640:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5999,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"9639:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3331","id":6000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9649:2:29","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"9639:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6002,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"9655:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9639:23:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f766572666c6f77","id":6004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9664:16:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""},"value":"slice_overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""}],"id":5998,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9631:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9631:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6006,"nodeType":"ExpressionStatement","src":"9631:50:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6008,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"9699:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9699:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6010,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5991,"src":"9716:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6011,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"9725:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9716:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9699:33:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f75744f66426f756e6473","id":6014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9734:19:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""},"value":"slice_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""}],"id":6007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9691:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9691:63:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6016,"nodeType":"ExpressionStatement","src":"9691:63:29"},{"assignments":[6018],"declarations":[{"constant":false,"id":6018,"mutability":"mutable","name":"tempBytes","nodeType":"VariableDeclaration","scope":6023,"src":"9765:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6017,"name":"bytes","nodeType":"ElementaryTypeName","src":"9765:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6019,"nodeType":"VariableDeclarationStatement","src":"9765:22:29"},{"AST":{"nodeType":"YulBlock","src":"9807:2421:29","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"9863:1960:29","statements":[{"nodeType":"YulAssignment","src":"10019:24:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10038:4:29","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10032:5:29"},"nodeType":"YulFunctionCall","src":"10032:11:29"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"10019:9:29"}]},{"nodeType":"YulVariableDeclaration","src":"10667:33:29","value":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"10688:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"10697:2:29","type":"","value":"31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10684:3:29"},"nodeType":"YulFunctionCall","src":"10684:16:29"},"variables":[{"name":"lengthmod","nodeType":"YulTypedName","src":"10671:9:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11021:70:29","value":{"arguments":[{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11039:9:29"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"11050:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11035:3:29"},"nodeType":"YulFunctionCall","src":"11035:25:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11066:4:29","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"11079:9:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11072:6:29"},"nodeType":"YulFunctionCall","src":"11072:17:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11062:3:29"},"nodeType":"YulFunctionCall","src":"11062:28:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11031:3:29"},"nodeType":"YulFunctionCall","src":"11031:60:29"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"11025:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11108:27:29","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11123:2:29"},{"name":"_length","nodeType":"YulIdentifier","src":"11127:7:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11119:3:29"},"nodeType":"YulFunctionCall","src":"11119:16:29"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"11112:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"11517:61:29","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11546:2:29"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11556:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11550:5:29"},"nodeType":"YulFunctionCall","src":"11550:9:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11539:6:29"},"nodeType":"YulFunctionCall","src":"11539:21:29"},"nodeType":"YulExpressionStatement","src":"11539:21:29"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11408:2:29"},{"name":"end","nodeType":"YulIdentifier","src":"11412:3:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11405:2:29"},"nodeType":"YulFunctionCall","src":"11405:11:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11417:99:29","statements":[{"nodeType":"YulAssignment","src":"11439:19:29","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11449:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"11453:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11445:3:29"},"nodeType":"YulFunctionCall","src":"11445:13:29"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"11439:2:29"}]},{"nodeType":"YulAssignment","src":"11479:19:29","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11489:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"11493:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11485:3:29"},"nodeType":"YulFunctionCall","src":"11485:13:29"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"11479:2:29"}]}]},"pre":{"nodeType":"YulBlock","src":"11157:247:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11306:80:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"11328:6:29"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"11336:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11324:3:29"},"nodeType":"YulFunctionCall","src":"11324:22:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11352:4:29","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"11365:9:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11358:6:29"},"nodeType":"YulFunctionCall","src":"11358:17:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11348:3:29"},"nodeType":"YulFunctionCall","src":"11348:28:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11320:3:29"},"nodeType":"YulFunctionCall","src":"11320:57:29"},{"name":"_start","nodeType":"YulIdentifier","src":"11379:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11316:3:29"},"nodeType":"YulFunctionCall","src":"11316:70:29"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"11310:2:29","type":""}]}]},"src":"11153:425:29"},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11603:9:29"},{"name":"_length","nodeType":"YulIdentifier","src":"11614:7:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11596:6:29"},"nodeType":"YulFunctionCall","src":"11596:26:29"},"nodeType":"YulExpressionStatement","src":"11596:26:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11777:4:29","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11791:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"11795:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11787:3:29"},"nodeType":"YulFunctionCall","src":"11787:11:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11804:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11800:3:29"},"nodeType":"YulFunctionCall","src":"11800:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11783:3:29"},"nodeType":"YulFunctionCall","src":"11783:25:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11770:6:29"},"nodeType":"YulFunctionCall","src":"11770:39:29"},"nodeType":"YulExpressionStatement","src":"11770:39:29"}]},"nodeType":"YulCase","src":"9856:1967:29","value":{"kind":"number","nodeType":"YulLiteral","src":"9861:1:29","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"11927:291:29","statements":[{"nodeType":"YulAssignment","src":"11945:24:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11964:4:29","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11958:5:29"},"nodeType":"YulFunctionCall","src":"11958:11:29"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11945:9:29"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"12139:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12150:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12132:6:29"},"nodeType":"YulFunctionCall","src":"12132:20:29"},"nodeType":"YulExpressionStatement","src":"12132:20:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12177:4:29","type":"","value":"0x40"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"12187:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12198:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12183:3:29"},"nodeType":"YulFunctionCall","src":"12183:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12170:6:29"},"nodeType":"YulFunctionCall","src":"12170:34:29"},"nodeType":"YulExpressionStatement","src":"12170:34:29"}]},"nodeType":"YulCase","src":"11919:299:29","value":"default"}],"expression":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"9835:7:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9828:6:29"},"nodeType":"YulFunctionCall","src":"9828:15:29"},"nodeType":"YulSwitch","src":"9821:2397:29"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":5989,"isOffset":false,"isSlot":false,"src":"11328:6:29","valueSize":1},{"declaration":5993,"isOffset":false,"isSlot":false,"src":"10688:7:29","valueSize":1},{"declaration":5993,"isOffset":false,"isSlot":false,"src":"11127:7:29","valueSize":1},{"declaration":5993,"isOffset":false,"isSlot":false,"src":"11614:7:29","valueSize":1},{"declaration":5993,"isOffset":false,"isSlot":false,"src":"9835:7:29","valueSize":1},{"declaration":5991,"isOffset":false,"isSlot":false,"src":"11379:6:29","valueSize":1},{"declaration":6018,"isOffset":false,"isSlot":false,"src":"10019:9:29","valueSize":1},{"declaration":6018,"isOffset":false,"isSlot":false,"src":"11039:9:29","valueSize":1},{"declaration":6018,"isOffset":false,"isSlot":false,"src":"11603:9:29","valueSize":1},{"declaration":6018,"isOffset":false,"isSlot":false,"src":"11945:9:29","valueSize":1},{"declaration":6018,"isOffset":false,"isSlot":false,"src":"12139:9:29","valueSize":1},{"declaration":6018,"isOffset":false,"isSlot":false,"src":"12187:9:29","valueSize":1}],"id":6020,"nodeType":"InlineAssembly","src":"9798:2430:29"},{"expression":{"id":6021,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"12245:9:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5997,"id":6022,"nodeType":"Return","src":"12238:16:29"}]},"id":6024,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nodeType":"FunctionDefinition","parameters":{"id":5994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5989,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":6024,"src":"9481:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5988,"name":"bytes","nodeType":"ElementaryTypeName","src":"9481:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5991,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":6024,"src":"9510:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5990,"name":"uint256","nodeType":"ElementaryTypeName","src":"9510:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5993,"mutability":"mutable","name":"_length","nodeType":"VariableDeclaration","scope":6024,"src":"9534:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5992,"name":"uint256","nodeType":"ElementaryTypeName","src":"9534:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9471:84:29"},"returnParameters":{"id":5997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5996,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6024,"src":"9603:12:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5995,"name":"bytes","nodeType":"ElementaryTypeName","src":"9603:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9602:14:29"},"scope":6293,"src":"9457:2804:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6049,"nodeType":"Block","src":"12355:266:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6034,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"12373:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12373:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6036,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"12390:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3230","id":6037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12399:2:29","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"12390:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12373:28:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f416464726573735f6f75744f66426f756e6473","id":6040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12403:23:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""},"value":"toAddress_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""}],"id":6033,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12365:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12365:62:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6042,"nodeType":"ExpressionStatement","src":"12365:62:29"},{"assignments":[6044],"declarations":[{"constant":false,"id":6044,"mutability":"mutable","name":"tempAddress","nodeType":"VariableDeclaration","scope":6049,"src":"12437:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6043,"name":"address","nodeType":"ElementaryTypeName","src":"12437:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6045,"nodeType":"VariableDeclarationStatement","src":"12437:19:29"},{"AST":{"nodeType":"YulBlock","src":"12476:110:29","statements":[{"nodeType":"YulAssignment","src":"12490:86:29","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12523:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12531:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12519:3:29"},"nodeType":"YulFunctionCall","src":"12519:17:29"},{"name":"_start","nodeType":"YulIdentifier","src":"12538:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12515:3:29"},"nodeType":"YulFunctionCall","src":"12515:30:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12509:5:29"},"nodeType":"YulFunctionCall","src":"12509:37:29"},{"kind":"number","nodeType":"YulLiteral","src":"12548:27:29","type":"","value":"0x1000000000000000000000000"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12505:3:29"},"nodeType":"YulFunctionCall","src":"12505:71:29"},"variableNames":[{"name":"tempAddress","nodeType":"YulIdentifier","src":"12490:11:29"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6026,"isOffset":false,"isSlot":false,"src":"12523:6:29","valueSize":1},{"declaration":6028,"isOffset":false,"isSlot":false,"src":"12538:6:29","valueSize":1},{"declaration":6044,"isOffset":false,"isSlot":false,"src":"12490:11:29","valueSize":1}],"id":6046,"nodeType":"InlineAssembly","src":"12467:119:29"},{"expression":{"id":6047,"name":"tempAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"12603:11:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6032,"id":6048,"nodeType":"Return","src":"12596:18:29"}]},"id":6050,"implemented":true,"kind":"function","modifiers":[],"name":"toAddress","nodeType":"FunctionDefinition","parameters":{"id":6029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6026,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":6050,"src":"12286:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6025,"name":"bytes","nodeType":"ElementaryTypeName","src":"12286:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6028,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":6050,"src":"12307:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6027,"name":"uint256","nodeType":"ElementaryTypeName","src":"12307:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12285:37:29"},"returnParameters":{"id":6032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6031,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6050,"src":"12346:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6030,"name":"address","nodeType":"ElementaryTypeName","src":"12346:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12345:9:29"},"scope":6293,"src":"12267:354:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6075,"nodeType":"Block","src":"12711:218:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6060,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"12729:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12729:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6062,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"12746:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12755:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12746:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12729:27:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e74385f6f75744f66426f756e6473","id":6066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12759:21:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""},"value":"toUint8_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""}],"id":6059,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12721:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12721:60:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6068,"nodeType":"ExpressionStatement","src":"12721:60:29"},{"assignments":[6070],"declarations":[{"constant":false,"id":6070,"mutability":"mutable","name":"tempUint","nodeType":"VariableDeclaration","scope":6075,"src":"12791:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6069,"name":"uint8","nodeType":"ElementaryTypeName","src":"12791:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6071,"nodeType":"VariableDeclarationStatement","src":"12791:14:29"},{"AST":{"nodeType":"YulBlock","src":"12825:72:29","statements":[{"nodeType":"YulAssignment","src":"12839:48:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12865:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12873:3:29","type":"","value":"0x1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12861:3:29"},"nodeType":"YulFunctionCall","src":"12861:16:29"},{"name":"_start","nodeType":"YulIdentifier","src":"12879:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12857:3:29"},"nodeType":"YulFunctionCall","src":"12857:29:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12851:5:29"},"nodeType":"YulFunctionCall","src":"12851:36:29"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"12839:8:29"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6052,"isOffset":false,"isSlot":false,"src":"12865:6:29","valueSize":1},{"declaration":6054,"isOffset":false,"isSlot":false,"src":"12879:6:29","valueSize":1},{"declaration":6070,"isOffset":false,"isSlot":false,"src":"12839:8:29","valueSize":1}],"id":6072,"nodeType":"InlineAssembly","src":"12816:81:29"},{"expression":{"id":6073,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"12914:8:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6058,"id":6074,"nodeType":"Return","src":"12907:15:29"}]},"id":6076,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nodeType":"FunctionDefinition","parameters":{"id":6055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6052,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":6076,"src":"12644:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6051,"name":"bytes","nodeType":"ElementaryTypeName","src":"12644:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6054,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":6076,"src":"12665:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6053,"name":"uint256","nodeType":"ElementaryTypeName","src":"12665:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12643:37:29"},"returnParameters":{"id":6058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6057,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6076,"src":"12704:5:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6056,"name":"uint8","nodeType":"ElementaryTypeName","src":"12704:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"12703:7:29"},"scope":6293,"src":"12627:302:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6101,"nodeType":"Block","src":"13021:219:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6086,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"13039:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13039:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6088,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"13056:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":6089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13065:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13056:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13039:27:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7431365f6f75744f66426f756e6473","id":6092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13068:22:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""},"value":"toUint16_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""}],"id":6085,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13031:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13031:60:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6094,"nodeType":"ExpressionStatement","src":"13031:60:29"},{"assignments":[6096],"declarations":[{"constant":false,"id":6096,"mutability":"mutable","name":"tempUint","nodeType":"VariableDeclaration","scope":6101,"src":"13101:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6095,"name":"uint16","nodeType":"ElementaryTypeName","src":"13101:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":6097,"nodeType":"VariableDeclarationStatement","src":"13101:15:29"},{"AST":{"nodeType":"YulBlock","src":"13136:72:29","statements":[{"nodeType":"YulAssignment","src":"13150:48:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13176:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"13184:3:29","type":"","value":"0x2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13172:3:29"},"nodeType":"YulFunctionCall","src":"13172:16:29"},{"name":"_start","nodeType":"YulIdentifier","src":"13190:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13168:3:29"},"nodeType":"YulFunctionCall","src":"13168:29:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13162:5:29"},"nodeType":"YulFunctionCall","src":"13162:36:29"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13150:8:29"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6078,"isOffset":false,"isSlot":false,"src":"13176:6:29","valueSize":1},{"declaration":6080,"isOffset":false,"isSlot":false,"src":"13190:6:29","valueSize":1},{"declaration":6096,"isOffset":false,"isSlot":false,"src":"13150:8:29","valueSize":1}],"id":6098,"nodeType":"InlineAssembly","src":"13127:81:29"},{"expression":{"id":6099,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6096,"src":"13225:8:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6084,"id":6100,"nodeType":"Return","src":"13218:15:29"}]},"id":6102,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nodeType":"FunctionDefinition","parameters":{"id":6081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6078,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":6102,"src":"12953:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6077,"name":"bytes","nodeType":"ElementaryTypeName","src":"12953:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6080,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":6102,"src":"12974:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6079,"name":"uint256","nodeType":"ElementaryTypeName","src":"12974:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12952:37:29"},"returnParameters":{"id":6084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6083,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6102,"src":"13013:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6082,"name":"uint16","nodeType":"ElementaryTypeName","src":"13013:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"13012:8:29"},"scope":6293,"src":"12935:305:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6127,"nodeType":"Block","src":"13332:219:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6112,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"13350:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13350:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6114,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"13367:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"34","id":6115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13376:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"13367:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13350:27:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7433325f6f75744f66426f756e6473","id":6118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13379:22:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""},"value":"toUint32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""}],"id":6111,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13342:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13342:60:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6120,"nodeType":"ExpressionStatement","src":"13342:60:29"},{"assignments":[6122],"declarations":[{"constant":false,"id":6122,"mutability":"mutable","name":"tempUint","nodeType":"VariableDeclaration","scope":6127,"src":"13412:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6121,"name":"uint32","nodeType":"ElementaryTypeName","src":"13412:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":6123,"nodeType":"VariableDeclarationStatement","src":"13412:15:29"},{"AST":{"nodeType":"YulBlock","src":"13447:72:29","statements":[{"nodeType":"YulAssignment","src":"13461:48:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13487:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"13495:3:29","type":"","value":"0x4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13483:3:29"},"nodeType":"YulFunctionCall","src":"13483:16:29"},{"name":"_start","nodeType":"YulIdentifier","src":"13501:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13479:3:29"},"nodeType":"YulFunctionCall","src":"13479:29:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13473:5:29"},"nodeType":"YulFunctionCall","src":"13473:36:29"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13461:8:29"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6104,"isOffset":false,"isSlot":false,"src":"13487:6:29","valueSize":1},{"declaration":6106,"isOffset":false,"isSlot":false,"src":"13501:6:29","valueSize":1},{"declaration":6122,"isOffset":false,"isSlot":false,"src":"13461:8:29","valueSize":1}],"id":6124,"nodeType":"InlineAssembly","src":"13438:81:29"},{"expression":{"id":6125,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6122,"src":"13536:8:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6110,"id":6126,"nodeType":"Return","src":"13529:15:29"}]},"id":6128,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nodeType":"FunctionDefinition","parameters":{"id":6107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6104,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":6128,"src":"13264:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6103,"name":"bytes","nodeType":"ElementaryTypeName","src":"13264:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6106,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":6128,"src":"13285:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6105,"name":"uint256","nodeType":"ElementaryTypeName","src":"13285:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13263:37:29"},"returnParameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6109,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6128,"src":"13324:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6108,"name":"uint32","nodeType":"ElementaryTypeName","src":"13324:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13323:8:29"},"scope":6293,"src":"13246:305:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6153,"nodeType":"Block","src":"13643:219:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6138,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"13661:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13661:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6140,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"13678:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"38","id":6141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13687:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"13678:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13661:27:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7436345f6f75744f66426f756e6473","id":6144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13690:22:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""},"value":"toUint64_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""}],"id":6137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13653:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13653:60:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6146,"nodeType":"ExpressionStatement","src":"13653:60:29"},{"assignments":[6148],"declarations":[{"constant":false,"id":6148,"mutability":"mutable","name":"tempUint","nodeType":"VariableDeclaration","scope":6153,"src":"13723:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6147,"name":"uint64","nodeType":"ElementaryTypeName","src":"13723:6:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":6149,"nodeType":"VariableDeclarationStatement","src":"13723:15:29"},{"AST":{"nodeType":"YulBlock","src":"13758:72:29","statements":[{"nodeType":"YulAssignment","src":"13772:48:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13798:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"13806:3:29","type":"","value":"0x8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13794:3:29"},"nodeType":"YulFunctionCall","src":"13794:16:29"},{"name":"_start","nodeType":"YulIdentifier","src":"13812:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13790:3:29"},"nodeType":"YulFunctionCall","src":"13790:29:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13784:5:29"},"nodeType":"YulFunctionCall","src":"13784:36:29"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13772:8:29"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6130,"isOffset":false,"isSlot":false,"src":"13798:6:29","valueSize":1},{"declaration":6132,"isOffset":false,"isSlot":false,"src":"13812:6:29","valueSize":1},{"declaration":6148,"isOffset":false,"isSlot":false,"src":"13772:8:29","valueSize":1}],"id":6150,"nodeType":"InlineAssembly","src":"13749:81:29"},{"expression":{"id":6151,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6148,"src":"13847:8:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6136,"id":6152,"nodeType":"Return","src":"13840:15:29"}]},"id":6154,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nodeType":"FunctionDefinition","parameters":{"id":6133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6130,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":6154,"src":"13575:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6129,"name":"bytes","nodeType":"ElementaryTypeName","src":"13575:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6132,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":6154,"src":"13596:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6131,"name":"uint256","nodeType":"ElementaryTypeName","src":"13596:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13574:37:29"},"returnParameters":{"id":6136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6135,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6154,"src":"13635:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6134,"name":"uint64","nodeType":"ElementaryTypeName","src":"13635:6:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13634:8:29"},"scope":6293,"src":"13557:305:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6179,"nodeType":"Block","src":"13954:220:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6164,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"13972:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13972:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6166,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"13989:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:29","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"13989:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13972:28:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7439365f6f75744f66426f756e6473","id":6170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14002:22:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""},"value":"toUint96_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""}],"id":6163,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13964:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13964:61:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6172,"nodeType":"ExpressionStatement","src":"13964:61:29"},{"assignments":[6174],"declarations":[{"constant":false,"id":6174,"mutability":"mutable","name":"tempUint","nodeType":"VariableDeclaration","scope":6179,"src":"14035:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6173,"name":"uint96","nodeType":"ElementaryTypeName","src":"14035:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":6175,"nodeType":"VariableDeclarationStatement","src":"14035:15:29"},{"AST":{"nodeType":"YulBlock","src":"14070:72:29","statements":[{"nodeType":"YulAssignment","src":"14084:48:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14110:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"14118:3:29","type":"","value":"0xc"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14106:3:29"},"nodeType":"YulFunctionCall","src":"14106:16:29"},{"name":"_start","nodeType":"YulIdentifier","src":"14124:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14102:3:29"},"nodeType":"YulFunctionCall","src":"14102:29:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14096:5:29"},"nodeType":"YulFunctionCall","src":"14096:36:29"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14084:8:29"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6156,"isOffset":false,"isSlot":false,"src":"14110:6:29","valueSize":1},{"declaration":6158,"isOffset":false,"isSlot":false,"src":"14124:6:29","valueSize":1},{"declaration":6174,"isOffset":false,"isSlot":false,"src":"14084:8:29","valueSize":1}],"id":6176,"nodeType":"InlineAssembly","src":"14061:81:29"},{"expression":{"id":6177,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"14159:8:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6162,"id":6178,"nodeType":"Return","src":"14152:15:29"}]},"id":6180,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nodeType":"FunctionDefinition","parameters":{"id":6159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6156,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":6180,"src":"13886:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6155,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6158,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":6180,"src":"13907:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6157,"name":"uint256","nodeType":"ElementaryTypeName","src":"13907:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13885:37:29"},"returnParameters":{"id":6162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6161,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6180,"src":"13946:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6160,"name":"uint96","nodeType":"ElementaryTypeName","src":"13946:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"13945:8:29"},"scope":6293,"src":"13868:306:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6205,"nodeType":"Block","src":"14268:223:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6190,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"14286:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14286:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6192,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"14303:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3136","id":6193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14312:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14303:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14286:28:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743132385f6f75744f66426f756e6473","id":6196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14316:23:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""},"value":"toUint128_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""}],"id":6189,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14278:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14278:62:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6198,"nodeType":"ExpressionStatement","src":"14278:62:29"},{"assignments":[6200],"declarations":[{"constant":false,"id":6200,"mutability":"mutable","name":"tempUint","nodeType":"VariableDeclaration","scope":6205,"src":"14350:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6199,"name":"uint128","nodeType":"ElementaryTypeName","src":"14350:7:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":6201,"nodeType":"VariableDeclarationStatement","src":"14350:16:29"},{"AST":{"nodeType":"YulBlock","src":"14386:73:29","statements":[{"nodeType":"YulAssignment","src":"14400:49:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14426:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"14434:4:29","type":"","value":"0x10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14422:3:29"},"nodeType":"YulFunctionCall","src":"14422:17:29"},{"name":"_start","nodeType":"YulIdentifier","src":"14441:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14418:3:29"},"nodeType":"YulFunctionCall","src":"14418:30:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14412:5:29"},"nodeType":"YulFunctionCall","src":"14412:37:29"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14400:8:29"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6182,"isOffset":false,"isSlot":false,"src":"14426:6:29","valueSize":1},{"declaration":6184,"isOffset":false,"isSlot":false,"src":"14441:6:29","valueSize":1},{"declaration":6200,"isOffset":false,"isSlot":false,"src":"14400:8:29","valueSize":1}],"id":6202,"nodeType":"InlineAssembly","src":"14377:82:29"},{"expression":{"id":6203,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"14476:8:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6188,"id":6204,"nodeType":"Return","src":"14469:15:29"}]},"id":6206,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nodeType":"FunctionDefinition","parameters":{"id":6185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6182,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":6206,"src":"14199:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6181,"name":"bytes","nodeType":"ElementaryTypeName","src":"14199:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6184,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":6206,"src":"14220:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6183,"name":"uint256","nodeType":"ElementaryTypeName","src":"14220:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14198:37:29"},"returnParameters":{"id":6188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6187,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6206,"src":"14259:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6186,"name":"uint128","nodeType":"ElementaryTypeName","src":"14259:7:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"14258:9:29"},"scope":6293,"src":"14180:311:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6231,"nodeType":"Block","src":"14585:223:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6216,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"14603:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14603:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6218,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"14620:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":6219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14620:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14603:28:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743235365f6f75744f66426f756e6473","id":6222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14633:23:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""},"value":"toUint256_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""}],"id":6215,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14595:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14595:62:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6224,"nodeType":"ExpressionStatement","src":"14595:62:29"},{"assignments":[6226],"declarations":[{"constant":false,"id":6226,"mutability":"mutable","name":"tempUint","nodeType":"VariableDeclaration","scope":6231,"src":"14667:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6225,"name":"uint256","nodeType":"ElementaryTypeName","src":"14667:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6227,"nodeType":"VariableDeclarationStatement","src":"14667:16:29"},{"AST":{"nodeType":"YulBlock","src":"14703:73:29","statements":[{"nodeType":"YulAssignment","src":"14717:49:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14743:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"14751:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14739:3:29"},"nodeType":"YulFunctionCall","src":"14739:17:29"},{"name":"_start","nodeType":"YulIdentifier","src":"14758:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14735:3:29"},"nodeType":"YulFunctionCall","src":"14735:30:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14729:5:29"},"nodeType":"YulFunctionCall","src":"14729:37:29"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14717:8:29"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6208,"isOffset":false,"isSlot":false,"src":"14743:6:29","valueSize":1},{"declaration":6210,"isOffset":false,"isSlot":false,"src":"14758:6:29","valueSize":1},{"declaration":6226,"isOffset":false,"isSlot":false,"src":"14717:8:29","valueSize":1}],"id":6228,"nodeType":"InlineAssembly","src":"14694:82:29"},{"expression":{"id":6229,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6226,"src":"14793:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6214,"id":6230,"nodeType":"Return","src":"14786:15:29"}]},"id":6232,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nodeType":"FunctionDefinition","parameters":{"id":6211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6208,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":6232,"src":"14516:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6207,"name":"bytes","nodeType":"ElementaryTypeName","src":"14516:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6210,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":6232,"src":"14537:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6209,"name":"uint256","nodeType":"ElementaryTypeName","src":"14537:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14515:37:29"},"returnParameters":{"id":6214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6213,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6232,"src":"14576:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6212,"name":"uint256","nodeType":"ElementaryTypeName","src":"14576:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14575:9:29"},"scope":6293,"src":"14497:311:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6257,"nodeType":"Block","src":"14902:232:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6242,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"14920:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14920:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6244,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6236,"src":"14937:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":6245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14946:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14937:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14920:28:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f427974657333325f6f75744f66426f756e6473","id":6248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14950:23:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""},"value":"toBytes32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""}],"id":6241,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14912:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14912:62:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6250,"nodeType":"ExpressionStatement","src":"14912:62:29"},{"assignments":[6252],"declarations":[{"constant":false,"id":6252,"mutability":"mutable","name":"tempBytes32","nodeType":"VariableDeclaration","scope":6257,"src":"14984:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14984:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6253,"nodeType":"VariableDeclarationStatement","src":"14984:19:29"},{"AST":{"nodeType":"YulBlock","src":"15023:76:29","statements":[{"nodeType":"YulAssignment","src":"15037:52:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"15066:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"15074:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15062:3:29"},"nodeType":"YulFunctionCall","src":"15062:17:29"},{"name":"_start","nodeType":"YulIdentifier","src":"15081:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15058:3:29"},"nodeType":"YulFunctionCall","src":"15058:30:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15052:5:29"},"nodeType":"YulFunctionCall","src":"15052:37:29"},"variableNames":[{"name":"tempBytes32","nodeType":"YulIdentifier","src":"15037:11:29"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6234,"isOffset":false,"isSlot":false,"src":"15066:6:29","valueSize":1},{"declaration":6236,"isOffset":false,"isSlot":false,"src":"15081:6:29","valueSize":1},{"declaration":6252,"isOffset":false,"isSlot":false,"src":"15037:11:29","valueSize":1}],"id":6254,"nodeType":"InlineAssembly","src":"15014:85:29"},{"expression":{"id":6255,"name":"tempBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"15116:11:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6240,"id":6256,"nodeType":"Return","src":"15109:18:29"}]},"id":6258,"implemented":true,"kind":"function","modifiers":[],"name":"toBytes32","nodeType":"FunctionDefinition","parameters":{"id":6237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6234,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":6258,"src":"14833:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6233,"name":"bytes","nodeType":"ElementaryTypeName","src":"14833:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6236,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":6258,"src":"14854:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6235,"name":"uint256","nodeType":"ElementaryTypeName","src":"14854:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14832:37:29"},"returnParameters":{"id":6240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6239,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6258,"src":"14893:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14893:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14892:9:29"},"scope":6293,"src":"14814:320:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6274,"nodeType":"Block","src":"15233:1323:29","statements":[{"assignments":[6268],"declarations":[{"constant":false,"id":6268,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":6274,"src":"15243:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6267,"name":"bool","nodeType":"ElementaryTypeName","src":"15243:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6270,"initialValue":{"hexValue":"74727565","id":6269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15258:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"15243:19:29"},{"AST":{"nodeType":"YulBlock","src":"15282:1243:29","statements":[{"nodeType":"YulVariableDeclaration","src":"15296:30:29","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15316:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15310:5:29"},"nodeType":"YulFunctionCall","src":"15310:16:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15300:6:29","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"15459:961:29","statements":[{"nodeType":"YulVariableDeclaration","src":"15688:11:29","value":{"kind":"number","nodeType":"YulLiteral","src":"15698:1:29","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"15692:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15717:30:29","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15731:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15742:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15727:3:29"},"nodeType":"YulFunctionCall","src":"15727:20:29"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"15721:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15764:26:29","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15779:2:29"},{"name":"length","nodeType":"YulIdentifier","src":"15783:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15775:3:29"},"nodeType":"YulFunctionCall","src":"15775:15:29"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"15768:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"16122:284:29","statements":[{"body":{"nodeType":"YulBlock","src":"16258:130:29","statements":[{"nodeType":"YulAssignment","src":"16322:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"16333:1:29","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16322:7:29"}]},{"nodeType":"YulAssignment","src":"16359:7:29","value":{"kind":"number","nodeType":"YulLiteral","src":"16365:1:29","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"16359:2:29"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"16241:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16235:5:29"},"nodeType":"YulFunctionCall","src":"16235:9:29"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"16252:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16246:5:29"},"nodeType":"YulFunctionCall","src":"16246:9:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16232:2:29"},"nodeType":"YulFunctionCall","src":"16232:24:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16225:6:29"},"nodeType":"YulFunctionCall","src":"16225:32:29"},"nodeType":"YulIf","src":"16222:2:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"16004:2:29"},{"name":"end","nodeType":"YulIdentifier","src":"16008:3:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16001:2:29"},"nodeType":"YulFunctionCall","src":"16001:11:29"},{"name":"cb","nodeType":"YulIdentifier","src":"16014:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15997:3:29"},"nodeType":"YulFunctionCall","src":"15997:20:29"},{"kind":"number","nodeType":"YulLiteral","src":"16019:1:29","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15994:2:29"},"nodeType":"YulFunctionCall","src":"15994:27:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16022:99:29","statements":[{"nodeType":"YulAssignment","src":"16044:19:29","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"16054:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"16058:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16050:3:29"},"nodeType":"YulFunctionCall","src":"16050:13:29"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"16044:2:29"}]},{"nodeType":"YulAssignment","src":"16084:19:29","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"16094:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"16098:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16090:3:29"},"nodeType":"YulFunctionCall","src":"16090:13:29"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"16084:2:29"}]}]},"pre":{"nodeType":"YulBlock","src":"15812:181:29","statements":[{"nodeType":"YulVariableDeclaration","src":"15834:31:29","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15848:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"15860:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15844:3:29"},"nodeType":"YulFunctionCall","src":"15844:21:29"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"15838:2:29","type":""}]}]},"src":"15808:598:29"}]},"nodeType":"YulCase","src":"15452:968:29","value":{"kind":"number","nodeType":"YulLiteral","src":"15457:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"16441:74:29","statements":[{"nodeType":"YulAssignment","src":"16489:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"16500:1:29","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16489:7:29"}]}]},"nodeType":"YulCase","src":"16433:82:29","value":"default"}],"expression":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15413:6:29"},{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15427:10:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15421:5:29"},"nodeType":"YulFunctionCall","src":"15421:17:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15410:2:29"},"nodeType":"YulFunctionCall","src":"15410:29:29"},"nodeType":"YulSwitch","src":"15403:1112:29"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6262,"isOffset":false,"isSlot":false,"src":"15427:10:29","valueSize":1},{"declaration":6262,"isOffset":false,"isSlot":false,"src":"15848:10:29","valueSize":1},{"declaration":6260,"isOffset":false,"isSlot":false,"src":"15316:9:29","valueSize":1},{"declaration":6260,"isOffset":false,"isSlot":false,"src":"15731:9:29","valueSize":1},{"declaration":6268,"isOffset":false,"isSlot":false,"src":"16322:7:29","valueSize":1},{"declaration":6268,"isOffset":false,"isSlot":false,"src":"16489:7:29","valueSize":1}],"id":6271,"nodeType":"InlineAssembly","src":"15273:1252:29"},{"expression":{"id":6272,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"16542:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6266,"id":6273,"nodeType":"Return","src":"16535:14:29"}]},"id":6275,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nodeType":"FunctionDefinition","parameters":{"id":6263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6260,"mutability":"mutable","name":"_preBytes","nodeType":"VariableDeclaration","scope":6275,"src":"15155:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6259,"name":"bytes","nodeType":"ElementaryTypeName","src":"15155:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6262,"mutability":"mutable","name":"_postBytes","nodeType":"VariableDeclaration","scope":6275,"src":"15179:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6261,"name":"bytes","nodeType":"ElementaryTypeName","src":"15179:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15154:49:29"},"returnParameters":{"id":6266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6265,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6275,"src":"15227:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6264,"name":"bool","nodeType":"ElementaryTypeName","src":"15227:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15226:6:29"},"scope":6293,"src":"15140:1416:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6291,"nodeType":"Block","src":"16713:2559:29","statements":[{"assignments":[6285],"declarations":[{"constant":false,"id":6285,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":6291,"src":"16723:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6284,"name":"bool","nodeType":"ElementaryTypeName","src":"16723:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6287,"initialValue":{"hexValue":"74727565","id":6286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16738:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"16723:19:29"},{"AST":{"nodeType":"YulBlock","src":"16762:2479:29","statements":[{"nodeType":"YulVariableDeclaration","src":"16821:34:29","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"16840:14:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"16834:5:29"},"nodeType":"YulFunctionCall","src":"16834:21:29"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"16825:5:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16946:76:29","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"16969:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16984:5:29","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17002:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"17009:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16998:3:29"},"nodeType":"YulFunctionCall","src":"16998:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16991:6:29"},"nodeType":"YulFunctionCall","src":"16991:21:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16980:3:29"},"nodeType":"YulFunctionCall","src":"16980:33:29"},{"kind":"number","nodeType":"YulLiteral","src":"17015:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16976:3:29"},"nodeType":"YulFunctionCall","src":"16976:41:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16965:3:29"},"nodeType":"YulFunctionCall","src":"16965:53:29"},{"kind":"number","nodeType":"YulLiteral","src":"17020:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16961:3:29"},"nodeType":"YulFunctionCall","src":"16961:61:29"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"16950:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17035:32:29","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"17056:10:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17050:5:29"},"nodeType":"YulFunctionCall","src":"17050:17:29"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"17039:7:29","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"17191:1945:29","statements":[{"body":{"nodeType":"YulBlock","src":"17502:1620:29","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"17574:340:29","statements":[{"nodeType":"YulAssignment","src":"17667:38:29","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17684:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"17691:5:29","type":"","value":"0x100"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17680:3:29"},"nodeType":"YulFunctionCall","src":"17680:17:29"},{"kind":"number","nodeType":"YulLiteral","src":"17699:5:29","type":"","value":"0x100"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17676:3:29"},"nodeType":"YulFunctionCall","src":"17676:29:29"},"variableNames":[{"name":"fslot","nodeType":"YulIdentifier","src":"17667:5:29"}]},{"body":{"nodeType":"YulBlock","src":"17782:110:29","statements":[{"nodeType":"YulAssignment","src":"17854:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"17865:1:29","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17854:7:29"}]}]},"condition":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17744:5:29"},{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"17761:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"17773:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17757:3:29"},"nodeType":"YulFunctionCall","src":"17757:21:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17751:5:29"},"nodeType":"YulFunctionCall","src":"17751:28:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17741:2:29"},"nodeType":"YulFunctionCall","src":"17741:39:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17734:6:29"},"nodeType":"YulFunctionCall","src":"17734:47:29"},"nodeType":"YulIf","src":"17731:2:29"}]},"nodeType":"YulCase","src":"17567:347:29","value":{"kind":"number","nodeType":"YulLiteral","src":"17572:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17943:1161:29","statements":[{"nodeType":"YulVariableDeclaration","src":"18212:11:29","value":{"kind":"number","nodeType":"YulLiteral","src":"18222:1:29","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"18216:2:29","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18336:3:29","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"18341:14:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18329:6:29"},"nodeType":"YulFunctionCall","src":"18329:27:29"},"nodeType":"YulExpressionStatement","src":"18329:27:29"},{"nodeType":"YulVariableDeclaration","src":"18381:30:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18401:3:29","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"18406:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18391:9:29"},"nodeType":"YulFunctionCall","src":"18391:20:29"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"18385:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18437:31:29","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"18451:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"18463:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18447:3:29"},"nodeType":"YulFunctionCall","src":"18447:21:29"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"18441:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18493:27:29","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18508:2:29"},{"name":"mlength","nodeType":"YulIdentifier","src":"18512:7:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18504:3:29"},"nodeType":"YulFunctionCall","src":"18504:16:29"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"18497:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"18828:254:29","statements":[{"body":{"nodeType":"YulBlock","src":"18894:162:29","statements":[{"nodeType":"YulAssignment","src":"18974:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"18985:1:29","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18974:7:29"}]},{"nodeType":"YulAssignment","src":"19019:7:29","value":{"kind":"number","nodeType":"YulLiteral","src":"19025:1:29","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"19019:2:29"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18877:2:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18871:5:29"},"nodeType":"YulFunctionCall","src":"18871:9:29"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18888:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18882:5:29"},"nodeType":"YulFunctionCall","src":"18882:9:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18868:2:29"},"nodeType":"YulFunctionCall","src":"18868:24:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18861:6:29"},"nodeType":"YulFunctionCall","src":"18861:32:29"},"nodeType":"YulIf","src":"18858:2:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18689:2:29"},{"name":"end","nodeType":"YulIdentifier","src":"18693:3:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18686:2:29"},"nodeType":"YulFunctionCall","src":"18686:11:29"},{"name":"cb","nodeType":"YulIdentifier","src":"18699:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18682:3:29"},"nodeType":"YulFunctionCall","src":"18682:20:29"},{"kind":"number","nodeType":"YulLiteral","src":"18704:1:29","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18679:2:29"},"nodeType":"YulFunctionCall","src":"18679:27:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18707:120:29","statements":[{"nodeType":"YulAssignment","src":"18737:16:29","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18747:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"18751:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18743:3:29"},"nodeType":"YulFunctionCall","src":"18743:10:29"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"18737:2:29"}]},{"nodeType":"YulAssignment","src":"18782:19:29","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18792:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"18796:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18788:3:29"},"nodeType":"YulFunctionCall","src":"18788:13:29"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"18782:2:29"}]}]},"pre":{"nodeType":"YulBlock","src":"18676:2:29","statements":[]},"src":"18672:410:29"}]},"nodeType":"YulCase","src":"17935:1169:29","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17534:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"17543:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17531:2:29"},"nodeType":"YulFunctionCall","src":"17531:15:29"},"nodeType":"YulSwitch","src":"17524:1580:29"}]},"condition":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17492:7:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17485:6:29"},"nodeType":"YulFunctionCall","src":"17485:15:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17478:6:29"},"nodeType":"YulFunctionCall","src":"17478:23:29"},"nodeType":"YulIf","src":"17475:2:29"}]},"nodeType":"YulCase","src":"17184:1952:29","value":{"kind":"number","nodeType":"YulLiteral","src":"17189:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"19157:74:29","statements":[{"nodeType":"YulAssignment","src":"19205:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"19216:1:29","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19205:7:29"}]}]},"nodeType":"YulCase","src":"19149:82:29","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17154:7:29"},{"name":"mlength","nodeType":"YulIdentifier","src":"17163:7:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17151:2:29"},"nodeType":"YulFunctionCall","src":"17151:20:29"},"nodeType":"YulSwitch","src":"17144:2087:29"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6279,"isOffset":false,"isSlot":false,"src":"17056:10:29","valueSize":1},{"declaration":6279,"isOffset":false,"isSlot":false,"src":"17761:10:29","valueSize":1},{"declaration":6279,"isOffset":false,"isSlot":false,"src":"18451:10:29","valueSize":1},{"declaration":6277,"isOffset":false,"isSlot":true,"src":"16840:14:29","suffix":"slot","valueSize":1},{"declaration":6277,"isOffset":false,"isSlot":true,"src":"18341:14:29","suffix":"slot","valueSize":1},{"declaration":6285,"isOffset":false,"isSlot":false,"src":"17854:7:29","valueSize":1},{"declaration":6285,"isOffset":false,"isSlot":false,"src":"18974:7:29","valueSize":1},{"declaration":6285,"isOffset":false,"isSlot":false,"src":"19205:7:29","valueSize":1}],"id":6288,"nodeType":"InlineAssembly","src":"16753:2488:29"},{"expression":{"id":6289,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"19258:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6283,"id":6290,"nodeType":"Return","src":"19251:14:29"}]},"id":6292,"implemented":true,"kind":"function","modifiers":[],"name":"equalStorage","nodeType":"FunctionDefinition","parameters":{"id":6280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6277,"mutability":"mutable","name":"_preBytes","nodeType":"VariableDeclaration","scope":6292,"src":"16593:23:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6276,"name":"bytes","nodeType":"ElementaryTypeName","src":"16593:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6279,"mutability":"mutable","name":"_postBytes","nodeType":"VariableDeclaration","scope":6292,"src":"16626:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6278,"name":"bytes","nodeType":"ElementaryTypeName","src":"16626:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16583:72:29"},"returnParameters":{"id":6283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6282,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6292,"src":"16703:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6281,"name":"bool","nodeType":"ElementaryTypeName","src":"16703:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16702:6:29"},"scope":6293,"src":"16562:2710:29","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":6294,"src":"370:18904:29"}],"src":"336:18939:29"},"id":29}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"AccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"string","name":"uri_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1670:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"105:1046:30","statements":[{"nodeType":"YulVariableDeclaration","src":"115:12:30","value":{"kind":"number","nodeType":"YulLiteral","src":"125:2:30","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"119:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"172:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"181:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"189:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"174:6:30"},"nodeType":"YulFunctionCall","src":"174:22:30"},"nodeType":"YulExpressionStatement","src":"174:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"147:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"156:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"143:3:30"},"nodeType":"YulFunctionCall","src":"143:23:30"},{"name":"_1","nodeType":"YulIdentifier","src":"168:2:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"139:3:30"},"nodeType":"YulFunctionCall","src":"139:32:30"},"nodeType":"YulIf","src":"136:2:30"},{"nodeType":"YulVariableDeclaration","src":"207:30:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"227:9:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"221:5:30"},"nodeType":"YulFunctionCall","src":"221:16:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"211:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"246:28:30","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"264:2:30","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"268:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"260:3:30"},"nodeType":"YulFunctionCall","src":"260:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"272:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"256:3:30"},"nodeType":"YulFunctionCall","src":"256:18:30"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"250:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"301:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"310:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"318:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"303:6:30"},"nodeType":"YulFunctionCall","src":"303:22:30"},"nodeType":"YulExpressionStatement","src":"303:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"289:6:30"},{"name":"_2","nodeType":"YulIdentifier","src":"297:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"286:2:30"},"nodeType":"YulFunctionCall","src":"286:14:30"},"nodeType":"YulIf","src":"283:2:30"},{"nodeType":"YulVariableDeclaration","src":"336:32:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"350:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"361:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"346:3:30"},"nodeType":"YulFunctionCall","src":"346:22:30"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"340:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"416:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"425:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"433:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"418:6:30"},"nodeType":"YulFunctionCall","src":"418:22:30"},"nodeType":"YulExpressionStatement","src":"418:22:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"395:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"399:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"391:3:30"},"nodeType":"YulFunctionCall","src":"391:13:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"406:7:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"387:3:30"},"nodeType":"YulFunctionCall","src":"387:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"380:6:30"},"nodeType":"YulFunctionCall","src":"380:35:30"},"nodeType":"YulIf","src":"377:2:30"},{"nodeType":"YulVariableDeclaration","src":"451:19:30","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"467:2:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"461:5:30"},"nodeType":"YulFunctionCall","src":"461:9:30"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"455:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"493:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"495:16:30"},"nodeType":"YulFunctionCall","src":"495:18:30"},"nodeType":"YulExpressionStatement","src":"495:18:30"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"485:2:30"},{"name":"_2","nodeType":"YulIdentifier","src":"489:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"482:2:30"},"nodeType":"YulFunctionCall","src":"482:10:30"},"nodeType":"YulIf","src":"479:2:30"},{"nodeType":"YulVariableDeclaration","src":"524:17:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"538:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"534:3:30"},"nodeType":"YulFunctionCall","src":"534:7:30"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"528:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"550:23:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"570:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"564:5:30"},"nodeType":"YulFunctionCall","src":"564:9:30"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"554:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"582:71:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"604:6:30"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"628:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"632:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"624:3:30"},"nodeType":"YulFunctionCall","src":"624:13:30"},{"name":"_5","nodeType":"YulIdentifier","src":"639:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"620:3:30"},"nodeType":"YulFunctionCall","src":"620:22:30"},{"kind":"number","nodeType":"YulLiteral","src":"644:2:30","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"616:3:30"},"nodeType":"YulFunctionCall","src":"616:31:30"},{"name":"_5","nodeType":"YulIdentifier","src":"649:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"612:3:30"},"nodeType":"YulFunctionCall","src":"612:40:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"600:3:30"},"nodeType":"YulFunctionCall","src":"600:53:30"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"586:10:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"712:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"714:16:30"},"nodeType":"YulFunctionCall","src":"714:18:30"},"nodeType":"YulExpressionStatement","src":"714:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"671:10:30"},{"name":"_2","nodeType":"YulIdentifier","src":"683:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"668:2:30"},"nodeType":"YulFunctionCall","src":"668:18:30"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"691:10:30"},{"name":"memPtr","nodeType":"YulIdentifier","src":"703:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"688:2:30"},"nodeType":"YulFunctionCall","src":"688:22:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"665:2:30"},"nodeType":"YulFunctionCall","src":"665:46:30"},"nodeType":"YulIf","src":"662:2:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"750:2:30","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"754:10:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"743:6:30"},"nodeType":"YulFunctionCall","src":"743:22:30"},"nodeType":"YulExpressionStatement","src":"743:22:30"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"781:6:30"},{"name":"_4","nodeType":"YulIdentifier","src":"789:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"774:6:30"},"nodeType":"YulFunctionCall","src":"774:18:30"},"nodeType":"YulExpressionStatement","src":"774:18:30"},{"body":{"nodeType":"YulBlock","src":"838:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"847:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"855:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"840:6:30"},"nodeType":"YulFunctionCall","src":"840:22:30"},"nodeType":"YulExpressionStatement","src":"840:22:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"815:2:30"},{"name":"_4","nodeType":"YulIdentifier","src":"819:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"811:3:30"},"nodeType":"YulFunctionCall","src":"811:11:30"},{"name":"_1","nodeType":"YulIdentifier","src":"824:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"807:3:30"},"nodeType":"YulFunctionCall","src":"807:20:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"829:7:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"804:2:30"},"nodeType":"YulFunctionCall","src":"804:33:30"},"nodeType":"YulIf","src":"801:2:30"},{"nodeType":"YulVariableDeclaration","src":"873:15:30","value":{"name":"value0","nodeType":"YulIdentifier","src":"882:6:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"877:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"943:83:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"972:6:30"},{"name":"i","nodeType":"YulIdentifier","src":"980:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"968:3:30"},"nodeType":"YulFunctionCall","src":"968:14:30"},{"name":"_1","nodeType":"YulIdentifier","src":"984:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"964:3:30"},"nodeType":"YulFunctionCall","src":"964:23:30"},{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1003:2:30"},{"name":"i","nodeType":"YulIdentifier","src":"1007:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"999:3:30"},"nodeType":"YulFunctionCall","src":"999:10:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1011:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"995:3:30"},"nodeType":"YulFunctionCall","src":"995:19:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"989:5:30"},"nodeType":"YulFunctionCall","src":"989:26:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"957:6:30"},"nodeType":"YulFunctionCall","src":"957:59:30"},"nodeType":"YulExpressionStatement","src":"957:59:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"908:1:30"},{"name":"_4","nodeType":"YulIdentifier","src":"911:2:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"905:2:30"},"nodeType":"YulFunctionCall","src":"905:9:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"915:19:30","statements":[{"nodeType":"YulAssignment","src":"917:15:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"926:1:30"},{"name":"_1","nodeType":"YulIdentifier","src":"929:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"922:3:30"},"nodeType":"YulFunctionCall","src":"922:10:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"917:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"901:3:30","statements":[]},"src":"897:129:30"},{"body":{"nodeType":"YulBlock","src":"1056:64:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1085:6:30"},{"name":"_4","nodeType":"YulIdentifier","src":"1093:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1081:3:30"},"nodeType":"YulFunctionCall","src":"1081:15:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1098:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1077:3:30"},"nodeType":"YulFunctionCall","src":"1077:24:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1103:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1070:6:30"},"nodeType":"YulFunctionCall","src":"1070:40:30"},"nodeType":"YulExpressionStatement","src":"1070:40:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1041:1:30"},{"name":"_4","nodeType":"YulIdentifier","src":"1044:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1038:2:30"},"nodeType":"YulFunctionCall","src":"1038:9:30"},"nodeType":"YulIf","src":"1035:2:30"},{"nodeType":"YulAssignment","src":"1129:16:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1139:6:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1129:6:30"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"71:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"82:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"94:6:30","type":""}],"src":"14:1137:30"},{"body":{"nodeType":"YulBlock","src":"1211:325:30","statements":[{"nodeType":"YulAssignment","src":"1221:22:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1235:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:30","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1231:3:30"},"nodeType":"YulFunctionCall","src":"1231:12:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1221:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"1252:38:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1282:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:30","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1278:3:30"},"nodeType":"YulFunctionCall","src":"1278:12:30"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1256:18:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1329:31:30","statements":[{"nodeType":"YulAssignment","src":"1331:27:30","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1345:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"1353:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1341:3:30"},"nodeType":"YulFunctionCall","src":"1341:17:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1331:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1309:18:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1302:6:30"},"nodeType":"YulFunctionCall","src":"1302:26:30"},"nodeType":"YulIf","src":"1299:2:30"},{"body":{"nodeType":"YulBlock","src":"1419:111:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1440:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1447:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1452:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1443:3:30"},"nodeType":"YulFunctionCall","src":"1443:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1433:6:30"},"nodeType":"YulFunctionCall","src":"1433:31:30"},"nodeType":"YulExpressionStatement","src":"1433:31:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1484:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1487:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1477:6:30"},"nodeType":"YulFunctionCall","src":"1477:15:30"},"nodeType":"YulExpressionStatement","src":"1477:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1512:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1515:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1505:6:30"},"nodeType":"YulFunctionCall","src":"1505:15:30"},"nodeType":"YulExpressionStatement","src":"1505:15:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1375:18:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1398:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"1406:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1395:2:30"},"nodeType":"YulFunctionCall","src":"1395:14:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1372:2:30"},"nodeType":"YulFunctionCall","src":"1372:38:30"},"nodeType":"YulIf","src":"1369:2:30"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1191:4:30","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1200:6:30","type":""}],"src":"1156:380:30"},{"body":{"nodeType":"YulBlock","src":"1573:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1590:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1597:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1602:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1593:3:30"},"nodeType":"YulFunctionCall","src":"1593:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1583:6:30"},"nodeType":"YulFunctionCall","src":"1583:31:30"},"nodeType":"YulExpressionStatement","src":"1583:31:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1630:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1633:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1623:6:30"},"nodeType":"YulFunctionCall","src":"1623:15:30"},"nodeType":"YulExpressionStatement","src":"1623:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1654:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1657:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1647:6:30"},"nodeType":"YulFunctionCall","src":"1647:15:30"},"nodeType":"YulExpressionStatement","src":"1647:15:30"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1541:127:30"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(value0, value0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), value0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200181638038062001816833981016040819052620000349162000105565b6200003f8162000046565b506200022e565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001db565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b6000602080838503121562000118578182fd5b82516001600160401b03808211156200012f578384fd5b818501915085601f83011262000143578384fd5b81518181111562000158576200015862000218565b604051601f8201601f19908116603f0116810190838211818310171562000183576200018362000218565b8160405282815288868487010111156200019b578687fd5b8693505b82841015620001be57848401860151818501870152928501926200019f565b82841115620001cf57868684830101525b98975050505050505050565b600281046001821680620001f057607f821691505b602082108114156200021257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6115d8806200023e6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461015057610087565b8062fdd58e1461008c57806301ffc9a7146100b55780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610dcb565b610163565b6040516100ac91906113de565b60405180910390f35b6100c86100c3366004610ebd565b6101ba565b6040516100ac919061107b565b6100e86100e3366004610efc565b610234565b6040516100ac9190611086565b610108610103366004610c88565b6102c8565b005b61011d610118366004610df4565b610326565b6040516100ac919061103a565b610108610138366004610d91565b610446565b6100c861014b366004610c56565b61045c565b61010861015e366004610d2e565b61048a565b60006001600160a01b0383166101945760405162461bcd60e51b815260040161018b906110f6565b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b031982167fd9b67a2600000000000000000000000000000000000000000000000000000000148061021d57506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061022c575061022c826104e1565b90505b919050565b60606002805461024390611431565b80601f016020809104026020016040519081016040528092919081815260200182805461026f90611431565b80156102bc5780601f10610291576101008083540402835291602001916102bc565b820191906000526020600020905b81548152906001019060200180831161029f57829003601f168201915b50505050509050919050565b6102d0610513565b6001600160a01b0316856001600160a01b031614806102f657506102f68561014b610513565b6103125760405162461bcd60e51b815260040161018b90611153565b61031f8585858585610518565b5050505050565b606081518351146103495760405162461bcd60e51b815260040161018b906112c7565b6000835167ffffffffffffffff81111561037357634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561039c578160200160208202803683370190505b50905060005b845181101561043e576104038582815181106103ce57634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106103f657634e487b7160e01b600052603260045260246000fd5b6020026020010151610163565b82828151811061042357634e487b7160e01b600052603260045260246000fd5b602090810291909101015261043781611499565b90506103a2565b509392505050565b610458610451610513565b83836106f7565b5050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610492610513565b6001600160a01b0316856001600160a01b031614806104b857506104b88561014b610513565b6104d45760405162461bcd60e51b815260040161018b90611153565b61031f858585858561079a565b6001600160e01b031981167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b335b90565b81518351146105395760405162461bcd60e51b815260040161018b90611324565b6001600160a01b03841661055f5760405162461bcd60e51b815260040161018b906111b0565b6000610569610513565b90506105798187878787876106ef565b60005b845181101561067b5760008582815181106105a757634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008583815181106105d357634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106235760405162461bcd60e51b815260040161018b9061120d565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610660908490611419565b925050819055505050508061067490611499565b905061057c565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516106cb92919061104d565b60405180910390a46106e18187878787876106ef565b6106ef8187878787876108f7565b505050505050565b816001600160a01b0316836001600160a01b031614156107295760405162461bcd60e51b815260040161018b9061126a565b6001600160a01b0383811660008181526001602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319061078d90859061107b565b60405180910390a3505050565b6001600160a01b0384166107c05760405162461bcd60e51b815260040161018b906111b0565b60006107ca610513565b905060006107d785610a25565b905060006107e485610a25565b90506107f48389898585896106ef565b6000868152602081815260408083206001600160a01b038c168452909152902054858110156108355760405162461bcd60e51b815260040161018b9061120d565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610872908490611419565b92505081905550876001600160a01b0316896001600160a01b0316856001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a6040516108c89291906113e7565b60405180910390a46108de848a8a86868a6106ef565b6108ec848a8a8a8a8a610a7e565b505050505050505050565b610909846001600160a01b0316610b4f565b156106ef5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906109429089908990889088908890600401610f99565b602060405180830381600087803b15801561095c57600080fd5b505af192505050801561098c575060408051601f3d908101601f1916820190925261098991810190610ee0565b60015b6109ec576109986114e0565b806308c379a014156109d257506109ad6114f7565b806109b857506109d4565b8060405162461bcd60e51b815260040161018b9190611086565b505b60405162461bcd60e51b815260040161018b90611381565b6001600160e01b0319811663bc197c8160e01b14610a1c5760405162461bcd60e51b815260040161018b90611099565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610a6d57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b610a90846001600160a01b0316610b4f565b156106ef5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610ac99089908990889088908890600401610ff7565b602060405180830381600087803b158015610ae357600080fd5b505af1925050508015610b13575060408051601f3d908101601f19168201909252610b1091810190610ee0565b60015b610b1f576109986114e0565b6001600160e01b0319811663f23a6e6160e01b14610a1c5760405162461bcd60e51b815260040161018b90611099565b6001600160a01b03163b151590565b80356001600160a01b038116811461022f57600080fd5b600082601f830112610b85578081fd5b81356020610b92826113f5565b604051610b9f828261146c565b838152828101915085830183850287018401881015610bbc578586fd5b855b85811015610bda57813584529284019290840190600101610bbe565b5090979650505050505050565b600082601f830112610bf7578081fd5b813567ffffffffffffffff811115610c1157610c116114ca565b604051610c28601f8301601f19166020018261146c565b818152846020838601011115610c3c578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215610c68578182fd5b610c7183610b5e565b9150610c7f60208401610b5e565b90509250929050565b600080600080600060a08688031215610c9f578081fd5b610ca886610b5e565b9450610cb660208701610b5e565b9350604086013567ffffffffffffffff80821115610cd2578283fd5b610cde89838a01610b75565b94506060880135915080821115610cf3578283fd5b610cff89838a01610b75565b93506080880135915080821115610d14578283fd5b50610d2188828901610be7565b9150509295509295909350565b600080600080600060a08688031215610d45578081fd5b610d4e86610b5e565b9450610d5c60208701610b5e565b93506040860135925060608601359150608086013567ffffffffffffffff811115610d85578182fd5b610d2188828901610be7565b60008060408385031215610da3578182fd5b610dac83610b5e565b915060208301358015158114610dc0578182fd5b809150509250929050565b60008060408385031215610ddd578182fd5b610de683610b5e565b946020939093013593505050565b60008060408385031215610e06578182fd5b823567ffffffffffffffff80821115610e1d578384fd5b818501915085601f830112610e30578384fd5b81356020610e3d826113f5565b604051610e4a828261146c565b8381528281019150858301838502870184018b1015610e67578889fd5b8896505b84871015610e9057610e7c81610b5e565b835260019690960195918301918301610e6b565b5096505086013592505080821115610ea6578283fd5b50610eb385828601610b75565b9150509250929050565b600060208284031215610ece578081fd5b8135610ed981611589565b9392505050565b600060208284031215610ef1578081fd5b8151610ed981611589565b600060208284031215610f0d578081fd5b5035919050565b6000815180845260208085019450808401835b83811015610f4357815187529582019590820190600101610f27565b509495945050505050565b60008151808452815b81811015610f7357602081850181015186830182015201610f57565b81811115610f845782602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a06040830152610fc560a0830186610f14565b8281036060840152610fd78186610f14565b90508281036080840152610feb8185610f4e565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261102f60a0830184610f4e565b979650505050505050565b600060208252610ed96020830184610f14565b6000604082526110606040830185610f14565b82810360208401526110728185610f14565b95945050505050565b901515815260200190565b600060208252610ed96020830184610f4e565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a6563746560408201527f6420746f6b656e73000000000000000000000000000000000000000000000000606082015260800190565b6020808252602a908201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660408201527f616c6964206f776e657200000000000000000000000000000000000000000000606082015260800190565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201527f6572206f7220617070726f766564000000000000000000000000000000000000606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201527f72207472616e7366657200000000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360408201527f20666f722073656c660000000000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860408201527f206d69736d617463680000000000000000000000000000000000000000000000606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060408201527f6d69736d61746368000000000000000000000000000000000000000000000000606082015260800190565b60208082526034908201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560408201527f526563656976657220696d706c656d656e746572000000000000000000000000606082015260800190565b90815260200190565b918252602082015260400190565b600067ffffffffffffffff82111561140f5761140f6114ca565b5060209081020190565b6000821982111561142c5761142c6114b4565b500190565b60028104600182168061144557607f821691505b6020821081141561146657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715611492576114926114ca565b6040525050565b60006000198214156114ad576114ad6114b4565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561051557600481823e5160e01c90565b600060443d101561150757610515565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611539575050505050610515565b828501915081518181111561155357505050505050610515565b843d870101602082850101111561156f57505050505050610515565b61157e6020828601018761146c565b509094505050505090565b6001600160e01b03198116811461159f57600080fd5b5056fea2646970667358221220c85ad05c9ff0902cd3273bebb02933c0eabaccb6743251898749a7882750116064736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1816 CODESIZE SUB DUP1 PUSH3 0x1816 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x105 JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x22E JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x5F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x6D SWAP1 PUSH3 0x1DB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x91 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xAC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xDC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xDC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xBF JUMP JUMPDEST POP PUSH3 0xEA SWAP3 SWAP2 POP PUSH3 0xEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xEA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x118 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x12F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x143 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x158 JUMPI PUSH3 0x158 PUSH3 0x218 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x183 JUMPI PUSH3 0x183 PUSH3 0x218 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x19B JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1BE JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x19F JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x1CF JUMPI DUP7 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1F0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x212 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15D8 DUP1 PUSH3 0x23E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x150 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xDCB JUMP JUMPDEST PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x107B JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xD91 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xC56 JUMP JUMPDEST PUSH2 0x45C JUMP JUMPDEST PUSH2 0x108 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0xD2E JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x194 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x21D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x22C JUMPI POP PUSH2 0x22C DUP3 PUSH2 0x4E1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x243 SWAP1 PUSH2 0x1431 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x26F SWAP1 PUSH2 0x1431 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x291 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2F6 JUMPI POP PUSH2 0x2F6 DUP6 PUSH2 0x14B PUSH2 0x513 JUMP JUMPDEST PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x31F DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x518 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x349 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x373 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x39C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x43E JUMPI PUSH2 0x403 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3CE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3F6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x163 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x423 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x437 DUP2 PUSH2 0x1499 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x458 PUSH2 0x451 PUSH2 0x513 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x6F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x492 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x4B8 JUMPI POP PUSH2 0x4B8 DUP6 PUSH2 0x14B PUSH2 0x513 JUMP JUMPDEST PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x31F DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x79A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x539 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x569 PUSH2 0x513 JUMP JUMPDEST SWAP1 POP PUSH2 0x579 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x67B JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x623 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x660 SWAP1 DUP5 SWAP1 PUSH2 0x1419 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x674 SWAP1 PUSH2 0x1499 JUMP JUMPDEST SWAP1 POP PUSH2 0x57C JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x6CB SWAP3 SWAP2 SWAP1 PUSH2 0x104D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x6E1 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x6EF JUMP JUMPDEST PUSH2 0x6EF DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x8F7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH2 0x78D SWAP1 DUP6 SWAP1 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CA PUSH2 0x513 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7D7 DUP6 PUSH2 0xA25 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7E4 DUP6 PUSH2 0xA25 JUMP JUMPDEST SWAP1 POP PUSH2 0x7F4 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x872 SWAP1 DUP5 SWAP1 PUSH2 0x1419 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x8C8 SWAP3 SWAP2 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8DE DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0x6EF JUMP JUMPDEST PUSH2 0x8EC DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xA7E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x909 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB4F JUMP JUMPDEST ISZERO PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x942 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x98C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x989 SWAP2 DUP2 ADD SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9EC JUMPI PUSH2 0x998 PUSH2 0x14E0 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x9D2 JUMPI POP PUSH2 0x9AD PUSH2 0x14F7 JUMP JUMPDEST DUP1 PUSH2 0x9B8 JUMPI POP PUSH2 0x9D4 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x1086 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xA1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1099 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA6D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA90 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB4F JUMP JUMPDEST ISZERO PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xAC9 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xFF7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB13 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB10 SWAP2 DUP2 ADD SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB1F JUMPI PUSH2 0x998 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xA1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB85 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xB92 DUP3 PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9F DUP3 DUP3 PUSH2 0x146C JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xBBC JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xBDA JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xBBE JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBF7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC11 JUMPI PUSH2 0xC11 PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC28 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x146C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xC3C JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC68 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xC71 DUP4 PUSH2 0xB5E JUMP JUMPDEST SWAP2 POP PUSH2 0xC7F PUSH1 0x20 DUP5 ADD PUSH2 0xB5E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC9F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xCA8 DUP7 PUSH2 0xB5E JUMP JUMPDEST SWAP5 POP PUSH2 0xCB6 PUSH1 0x20 DUP8 ADD PUSH2 0xB5E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCD2 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xCDE DUP10 DUP4 DUP11 ADD PUSH2 0xB75 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xCF3 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xCFF DUP10 DUP4 DUP11 ADD PUSH2 0xB75 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD14 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xD21 DUP9 DUP3 DUP10 ADD PUSH2 0xBE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD45 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xD4E DUP7 PUSH2 0xB5E JUMP JUMPDEST SWAP5 POP PUSH2 0xD5C PUSH1 0x20 DUP8 ADD PUSH2 0xB5E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD85 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD21 DUP9 DUP3 DUP10 ADD PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xDAC DUP4 PUSH2 0xB5E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDC0 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDDD JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xDE6 DUP4 PUSH2 0xB5E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE06 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE1D JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE30 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE3D DUP3 PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4A DUP3 DUP3 PUSH2 0x146C JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xE67 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xE90 JUMPI PUSH2 0xE7C DUP2 PUSH2 0xB5E JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xE6B JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xEA6 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xEB3 DUP6 DUP3 DUP7 ADD PUSH2 0xB75 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xED9 DUP2 PUSH2 0x1589 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xED9 DUP2 PUSH2 0x1589 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF0D JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF43 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF27 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF73 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xF57 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF84 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xFC5 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0xF14 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFD7 DUP2 DUP7 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0xFEB DUP2 DUP6 PUSH2 0xF4E JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x102F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xF4E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xED9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x1060 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF14 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1072 DUP2 DUP6 PUSH2 0xF14 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xED9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF4E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6572206F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x34 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x140F JUMPI PUSH2 0x140F PUSH2 0x14CA JUMP JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x142C JUMPI PUSH2 0x142C PUSH2 0x14B4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1445 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1466 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1492 JUMPI PUSH2 0x1492 PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x14AD JUMPI PUSH2 0x14AD PUSH2 0x14B4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x515 JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1507 JUMPI PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1539 JUMPI POP POP POP POP POP PUSH2 0x515 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1553 JUMPI POP POP POP POP POP POP PUSH2 0x515 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x156F JUMPI POP POP POP POP POP POP PUSH2 0x515 JUMP JUMPDEST PUSH2 0x157E PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x146C JUMP JUMPDEST POP SWAP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x159F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 GAS 0xD0 0x5C SWAP16 CREATE SWAP1 0x2C 0xD3 0x27 EXTCODESIZE 0xEB 0xB0 0x29 CALLER 0xC0 0xEA 0xBA 0xCC 0xB6 PUSH21 0x3251898749A7882750116064736F6C634300080100 CALLER ","sourceMap":"570:16539:7:-:0;;;1107:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1149:13;1157:4;1149:7;:13::i;:::-;1107:62;570:16539;;8149:86;8215:13;;;;:4;;:13;;;;;:::i;:::-;;8149:86;:::o;570:16539::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;570:16539:7;;;-1:-1:-1;570:16539:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1137:30;;125:2;168;156:9;147:7;143:23;139:32;136:2;;;189:6;181;174:22;136:2;221:16;;-1:-1:-1;;;;;286:14:30;;;283:2;;;318:6;310;303:22;283:2;361:6;350:9;346:22;336:32;;406:7;399:4;395:2;391:13;387:27;377:2;;433:6;425;418:22;377:2;467;461:9;489:2;485;482:10;479:2;;;495:18;;:::i;:::-;570:2;564:9;538:2;624:13;;-1:-1:-1;;620:22:30;;;644:2;616:31;612:40;600:53;;;668:18;;;688:22;;;665:46;662:2;;;714:18;;:::i;:::-;754:10;750:2;743:22;789:2;781:6;774:18;829:7;824:2;819;815;811:11;807:20;804:33;801:2;;;855:6;847;840:22;801:2;882:6;873:15;;897:129;911:2;908:1;905:9;897:129;;;999:10;;;995:19;;989:26;968:14;;;964:23;;957:59;922:10;;;;897:129;;;1044:2;1041:1;1038:9;1035:2;;;1103:6;1098:2;1093;1085:6;1081:15;1077:24;1070:40;1035:2;1139:6;105:1046;-1:-1:-1;;;;;;;;105:1046:30:o;1156:380::-;1241:1;1231:12;;1288:1;1278:12;;;1299:2;;1353:4;1345:6;1341:17;1331:27;;1299:2;1406;1398:6;1395:14;1375:18;1372:38;1369:2;;;1452:10;1447:3;1443:20;1440:1;1433:31;1487:4;1484:1;1477:15;1515:4;1512:1;1505:15;1369:2;;1211:325;;;:::o;1541:127::-;1602:10;1597:3;1593:20;1590:1;1583:31;1633:4;1630:1;1623:15;1657:4;1654:1;1647:15;1573:95;570:16539:7;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:16444:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"65:147:30","statements":[{"nodeType":"YulAssignment","src":"75:29:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"84:12:30"},"nodeType":"YulFunctionCall","src":"84:20:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:30"}]},{"body":{"nodeType":"YulBlock","src":"190:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"199:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"202:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"192:6:30"},"nodeType":"YulFunctionCall","src":"192:12:30"},"nodeType":"YulExpressionStatement","src":"192:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"126:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"137:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"144:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"133:3:30"},"nodeType":"YulFunctionCall","src":"133:54:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"123:2:30"},"nodeType":"YulFunctionCall","src":"123:65:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"116:6:30"},"nodeType":"YulFunctionCall","src":"116:73:30"},"nodeType":"YulIf","src":"113:2:30"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55:5:30","type":""}],"src":"14:198:30"},{"body":{"nodeType":"YulBlock","src":"287:698:30","statements":[{"body":{"nodeType":"YulBlock","src":"336:24:30","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"345:5:30"},{"name":"array","nodeType":"YulIdentifier","src":"352:5:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"338:6:30"},"nodeType":"YulFunctionCall","src":"338:20:30"},"nodeType":"YulExpressionStatement","src":"338:20:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"315:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"323:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"311:3:30"},"nodeType":"YulFunctionCall","src":"311:17:30"},{"name":"end","nodeType":"YulIdentifier","src":"330:3:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"307:3:30"},"nodeType":"YulFunctionCall","src":"307:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"300:6:30"},"nodeType":"YulFunctionCall","src":"300:35:30"},"nodeType":"YulIf","src":"297:2:30"},{"nodeType":"YulVariableDeclaration","src":"369:30:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"392:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"379:12:30"},"nodeType":"YulFunctionCall","src":"379:20:30"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"373:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"408:14:30","value":{"kind":"number","nodeType":"YulLiteral","src":"418:4:30","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"412:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"431:59:30","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"487:2:30"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn","nodeType":"YulIdentifier","src":"441:45:30"},"nodeType":"YulFunctionCall","src":"441:49:30"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"435:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"499:23:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"519:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"513:5:30"},"nodeType":"YulFunctionCall","src":"513:9:30"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"503:6:30","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"551:6:30"},{"name":"_3","nodeType":"YulIdentifier","src":"559:2:30"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"531:19:30"},"nodeType":"YulFunctionCall","src":"531:31:30"},"nodeType":"YulExpressionStatement","src":"531:31:30"},{"nodeType":"YulVariableDeclaration","src":"571:17:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"582:6:30"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"575:3:30","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"604:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"612:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:30"},"nodeType":"YulFunctionCall","src":"597:18:30"},"nodeType":"YulExpressionStatement","src":"597:18:30"},{"nodeType":"YulAssignment","src":"624:22:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"635:6:30"},{"name":"_2","nodeType":"YulIdentifier","src":"643:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"631:3:30"},"nodeType":"YulFunctionCall","src":"631:15:30"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"624:3:30"}]},{"nodeType":"YulVariableDeclaration","src":"655:26:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"670:6:30"},{"name":"_2","nodeType":"YulIdentifier","src":"678:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"666:3:30"},"nodeType":"YulFunctionCall","src":"666:15:30"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"659:3:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"736:24:30","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"745:5:30"},{"name":"array","nodeType":"YulIdentifier","src":"752:5:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"738:6:30"},"nodeType":"YulFunctionCall","src":"738:20:30"},"nodeType":"YulExpressionStatement","src":"738:20:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"704:6:30"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"716:2:30"},{"name":"_2","nodeType":"YulIdentifier","src":"720:2:30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"712:3:30"},"nodeType":"YulFunctionCall","src":"712:11:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"700:3:30"},"nodeType":"YulFunctionCall","src":"700:24:30"},{"name":"_2","nodeType":"YulIdentifier","src":"726:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"696:3:30"},"nodeType":"YulFunctionCall","src":"696:33:30"},{"name":"end","nodeType":"YulIdentifier","src":"731:3:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"693:2:30"},"nodeType":"YulFunctionCall","src":"693:42:30"},"nodeType":"YulIf","src":"690:2:30"},{"nodeType":"YulVariableDeclaration","src":"769:14:30","value":{"name":"array","nodeType":"YulIdentifier","src":"778:5:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"773:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"837:118:30","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"858:3:30"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"876:3:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"863:12:30"},"nodeType":"YulFunctionCall","src":"863:17:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"851:6:30"},"nodeType":"YulFunctionCall","src":"851:30:30"},"nodeType":"YulExpressionStatement","src":"851:30:30"},{"nodeType":"YulAssignment","src":"894:19:30","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"905:3:30"},{"name":"_2","nodeType":"YulIdentifier","src":"910:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"901:3:30"},"nodeType":"YulFunctionCall","src":"901:12:30"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"894:3:30"}]},{"nodeType":"YulAssignment","src":"926:19:30","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"937:3:30"},{"name":"_2","nodeType":"YulIdentifier","src":"942:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:30"},"nodeType":"YulFunctionCall","src":"933:12:30"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"926:3:30"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"803:1:30"},{"name":"_1","nodeType":"YulIdentifier","src":"806:2:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"800:2:30"},"nodeType":"YulFunctionCall","src":"800:9:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"810:18:30","statements":[{"nodeType":"YulAssignment","src":"812:14:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"821:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"824:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"817:3:30"},"nodeType":"YulFunctionCall","src":"817:9:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"812:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"796:3:30","statements":[]},"src":"792:163:30"},{"nodeType":"YulAssignment","src":"964:15:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"973:6:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"964:5:30"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"261:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"269:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"277:5:30","type":""}],"src":"217:768:30"},{"body":{"nodeType":"YulBlock","src":"1044:523:30","statements":[{"body":{"nodeType":"YulBlock","src":"1093:24:30","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1102:5:30"},{"name":"array","nodeType":"YulIdentifier","src":"1109:5:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1095:6:30"},"nodeType":"YulFunctionCall","src":"1095:20:30"},"nodeType":"YulExpressionStatement","src":"1095:20:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1072:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"1080:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1068:3:30"},"nodeType":"YulFunctionCall","src":"1068:17:30"},{"name":"end","nodeType":"YulIdentifier","src":"1087:3:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1064:3:30"},"nodeType":"YulFunctionCall","src":"1064:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1057:6:30"},"nodeType":"YulFunctionCall","src":"1057:35:30"},"nodeType":"YulIf","src":"1054:2:30"},{"nodeType":"YulVariableDeclaration","src":"1126:30:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1149:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1136:12:30"},"nodeType":"YulFunctionCall","src":"1136:20:30"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1130:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1195:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1197:16:30"},"nodeType":"YulFunctionCall","src":"1197:18:30"},"nodeType":"YulExpressionStatement","src":"1197:18:30"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1171:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"1175:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1168:2:30"},"nodeType":"YulFunctionCall","src":"1168:26:30"},"nodeType":"YulIf","src":"1165:2:30"},{"nodeType":"YulVariableDeclaration","src":"1226:23:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1246:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1240:5:30"},"nodeType":"YulFunctionCall","src":"1240:9:30"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1230:6:30","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1278:6:30"},{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1298:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"1302:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1294:3:30"},"nodeType":"YulFunctionCall","src":"1294:13:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1313:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1309:3:30"},"nodeType":"YulFunctionCall","src":"1309:7:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1290:3:30"},"nodeType":"YulFunctionCall","src":"1290:27:30"},{"kind":"number","nodeType":"YulLiteral","src":"1319:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:30"},"nodeType":"YulFunctionCall","src":"1286:38:30"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1258:19:30"},"nodeType":"YulFunctionCall","src":"1258:67:30"},"nodeType":"YulExpressionStatement","src":"1258:67:30"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1341:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1349:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:30"},"nodeType":"YulFunctionCall","src":"1334:18:30"},"nodeType":"YulExpressionStatement","src":"1334:18:30"},{"body":{"nodeType":"YulBlock","src":"1400:24:30","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1409:5:30"},{"name":"array","nodeType":"YulIdentifier","src":"1416:5:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1402:6:30"},"nodeType":"YulFunctionCall","src":"1402:20:30"},"nodeType":"YulExpressionStatement","src":"1402:20:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1375:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1383:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1371:3:30"},"nodeType":"YulFunctionCall","src":"1371:15:30"},{"kind":"number","nodeType":"YulLiteral","src":"1388:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1367:3:30"},"nodeType":"YulFunctionCall","src":"1367:26:30"},{"name":"end","nodeType":"YulIdentifier","src":"1395:3:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1364:2:30"},"nodeType":"YulFunctionCall","src":"1364:35:30"},"nodeType":"YulIf","src":"1361:2:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1450:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"1458:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1446:3:30"},"nodeType":"YulFunctionCall","src":"1446:17:30"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1469:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"1477:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1465:3:30"},"nodeType":"YulFunctionCall","src":"1465:17:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1484:2:30"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1433:12:30"},"nodeType":"YulFunctionCall","src":"1433:54:30"},"nodeType":"YulExpressionStatement","src":"1433:54:30"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1511:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1519:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1507:3:30"},"nodeType":"YulFunctionCall","src":"1507:15:30"},{"kind":"number","nodeType":"YulLiteral","src":"1524:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1503:3:30"},"nodeType":"YulFunctionCall","src":"1503:26:30"},{"name":"array","nodeType":"YulIdentifier","src":"1531:5:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1496:6:30"},"nodeType":"YulFunctionCall","src":"1496:41:30"},"nodeType":"YulExpressionStatement","src":"1496:41:30"},{"nodeType":"YulAssignment","src":"1546:15:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1555:6:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1546:5:30"}]}]},"name":"abi_decode_t_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1018:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"1026:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1034:5:30","type":""}],"src":"990:577:30"},{"body":{"nodeType":"YulBlock","src":"1659:187:30","statements":[{"body":{"nodeType":"YulBlock","src":"1705:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1714:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1722:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1707:6:30"},"nodeType":"YulFunctionCall","src":"1707:22:30"},"nodeType":"YulExpressionStatement","src":"1707:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1680:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1689:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1676:3:30"},"nodeType":"YulFunctionCall","src":"1676:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1701:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1672:3:30"},"nodeType":"YulFunctionCall","src":"1672:32:30"},"nodeType":"YulIf","src":"1669:2:30"},{"nodeType":"YulAssignment","src":"1740:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1771:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1750:20:30"},"nodeType":"YulFunctionCall","src":"1750:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1740:6:30"}]},{"nodeType":"YulAssignment","src":"1790:50:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1825:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1836:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1821:3:30"},"nodeType":"YulFunctionCall","src":"1821:18:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1800:20:30"},"nodeType":"YulFunctionCall","src":"1800:40:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1790:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1617:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1628:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1640:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1648:6:30","type":""}],"src":"1572:274:30"},{"body":{"nodeType":"YulBlock","src":"2048:804:30","statements":[{"body":{"nodeType":"YulBlock","src":"2095:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2104:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"2112:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2097:6:30"},"nodeType":"YulFunctionCall","src":"2097:22:30"},"nodeType":"YulExpressionStatement","src":"2097:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2069:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"2078:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2065:3:30"},"nodeType":"YulFunctionCall","src":"2065:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"2090:3:30","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2061:3:30"},"nodeType":"YulFunctionCall","src":"2061:33:30"},"nodeType":"YulIf","src":"2058:2:30"},{"nodeType":"YulAssignment","src":"2130:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2161:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2140:20:30"},"nodeType":"YulFunctionCall","src":"2140:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2130:6:30"}]},{"nodeType":"YulAssignment","src":"2180:50:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2215:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2226:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2211:3:30"},"nodeType":"YulFunctionCall","src":"2211:18:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2190:20:30"},"nodeType":"YulFunctionCall","src":"2190:40:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2180:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"2239:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2270:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2281:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2266:3:30"},"nodeType":"YulFunctionCall","src":"2266:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2253:12:30"},"nodeType":"YulFunctionCall","src":"2253:32:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2243:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2294:28:30","value":{"kind":"number","nodeType":"YulLiteral","src":"2304:18:30","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2298:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"2349:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2358:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"2366:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2351:6:30"},"nodeType":"YulFunctionCall","src":"2351:22:30"},"nodeType":"YulExpressionStatement","src":"2351:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2337:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"2345:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2334:2:30"},"nodeType":"YulFunctionCall","src":"2334:14:30"},"nodeType":"YulIf","src":"2331:2:30"},{"nodeType":"YulAssignment","src":"2384:77:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2433:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"2444:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2429:3:30"},"nodeType":"YulFunctionCall","src":"2429:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2453:7:30"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"2394:34:30"},"nodeType":"YulFunctionCall","src":"2394:67:30"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2384:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"2470:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2503:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2514:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2499:3:30"},"nodeType":"YulFunctionCall","src":"2499:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2486:12:30"},"nodeType":"YulFunctionCall","src":"2486:32:30"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"2474:8:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"2547:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2556:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"2564:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2549:6:30"},"nodeType":"YulFunctionCall","src":"2549:22:30"},"nodeType":"YulExpressionStatement","src":"2549:22:30"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"2533:8:30"},{"name":"_1","nodeType":"YulIdentifier","src":"2543:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2530:2:30"},"nodeType":"YulFunctionCall","src":"2530:16:30"},"nodeType":"YulIf","src":"2527:2:30"},{"nodeType":"YulAssignment","src":"2582:79:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2631:9:30"},{"name":"offset_1","nodeType":"YulIdentifier","src":"2642:8:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2627:3:30"},"nodeType":"YulFunctionCall","src":"2627:24:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2653:7:30"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"2592:34:30"},"nodeType":"YulFunctionCall","src":"2592:69:30"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2582:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"2670:49:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2703:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2714:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2699:3:30"},"nodeType":"YulFunctionCall","src":"2699:19:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2686:12:30"},"nodeType":"YulFunctionCall","src":"2686:33:30"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"2674:8:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"2748:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2757:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"2765:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2750:6:30"},"nodeType":"YulFunctionCall","src":"2750:22:30"},"nodeType":"YulExpressionStatement","src":"2750:22:30"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"2734:8:30"},{"name":"_1","nodeType":"YulIdentifier","src":"2744:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2731:2:30"},"nodeType":"YulFunctionCall","src":"2731:16:30"},"nodeType":"YulIf","src":"2728:2:30"},{"nodeType":"YulAssignment","src":"2783:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2816:9:30"},{"name":"offset_2","nodeType":"YulIdentifier","src":"2827:8:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2812:3:30"},"nodeType":"YulFunctionCall","src":"2812:24:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2838:7:30"}],"functionName":{"name":"abi_decode_t_bytes","nodeType":"YulIdentifier","src":"2793:18:30"},"nodeType":"YulFunctionCall","src":"2793:53:30"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2783:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1982:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1993:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2005:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2013:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2021:6:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2029:6:30","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2037:6:30","type":""}],"src":"1851:1001:30"},{"body":{"nodeType":"YulBlock","src":"3004:485:30","statements":[{"body":{"nodeType":"YulBlock","src":"3051:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3060:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"3068:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3053:6:30"},"nodeType":"YulFunctionCall","src":"3053:22:30"},"nodeType":"YulExpressionStatement","src":"3053:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3025:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"3034:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3021:3:30"},"nodeType":"YulFunctionCall","src":"3021:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"3046:3:30","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3017:3:30"},"nodeType":"YulFunctionCall","src":"3017:33:30"},"nodeType":"YulIf","src":"3014:2:30"},{"nodeType":"YulAssignment","src":"3086:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3117:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3096:20:30"},"nodeType":"YulFunctionCall","src":"3096:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3086:6:30"}]},{"nodeType":"YulAssignment","src":"3136:50:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3171:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3182:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3167:3:30"},"nodeType":"YulFunctionCall","src":"3167:18:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3146:20:30"},"nodeType":"YulFunctionCall","src":"3146:40:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3136:6:30"}]},{"nodeType":"YulAssignment","src":"3195:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3222:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3233:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3218:3:30"},"nodeType":"YulFunctionCall","src":"3218:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3205:12:30"},"nodeType":"YulFunctionCall","src":"3205:32:30"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3195:6:30"}]},{"nodeType":"YulAssignment","src":"3246:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3273:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3284:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3269:3:30"},"nodeType":"YulFunctionCall","src":"3269:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3256:12:30"},"nodeType":"YulFunctionCall","src":"3256:32:30"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3246:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"3297:47:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3328:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3339:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3324:3:30"},"nodeType":"YulFunctionCall","src":"3324:19:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3311:12:30"},"nodeType":"YulFunctionCall","src":"3311:33:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3301:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"3387:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3396:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"3404:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3389:6:30"},"nodeType":"YulFunctionCall","src":"3389:22:30"},"nodeType":"YulExpressionStatement","src":"3389:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3359:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"3367:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3356:2:30"},"nodeType":"YulFunctionCall","src":"3356:30:30"},"nodeType":"YulIf","src":"3353:2:30"},{"nodeType":"YulAssignment","src":"3422:61:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3455:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"3466:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3451:3:30"},"nodeType":"YulFunctionCall","src":"3451:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3475:7:30"}],"functionName":{"name":"abi_decode_t_bytes","nodeType":"YulIdentifier","src":"3432:18:30"},"nodeType":"YulFunctionCall","src":"3432:51:30"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3422:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2938:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2949:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2961:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2969:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2977:6:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2985:6:30","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2993:6:30","type":""}],"src":"2857:632:30"},{"body":{"nodeType":"YulBlock","src":"3578:285:30","statements":[{"body":{"nodeType":"YulBlock","src":"3624:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3633:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"3641:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3626:6:30"},"nodeType":"YulFunctionCall","src":"3626:22:30"},"nodeType":"YulExpressionStatement","src":"3626:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3599:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"3608:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3595:3:30"},"nodeType":"YulFunctionCall","src":"3595:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"3620:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3591:3:30"},"nodeType":"YulFunctionCall","src":"3591:32:30"},"nodeType":"YulIf","src":"3588:2:30"},{"nodeType":"YulAssignment","src":"3659:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3669:20:30"},"nodeType":"YulFunctionCall","src":"3669:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3659:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"3709:45:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3739:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3750:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3735:3:30"},"nodeType":"YulFunctionCall","src":"3735:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3722:12:30"},"nodeType":"YulFunctionCall","src":"3722:32:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3713:5:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"3807:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3816:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"3824:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3809:6:30"},"nodeType":"YulFunctionCall","src":"3809:22:30"},"nodeType":"YulExpressionStatement","src":"3809:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3776:5:30"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3797:5:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3790:6:30"},"nodeType":"YulFunctionCall","src":"3790:13:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3783:6:30"},"nodeType":"YulFunctionCall","src":"3783:21:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3773:2:30"},"nodeType":"YulFunctionCall","src":"3773:32:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3766:6:30"},"nodeType":"YulFunctionCall","src":"3766:40:30"},"nodeType":"YulIf","src":"3763:2:30"},{"nodeType":"YulAssignment","src":"3842:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"3852:5:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3842:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3536:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3547:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3559:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3567:6:30","type":""}],"src":"3494:369:30"},{"body":{"nodeType":"YulBlock","src":"3955:179:30","statements":[{"body":{"nodeType":"YulBlock","src":"4001:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4010:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"4018:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4003:6:30"},"nodeType":"YulFunctionCall","src":"4003:22:30"},"nodeType":"YulExpressionStatement","src":"4003:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3976:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"3985:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3972:3:30"},"nodeType":"YulFunctionCall","src":"3972:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"3997:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3968:3:30"},"nodeType":"YulFunctionCall","src":"3968:32:30"},"nodeType":"YulIf","src":"3965:2:30"},{"nodeType":"YulAssignment","src":"4036:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4067:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4046:20:30"},"nodeType":"YulFunctionCall","src":"4046:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4036:6:30"}]},{"nodeType":"YulAssignment","src":"4086:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4113:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4124:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4109:3:30"},"nodeType":"YulFunctionCall","src":"4109:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4096:12:30"},"nodeType":"YulFunctionCall","src":"4096:32:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4086:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3913:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3924:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3936:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3944:6:30","type":""}],"src":"3868:266:30"},{"body":{"nodeType":"YulBlock","src":"4276:1152:30","statements":[{"body":{"nodeType":"YulBlock","src":"4322:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4331:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"4339:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4324:6:30"},"nodeType":"YulFunctionCall","src":"4324:22:30"},"nodeType":"YulExpressionStatement","src":"4324:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4297:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"4306:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4293:3:30"},"nodeType":"YulFunctionCall","src":"4293:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"4318:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4289:3:30"},"nodeType":"YulFunctionCall","src":"4289:32:30"},"nodeType":"YulIf","src":"4286:2:30"},{"nodeType":"YulVariableDeclaration","src":"4357:37:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4384:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4371:12:30"},"nodeType":"YulFunctionCall","src":"4371:23:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4361:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4403:28:30","value":{"kind":"number","nodeType":"YulLiteral","src":"4413:18:30","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4407:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"4458:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4467:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"4475:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4460:6:30"},"nodeType":"YulFunctionCall","src":"4460:22:30"},"nodeType":"YulExpressionStatement","src":"4460:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4446:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"4454:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4443:2:30"},"nodeType":"YulFunctionCall","src":"4443:14:30"},"nodeType":"YulIf","src":"4440:2:30"},{"nodeType":"YulVariableDeclaration","src":"4493:32:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4507:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"4518:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4503:3:30"},"nodeType":"YulFunctionCall","src":"4503:22:30"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4497:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"4573:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4582:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"4590:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4575:6:30"},"nodeType":"YulFunctionCall","src":"4575:22:30"},"nodeType":"YulExpressionStatement","src":"4575:22:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4552:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"4556:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4548:3:30"},"nodeType":"YulFunctionCall","src":"4548:13:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4563:7:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4544:3:30"},"nodeType":"YulFunctionCall","src":"4544:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4537:6:30"},"nodeType":"YulFunctionCall","src":"4537:35:30"},"nodeType":"YulIf","src":"4534:2:30"},{"nodeType":"YulVariableDeclaration","src":"4608:26:30","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4631:2:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4618:12:30"},"nodeType":"YulFunctionCall","src":"4618:16:30"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4612:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4643:14:30","value":{"kind":"number","nodeType":"YulLiteral","src":"4653:4:30","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"4647:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4666:59:30","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4722:2:30"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn","nodeType":"YulIdentifier","src":"4676:45:30"},"nodeType":"YulFunctionCall","src":"4676:49:30"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"4670:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4734:23:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4754:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4748:5:30"},"nodeType":"YulFunctionCall","src":"4748:9:30"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4738:6:30","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4786:6:30"},{"name":"_5","nodeType":"YulIdentifier","src":"4794:2:30"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4766:19:30"},"nodeType":"YulFunctionCall","src":"4766:31:30"},"nodeType":"YulExpressionStatement","src":"4766:31:30"},{"nodeType":"YulVariableDeclaration","src":"4806:17:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4817:6:30"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4810:3:30","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4839:6:30"},{"name":"_3","nodeType":"YulIdentifier","src":"4847:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4832:6:30"},"nodeType":"YulFunctionCall","src":"4832:18:30"},"nodeType":"YulExpressionStatement","src":"4832:18:30"},{"nodeType":"YulAssignment","src":"4859:22:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4870:6:30"},{"name":"_4","nodeType":"YulIdentifier","src":"4878:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4866:3:30"},"nodeType":"YulFunctionCall","src":"4866:15:30"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4859:3:30"}]},{"nodeType":"YulVariableDeclaration","src":"4890:22:30","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4905:2:30"},{"name":"_4","nodeType":"YulIdentifier","src":"4909:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4901:3:30"},"nodeType":"YulFunctionCall","src":"4901:11:30"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"4894:3:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"4967:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4976:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"4984:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4969:6:30"},"nodeType":"YulFunctionCall","src":"4969:22:30"},"nodeType":"YulExpressionStatement","src":"4969:22:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4935:2:30"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4943:2:30"},{"name":"_4","nodeType":"YulIdentifier","src":"4947:2:30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4939:3:30"},"nodeType":"YulFunctionCall","src":"4939:11:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4931:3:30"},"nodeType":"YulFunctionCall","src":"4931:20:30"},{"name":"_4","nodeType":"YulIdentifier","src":"4953:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4927:3:30"},"nodeType":"YulFunctionCall","src":"4927:29:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4958:7:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4924:2:30"},"nodeType":"YulFunctionCall","src":"4924:42:30"},"nodeType":"YulIf","src":"4921:2:30"},{"nodeType":"YulVariableDeclaration","src":"5002:15:30","value":{"name":"value0","nodeType":"YulIdentifier","src":"5011:6:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5006:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"5071:126:30","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5092:3:30"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5118:3:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5097:20:30"},"nodeType":"YulFunctionCall","src":"5097:25:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5085:6:30"},"nodeType":"YulFunctionCall","src":"5085:38:30"},"nodeType":"YulExpressionStatement","src":"5085:38:30"},{"nodeType":"YulAssignment","src":"5136:19:30","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5147:3:30"},{"name":"_4","nodeType":"YulIdentifier","src":"5152:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5143:3:30"},"nodeType":"YulFunctionCall","src":"5143:12:30"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5136:3:30"}]},{"nodeType":"YulAssignment","src":"5168:19:30","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5179:3:30"},{"name":"_4","nodeType":"YulIdentifier","src":"5184:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5175:3:30"},"nodeType":"YulFunctionCall","src":"5175:12:30"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5168:3:30"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5037:1:30"},{"name":"_3","nodeType":"YulIdentifier","src":"5040:2:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5034:2:30"},"nodeType":"YulFunctionCall","src":"5034:9:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5044:18:30","statements":[{"nodeType":"YulAssignment","src":"5046:14:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5055:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"5058:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5051:3:30"},"nodeType":"YulFunctionCall","src":"5051:9:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5046:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"5030:3:30","statements":[]},"src":"5026:171:30"},{"nodeType":"YulAssignment","src":"5206:16:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"5216:6:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5206:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"5231:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5264:9:30"},{"name":"_4","nodeType":"YulIdentifier","src":"5275:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5260:3:30"},"nodeType":"YulFunctionCall","src":"5260:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5247:12:30"},"nodeType":"YulFunctionCall","src":"5247:32:30"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5235:8:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"5308:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5317:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"5325:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5310:6:30"},"nodeType":"YulFunctionCall","src":"5310:22:30"},"nodeType":"YulExpressionStatement","src":"5310:22:30"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5294:8:30"},{"name":"_1","nodeType":"YulIdentifier","src":"5304:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5291:2:30"},"nodeType":"YulFunctionCall","src":"5291:16:30"},"nodeType":"YulIf","src":"5288:2:30"},{"nodeType":"YulAssignment","src":"5343:79:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5392:9:30"},{"name":"offset_1","nodeType":"YulIdentifier","src":"5403:8:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5388:3:30"},"nodeType":"YulFunctionCall","src":"5388:24:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5414:7:30"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"5353:34:30"},"nodeType":"YulFunctionCall","src":"5353:69:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5343:6:30"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4234:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4245:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4257:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4265:6:30","type":""}],"src":"4139:1289:30"},{"body":{"nodeType":"YulBlock","src":"5502:188:30","statements":[{"body":{"nodeType":"YulBlock","src":"5548:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5557:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"5565:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5550:6:30"},"nodeType":"YulFunctionCall","src":"5550:22:30"},"nodeType":"YulExpressionStatement","src":"5550:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5523:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"5532:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5519:3:30"},"nodeType":"YulFunctionCall","src":"5519:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"5544:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5515:3:30"},"nodeType":"YulFunctionCall","src":"5515:32:30"},"nodeType":"YulIf","src":"5512:2:30"},{"nodeType":"YulVariableDeclaration","src":"5583:36:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5609:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5596:12:30"},"nodeType":"YulFunctionCall","src":"5596:23:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5587:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5654:5:30"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"5628:25:30"},"nodeType":"YulFunctionCall","src":"5628:32:30"},"nodeType":"YulExpressionStatement","src":"5628:32:30"},{"nodeType":"YulAssignment","src":"5669:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"5679:5:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5669:6:30"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5468:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5479:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5491:6:30","type":""}],"src":"5433:257:30"},{"body":{"nodeType":"YulBlock","src":"5775:181:30","statements":[{"body":{"nodeType":"YulBlock","src":"5821:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5830:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"5838:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5823:6:30"},"nodeType":"YulFunctionCall","src":"5823:22:30"},"nodeType":"YulExpressionStatement","src":"5823:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5796:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"5805:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5792:3:30"},"nodeType":"YulFunctionCall","src":"5792:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"5817:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5788:3:30"},"nodeType":"YulFunctionCall","src":"5788:32:30"},"nodeType":"YulIf","src":"5785:2:30"},{"nodeType":"YulVariableDeclaration","src":"5856:29:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5875:9:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5869:5:30"},"nodeType":"YulFunctionCall","src":"5869:16:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5860:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5920:5:30"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"5894:25:30"},"nodeType":"YulFunctionCall","src":"5894:32:30"},"nodeType":"YulExpressionStatement","src":"5894:32:30"},{"nodeType":"YulAssignment","src":"5935:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"5945:5:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5935:6:30"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5741:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5752:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5764:6:30","type":""}],"src":"5695:261:30"},{"body":{"nodeType":"YulBlock","src":"6031:120:30","statements":[{"body":{"nodeType":"YulBlock","src":"6077:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6086:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"6094:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6079:6:30"},"nodeType":"YulFunctionCall","src":"6079:22:30"},"nodeType":"YulExpressionStatement","src":"6079:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6052:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"6061:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6048:3:30"},"nodeType":"YulFunctionCall","src":"6048:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"6073:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6044:3:30"},"nodeType":"YulFunctionCall","src":"6044:32:30"},"nodeType":"YulIf","src":"6041:2:30"},{"nodeType":"YulAssignment","src":"6112:33:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6135:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6122:12:30"},"nodeType":"YulFunctionCall","src":"6122:23:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6112:6:30"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5997:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6008:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6020:6:30","type":""}],"src":"5961:190:30"},{"body":{"nodeType":"YulBlock","src":"6223:376:30","statements":[{"nodeType":"YulVariableDeclaration","src":"6233:26:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6253:5:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6247:5:30"},"nodeType":"YulFunctionCall","src":"6247:12:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6237:6:30","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6275:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"6280:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6268:6:30"},"nodeType":"YulFunctionCall","src":"6268:19:30"},"nodeType":"YulExpressionStatement","src":"6268:19:30"},{"nodeType":"YulVariableDeclaration","src":"6296:14:30","value":{"kind":"number","nodeType":"YulLiteral","src":"6306:4:30","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6300:2:30","type":""}]},{"nodeType":"YulAssignment","src":"6319:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6330:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"6335:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6326:3:30"},"nodeType":"YulFunctionCall","src":"6326:12:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6319:3:30"}]},{"nodeType":"YulVariableDeclaration","src":"6347:28:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6365:5:30"},{"name":"_1","nodeType":"YulIdentifier","src":"6372:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6361:3:30"},"nodeType":"YulFunctionCall","src":"6361:14:30"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6351:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6384:12:30","value":{"name":"end","nodeType":"YulIdentifier","src":"6393:3:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6388:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"6454:120:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6475:3:30"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6486:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6480:5:30"},"nodeType":"YulFunctionCall","src":"6480:13:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6468:6:30"},"nodeType":"YulFunctionCall","src":"6468:26:30"},"nodeType":"YulExpressionStatement","src":"6468:26:30"},{"nodeType":"YulAssignment","src":"6507:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6518:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"6523:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6514:3:30"},"nodeType":"YulFunctionCall","src":"6514:12:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6507:3:30"}]},{"nodeType":"YulAssignment","src":"6539:25:30","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6553:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"6561:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6549:3:30"},"nodeType":"YulFunctionCall","src":"6549:15:30"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6539:6:30"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6416:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"6419:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6413:2:30"},"nodeType":"YulFunctionCall","src":"6413:13:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6427:18:30","statements":[{"nodeType":"YulAssignment","src":"6429:14:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6438:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"6441:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6434:3:30"},"nodeType":"YulFunctionCall","src":"6434:9:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6429:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"6409:3:30","statements":[]},"src":"6405:169:30"},{"nodeType":"YulAssignment","src":"6583:10:30","value":{"name":"pos","nodeType":"YulIdentifier","src":"6590:3:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6583:3:30"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6200:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6207:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6215:3:30","type":""}],"src":"6156:443:30"},{"body":{"nodeType":"YulBlock","src":"6655:426:30","statements":[{"nodeType":"YulVariableDeclaration","src":"6665:26:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6685:5:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6679:5:30"},"nodeType":"YulFunctionCall","src":"6679:12:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6669:6:30","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6707:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"6712:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6700:6:30"},"nodeType":"YulFunctionCall","src":"6700:19:30"},"nodeType":"YulExpressionStatement","src":"6700:19:30"},{"nodeType":"YulVariableDeclaration","src":"6728:12:30","value":{"name":"end","nodeType":"YulIdentifier","src":"6737:3:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6732:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"6801:110:30","statements":[{"nodeType":"YulVariableDeclaration","src":"6815:14:30","value":{"kind":"number","nodeType":"YulLiteral","src":"6825:4:30","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6819:2:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6857:3:30"},{"name":"i","nodeType":"YulIdentifier","src":"6862:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6853:3:30"},"nodeType":"YulFunctionCall","src":"6853:11:30"},{"name":"_1","nodeType":"YulIdentifier","src":"6866:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6849:3:30"},"nodeType":"YulFunctionCall","src":"6849:20:30"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6885:5:30"},{"name":"i","nodeType":"YulIdentifier","src":"6892:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6881:3:30"},"nodeType":"YulFunctionCall","src":"6881:13:30"},{"name":"_1","nodeType":"YulIdentifier","src":"6896:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6877:3:30"},"nodeType":"YulFunctionCall","src":"6877:22:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6871:5:30"},"nodeType":"YulFunctionCall","src":"6871:29:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6842:6:30"},"nodeType":"YulFunctionCall","src":"6842:59:30"},"nodeType":"YulExpressionStatement","src":"6842:59:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6760:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"6763:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6757:2:30"},"nodeType":"YulFunctionCall","src":"6757:13:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6771:21:30","statements":[{"nodeType":"YulAssignment","src":"6773:17:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6782:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"6785:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6778:3:30"},"nodeType":"YulFunctionCall","src":"6778:12:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6773:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"6753:3:30","statements":[]},"src":"6749:162:30"},{"body":{"nodeType":"YulBlock","src":"6945:64:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6974:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"6979:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6970:3:30"},"nodeType":"YulFunctionCall","src":"6970:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"6988:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6966:3:30"},"nodeType":"YulFunctionCall","src":"6966:27:30"},{"name":"end","nodeType":"YulIdentifier","src":"6995:3:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6959:6:30"},"nodeType":"YulFunctionCall","src":"6959:40:30"},"nodeType":"YulExpressionStatement","src":"6959:40:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6926:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"6929:6:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6923:2:30"},"nodeType":"YulFunctionCall","src":"6923:13:30"},"nodeType":"YulIf","src":"6920:2:30"},{"nodeType":"YulAssignment","src":"7018:57:30","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7033:3:30"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7046:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"7054:2:30","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7042:3:30"},"nodeType":"YulFunctionCall","src":"7042:15:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7063:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7059:3:30"},"nodeType":"YulFunctionCall","src":"7059:7:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7038:3:30"},"nodeType":"YulFunctionCall","src":"7038:29:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7029:3:30"},"nodeType":"YulFunctionCall","src":"7029:39:30"},{"kind":"number","nodeType":"YulLiteral","src":"7070:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7025:3:30"},"nodeType":"YulFunctionCall","src":"7025:50:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7018:3:30"}]}]},"name":"abi_encode_t_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6632:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6639:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6647:3:30","type":""}],"src":"6604:477:30"},{"body":{"nodeType":"YulBlock","src":"7417:532:30","statements":[{"nodeType":"YulVariableDeclaration","src":"7427:52:30","value":{"kind":"number","nodeType":"YulLiteral","src":"7437:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7431:2:30","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7495:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7510:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"7518:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7506:3:30"},"nodeType":"YulFunctionCall","src":"7506:15:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7488:6:30"},"nodeType":"YulFunctionCall","src":"7488:34:30"},"nodeType":"YulExpressionStatement","src":"7488:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7542:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7553:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7538:3:30"},"nodeType":"YulFunctionCall","src":"7538:18:30"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7562:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"7570:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7558:3:30"},"nodeType":"YulFunctionCall","src":"7558:15:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7531:6:30"},"nodeType":"YulFunctionCall","src":"7531:43:30"},"nodeType":"YulExpressionStatement","src":"7531:43:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7594:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7605:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7590:3:30"},"nodeType":"YulFunctionCall","src":"7590:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"7610:3:30","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7583:6:30"},"nodeType":"YulFunctionCall","src":"7583:31:30"},"nodeType":"YulExpressionStatement","src":"7583:31:30"},{"nodeType":"YulVariableDeclaration","src":"7623:77:30","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7672:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7684:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7695:3:30","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7680:3:30"},"nodeType":"YulFunctionCall","src":"7680:19:30"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"7637:34:30"},"nodeType":"YulFunctionCall","src":"7637:63:30"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"7627:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7720:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7731:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7716:3:30"},"nodeType":"YulFunctionCall","src":"7716:18:30"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"7740:6:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"7748:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7736:3:30"},"nodeType":"YulFunctionCall","src":"7736:22:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7709:6:30"},"nodeType":"YulFunctionCall","src":"7709:50:30"},"nodeType":"YulExpressionStatement","src":"7709:50:30"},{"nodeType":"YulVariableDeclaration","src":"7768:64:30","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"7817:6:30"},{"name":"tail_1","nodeType":"YulIdentifier","src":"7825:6:30"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"7782:34:30"},"nodeType":"YulFunctionCall","src":"7782:50:30"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"7772:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7852:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7863:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7848:3:30"},"nodeType":"YulFunctionCall","src":"7848:19:30"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"7873:6:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"7881:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7869:3:30"},"nodeType":"YulFunctionCall","src":"7869:22:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7841:6:30"},"nodeType":"YulFunctionCall","src":"7841:51:30"},"nodeType":"YulExpressionStatement","src":"7841:51:30"},{"nodeType":"YulAssignment","src":"7901:42:30","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"7928:6:30"},{"name":"tail_2","nodeType":"YulIdentifier","src":"7936:6:30"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"7909:18:30"},"nodeType":"YulFunctionCall","src":"7909:34:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7901:4:30"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7354:9:30","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7365:6:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7373:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7381:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7389:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7397:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7408:4:30","type":""}],"src":"7086:863:30"},{"body":{"nodeType":"YulBlock","src":"8185:354:30","statements":[{"nodeType":"YulVariableDeclaration","src":"8195:52:30","value":{"kind":"number","nodeType":"YulLiteral","src":"8205:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8199:2:30","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8263:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8278:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"8286:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8274:3:30"},"nodeType":"YulFunctionCall","src":"8274:15:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8256:6:30"},"nodeType":"YulFunctionCall","src":"8256:34:30"},"nodeType":"YulExpressionStatement","src":"8256:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8310:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8321:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8306:3:30"},"nodeType":"YulFunctionCall","src":"8306:18:30"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8330:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"8338:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8326:3:30"},"nodeType":"YulFunctionCall","src":"8326:15:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8299:6:30"},"nodeType":"YulFunctionCall","src":"8299:43:30"},"nodeType":"YulExpressionStatement","src":"8299:43:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8362:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8373:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8358:3:30"},"nodeType":"YulFunctionCall","src":"8358:18:30"},{"name":"value2","nodeType":"YulIdentifier","src":"8378:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8351:6:30"},"nodeType":"YulFunctionCall","src":"8351:34:30"},"nodeType":"YulExpressionStatement","src":"8351:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8405:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8416:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8401:3:30"},"nodeType":"YulFunctionCall","src":"8401:18:30"},{"name":"value3","nodeType":"YulIdentifier","src":"8421:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8394:6:30"},"nodeType":"YulFunctionCall","src":"8394:34:30"},"nodeType":"YulExpressionStatement","src":"8394:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8448:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8459:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8444:3:30"},"nodeType":"YulFunctionCall","src":"8444:19:30"},{"kind":"number","nodeType":"YulLiteral","src":"8465:3:30","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8437:6:30"},"nodeType":"YulFunctionCall","src":"8437:32:30"},"nodeType":"YulExpressionStatement","src":"8437:32:30"},{"nodeType":"YulAssignment","src":"8478:55:30","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"8505:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8517:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8528:3:30","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8513:3:30"},"nodeType":"YulFunctionCall","src":"8513:19:30"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"8486:18:30"},"nodeType":"YulFunctionCall","src":"8486:47:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8478:4:30"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8122:9:30","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8133:6:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8141:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8149:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8157:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8165:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8176:4:30","type":""}],"src":"7954:585:30"},{"body":{"nodeType":"YulBlock","src":"8695:116:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8712:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8723:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8705:6:30"},"nodeType":"YulFunctionCall","src":"8705:21:30"},"nodeType":"YulExpressionStatement","src":"8705:21:30"},{"nodeType":"YulAssignment","src":"8735:70:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8778:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8790:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8801:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8786:3:30"},"nodeType":"YulFunctionCall","src":"8786:18:30"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"8743:34:30"},"nodeType":"YulFunctionCall","src":"8743:62:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8735:4:30"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8664:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8675:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8686:4:30","type":""}],"src":"8544:267:30"},{"body":{"nodeType":"YulBlock","src":"9045:248:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9062:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9073:2:30","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9055:6:30"},"nodeType":"YulFunctionCall","src":"9055:21:30"},"nodeType":"YulExpressionStatement","src":"9055:21:30"},{"nodeType":"YulVariableDeclaration","src":"9085:76:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9134:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9146:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9157:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9142:3:30"},"nodeType":"YulFunctionCall","src":"9142:18:30"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"9099:34:30"},"nodeType":"YulFunctionCall","src":"9099:62:30"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"9089:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9181:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9192:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9177:3:30"},"nodeType":"YulFunctionCall","src":"9177:18:30"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"9201:6:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"9209:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9197:3:30"},"nodeType":"YulFunctionCall","src":"9197:22:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9170:6:30"},"nodeType":"YulFunctionCall","src":"9170:50:30"},"nodeType":"YulExpressionStatement","src":"9170:50:30"},{"nodeType":"YulAssignment","src":"9229:58:30","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9272:6:30"},{"name":"tail_1","nodeType":"YulIdentifier","src":"9280:6:30"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"9237:34:30"},"nodeType":"YulFunctionCall","src":"9237:50:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9229:4:30"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9006:9:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9017:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9025:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9036:4:30","type":""}],"src":"8816:477:30"},{"body":{"nodeType":"YulBlock","src":"9393:92:30","statements":[{"nodeType":"YulAssignment","src":"9403:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9415:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9426:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9411:3:30"},"nodeType":"YulFunctionCall","src":"9411:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9403:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9445:9:30"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9470:6:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9463:6:30"},"nodeType":"YulFunctionCall","src":"9463:14:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9456:6:30"},"nodeType":"YulFunctionCall","src":"9456:22:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9438:6:30"},"nodeType":"YulFunctionCall","src":"9438:41:30"},"nodeType":"YulExpressionStatement","src":"9438:41:30"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9362:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9373:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9384:4:30","type":""}],"src":"9298:187:30"},{"body":{"nodeType":"YulBlock","src":"9611:100:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9628:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9639:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9621:6:30"},"nodeType":"YulFunctionCall","src":"9621:21:30"},"nodeType":"YulExpressionStatement","src":"9621:21:30"},{"nodeType":"YulAssignment","src":"9651:54:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9678:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9690:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9701:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9686:3:30"},"nodeType":"YulFunctionCall","src":"9686:18:30"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"9659:18:30"},"nodeType":"YulFunctionCall","src":"9659:46:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9651:4:30"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9580:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9591:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9602:4:30","type":""}],"src":"9490:221:30"},{"body":{"nodeType":"YulBlock","src":"9890:230:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9907:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9918:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9900:6:30"},"nodeType":"YulFunctionCall","src":"9900:21:30"},"nodeType":"YulExpressionStatement","src":"9900:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9941:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9952:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9937:3:30"},"nodeType":"YulFunctionCall","src":"9937:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"9957:2:30","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9930:6:30"},"nodeType":"YulFunctionCall","src":"9930:30:30"},"nodeType":"YulExpressionStatement","src":"9930:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9980:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9991:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9976:3:30"},"nodeType":"YulFunctionCall","src":"9976:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"9996:34:30","type":"","value":"ERC1155: ERC1155Receiver rejecte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9969:6:30"},"nodeType":"YulFunctionCall","src":"9969:62:30"},"nodeType":"YulExpressionStatement","src":"9969:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10051:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10062:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10047:3:30"},"nodeType":"YulFunctionCall","src":"10047:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"10067:10:30","type":"","value":"d tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10040:6:30"},"nodeType":"YulFunctionCall","src":"10040:38:30"},"nodeType":"YulExpressionStatement","src":"10040:38:30"},{"nodeType":"YulAssignment","src":"10087:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10099:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10110:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10095:3:30"},"nodeType":"YulFunctionCall","src":"10095:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10087:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9867:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9881:4:30","type":""}],"src":"9716:404:30"},{"body":{"nodeType":"YulBlock","src":"10299:232:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10316:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10327:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10309:6:30"},"nodeType":"YulFunctionCall","src":"10309:21:30"},"nodeType":"YulExpressionStatement","src":"10309:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10350:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10361:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10346:3:30"},"nodeType":"YulFunctionCall","src":"10346:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"10366:2:30","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10339:6:30"},"nodeType":"YulFunctionCall","src":"10339:30:30"},"nodeType":"YulExpressionStatement","src":"10339:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10389:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10400:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10385:3:30"},"nodeType":"YulFunctionCall","src":"10385:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"10405:34:30","type":"","value":"ERC1155: address zero is not a v"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10378:6:30"},"nodeType":"YulFunctionCall","src":"10378:62:30"},"nodeType":"YulExpressionStatement","src":"10378:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10460:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10471:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10456:3:30"},"nodeType":"YulFunctionCall","src":"10456:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"10476:12:30","type":"","value":"alid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10449:6:30"},"nodeType":"YulFunctionCall","src":"10449:40:30"},"nodeType":"YulExpressionStatement","src":"10449:40:30"},{"nodeType":"YulAssignment","src":"10498:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10510:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10521:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10506:3:30"},"nodeType":"YulFunctionCall","src":"10506:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10498:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10276:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10290:4:30","type":""}],"src":"10125:406:30"},{"body":{"nodeType":"YulBlock","src":"10710:236:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10727:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10738:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10720:6:30"},"nodeType":"YulFunctionCall","src":"10720:21:30"},"nodeType":"YulExpressionStatement","src":"10720:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10761:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10772:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10757:3:30"},"nodeType":"YulFunctionCall","src":"10757:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"10777:2:30","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10750:6:30"},"nodeType":"YulFunctionCall","src":"10750:30:30"},"nodeType":"YulExpressionStatement","src":"10750:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10800:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10811:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10796:3:30"},"nodeType":"YulFunctionCall","src":"10796:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"10816:34:30","type":"","value":"ERC1155: caller is not token own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10789:6:30"},"nodeType":"YulFunctionCall","src":"10789:62:30"},"nodeType":"YulExpressionStatement","src":"10789:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10871:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10882:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10867:3:30"},"nodeType":"YulFunctionCall","src":"10867:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"10887:16:30","type":"","value":"er or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10860:6:30"},"nodeType":"YulFunctionCall","src":"10860:44:30"},"nodeType":"YulExpressionStatement","src":"10860:44:30"},{"nodeType":"YulAssignment","src":"10913:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10925:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10936:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10921:3:30"},"nodeType":"YulFunctionCall","src":"10921:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10913:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10687:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10701:4:30","type":""}],"src":"10536:410:30"},{"body":{"nodeType":"YulBlock","src":"11125:227:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11142:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11153:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11135:6:30"},"nodeType":"YulFunctionCall","src":"11135:21:30"},"nodeType":"YulExpressionStatement","src":"11135:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11176:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11187:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11172:3:30"},"nodeType":"YulFunctionCall","src":"11172:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"11192:2:30","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11165:6:30"},"nodeType":"YulFunctionCall","src":"11165:30:30"},"nodeType":"YulExpressionStatement","src":"11165:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11215:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11226:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11211:3:30"},"nodeType":"YulFunctionCall","src":"11211:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"11231:34:30","type":"","value":"ERC1155: transfer to the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11204:6:30"},"nodeType":"YulFunctionCall","src":"11204:62:30"},"nodeType":"YulExpressionStatement","src":"11204:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11286:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11297:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11282:3:30"},"nodeType":"YulFunctionCall","src":"11282:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"11302:7:30","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11275:6:30"},"nodeType":"YulFunctionCall","src":"11275:35:30"},"nodeType":"YulExpressionStatement","src":"11275:35:30"},{"nodeType":"YulAssignment","src":"11319:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11331:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11342:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11327:3:30"},"nodeType":"YulFunctionCall","src":"11327:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11319:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11102:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11116:4:30","type":""}],"src":"10951:401:30"},{"body":{"nodeType":"YulBlock","src":"11531:232:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11548:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11559:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11541:6:30"},"nodeType":"YulFunctionCall","src":"11541:21:30"},"nodeType":"YulExpressionStatement","src":"11541:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11582:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11593:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11578:3:30"},"nodeType":"YulFunctionCall","src":"11578:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"11598:2:30","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11571:6:30"},"nodeType":"YulFunctionCall","src":"11571:30:30"},"nodeType":"YulExpressionStatement","src":"11571:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11621:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11632:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11617:3:30"},"nodeType":"YulFunctionCall","src":"11617:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"11637:34:30","type":"","value":"ERC1155: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11610:6:30"},"nodeType":"YulFunctionCall","src":"11610:62:30"},"nodeType":"YulExpressionStatement","src":"11610:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11692:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11703:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11688:3:30"},"nodeType":"YulFunctionCall","src":"11688:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"11708:12:30","type":"","value":"r transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11681:6:30"},"nodeType":"YulFunctionCall","src":"11681:40:30"},"nodeType":"YulExpressionStatement","src":"11681:40:30"},{"nodeType":"YulAssignment","src":"11730:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11742:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11753:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11738:3:30"},"nodeType":"YulFunctionCall","src":"11738:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11730:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11508:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11522:4:30","type":""}],"src":"11357:406:30"},{"body":{"nodeType":"YulBlock","src":"11942:231:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11959:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11970:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11952:6:30"},"nodeType":"YulFunctionCall","src":"11952:21:30"},"nodeType":"YulExpressionStatement","src":"11952:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11993:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12004:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11989:3:30"},"nodeType":"YulFunctionCall","src":"11989:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"12009:2:30","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11982:6:30"},"nodeType":"YulFunctionCall","src":"11982:30:30"},"nodeType":"YulExpressionStatement","src":"11982:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12032:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12043:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12028:3:30"},"nodeType":"YulFunctionCall","src":"12028:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"12048:34:30","type":"","value":"ERC1155: setting approval status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12021:6:30"},"nodeType":"YulFunctionCall","src":"12021:62:30"},"nodeType":"YulExpressionStatement","src":"12021:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12103:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12114:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12099:3:30"},"nodeType":"YulFunctionCall","src":"12099:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"12119:11:30","type":"","value":" for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12092:6:30"},"nodeType":"YulFunctionCall","src":"12092:39:30"},"nodeType":"YulExpressionStatement","src":"12092:39:30"},{"nodeType":"YulAssignment","src":"12140:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12152:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12163:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12148:3:30"},"nodeType":"YulFunctionCall","src":"12148:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12140:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11919:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11933:4:30","type":""}],"src":"11768:405:30"},{"body":{"nodeType":"YulBlock","src":"12352:231:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12369:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12380:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12362:6:30"},"nodeType":"YulFunctionCall","src":"12362:21:30"},"nodeType":"YulExpressionStatement","src":"12362:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12403:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12414:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12399:3:30"},"nodeType":"YulFunctionCall","src":"12399:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"12419:2:30","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12392:6:30"},"nodeType":"YulFunctionCall","src":"12392:30:30"},"nodeType":"YulExpressionStatement","src":"12392:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:30"},"nodeType":"YulFunctionCall","src":"12438:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"12458:34:30","type":"","value":"ERC1155: accounts and ids length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12431:6:30"},"nodeType":"YulFunctionCall","src":"12431:62:30"},"nodeType":"YulExpressionStatement","src":"12431:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12513:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12524:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12509:3:30"},"nodeType":"YulFunctionCall","src":"12509:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"12529:11:30","type":"","value":" mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12502:6:30"},"nodeType":"YulFunctionCall","src":"12502:39:30"},"nodeType":"YulExpressionStatement","src":"12502:39:30"},{"nodeType":"YulAssignment","src":"12550:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12562:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12573:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12558:3:30"},"nodeType":"YulFunctionCall","src":"12558:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12550:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12329:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12343:4:30","type":""}],"src":"12178:405:30"},{"body":{"nodeType":"YulBlock","src":"12762:230:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12779:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12790:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12772:6:30"},"nodeType":"YulFunctionCall","src":"12772:21:30"},"nodeType":"YulExpressionStatement","src":"12772:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12813:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12824:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12809:3:30"},"nodeType":"YulFunctionCall","src":"12809:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"12829:2:30","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12802:6:30"},"nodeType":"YulFunctionCall","src":"12802:30:30"},"nodeType":"YulExpressionStatement","src":"12802:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12852:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12863:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12848:3:30"},"nodeType":"YulFunctionCall","src":"12848:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"12868:34:30","type":"","value":"ERC1155: ids and amounts length "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12841:6:30"},"nodeType":"YulFunctionCall","src":"12841:62:30"},"nodeType":"YulExpressionStatement","src":"12841:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12923:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12934:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12919:3:30"},"nodeType":"YulFunctionCall","src":"12919:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"12939:10:30","type":"","value":"mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12912:6:30"},"nodeType":"YulFunctionCall","src":"12912:38:30"},"nodeType":"YulExpressionStatement","src":"12912:38:30"},{"nodeType":"YulAssignment","src":"12959:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12971:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12982:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12967:3:30"},"nodeType":"YulFunctionCall","src":"12967:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12959:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12739:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12753:4:30","type":""}],"src":"12588:404:30"},{"body":{"nodeType":"YulBlock","src":"13171:242:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13188:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13199:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13181:6:30"},"nodeType":"YulFunctionCall","src":"13181:21:30"},"nodeType":"YulExpressionStatement","src":"13181:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13222:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13233:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13218:3:30"},"nodeType":"YulFunctionCall","src":"13218:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"13238:2:30","type":"","value":"52"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13211:6:30"},"nodeType":"YulFunctionCall","src":"13211:30:30"},"nodeType":"YulExpressionStatement","src":"13211:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13261:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13272:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13257:3:30"},"nodeType":"YulFunctionCall","src":"13257:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"13277:34:30","type":"","value":"ERC1155: transfer to non-ERC1155"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13250:6:30"},"nodeType":"YulFunctionCall","src":"13250:62:30"},"nodeType":"YulExpressionStatement","src":"13250:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13332:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13343:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13328:3:30"},"nodeType":"YulFunctionCall","src":"13328:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"13348:22:30","type":"","value":"Receiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13321:6:30"},"nodeType":"YulFunctionCall","src":"13321:50:30"},"nodeType":"YulExpressionStatement","src":"13321:50:30"},{"nodeType":"YulAssignment","src":"13380:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13392:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13403:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13388:3:30"},"nodeType":"YulFunctionCall","src":"13388:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13380:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13148:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13162:4:30","type":""}],"src":"12997:416:30"},{"body":{"nodeType":"YulBlock","src":"13519:76:30","statements":[{"nodeType":"YulAssignment","src":"13529:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13541:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13552:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13537:3:30"},"nodeType":"YulFunctionCall","src":"13537:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13529:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13571:9:30"},{"name":"value0","nodeType":"YulIdentifier","src":"13582:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13564:6:30"},"nodeType":"YulFunctionCall","src":"13564:25:30"},"nodeType":"YulExpressionStatement","src":"13564:25:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13488:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13499:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13510:4:30","type":""}],"src":"13418:177:30"},{"body":{"nodeType":"YulBlock","src":"13729:119:30","statements":[{"nodeType":"YulAssignment","src":"13739:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13751:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13762:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13747:3:30"},"nodeType":"YulFunctionCall","src":"13747:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13739:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13781:9:30"},{"name":"value0","nodeType":"YulIdentifier","src":"13792:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13774:6:30"},"nodeType":"YulFunctionCall","src":"13774:25:30"},"nodeType":"YulExpressionStatement","src":"13774:25:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13819:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13830:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13815:3:30"},"nodeType":"YulFunctionCall","src":"13815:18:30"},{"name":"value1","nodeType":"YulIdentifier","src":"13835:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13808:6:30"},"nodeType":"YulFunctionCall","src":"13808:34:30"},"nodeType":"YulExpressionStatement","src":"13808:34:30"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13690:9:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13701:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13709:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13720:4:30","type":""}],"src":"13600:248:30"},{"body":{"nodeType":"YulBlock","src":"13928:117:30","statements":[{"body":{"nodeType":"YulBlock","src":"13972:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13974:16:30"},"nodeType":"YulFunctionCall","src":"13974:18:30"},"nodeType":"YulExpressionStatement","src":"13974:18:30"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13944:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"13952:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13941:2:30"},"nodeType":"YulFunctionCall","src":"13941:30:30"},"nodeType":"YulIf","src":"13938:2:30"},{"nodeType":"YulAssignment","src":"14003:36:30","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14019:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"14027:4:30","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14015:3:30"},"nodeType":"YulFunctionCall","src":"14015:17:30"},{"kind":"number","nodeType":"YulLiteral","src":"14034:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14011:3:30"},"nodeType":"YulFunctionCall","src":"14011:28:30"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14003:4:30"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"13908:6:30","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"13919:4:30","type":""}],"src":"13853:192:30"},{"body":{"nodeType":"YulBlock","src":"14098:80:30","statements":[{"body":{"nodeType":"YulBlock","src":"14125:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14127:16:30"},"nodeType":"YulFunctionCall","src":"14127:18:30"},"nodeType":"YulExpressionStatement","src":"14127:18:30"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14114:1:30"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14121:1:30"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14117:3:30"},"nodeType":"YulFunctionCall","src":"14117:6:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14111:2:30"},"nodeType":"YulFunctionCall","src":"14111:13:30"},"nodeType":"YulIf","src":"14108:2:30"},{"nodeType":"YulAssignment","src":"14156:16:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14167:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"14170:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14163:3:30"},"nodeType":"YulFunctionCall","src":"14163:9:30"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"14156:3:30"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14081:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"14084:1:30","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"14090:3:30","type":""}],"src":"14050:128:30"},{"body":{"nodeType":"YulBlock","src":"14238:382:30","statements":[{"nodeType":"YulAssignment","src":"14248:22:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14262:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"14268:1:30","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14258:3:30"},"nodeType":"YulFunctionCall","src":"14258:12:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14248:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"14279:38:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14309:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"14315:1:30","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14305:3:30"},"nodeType":"YulFunctionCall","src":"14305:12:30"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"14283:18:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"14356:31:30","statements":[{"nodeType":"YulAssignment","src":"14358:27:30","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14372:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"14380:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14368:3:30"},"nodeType":"YulFunctionCall","src":"14368:17:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14358:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14336:18:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14329:6:30"},"nodeType":"YulFunctionCall","src":"14329:26:30"},"nodeType":"YulIf","src":"14326:2:30"},{"body":{"nodeType":"YulBlock","src":"14446:168:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14467:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14470:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14460:6:30"},"nodeType":"YulFunctionCall","src":"14460:88:30"},"nodeType":"YulExpressionStatement","src":"14460:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14568:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14571:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14561:6:30"},"nodeType":"YulFunctionCall","src":"14561:15:30"},"nodeType":"YulExpressionStatement","src":"14561:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14596:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14599:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14589:6:30"},"nodeType":"YulFunctionCall","src":"14589:15:30"},"nodeType":"YulExpressionStatement","src":"14589:15:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14402:18:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14425:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"14433:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14422:2:30"},"nodeType":"YulFunctionCall","src":"14422:14:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14399:2:30"},"nodeType":"YulFunctionCall","src":"14399:38:30"},"nodeType":"YulIf","src":"14396:2:30"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14218:4:30","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14227:6:30","type":""}],"src":"14183:437:30"},{"body":{"nodeType":"YulBlock","src":"14672:202:30","statements":[{"nodeType":"YulVariableDeclaration","src":"14682:58:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14704:6:30"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"14720:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"14726:2:30","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14716:3:30"},"nodeType":"YulFunctionCall","src":"14716:13:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14735:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14731:3:30"},"nodeType":"YulFunctionCall","src":"14731:7:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14712:3:30"},"nodeType":"YulFunctionCall","src":"14712:27:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14700:3:30"},"nodeType":"YulFunctionCall","src":"14700:40:30"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"14686:10:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"14815:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14817:16:30"},"nodeType":"YulFunctionCall","src":"14817:18:30"},"nodeType":"YulExpressionStatement","src":"14817:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"14758:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"14770:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14755:2:30"},"nodeType":"YulFunctionCall","src":"14755:34:30"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"14794:10:30"},{"name":"memPtr","nodeType":"YulIdentifier","src":"14806:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14791:2:30"},"nodeType":"YulFunctionCall","src":"14791:22:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14752:2:30"},"nodeType":"YulFunctionCall","src":"14752:62:30"},"nodeType":"YulIf","src":"14749:2:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14853:2:30","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"14857:10:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14846:6:30"},"nodeType":"YulFunctionCall","src":"14846:22:30"},"nodeType":"YulExpressionStatement","src":"14846:22:30"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14654:6:30","type":""},{"name":"size","nodeType":"YulTypedName","src":"14662:4:30","type":""}],"src":"14625:249:30"},{"body":{"nodeType":"YulBlock","src":"14926:88:30","statements":[{"body":{"nodeType":"YulBlock","src":"14957:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14959:16:30"},"nodeType":"YulFunctionCall","src":"14959:18:30"},"nodeType":"YulExpressionStatement","src":"14959:18:30"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14942:5:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14953:1:30","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14949:3:30"},"nodeType":"YulFunctionCall","src":"14949:6:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14939:2:30"},"nodeType":"YulFunctionCall","src":"14939:17:30"},"nodeType":"YulIf","src":"14936:2:30"},{"nodeType":"YulAssignment","src":"14988:20:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14999:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"15006:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14995:3:30"},"nodeType":"YulFunctionCall","src":"14995:13:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14988:3:30"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14908:5:30","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"14918:3:30","type":""}],"src":"14879:135:30"},{"body":{"nodeType":"YulBlock","src":"15051:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15068:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15071:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15061:6:30"},"nodeType":"YulFunctionCall","src":"15061:88:30"},"nodeType":"YulExpressionStatement","src":"15061:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15165:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15168:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15158:6:30"},"nodeType":"YulFunctionCall","src":"15158:15:30"},"nodeType":"YulExpressionStatement","src":"15158:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15189:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15192:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15182:6:30"},"nodeType":"YulFunctionCall","src":"15182:15:30"},"nodeType":"YulExpressionStatement","src":"15182:15:30"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"15019:184:30"},{"body":{"nodeType":"YulBlock","src":"15240:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15257:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15260:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15250:6:30"},"nodeType":"YulFunctionCall","src":"15250:88:30"},"nodeType":"YulExpressionStatement","src":"15250:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15354:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15357:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15347:6:30"},"nodeType":"YulFunctionCall","src":"15347:15:30"},"nodeType":"YulExpressionStatement","src":"15347:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15378:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15381:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15371:6:30"},"nodeType":"YulFunctionCall","src":"15371:15:30"},"nodeType":"YulExpressionStatement","src":"15371:15:30"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"15208:184:30"},{"body":{"nodeType":"YulBlock","src":"15440:142:30","statements":[{"body":{"nodeType":"YulBlock","src":"15485:91:30","statements":[{"expression":{"arguments":[{"name":"sig","nodeType":"YulIdentifier","src":"15514:3:30"},{"name":"sig","nodeType":"YulIdentifier","src":"15519:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"15524:1:30","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"15499:14:30"},"nodeType":"YulFunctionCall","src":"15499:27:30"},"nodeType":"YulExpressionStatement","src":"15499:27:30"},{"nodeType":"YulAssignment","src":"15539:27:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15550:3:30","type":"","value":"224"},{"arguments":[{"name":"sig","nodeType":"YulIdentifier","src":"15561:3:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15555:5:30"},"nodeType":"YulFunctionCall","src":"15555:10:30"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15546:3:30"},"nodeType":"YulFunctionCall","src":"15546:20:30"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"15539:3:30"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"15456:14:30"},"nodeType":"YulFunctionCall","src":"15456:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"15474:1:30","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15453:2:30"},"nodeType":"YulFunctionCall","src":"15453:23:30"},"nodeType":"YulIf","src":"15450:2:30"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"15432:3:30","type":""}],"src":"15397:185:30"},{"body":{"nodeType":"YulBlock","src":"15634:624:30","statements":[{"body":{"nodeType":"YulBlock","src":"15674:9:30","statements":[{"nodeType":"YulLeave","src":"15676:5:30"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"15650:14:30"},"nodeType":"YulFunctionCall","src":"15650:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"15668:4:30","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15647:2:30"},"nodeType":"YulFunctionCall","src":"15647:26:30"},"nodeType":"YulIf","src":"15644:2:30"},{"nodeType":"YulVariableDeclaration","src":"15692:21:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15710:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15704:5:30"},"nodeType":"YulFunctionCall","src":"15704:9:30"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"15696:4:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15722:16:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15736:1:30","type":"","value":"3"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15732:3:30"},"nodeType":"YulFunctionCall","src":"15732:6:30"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15726:2:30","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15762:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"15768:1:30","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"15775:14:30"},"nodeType":"YulFunctionCall","src":"15775:16:30"},{"name":"_1","nodeType":"YulIdentifier","src":"15793:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15771:3:30"},"nodeType":"YulFunctionCall","src":"15771:25:30"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"15747:14:30"},"nodeType":"YulFunctionCall","src":"15747:50:30"},"nodeType":"YulExpressionStatement","src":"15747:50:30"},{"nodeType":"YulVariableDeclaration","src":"15806:25:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15826:4:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15820:5:30"},"nodeType":"YulFunctionCall","src":"15820:11:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15810:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15840:26:30","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"15850:14:30"},"nodeType":"YulFunctionCall","src":"15850:16:30"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"15844:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15875:28:30","value":{"kind":"number","nodeType":"YulLiteral","src":"15885:18:30","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"15879:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"15961:9:30","statements":[{"nodeType":"YulLeave","src":"15963:5:30"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15921:6:30"},{"name":"_3","nodeType":"YulIdentifier","src":"15929:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15918:2:30"},"nodeType":"YulFunctionCall","src":"15918:14:30"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15941:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"15949:4:30","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15937:3:30"},"nodeType":"YulFunctionCall","src":"15937:17:30"},{"name":"_2","nodeType":"YulIdentifier","src":"15956:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15934:2:30"},"nodeType":"YulFunctionCall","src":"15934:25:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"15915:2:30"},"nodeType":"YulFunctionCall","src":"15915:45:30"},"nodeType":"YulIf","src":"15912:2:30"},{"nodeType":"YulVariableDeclaration","src":"15979:28:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15994:4:30"},{"name":"offset","nodeType":"YulIdentifier","src":"16000:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15990:3:30"},"nodeType":"YulFunctionCall","src":"15990:17:30"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"15983:3:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16016:24:30","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"16036:3:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16030:5:30"},"nodeType":"YulFunctionCall","src":"16030:10:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16020:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"16067:9:30","statements":[{"nodeType":"YulLeave","src":"16069:5:30"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16055:6:30"},{"name":"_3","nodeType":"YulIdentifier","src":"16063:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16052:2:30"},"nodeType":"YulFunctionCall","src":"16052:14:30"},"nodeType":"YulIf","src":"16049:2:30"},{"body":{"nodeType":"YulBlock","src":"16158:9:30","statements":[{"nodeType":"YulLeave","src":"16160:5:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"16099:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"16104:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16095:3:30"},"nodeType":"YulFunctionCall","src":"16095:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"16113:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16091:3:30"},"nodeType":"YulFunctionCall","src":"16091:27:30"},{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16128:4:30"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"16134:14:30"},"nodeType":"YulFunctionCall","src":"16134:16:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16124:3:30"},"nodeType":"YulFunctionCall","src":"16124:27:30"},{"name":"_1","nodeType":"YulIdentifier","src":"16153:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16120:3:30"},"nodeType":"YulFunctionCall","src":"16120:36:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16088:2:30"},"nodeType":"YulFunctionCall","src":"16088:69:30"},"nodeType":"YulIf","src":"16085:2:30"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16196:4:30"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16210:6:30"},{"name":"length","nodeType":"YulIdentifier","src":"16218:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16206:3:30"},"nodeType":"YulFunctionCall","src":"16206:19:30"},{"kind":"number","nodeType":"YulLiteral","src":"16227:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16202:3:30"},"nodeType":"YulFunctionCall","src":"16202:30:30"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"16176:19:30"},"nodeType":"YulFunctionCall","src":"16176:57:30"},"nodeType":"YulExpressionStatement","src":"16176:57:30"},{"nodeType":"YulAssignment","src":"16242:10:30","value":{"name":"msg","nodeType":"YulIdentifier","src":"16249:3:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16242:3:30"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"15626:3:30","type":""}],"src":"15587:671:30"},{"body":{"nodeType":"YulBlock","src":"16309:133:30","statements":[{"body":{"nodeType":"YulBlock","src":"16420:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16429:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16432:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16422:6:30"},"nodeType":"YulFunctionCall","src":"16422:12:30"},"nodeType":"YulExpressionStatement","src":"16422:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16332:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16343:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"16350:66:30","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16339:3:30"},"nodeType":"YulFunctionCall","src":"16339:78:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16329:2:30"},"nodeType":"YulFunctionCall","src":"16329:89:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16322:6:30"},"nodeType":"YulFunctionCall","src":"16322:97:30"},"nodeType":"YulIf","src":"16319:2:30"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16298:5:30","type":""}],"src":"16263:179:30"}]},"contents":"{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_array$_t_uint256_$dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_t_array$_t_address_$dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, mul(_1, _2)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_t_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), array)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        value2 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value3 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(value4, value4) }\n        value4 := abi_decode_t_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        value4 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value1, value1) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_t_array$_t_address_$dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, mul(_3, _4)), _4), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_t_address(src))\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_t_array$_t_uint256_$dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_t_array$_t_uint256_$dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_t_array$_t_uint256_$dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_t_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_t_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_t_array$_t_address_$dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(mul(length, 0x20), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(sig, sig, 4)\n            sig := shr(224, mload(sig))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_t_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x150 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xDCB JUMP JUMPDEST PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x107B JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xD91 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xC56 JUMP JUMPDEST PUSH2 0x45C JUMP JUMPDEST PUSH2 0x108 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0xD2E JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x194 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x21D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x22C JUMPI POP PUSH2 0x22C DUP3 PUSH2 0x4E1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x243 SWAP1 PUSH2 0x1431 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x26F SWAP1 PUSH2 0x1431 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x291 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2F6 JUMPI POP PUSH2 0x2F6 DUP6 PUSH2 0x14B PUSH2 0x513 JUMP JUMPDEST PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x31F DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x518 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x349 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x373 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x39C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x43E JUMPI PUSH2 0x403 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3CE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3F6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x163 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x423 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x437 DUP2 PUSH2 0x1499 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x458 PUSH2 0x451 PUSH2 0x513 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x6F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x492 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x4B8 JUMPI POP PUSH2 0x4B8 DUP6 PUSH2 0x14B PUSH2 0x513 JUMP JUMPDEST PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x31F DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x79A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x539 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x569 PUSH2 0x513 JUMP JUMPDEST SWAP1 POP PUSH2 0x579 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x67B JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x623 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x660 SWAP1 DUP5 SWAP1 PUSH2 0x1419 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x674 SWAP1 PUSH2 0x1499 JUMP JUMPDEST SWAP1 POP PUSH2 0x57C JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x6CB SWAP3 SWAP2 SWAP1 PUSH2 0x104D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x6E1 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x6EF JUMP JUMPDEST PUSH2 0x6EF DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x8F7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH2 0x78D SWAP1 DUP6 SWAP1 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CA PUSH2 0x513 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7D7 DUP6 PUSH2 0xA25 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7E4 DUP6 PUSH2 0xA25 JUMP JUMPDEST SWAP1 POP PUSH2 0x7F4 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x872 SWAP1 DUP5 SWAP1 PUSH2 0x1419 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x8C8 SWAP3 SWAP2 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8DE DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0x6EF JUMP JUMPDEST PUSH2 0x8EC DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xA7E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x909 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB4F JUMP JUMPDEST ISZERO PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x942 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x98C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x989 SWAP2 DUP2 ADD SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9EC JUMPI PUSH2 0x998 PUSH2 0x14E0 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x9D2 JUMPI POP PUSH2 0x9AD PUSH2 0x14F7 JUMP JUMPDEST DUP1 PUSH2 0x9B8 JUMPI POP PUSH2 0x9D4 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x1086 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xA1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1099 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA6D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA90 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB4F JUMP JUMPDEST ISZERO PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xAC9 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xFF7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB13 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB10 SWAP2 DUP2 ADD SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB1F JUMPI PUSH2 0x998 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xA1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB85 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xB92 DUP3 PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9F DUP3 DUP3 PUSH2 0x146C JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xBBC JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xBDA JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xBBE JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBF7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC11 JUMPI PUSH2 0xC11 PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC28 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x146C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xC3C JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC68 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xC71 DUP4 PUSH2 0xB5E JUMP JUMPDEST SWAP2 POP PUSH2 0xC7F PUSH1 0x20 DUP5 ADD PUSH2 0xB5E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC9F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xCA8 DUP7 PUSH2 0xB5E JUMP JUMPDEST SWAP5 POP PUSH2 0xCB6 PUSH1 0x20 DUP8 ADD PUSH2 0xB5E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCD2 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xCDE DUP10 DUP4 DUP11 ADD PUSH2 0xB75 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xCF3 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xCFF DUP10 DUP4 DUP11 ADD PUSH2 0xB75 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD14 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xD21 DUP9 DUP3 DUP10 ADD PUSH2 0xBE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD45 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xD4E DUP7 PUSH2 0xB5E JUMP JUMPDEST SWAP5 POP PUSH2 0xD5C PUSH1 0x20 DUP8 ADD PUSH2 0xB5E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD85 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD21 DUP9 DUP3 DUP10 ADD PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xDAC DUP4 PUSH2 0xB5E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDC0 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDDD JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xDE6 DUP4 PUSH2 0xB5E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE06 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE1D JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE30 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE3D DUP3 PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4A DUP3 DUP3 PUSH2 0x146C JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xE67 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xE90 JUMPI PUSH2 0xE7C DUP2 PUSH2 0xB5E JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xE6B JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xEA6 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xEB3 DUP6 DUP3 DUP7 ADD PUSH2 0xB75 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xED9 DUP2 PUSH2 0x1589 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xED9 DUP2 PUSH2 0x1589 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF0D JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF43 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF27 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF73 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xF57 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF84 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xFC5 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0xF14 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFD7 DUP2 DUP7 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0xFEB DUP2 DUP6 PUSH2 0xF4E JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x102F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xF4E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xED9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x1060 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF14 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1072 DUP2 DUP6 PUSH2 0xF14 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xED9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF4E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6572206F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x34 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x140F JUMPI PUSH2 0x140F PUSH2 0x14CA JUMP JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x142C JUMPI PUSH2 0x142C PUSH2 0x14B4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1445 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1466 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1492 JUMPI PUSH2 0x1492 PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x14AD JUMPI PUSH2 0x14AD PUSH2 0x14B4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x515 JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1507 JUMPI PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1539 JUMPI POP POP POP POP POP PUSH2 0x515 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1553 JUMPI POP POP POP POP POP POP PUSH2 0x515 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x156F JUMPI POP POP POP POP POP POP PUSH2 0x515 JUMP JUMPDEST PUSH2 0x157E PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x146C JUMP JUMPDEST POP SWAP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x159F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 GAS 0xD0 0x5C SWAP16 CREATE SWAP1 0x2C 0xD3 0x27 EXTCODESIZE 0xEB 0xB0 0x29 CALLER 0xC0 0xEA 0xBA 0xCC 0xB6 PUSH21 0x3251898749A7882750116064736F6C634300080100 CALLER ","sourceMap":"570:16539:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1236:305;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1940:103::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4042:426::-;;;;;;:::i;:::-;;:::i;:::-;;2569:486;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3123:153::-;;;;;;:::i;:::-;;:::i;3343:166::-;;;;;;:::i;:::-;;:::i;3576:394::-;;;;;;:::i;:::-;;:::i;2185:227::-;2271:7;-1:-1:-1;;;;;2298:21:7;;2290:76;;;;-1:-1:-1;;;2290:76:7;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;2383:9:7;:13;;;;;;;;;;;-1:-1:-1;;;;;2383:22:7;;;;;;;;;;;;2185:227::o;1236:305::-;1338:4;-1:-1:-1;;;;;;1373:41:7;;1388:26;1373:41;;:109;;-1:-1:-1;;;;;;;1430:52:7;;1445:37;1430:52;1373:109;:161;;;;1498:36;1522:11;1498:23;:36::i;:::-;1354:180;;1236:305;;;;:::o;1940:103::-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4042:426::-;4275:12;:10;:12::i;:::-;-1:-1:-1;;;;;4267:20:7;:4;-1:-1:-1;;;;;4267:20:7;;:60;;;;4291:36;4308:4;4314:12;:10;:12::i;4291:36::-;4246:153;;;;-1:-1:-1;;;4246:153:7;;;;;;;:::i;:::-;4409:52;4432:4;4438:2;4442:3;4447:7;4456:4;4409:22;:52::i;:::-;4042:426;;;;;:::o;2569:486::-;2702:16;2757:3;:10;2738:8;:15;:29;2730:83;;;;-1:-1:-1;;;2730:83:7;;;;;;;:::i;:::-;2824:30;2871:8;:15;2857:30;;;;;;-1:-1:-1;;;2857:30:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2857:30:7;;2824:63;;2903:9;2898:120;2922:8;:15;2918:1;:19;2898:120;;;2977:30;2987:8;2996:1;2987:11;;;;;;-1:-1:-1;;;2987:11:7;;;;;;;;;;;;;;;3000:3;3004:1;3000:6;;;;;;-1:-1:-1;;;3000:6:7;;;;;;;;;;;;;;;2977:9;:30::i;:::-;2958:13;2972:1;2958:16;;;;;;-1:-1:-1;;;2958:16:7;;;;;;;;;;;;;;;;;;:49;2939:3;;;:::i;:::-;;;2898:120;;;-1:-1:-1;3035:13:7;2569:486;-1:-1:-1;;;2569:486:7:o;3123:153::-;3217:52;3236:12;:10;:12::i;:::-;3250:8;3260;3217:18;:52::i;:::-;3123:153;;:::o;3343:166::-;-1:-1:-1;;;;;3465:27:7;;;3442:4;3465:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3343:166::o;3576:394::-;3784:12;:10;:12::i;:::-;-1:-1:-1;;;;;3776:20:7;:4;-1:-1:-1;;;;;3776:20:7;;:60;;;;3800:36;3817:4;3823:12;:10;:12::i;3800:36::-;3755:153;;;;-1:-1:-1;;;3755:153:7;;;;;;;:::i;:::-;3918:45;3936:4;3942:2;3946;3950:6;3958:4;3918:17;:45::i;829:155:23:-;-1:-1:-1;;;;;;937:40:23;;952:25;937:40;829:155;;;:::o;640:96:21:-;719:10;640:96;;:::o;6211:1115:7:-;6431:7;:14;6417:3;:10;:28;6409:81;;;;-1:-1:-1;;;6409:81:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;6508:16:7;;6500:66;;;;-1:-1:-1;;;6500:66:7;;;;;;;:::i;:::-;6577:16;6596:12;:10;:12::i;:::-;6577:31;;6619:60;6640:8;6650:4;6656:2;6660:3;6665:7;6674:4;6619:20;:60::i;:::-;6695:9;6690:411;6714:3;:10;6710:1;:14;6690:411;;;6745:10;6758:3;6762:1;6758:6;;;;;;-1:-1:-1;;;6758:6:7;;;;;;;;;;;;;;;6745:19;;6778:14;6795:7;6803:1;6795:10;;;;;;-1:-1:-1;;;6795:10:7;;;;;;;;;;;;;;;;;;;;6820:19;6842:13;;;;;;;;;;-1:-1:-1;;;;;6842:19:7;;;;;;;;;;;;6795:10;;-1:-1:-1;6883:21:7;;;;6875:76;;;;-1:-1:-1;;;6875:76:7;;;;;;;:::i;:::-;6993:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6993:19:7;;;;;;;;;;7015:20;;;6993:42;;7063:17;;;;;;;:27;;7015:20;;6993:9;7063:27;;7015:20;;7063:27;:::i;:::-;;;;;;;;6690:411;;;6726:3;;;;:::i;:::-;;;6690:411;;;;7146:2;-1:-1:-1;;;;;7116:47:7;7140:4;-1:-1:-1;;;;;7116:47:7;7130:8;-1:-1:-1;;;;;7116:47:7;;7150:3;7155:7;7116:47;;;;;;;:::i;:::-;;;;;;;;7174:59;7194:8;7204:4;7210:2;7214:3;7219:7;7228:4;7174:19;:59::i;:::-;7244:75;7280:8;7290:4;7296:2;7300:3;7305:7;7314:4;7244:35;:75::i;:::-;6211:1115;;;;;;:::o;12790:293::-;12910:8;-1:-1:-1;;;;;12901:17:7;:5;-1:-1:-1;;;;;12901:17:7;;;12893:71;;;;-1:-1:-1;;;12893:71:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;12974:25:7;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;:46;;-1:-1:-1;;12974:46:7;;;;;;;13035:41;;;;;12974:46;;13035:41;:::i;:::-;;;;;;;;12790:293;;;:::o;4918:947::-;-1:-1:-1;;;;;5099:16:7;;5091:66;;;;-1:-1:-1;;;5091:66:7;;;;;;;:::i;:::-;5168:16;5187:12;:10;:12::i;:::-;5168:31;;5209:20;5232:21;5250:2;5232:17;:21::i;:::-;5209:44;;5263:24;5290:25;5308:6;5290:17;:25::i;:::-;5263:52;;5326:60;5347:8;5357:4;5363:2;5367:3;5372:7;5381:4;5326:20;:60::i;:::-;5397:19;5419:13;;;;;;;;;;;-1:-1:-1;;;;;5419:19:7;;;;;;;;;;5456:21;;;;5448:76;;;;-1:-1:-1;;;5448:76:7;;;;;;;:::i;:::-;5558:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5558:19:7;;;;;;;;;;5580:20;;;5558:42;;5620:17;;;;;;;:27;;5580:20;;5558:9;5620:27;;5580:20;;5620:27;:::i;:::-;;;;;;;;5694:2;-1:-1:-1;;;;;5663:46:7;5688:4;-1:-1:-1;;;;;5663:46:7;5678:8;-1:-1:-1;;;;;5663:46:7;;5698:2;5702:6;5663:46;;;;;;;:::i;:::-;;;;;;;;5720:59;5740:8;5750:4;5756:2;5760:3;5765:7;5774:4;5720:19;:59::i;:::-;5790:68;5821:8;5831:4;5837:2;5841;5845:6;5853:4;5790:30;:68::i;:::-;4918:947;;;;;;;;;:::o;16116:792::-;16348:15;:2;-1:-1:-1;;;;;16348:13:7;;:15::i;:::-;16344:558;;;16383:79;;-1:-1:-1;;;16383:79:7;;-1:-1:-1;;;;;16383:43:7;;;;;:79;;16427:8;;16437:4;;16443:3;;16448:7;;16457:4;;16383:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16383:79:7;;;;;;;;-1:-1:-1;;16383:79:7;;;;;;;;;;;;:::i;:::-;;;16379:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;16768:6;16761:14;;-1:-1:-1;;;16761:14:7;;;;;;;;:::i;16379:513::-;;;16815:62;;-1:-1:-1;;;16815:62:7;;;;;;;:::i;16379:513::-;-1:-1:-1;;;;;;16541:60:7;;-1:-1:-1;;;16541:60:7;16537:157;;16625:50;;-1:-1:-1;;;16625:50:7;;;;;;;:::i;16537:157::-;16463:245;16116:792;;;;;;:::o;16914:193::-;17033:16;;;17047:1;17033:16;;;;;;;;;16980;;17008:22;;17033:16;;;;;;;;;;;;-1:-1:-1;17033:16:7;17008:41;;17070:7;17059:5;17065:1;17059:8;;;;;;-1:-1:-1;;;17059:8:7;;;;;;;;;;;;;;;;;;:18;17095:5;16914:193;-1:-1:-1;;16914:193:7:o;15385:725::-;15592:15;:2;-1:-1:-1;;;;;15592:13:7;;:15::i;:::-;15588:516;;;15627:72;;-1:-1:-1;;;15627:72:7;;-1:-1:-1;;;;;15627:38:7;;;;;:72;;15666:8;;15676:4;;15682:2;;15686:6;;15694:4;;15627:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15627:72:7;;;;;;;;-1:-1:-1;;15627:72:7;;;;;;;;;;;;:::i;:::-;;;15623:471;;;;:::i;:::-;-1:-1:-1;;;;;;15748:55:7;;-1:-1:-1;;;15748:55:7;15744:152;;15827:50;;-1:-1:-1;;;15827:50:7;;;;;;;:::i;1412:320:20:-;-1:-1:-1;;;;;1702:19:20;;:23;;;1412:320::o;14:198:30:-;84:20;;-1:-1:-1;;;;;133:54:30;;123:65;;113:2;;202:1;199;192:12;217:768;;330:3;323:4;315:6;311:17;307:27;297:2;;352:5;345;338:20;297:2;392:6;379:20;418:4;441:49;487:2;441:49;:::i;:::-;519:2;513:9;531:31;559:2;551:6;531:31;:::i;:::-;597:18;;;631:15;;;;-1:-1:-1;666:15:30;;;712:11;;;700:24;;696:33;;693:42;-1:-1:-1;690:2:30;;;752:5;745;738:20;690:2;778:5;792:163;806:2;803:1;800:9;792:163;;;863:17;;851:30;;901:12;;;;933;;;;824:1;817:9;792:163;;;-1:-1:-1;973:6:30;;287:698;-1:-1:-1;;;;;;;287:698:30:o;990:577::-;;1087:3;1080:4;1072:6;1068:17;1064:27;1054:2;;1109:5;1102;1095:20;1054:2;1149:6;1136:20;1175:18;1171:2;1168:26;1165:2;;;1197:18;;:::i;:::-;1246:2;1240:9;1258:67;1313:2;1294:13;;-1:-1:-1;;1290:27:30;1319:4;1286:38;1240:9;1258:67;:::i;:::-;1349:2;1341:6;1334:18;1395:3;1388:4;1383:2;1375:6;1371:15;1367:26;1364:35;1361:2;;;1416:5;1409;1402:20;1361:2;1484;1477:4;1469:6;1465:17;1458:4;1450:6;1446:17;1433:54;1507:15;;;1524:4;1503:26;1496:41;;;;1511:6;1044:523;-1:-1:-1;;1044:523:30:o;1572:274::-;;;1701:2;1689:9;1680:7;1676:23;1672:32;1669:2;;;1722:6;1714;1707:22;1669:2;1750:31;1771:9;1750:31;:::i;:::-;1740:41;;1800:40;1836:2;1825:9;1821:18;1800:40;:::i;:::-;1790:50;;1659:187;;;;;:::o;1851:1001::-;;;;;;2090:3;2078:9;2069:7;2065:23;2061:33;2058:2;;;2112:6;2104;2097:22;2058:2;2140:31;2161:9;2140:31;:::i;:::-;2130:41;;2190:40;2226:2;2215:9;2211:18;2190:40;:::i;:::-;2180:50;;2281:2;2270:9;2266:18;2253:32;2304:18;2345:2;2337:6;2334:14;2331:2;;;2366:6;2358;2351:22;2331:2;2394:67;2453:7;2444:6;2433:9;2429:22;2394:67;:::i;:::-;2384:77;;2514:2;2503:9;2499:18;2486:32;2470:48;;2543:2;2533:8;2530:16;2527:2;;;2564:6;2556;2549:22;2527:2;2592:69;2653:7;2642:8;2631:9;2627:24;2592:69;:::i;:::-;2582:79;;2714:3;2703:9;2699:19;2686:33;2670:49;;2744:2;2734:8;2731:16;2728:2;;;2765:6;2757;2750:22;2728:2;;2793:53;2838:7;2827:8;2816:9;2812:24;2793:53;:::i;:::-;2783:63;;;2048:804;;;;;;;;:::o;2857:632::-;;;;;;3046:3;3034:9;3025:7;3021:23;3017:33;3014:2;;;3068:6;3060;3053:22;3014:2;3096:31;3117:9;3096:31;:::i;:::-;3086:41;;3146:40;3182:2;3171:9;3167:18;3146:40;:::i;:::-;3136:50;;3233:2;3222:9;3218:18;3205:32;3195:42;;3284:2;3273:9;3269:18;3256:32;3246:42;;3339:3;3328:9;3324:19;3311:33;3367:18;3359:6;3356:30;3353:2;;;3404:6;3396;3389:22;3353:2;3432:51;3475:7;3466:6;3455:9;3451:22;3432:51;:::i;3494:369::-;;;3620:2;3608:9;3599:7;3595:23;3591:32;3588:2;;;3641:6;3633;3626:22;3588:2;3669:31;3690:9;3669:31;:::i;:::-;3659:41;;3750:2;3739:9;3735:18;3722:32;3797:5;3790:13;3783:21;3776:5;3773:32;3763:2;;3824:6;3816;3809:22;3763:2;3852:5;3842:15;;;3578:285;;;;;:::o;3868:266::-;;;3997:2;3985:9;3976:7;3972:23;3968:32;3965:2;;;4018:6;4010;4003:22;3965:2;4046:31;4067:9;4046:31;:::i;:::-;4036:41;4124:2;4109:18;;;;4096:32;;-1:-1:-1;;;3955:179:30:o;4139:1289::-;;;4318:2;4306:9;4297:7;4293:23;4289:32;4286:2;;;4339:6;4331;4324:22;4286:2;4384:9;4371:23;4413:18;4454:2;4446:6;4443:14;4440:2;;;4475:6;4467;4460:22;4440:2;4518:6;4507:9;4503:22;4493:32;;4563:7;4556:4;4552:2;4548:13;4544:27;4534:2;;4590:6;4582;4575:22;4534:2;4631;4618:16;4653:4;4676:49;4722:2;4676:49;:::i;:::-;4754:2;4748:9;4766:31;4794:2;4786:6;4766:31;:::i;:::-;4832:18;;;4866:15;;;;-1:-1:-1;4901:11:30;;;4939;;;4931:20;;4927:29;;4924:42;-1:-1:-1;4921:2:30;;;4984:6;4976;4969:22;4921:2;5011:6;5002:15;;5026:171;5040:2;5037:1;5034:9;5026:171;;;5097:25;5118:3;5097:25;:::i;:::-;5085:38;;5058:1;5051:9;;;;;5143:12;;;;5175;;5026:171;;;-1:-1:-1;5216:6:30;-1:-1:-1;;5260:18:30;;5247:32;;-1:-1:-1;;5291:16:30;;;5288:2;;;5325:6;5317;5310:22;5288:2;;5353:69;5414:7;5403:8;5392:9;5388:24;5353:69;:::i;:::-;5343:79;;;4276:1152;;;;;:::o;5433:257::-;;5544:2;5532:9;5523:7;5519:23;5515:32;5512:2;;;5565:6;5557;5550:22;5512:2;5609:9;5596:23;5628:32;5654:5;5628:32;:::i;:::-;5679:5;5502:188;-1:-1:-1;;;5502:188:30:o;5695:261::-;;5817:2;5805:9;5796:7;5792:23;5788:32;5785:2;;;5838:6;5830;5823:22;5785:2;5875:9;5869:16;5894:32;5920:5;5894:32;:::i;5961:190::-;;6073:2;6061:9;6052:7;6048:23;6044:32;6041:2;;;6094:6;6086;6079:22;6041:2;-1:-1:-1;6122:23:30;;6031:120;-1:-1:-1;6031:120:30:o;6156:443::-;;6253:5;6247:12;6280:6;6275:3;6268:19;6306:4;6335:2;6330:3;6326:12;6319:19;;6372:2;6365:5;6361:14;6393:3;6405:169;6419:6;6416:1;6413:13;6405:169;;;6480:13;;6468:26;;6514:12;;;;6549:15;;;;6441:1;6434:9;6405:169;;;-1:-1:-1;6590:3:30;;6223:376;-1:-1:-1;;;;;6223:376:30:o;6604:477::-;;6685:5;6679:12;6712:6;6707:3;6700:19;6737:3;6749:162;6763:6;6760:1;6757:13;6749:162;;;6825:4;6881:13;;;6877:22;;6871:29;6853:11;;;6849:20;;6842:59;6778:12;6749:162;;;6929:6;6926:1;6923:13;6920:2;;;6995:3;6988:4;6979:6;6974:3;6970:16;6966:27;6959:40;6920:2;-1:-1:-1;7063:2:30;7042:15;-1:-1:-1;;7038:29:30;7029:39;;;;7070:4;7025:50;;6655:426;-1:-1:-1;;6655:426:30:o;7086:863::-;;-1:-1:-1;;;;;7518:2:30;7510:6;7506:15;7495:9;7488:34;7570:2;7562:6;7558:15;7553:2;7542:9;7538:18;7531:43;;7610:3;7605:2;7594:9;7590:18;7583:31;7637:63;7695:3;7684:9;7680:19;7672:6;7637:63;:::i;:::-;7748:9;7740:6;7736:22;7731:2;7720:9;7716:18;7709:50;7782;7825:6;7817;7782:50;:::i;:::-;7768:64;;7881:9;7873:6;7869:22;7863:3;7852:9;7848:19;7841:51;7909:34;7936:6;7928;7909:34;:::i;:::-;7901:42;7417:532;-1:-1:-1;;;;;;;;7417:532:30:o;7954:585::-;;-1:-1:-1;;;;;8286:2:30;8278:6;8274:15;8263:9;8256:34;8338:2;8330:6;8326:15;8321:2;8310:9;8306:18;8299:43;;8378:6;8373:2;8362:9;8358:18;8351:34;8421:6;8416:2;8405:9;8401:18;8394:34;8465:3;8459;8448:9;8444:19;8437:32;8486:47;8528:3;8517:9;8513:19;8505:6;8486:47;:::i;:::-;8478:55;8185:354;-1:-1:-1;;;;;;;8185:354:30:o;8544:267::-;;8723:2;8712:9;8705:21;8743:62;8801:2;8790:9;8786:18;8778:6;8743:62;:::i;8816:477::-;;9073:2;9062:9;9055:21;9099:62;9157:2;9146:9;9142:18;9134:6;9099:62;:::i;:::-;9209:9;9201:6;9197:22;9192:2;9181:9;9177:18;9170:50;9237;9280:6;9272;9237:50;:::i;:::-;9229:58;9045:248;-1:-1:-1;;;;;9045:248:30:o;9298:187::-;9463:14;;9456:22;9438:41;;9426:2;9411:18;;9393:92::o;9490:221::-;;9639:2;9628:9;9621:21;9659:46;9701:2;9690:9;9686:18;9678:6;9659:46;:::i;9716:404::-;9918:2;9900:21;;;9957:2;9937:18;;;9930:30;9996:34;9991:2;9976:18;;9969:62;10067:10;10062:2;10047:18;;10040:38;10110:3;10095:19;;9890:230::o;10125:406::-;10327:2;10309:21;;;10366:2;10346:18;;;10339:30;10405:34;10400:2;10385:18;;10378:62;10476:12;10471:2;10456:18;;10449:40;10521:3;10506:19;;10299:232::o;10536:410::-;10738:2;10720:21;;;10777:2;10757:18;;;10750:30;10816:34;10811:2;10796:18;;10789:62;10887:16;10882:2;10867:18;;10860:44;10936:3;10921:19;;10710:236::o;10951:401::-;11153:2;11135:21;;;11192:2;11172:18;;;11165:30;11231:34;11226:2;11211:18;;11204:62;11302:7;11297:2;11282:18;;11275:35;11342:3;11327:19;;11125:227::o;11357:406::-;11559:2;11541:21;;;11598:2;11578:18;;;11571:30;11637:34;11632:2;11617:18;;11610:62;11708:12;11703:2;11688:18;;11681:40;11753:3;11738:19;;11531:232::o;11768:405::-;11970:2;11952:21;;;12009:2;11989:18;;;11982:30;12048:34;12043:2;12028:18;;12021:62;12119:11;12114:2;12099:18;;12092:39;12163:3;12148:19;;11942:231::o;12178:405::-;12380:2;12362:21;;;12419:2;12399:18;;;12392:30;12458:34;12453:2;12438:18;;12431:62;12529:11;12524:2;12509:18;;12502:39;12573:3;12558:19;;12352:231::o;12588:404::-;12790:2;12772:21;;;12829:2;12809:18;;;12802:30;12868:34;12863:2;12848:18;;12841:62;12939:10;12934:2;12919:18;;12912:38;12982:3;12967:19;;12762:230::o;12997:416::-;13199:2;13181:21;;;13238:2;13218:18;;;13211:30;13277:34;13272:2;13257:18;;13250:62;13348:22;13343:2;13328:18;;13321:50;13403:3;13388:19;;13171:242::o;13418:177::-;13564:25;;;13552:2;13537:18;;13519:76::o;13600:248::-;13774:25;;;13830:2;13815:18;;13808:34;13762:2;13747:18;;13729:119::o;13853:192::-;;13952:18;13944:6;13941:30;13938:2;;;13974:18;;:::i;:::-;-1:-1:-1;14034:4:30;14015:17;;;14011:28;;13928:117::o;14050:128::-;;14121:1;14117:6;14114:1;14111:13;14108:2;;;14127:18;;:::i;:::-;-1:-1:-1;14163:9:30;;14098:80::o;14183:437::-;14268:1;14258:12;;14315:1;14305:12;;;14326:2;;14380:4;14372:6;14368:17;14358:27;;14326:2;14433;14425:6;14422:14;14402:18;14399:38;14396:2;;;-1:-1:-1;;;14467:1:30;14460:88;14571:4;14568:1;14561:15;14599:4;14596:1;14589:15;14396:2;;14238:382;;;:::o;14625:249::-;14735:2;14716:13;;-1:-1:-1;;14712:27:30;14700:40;;14770:18;14755:34;;14791:22;;;14752:62;14749:2;;;14817:18;;:::i;:::-;14853:2;14846:22;-1:-1:-1;;14672:202:30:o;14879:135::-;;-1:-1:-1;;14939:17:30;;14936:2;;;14959:18;;:::i;:::-;-1:-1:-1;15006:1:30;14995:13;;14926:88::o;15019:184::-;-1:-1:-1;;;15068:1:30;15061:88;15168:4;15165:1;15158:15;15192:4;15189:1;15182:15;15208:184;-1:-1:-1;;;15257:1:30;15250:88;15357:4;15354:1;15347:15;15381:4;15378:1;15371:15;15397:185;;15474:1;15456:16;15453:23;15450:2;;;15524:1;15519:3;15514;15499:27;15555:10;15550:3;15546:20;15440:142;:::o;15587:671::-;;15668:4;15650:16;15647:26;15644:2;;;15676:5;;15644:2;15710;15704:9;-1:-1:-1;;15775:16:30;15771:25;;15768:1;15704:9;15747:50;15826:4;15820:11;15850:16;15885:18;15956:2;15949:4;15941:6;15937:17;15934:25;15929:2;15921:6;15918:14;15915:45;15912:2;;;15963:5;;;;;;;15912:2;16000:6;15994:4;15990:17;15979:28;;16036:3;16030:10;16063:2;16055:6;16052:14;16049:2;;;16069:5;;;;;;;;16049:2;16153;16134:16;16128:4;16124:27;16120:36;16113:4;16104:6;16099:3;16095:16;16091:27;16088:69;16085:2;;;16160:5;;;;;;;;16085:2;16176:57;16227:4;16218:6;16210;16206:19;16202:30;16196:4;16176:57;:::i;:::-;-1:-1:-1;16249:3:30;;-1:-1:-1;;;;;15634:624:30;:::o;16263:179::-;-1:-1:-1;;;;;;16343:5:30;16339:78;16332:5;16329:89;16319:2;;16432:1;16429;16422:12;16319:2;16309:133;:::o"},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b488da93995672b613897afa8ed85bb10442351ed54124001832bf2944108601\",\"dweb:/ipfs/QmP2fX6BzbgZyskxXqckeMzC1C3g7wKEbdtZfMegHoGW3j\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x86e0ebad1483881d5efde55e4e9ef96aae772bc20448289e9a9f566519abd42d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76bd2c6eed6ea1d3a4c433c8174503ee1f5148424d04127fab0691a8fccc4432\",\"dweb:/ipfs/QmXepji41LDhKRSQS9gC8tSpgpomAeM6gyStTEXMdwecyW\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"ERC1155Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b488da93995672b613897afa8ed85bb10442351ed54124001832bf2944108601\",\"dweb:/ipfs/QmP2fX6BzbgZyskxXqckeMzC1C3g7wKEbdtZfMegHoGW3j\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0x45381337dbccfb58e9443257ba1850070be892ecacd4b0da7db4c4cfa7df0b09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f07344858992165efa674db005a804953f74882b4bb3f9089813f8a0c6586734\",\"dweb:/ipfs/QmZaAEqBENBkDQa4nuPeNiBWt4Yc1VpTynEadb3o6i8Mek\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x86e0ebad1483881d5efde55e4e9ef96aae772bc20448289e9a9f566519abd42d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76bd2c6eed6ea1d3a4c433c8174503ee1f5148424d04127fab0691a8fccc4432\",\"dweb:/ipfs/QmXepji41LDhKRSQS9gC8tSpgpomAeM6gyStTEXMdwecyW\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol":{"ERC1155Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","paused()":"5c975abb","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1155 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract unpausable. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":\"ERC1155Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b488da93995672b613897afa8ed85bb10442351ed54124001832bf2944108601\",\"dweb:/ipfs/QmP2fX6BzbgZyskxXqckeMzC1C3g7wKEbdtZfMegHoGW3j\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":{\"keccak256\":\"0xcdafc421d9de3c739fbc332ba62afebf617e1becaecf598b77420ba0d6709f85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c011181eae0ce89cc0929701df657094e58dd65036fadea8098a16b9740c427\",\"dweb:/ipfs/QmUMBMvTXrrVxVkm841ok2RT2L4fRzV7cGXAVhgDB6hpXN\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x86e0ebad1483881d5efde55e4e9ef96aae772bc20448289e9a9f566519abd42d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76bd2c6eed6ea1d3a4c433c8174503ee1f5148424d04127fab0691a8fccc4432\",\"dweb:/ipfs/QmXepji41LDhKRSQS9gC8tSpgpomAeM6gyStTEXMdwecyW\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/presets/ERC1155PresetMinterPauser.sol":{"ERC1155PresetMinterPauser":{"abi":[{"inputs":[{"internalType":"string","name":"uri","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1670:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"105:1046:30","statements":[{"nodeType":"YulVariableDeclaration","src":"115:12:30","value":{"kind":"number","nodeType":"YulLiteral","src":"125:2:30","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"119:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"172:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"181:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"189:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"174:6:30"},"nodeType":"YulFunctionCall","src":"174:22:30"},"nodeType":"YulExpressionStatement","src":"174:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"147:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"156:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"143:3:30"},"nodeType":"YulFunctionCall","src":"143:23:30"},{"name":"_1","nodeType":"YulIdentifier","src":"168:2:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"139:3:30"},"nodeType":"YulFunctionCall","src":"139:32:30"},"nodeType":"YulIf","src":"136:2:30"},{"nodeType":"YulVariableDeclaration","src":"207:30:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"227:9:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"221:5:30"},"nodeType":"YulFunctionCall","src":"221:16:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"211:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"246:28:30","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"264:2:30","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"268:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"260:3:30"},"nodeType":"YulFunctionCall","src":"260:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"272:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"256:3:30"},"nodeType":"YulFunctionCall","src":"256:18:30"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"250:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"301:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"310:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"318:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"303:6:30"},"nodeType":"YulFunctionCall","src":"303:22:30"},"nodeType":"YulExpressionStatement","src":"303:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"289:6:30"},{"name":"_2","nodeType":"YulIdentifier","src":"297:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"286:2:30"},"nodeType":"YulFunctionCall","src":"286:14:30"},"nodeType":"YulIf","src":"283:2:30"},{"nodeType":"YulVariableDeclaration","src":"336:32:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"350:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"361:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"346:3:30"},"nodeType":"YulFunctionCall","src":"346:22:30"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"340:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"416:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"425:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"433:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"418:6:30"},"nodeType":"YulFunctionCall","src":"418:22:30"},"nodeType":"YulExpressionStatement","src":"418:22:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"395:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"399:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"391:3:30"},"nodeType":"YulFunctionCall","src":"391:13:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"406:7:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"387:3:30"},"nodeType":"YulFunctionCall","src":"387:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"380:6:30"},"nodeType":"YulFunctionCall","src":"380:35:30"},"nodeType":"YulIf","src":"377:2:30"},{"nodeType":"YulVariableDeclaration","src":"451:19:30","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"467:2:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"461:5:30"},"nodeType":"YulFunctionCall","src":"461:9:30"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"455:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"493:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"495:16:30"},"nodeType":"YulFunctionCall","src":"495:18:30"},"nodeType":"YulExpressionStatement","src":"495:18:30"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"485:2:30"},{"name":"_2","nodeType":"YulIdentifier","src":"489:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"482:2:30"},"nodeType":"YulFunctionCall","src":"482:10:30"},"nodeType":"YulIf","src":"479:2:30"},{"nodeType":"YulVariableDeclaration","src":"524:17:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"538:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"534:3:30"},"nodeType":"YulFunctionCall","src":"534:7:30"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"528:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"550:23:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"570:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"564:5:30"},"nodeType":"YulFunctionCall","src":"564:9:30"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"554:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"582:71:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"604:6:30"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"628:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"632:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"624:3:30"},"nodeType":"YulFunctionCall","src":"624:13:30"},{"name":"_5","nodeType":"YulIdentifier","src":"639:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"620:3:30"},"nodeType":"YulFunctionCall","src":"620:22:30"},{"kind":"number","nodeType":"YulLiteral","src":"644:2:30","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"616:3:30"},"nodeType":"YulFunctionCall","src":"616:31:30"},{"name":"_5","nodeType":"YulIdentifier","src":"649:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"612:3:30"},"nodeType":"YulFunctionCall","src":"612:40:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"600:3:30"},"nodeType":"YulFunctionCall","src":"600:53:30"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"586:10:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"712:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"714:16:30"},"nodeType":"YulFunctionCall","src":"714:18:30"},"nodeType":"YulExpressionStatement","src":"714:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"671:10:30"},{"name":"_2","nodeType":"YulIdentifier","src":"683:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"668:2:30"},"nodeType":"YulFunctionCall","src":"668:18:30"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"691:10:30"},{"name":"memPtr","nodeType":"YulIdentifier","src":"703:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"688:2:30"},"nodeType":"YulFunctionCall","src":"688:22:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"665:2:30"},"nodeType":"YulFunctionCall","src":"665:46:30"},"nodeType":"YulIf","src":"662:2:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"750:2:30","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"754:10:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"743:6:30"},"nodeType":"YulFunctionCall","src":"743:22:30"},"nodeType":"YulExpressionStatement","src":"743:22:30"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"781:6:30"},{"name":"_4","nodeType":"YulIdentifier","src":"789:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"774:6:30"},"nodeType":"YulFunctionCall","src":"774:18:30"},"nodeType":"YulExpressionStatement","src":"774:18:30"},{"body":{"nodeType":"YulBlock","src":"838:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"847:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"855:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"840:6:30"},"nodeType":"YulFunctionCall","src":"840:22:30"},"nodeType":"YulExpressionStatement","src":"840:22:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"815:2:30"},{"name":"_4","nodeType":"YulIdentifier","src":"819:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"811:3:30"},"nodeType":"YulFunctionCall","src":"811:11:30"},{"name":"_1","nodeType":"YulIdentifier","src":"824:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"807:3:30"},"nodeType":"YulFunctionCall","src":"807:20:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"829:7:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"804:2:30"},"nodeType":"YulFunctionCall","src":"804:33:30"},"nodeType":"YulIf","src":"801:2:30"},{"nodeType":"YulVariableDeclaration","src":"873:15:30","value":{"name":"value0","nodeType":"YulIdentifier","src":"882:6:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"877:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"943:83:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"972:6:30"},{"name":"i","nodeType":"YulIdentifier","src":"980:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"968:3:30"},"nodeType":"YulFunctionCall","src":"968:14:30"},{"name":"_1","nodeType":"YulIdentifier","src":"984:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"964:3:30"},"nodeType":"YulFunctionCall","src":"964:23:30"},{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1003:2:30"},{"name":"i","nodeType":"YulIdentifier","src":"1007:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"999:3:30"},"nodeType":"YulFunctionCall","src":"999:10:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1011:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"995:3:30"},"nodeType":"YulFunctionCall","src":"995:19:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"989:5:30"},"nodeType":"YulFunctionCall","src":"989:26:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"957:6:30"},"nodeType":"YulFunctionCall","src":"957:59:30"},"nodeType":"YulExpressionStatement","src":"957:59:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"908:1:30"},{"name":"_4","nodeType":"YulIdentifier","src":"911:2:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"905:2:30"},"nodeType":"YulFunctionCall","src":"905:9:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"915:19:30","statements":[{"nodeType":"YulAssignment","src":"917:15:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"926:1:30"},{"name":"_1","nodeType":"YulIdentifier","src":"929:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"922:3:30"},"nodeType":"YulFunctionCall","src":"922:10:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"917:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"901:3:30","statements":[]},"src":"897:129:30"},{"body":{"nodeType":"YulBlock","src":"1056:64:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1085:6:30"},{"name":"_4","nodeType":"YulIdentifier","src":"1093:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1081:3:30"},"nodeType":"YulFunctionCall","src":"1081:15:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1098:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1077:3:30"},"nodeType":"YulFunctionCall","src":"1077:24:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1103:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1070:6:30"},"nodeType":"YulFunctionCall","src":"1070:40:30"},"nodeType":"YulExpressionStatement","src":"1070:40:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1041:1:30"},{"name":"_4","nodeType":"YulIdentifier","src":"1044:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1038:2:30"},"nodeType":"YulFunctionCall","src":"1038:9:30"},"nodeType":"YulIf","src":"1035:2:30"},{"nodeType":"YulAssignment","src":"1129:16:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1139:6:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1129:6:30"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"71:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"82:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"94:6:30","type":""}],"src":"14:1137:30"},{"body":{"nodeType":"YulBlock","src":"1211:325:30","statements":[{"nodeType":"YulAssignment","src":"1221:22:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1235:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:30","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1231:3:30"},"nodeType":"YulFunctionCall","src":"1231:12:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1221:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"1252:38:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1282:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:30","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1278:3:30"},"nodeType":"YulFunctionCall","src":"1278:12:30"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1256:18:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1329:31:30","statements":[{"nodeType":"YulAssignment","src":"1331:27:30","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1345:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"1353:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1341:3:30"},"nodeType":"YulFunctionCall","src":"1341:17:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1331:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1309:18:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1302:6:30"},"nodeType":"YulFunctionCall","src":"1302:26:30"},"nodeType":"YulIf","src":"1299:2:30"},{"body":{"nodeType":"YulBlock","src":"1419:111:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1440:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1447:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1452:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1443:3:30"},"nodeType":"YulFunctionCall","src":"1443:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1433:6:30"},"nodeType":"YulFunctionCall","src":"1433:31:30"},"nodeType":"YulExpressionStatement","src":"1433:31:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1484:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1487:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1477:6:30"},"nodeType":"YulFunctionCall","src":"1477:15:30"},"nodeType":"YulExpressionStatement","src":"1477:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1512:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1515:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1505:6:30"},"nodeType":"YulFunctionCall","src":"1505:15:30"},"nodeType":"YulExpressionStatement","src":"1505:15:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1375:18:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1398:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"1406:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1395:2:30"},"nodeType":"YulFunctionCall","src":"1395:14:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1372:2:30"},"nodeType":"YulFunctionCall","src":"1372:38:30"},"nodeType":"YulIf","src":"1369:2:30"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1191:4:30","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1200:6:30","type":""}],"src":"1156:380:30"},{"body":{"nodeType":"YulBlock","src":"1573:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1590:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1597:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1602:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1593:3:30"},"nodeType":"YulFunctionCall","src":"1593:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1583:6:30"},"nodeType":"YulFunctionCall","src":"1583:31:30"},"nodeType":"YulExpressionStatement","src":"1583:31:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1630:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1633:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1623:6:30"},"nodeType":"YulFunctionCall","src":"1623:15:30"},"nodeType":"YulExpressionStatement","src":"1623:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1654:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1657:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1647:6:30"},"nodeType":"YulFunctionCall","src":"1647:15:30"},"nodeType":"YulExpressionStatement","src":"1647:15:30"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1541:127:30"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(value0, value0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), value0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620032cd380380620032cd83398101604081905262000034916200030c565b806200004081620000c6565b506005805460ff191690556200006160006200005b620000df565b620000e3565b620000907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66200005b620000df565b620000bf7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6200005b620000df565b5062000435565b8051620000db90600490602084019062000266565b5050565b3390565b620000db82826200010082826200012c60201b620009ec1760201c565b60008281526001602090815260409091206200012791839062000a71620001b6821b17901c565b505050565b620001388282620001d6565b620000db576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905562000172620000df565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001cd836001600160a01b038416620001ff565b90505b92915050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60006200020d83836200024e565b6200024557508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620001d0565b506000620001d0565b60009081526001919091016020526040902054151590565b8280546200027490620003e2565b90600052602060002090601f016020900481019282620002985760008555620002e3565b82601f10620002b357805160ff1916838001178555620002e3565b82800160010185558215620002e3579182015b82811115620002e3578251825591602001919060010190620002c6565b50620002f1929150620002f5565b5090565b5b80821115620002f15760008155600101620002f6565b600060208083850312156200031f578182fd5b82516001600160401b038082111562000336578384fd5b818501915085601f8301126200034a578384fd5b8151818111156200035f576200035f6200041f565b604051601f8201601f19908116603f011681019083821181831017156200038a576200038a6200041f565b816040528281528886848701011115620003a2578687fd5b8693505b82841015620003c55784840186015181850187015292850192620003a6565b82841115620003d657868684830101525b98975050505050505050565b600281046001821680620003f757607f821691505b602082108114156200041957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b612e8880620004456000396000f3fe608060405234801561001057600080fd5b50600436106101a25760003560e01c8063731133e9116100ee578063ca15c87311610097578063e63ab1e911610071578063e63ab1e91461034b578063e985e9c514610353578063f242432a14610366578063f5298aca14610379576101a2565b8063ca15c8731461031d578063d539139314610330578063d547741f14610338576101a2565b806391d14854116100c857806391d14854146102ef578063a217fddf14610302578063a22cb4651461030a576101a2565b8063731133e9146102b45780638456cb59146102c75780639010d07c146102cf576101a2565b80632f2ff15d116101505780634e1273f41161012a5780634e1273f4146102795780635c975abb146102995780636b20c454146102a1576101a2565b80632f2ff15d1461024b57806336568abe1461025e5780633f4ba83a14610271576101a2565b80631f7fdffa116101815780631f7fdffa14610210578063248a9ca3146102255780632eb2c2d614610238576101a2565b8062fdd58e146101a757806301ffc9a7146101d05780630e89341c146101f0575b600080fd5b6101ba6101b5366004612143565b61038c565b6040516101c79190612535565b60405180910390f35b6101e36101de366004612315565b6103e8565b6040516101c7919061252a565b6102036101fe3660046122ba565b6103fb565b6040516101c7919061253e565b61022361021e366004612074565b61048f565b005b6101ba6102333660046122ba565b6104e9565b610223610246366004611efa565b6104fe565b6102236102593660046122d2565b61055c565b61022361026c3660046122d2565b61057d565b6102236105c3565b61028c6102873660046121f1565b610615565b6040516101c791906124e9565b6101e3610735565b6102236102af366004612003565b61073f565b6102236102c236600461219e565b610794565b6102236107e8565b6102e26102dd3660046122f4565b610838565b6040516101c79190612434565b6101e36102fd3660046122d2565b610857565b6101ba610880565b610223610318366004612109565b610885565b6101ba61032b3660046122ba565b610897565b6101ba6108ae565b6102236103463660046122d2565b6108d2565b6101ba6108ee565b6101e3610361366004611ec8565b610912565b610223610374366004611fa0565b610940565b61022361038736600461216c565b610997565b60006001600160a01b0383166103bd5760405162461bcd60e51b81526004016103b4906126d4565b60405180910390fd5b5060008181526002602090815260408083206001600160a01b03861684529091529020545b92915050565b60006103f382610a86565b90505b919050565b60606004805461040a90612ce4565b80601f016020809104026020016040519081016040528092919081815260200182805461043690612ce4565b80156104835780601f1061045857610100808354040283529160200191610483565b820191906000526020600020905b81548152906001019060200180831161046657829003601f168201915b50505050509050919050565b6104bb7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66102fd610af8565b6104d75760405162461bcd60e51b81526004016103b49061287f565b6104e384848484610afc565b50505050565b60009081526020819052604090206001015490565b610506610af8565b6001600160a01b0316856001600160a01b0316148061052c575061052c85610361610af8565b6105485760405162461bcd60e51b81526004016103b490612731565b6105558585858585610c8d565b5050505050565b610565826104e9565b61056e81610e6f565b6105788383610e83565b505050565b610585610af8565b6001600160a01b0316816001600160a01b0316146105b55760405162461bcd60e51b81526004016103b490612bc4565b6105bf8282610ea5565b5050565b6105ef7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6102fd610af8565b61060b5760405162461bcd60e51b81526004016103b490612939565b610613610ec7565b565b606081518351146106385760405162461bcd60e51b81526004016103b490612a50565b6000835167ffffffffffffffff81111561066257634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561068b578160200160208202803683370190505b50905060005b845181101561072d576106f28582815181106106bd57634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106106e557634e487b7160e01b600052603260045260246000fd5b602002602001015161038c565b82828151811061071257634e487b7160e01b600052603260045260246000fd5b602090810291909101015261072681612d4c565b9050610691565b509392505050565b60055460ff165b90565b610747610af8565b6001600160a01b0316836001600160a01b0316148061076d575061076d83610361610af8565b6107895760405162461bcd60e51b81526004016103b490612731565b610578838383610f19565b6107c07f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66102fd610af8565b6107dc5760405162461bcd60e51b81526004016103b49061287f565b6104e3848484846110e5565b6108147f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6102fd610af8565b6108305760405162461bcd60e51b81526004016103b490612996565b6106136111f8565b60008281526001602052604081206108509083611236565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600081565b6105bf610890610af8565b8383611242565b60008181526001602052604081206103f3906112e5565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6108db826104e9565b6108e481610e6f565b6105788383610ea5565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205460ff1690565b610948610af8565b6001600160a01b0316856001600160a01b0316148061096e575061096e85610361610af8565b61098a5760405162461bcd60e51b81526004016103b490612731565b61055585858585856112f0565b61099f610af8565b6001600160a01b0316836001600160a01b031614806109c557506109c583610361610af8565b6109e15760405162461bcd60e51b81526004016103b490612731565b610578838383611451565b6109f68282610857565b6105bf576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610a2d610af8565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610850836001600160a01b038416611585565b60006001600160e01b031982167fd9b67a26000000000000000000000000000000000000000000000000000000001480610ae957506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b806103f357506103f3826115cf565b3390565b6001600160a01b038416610b225760405162461bcd60e51b81526004016103b490612b0a565b8151835114610b435760405162461bcd60e51b81526004016103b490612aad565b6000610b4d610af8565b9050610b5e8160008787878761160d565b60005b8451811015610c1657838181518110610b8a57634e487b7160e01b600052603260045260246000fd5b602002602001015160026000878481518110610bb657634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254610bfe9190612c53565b90915550819050610c0e81612d4c565b915050610b61565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610c679291906124fc565b60405180910390a4610c7e81600087878787610e67565b6105558160008787878761161b565b8151835114610cae5760405162461bcd60e51b81526004016103b490612aad565b6001600160a01b038416610cd45760405162461bcd60e51b81526004016103b4906127c5565b6000610cde610af8565b9050610cee81878787878761160d565b60005b8451811015610df3576000858281518110610d1c57634e487b7160e01b600052603260045260246000fd5b602002602001015190506000858381518110610d4857634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160008481526002835260408082206001600160a01b038e168352909352919091205490915081811015610d995760405162461bcd60e51b81526004016103b4906128dc565b60008381526002602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610dd8908490612c53565b9250508190555050505080610dec90612d4c565b9050610cf1565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610e439291906124fc565b60405180910390a4610e59818787878787610e67565b610e6781878787878761161b565b505050505050565b610e8081610e7b610af8565b611740565b50565b610e8d82826109ec565b60008281526001602052604090206105789082610a71565b610eaf8282611799565b6000828152600160205260409020610578908261181c565b610ecf611831565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610f02610af8565b604051610f0f9190612434565b60405180910390a1565b6001600160a01b038316610f3f5760405162461bcd60e51b81526004016103b490612822565b8051825114610f605760405162461bcd60e51b81526004016103b490612aad565b6000610f6a610af8565b9050610f8a8185600086866040518060200160405280600081525061160d565b60005b835181101561106e576000848281518110610fb857634e487b7160e01b600052603260045260246000fd5b602002602001015190506000848381518110610fe457634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160008481526002835260408082206001600160a01b038c1683529093529190912054909150818110156110355760405162461bcd60e51b81526004016103b49061261a565b60009283526002602090815260408085206001600160a01b038b168652909152909220910390558061106681612d4c565b915050610f8d565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516110bf9291906124fc565b60405180910390a46104e381856000868660405180602001604052806000815250610e67565b6001600160a01b03841661110b5760405162461bcd60e51b81526004016103b490612b0a565b6000611115610af8565b9050600061112285611855565b9050600061112f85611855565b90506111408360008985858961160d565b60008681526002602090815260408083206001600160a01b038b16845290915281208054879290611172908490612c53565b92505081905550866001600160a01b031660006001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6289896040516111c9929190612c21565b60405180910390a46111e083600089858589610e67565b6111ef836000898989896118ae565b50505050505050565b61120061197f565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f02610af8565b600061085083836119a4565b816001600160a01b0316836001600160a01b031614156112745760405162461bcd60e51b81526004016103b4906129f3565b6001600160a01b0383811660008181526003602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31906112d890859061252a565b60405180910390a3505050565b60006103f3826119dc565b6001600160a01b0384166113165760405162461bcd60e51b81526004016103b4906127c5565b6000611320610af8565b9050600061132d85611855565b9050600061133a85611855565b905061134a83898985858961160d565b60008681526002602090815260408083206001600160a01b038c1684529091529020548581101561138d5760405162461bcd60e51b81526004016103b4906128dc565b60008781526002602090815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906113cc908490612c53565b92505081905550876001600160a01b0316896001600160a01b0316856001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051611422929190612c21565b60405180910390a4611438848a8a86868a610e67565b611446848a8a8a8a8a6118ae565b505050505050505050565b6001600160a01b0383166114775760405162461bcd60e51b81526004016103b490612822565b6000611481610af8565b9050600061148e84611855565b9050600061149b84611855565b90506114bb8387600085856040518060200160405280600081525061160d565b60008581526002602090815260408083206001600160a01b038a168452909152902054848110156114fe5760405162461bcd60e51b81526004016103b49061261a565b60008681526002602090815260408083206001600160a01b03808c16808652919093528184208986039055905190918716907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629061155f908b908b90612c21565b60405180910390a46111ef84886000868660405180602001604052806000815250610e67565b600061159183836119e0565b6115c7575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103e2565b5060006103e2565b60006001600160e01b031982167f5a05180f0000000000000000000000000000000000000000000000000000000014806103f357506103f3826119f8565b610e67868686868686611a36565b61162d846001600160a01b0316611a69565b15610e675760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906116669089908990889088908890600401612448565b602060405180830381600087803b15801561168057600080fd5b505af19250505080156116b0575060408051601f3d908101601f191682019092526116ad91810190612331565b60015b611710576116bc612d93565b806308c379a014156116f657506116d1612daa565b806116dc57506116f8565b8060405162461bcd60e51b81526004016103b4919061253e565b505b60405162461bcd60e51b81526004016103b490612b67565b6001600160e01b0319811663bc197c8160e01b146111ef5760405162461bcd60e51b81526004016103b490612586565b61174a8282610857565b6105bf5761175781611a78565b611762836020611a8a565b6040516020016117739291906123b3565b60408051601f198184030181529082905262461bcd60e51b82526103b49160040161253e565b6117a38282610857565b156105bf576000828152602081815260408083206001600160a01b03851684529091529020805460ff191690556117d8610af8565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000610850836001600160a01b038416611c81565b611839610735565b6106135760405162461bcd60e51b81526004016103b4906125e3565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061189d57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6118c0846001600160a01b0316611a69565b15610e675760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906118f990899089908890889088906004016124a6565b602060405180830381600087803b15801561191357600080fd5b505af1925050508015611943575060408051601f3d908101601f1916820190925261194091810190612331565b60015b61194f576116bc612d93565b6001600160e01b0319811663f23a6e6160e01b146111ef5760405162461bcd60e51b81526004016103b490612586565b611987610735565b156106135760405162461bcd60e51b81526004016103b49061278e565b60008260000182815481106119c957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b5490565b60009081526001919091016020526040902054151590565b60006001600160e01b031982167f7965db0b0000000000000000000000000000000000000000000000000000000014806103f357506103f382611d9e565b611a44868686868686610e67565b611a4c610735565b15610e675760405162461bcd60e51b81526004016103b490612677565b6001600160a01b03163b151590565b60606103f36001600160a01b03831660145b60606000611a99836002612c6b565b611aa4906002612c53565b67ffffffffffffffff811115611aca57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611af4576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611b3957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611b9257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611bb6846002612c6b565b611bc1906001612c53565b90505b6001811115611c62577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110611c1057634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110611c3457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93611c5b81612ccd565b9050611bc4565b5083156108505760405162461bcd60e51b81526004016103b490612551565b60008181526001830160205260408120548015611d94576000611ca5600183612c8a565b8554909150600090611cb990600190612c8a565b9050818114611d3a576000866000018281548110611ce757634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080876000018481548110611d1857634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611d5957634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506103e2565b60009150506103e2565b6001600160e01b031981167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b80356001600160a01b03811681146103f657600080fd5b600082601f830112611df7578081fd5b81356020611e0482612c2f565b604051611e118282612d1f565b838152828101915085830183850287018401881015611e2e578586fd5b855b85811015611e4c57813584529284019290840190600101611e30565b5090979650505050505050565b600082601f830112611e69578081fd5b813567ffffffffffffffff811115611e8357611e83612d7d565b604051611e9a601f8301601f191660200182612d1f565b818152846020838601011115611eae578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215611eda578182fd5b611ee383611dd0565b9150611ef160208401611dd0565b90509250929050565b600080600080600060a08688031215611f11578081fd5b611f1a86611dd0565b9450611f2860208701611dd0565b9350604086013567ffffffffffffffff80821115611f44578283fd5b611f5089838a01611de7565b94506060880135915080821115611f65578283fd5b611f7189838a01611de7565b93506080880135915080821115611f86578283fd5b50611f9388828901611e59565b9150509295509295909350565b600080600080600060a08688031215611fb7578081fd5b611fc086611dd0565b9450611fce60208701611dd0565b93506040860135925060608601359150608086013567ffffffffffffffff811115611ff7578182fd5b611f9388828901611e59565b600080600060608486031215612017578283fd5b61202084611dd0565b9250602084013567ffffffffffffffff8082111561203c578384fd5b61204887838801611de7565b9350604086013591508082111561205d578283fd5b5061206a86828701611de7565b9150509250925092565b60008060008060808587031215612089578384fd5b61209285611dd0565b9350602085013567ffffffffffffffff808211156120ae578485fd5b6120ba88838901611de7565b945060408701359150808211156120cf578384fd5b6120db88838901611de7565b935060608701359150808211156120f0578283fd5b506120fd87828801611e59565b91505092959194509250565b6000806040838503121561211b578182fd5b61212483611dd0565b915060208301358015158114612138578182fd5b809150509250929050565b60008060408385031215612155578182fd5b61215e83611dd0565b946020939093013593505050565b600080600060608486031215612180578081fd5b61218984611dd0565b95602085013595506040909401359392505050565b600080600080608085870312156121b3578182fd5b6121bc85611dd0565b93506020850135925060408501359150606085013567ffffffffffffffff8111156121e5578182fd5b6120fd87828801611e59565b60008060408385031215612203578182fd5b823567ffffffffffffffff8082111561221a578384fd5b818501915085601f83011261222d578384fd5b8135602061223a82612c2f565b6040516122478282612d1f565b8381528281019150858301838502870184018b1015612264578889fd5b8896505b8487101561228d5761227981611dd0565b835260019690960195918301918301612268565b50965050860135925050808211156122a3578283fd5b506122b085828601611de7565b9150509250929050565b6000602082840312156122cb578081fd5b5035919050565b600080604083850312156122e4578182fd5b82359150611ef160208401611dd0565b60008060408385031215612306578182fd5b50508035926020909101359150565b600060208284031215612326578081fd5b813561085081612e3c565b600060208284031215612342578081fd5b815161085081612e3c565b6000815180845260208085019450808401835b8381101561237c57815187529582019590820190600101612360565b509495945050505050565b6000815180845261239f816020860160208601612ca1565b601f01601f19169290920160200192915050565b60007f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000825283516123eb816017850160208801612ca1565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351612428816028840160208801612ca1565b01602801949350505050565b6001600160a01b0391909116815260200190565b60006001600160a01b03808816835280871660208401525060a0604083015261247460a083018661234d565b8281036060840152612486818661234d565b9050828103608084015261249a8185612387565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526124de60a0830184612387565b979650505050505050565b600060208252610850602083018461234d565b60006040825261250f604083018561234d565b8281036020840152612521818561234d565b95945050505050565b901515815260200190565b90815260200190565b6000602082526108506020830184612387565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a6563746560408201527f6420746f6b656e73000000000000000000000000000000000000000000000000606082015260800190565b60208082526014908201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604082015260600190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c60408201527f616e636500000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f455243313135355061757361626c653a20746f6b656e207472616e736665722060408201527f7768696c65207061757365640000000000000000000000000000000000000000606082015260800190565b6020808252602a908201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660408201527f616c6964206f776e657200000000000000000000000000000000000000000000606082015260800190565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201527f6572206f7220617070726f766564000000000000000000000000000000000000606082015260800190565b60208082526010908201527f5061757361626c653a2070617573656400000000000000000000000000000000604082015260600190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526038908201527f455243313135355072657365744d696e7465725061757365723a206d7573742060408201527f68617665206d696e74657220726f6c6520746f206d696e740000000000000000606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201527f72207472616e7366657200000000000000000000000000000000000000000000606082015260800190565b6020808252603b908201527f455243313135355072657365744d696e7465725061757365723a206d7573742060408201527f686176652070617573657220726f6c6520746f20756e70617573650000000000606082015260800190565b60208082526039908201527f455243313135355072657365744d696e7465725061757365723a206d7573742060408201527f686176652070617573657220726f6c6520746f20706175736500000000000000606082015260800190565b60208082526029908201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360408201527f20666f722073656c660000000000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860408201527f206d69736d617463680000000000000000000000000000000000000000000000606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060408201527f6d69736d61746368000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360408201527f7300000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526034908201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560408201527f526563656976657220696d706c656d656e746572000000000000000000000000606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201527f20726f6c657320666f722073656c660000000000000000000000000000000000606082015260800190565b918252602082015260400190565b600067ffffffffffffffff821115612c4957612c49612d7d565b5060209081020190565b60008219821115612c6657612c66612d67565b500190565b6000816000190483118215151615612c8557612c85612d67565b500290565b600082821015612c9c57612c9c612d67565b500390565b60005b83811015612cbc578181015183820152602001612ca4565b838111156104e35750506000910152565b600081612cdc57612cdc612d67565b506000190190565b600281046001821680612cf857607f821691505b60208210811415612d1957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715612d4557612d45612d7d565b6040525050565b6000600019821415612d6057612d60612d67565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561073c57600481823e5160e01c90565b600060443d1015612dba5761073c565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612dec57505050505061073c565b8285019150815181811115612e065750505050505061073c565b843d8701016020828501011115612e225750505050505061073c565b612e3160208286010187612d1f565b509094505050505090565b6001600160e01b031981168114610e8057600080fdfea2646970667358221220131b244ca31df46df8d9e562f1eb76a5ac7d9e981bea40ad21f49f7b20c37d6164736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x32CD CODESIZE SUB DUP1 PUSH3 0x32CD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x30C JUMP JUMPDEST DUP1 PUSH3 0x40 DUP2 PUSH3 0xC6 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH3 0x61 PUSH1 0x0 PUSH3 0x5B PUSH3 0xDF JUMP JUMPDEST PUSH3 0xE3 JUMP JUMPDEST PUSH3 0x90 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH3 0x5B PUSH3 0xDF JUMP JUMPDEST PUSH3 0xBF PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH3 0x5B PUSH3 0xDF JUMP JUMPDEST POP PUSH3 0x435 JUMP JUMPDEST DUP1 MLOAD PUSH3 0xDB SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x266 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH3 0xDB DUP3 DUP3 PUSH3 0x100 DUP3 DUP3 PUSH3 0x12C PUSH1 0x20 SHL PUSH3 0x9EC OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH3 0x127 SWAP2 DUP4 SWAP1 PUSH3 0xA71 PUSH3 0x1B6 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x138 DUP3 DUP3 PUSH3 0x1D6 JUMP JUMPDEST PUSH3 0xDB JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x172 PUSH3 0xDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1CD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x1FF JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20D DUP4 DUP4 PUSH3 0x24E JUMP JUMPDEST PUSH3 0x245 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH3 0x1D0 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x1D0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x274 SWAP1 PUSH3 0x3E2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x298 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2E3 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2B3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2E3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2E3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2E3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2C6 JUMP JUMPDEST POP PUSH3 0x2F1 SWAP3 SWAP2 POP PUSH3 0x2F5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2F1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2F6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x31F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x336 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x34A JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x35F JUMPI PUSH3 0x35F PUSH3 0x41F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x38A JUMPI PUSH3 0x38A PUSH3 0x41F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x3A2 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x3C5 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x3A6 JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x3D6 JUMPI DUP7 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3F7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x419 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2E88 DUP1 PUSH3 0x445 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x731133E9 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0xCA15C873 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE63AB1E9 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x379 JUMPI PUSH2 0x1A2 JUMP JUMPDEST DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x338 JUMPI PUSH2 0x1A2 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x30A JUMPI PUSH2 0x1A2 JUMP JUMPDEST DUP1 PUSH4 0x731133E9 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x2CF JUMPI PUSH2 0x1A2 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x150 JUMPI DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x12A JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x2A1 JUMPI PUSH2 0x1A2 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x271 JUMPI PUSH2 0x1A2 JUMP JUMPDEST DUP1 PUSH4 0x1F7FDFFA GT PUSH2 0x181 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x238 JUMPI PUSH2 0x1A2 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x1F0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BA PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2143 JUMP JUMPDEST PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x2315 JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x252A JUMP JUMPDEST PUSH2 0x203 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x22BA JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x223 PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x2074 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x22BA JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EFA JUMP JUMPDEST PUSH2 0x4FE JUMP JUMPDEST PUSH2 0x223 PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x22D2 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH2 0x223 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x22D2 JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST PUSH2 0x223 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x21F1 JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x24E9 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x2003 JUMP JUMPDEST PUSH2 0x73F JUMP JUMPDEST PUSH2 0x223 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x219E JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x2434 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x2FD CALLDATASIZE PUSH1 0x4 PUSH2 0x22D2 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x880 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x22BA JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x8AE JUMP JUMPDEST PUSH2 0x223 PUSH2 0x346 CALLDATASIZE PUSH1 0x4 PUSH2 0x22D2 JUMP JUMPDEST PUSH2 0x8D2 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x361 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC8 JUMP JUMPDEST PUSH2 0x912 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x374 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA0 JUMP JUMPDEST PUSH2 0x940 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x216C JUMP JUMPDEST PUSH2 0x997 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x26D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3 DUP3 PUSH2 0xA86 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x40A SWAP1 PUSH2 0x2CE4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x436 SWAP1 PUSH2 0x2CE4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x483 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x458 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x483 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x466 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BB PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x2FD PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x4D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x287F JUMP JUMPDEST PUSH2 0x4E3 DUP5 DUP5 DUP5 DUP5 PUSH2 0xAFC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x506 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x52C JUMPI POP PUSH2 0x52C DUP6 PUSH2 0x361 PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2731 JUMP JUMPDEST PUSH2 0x555 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC8D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x565 DUP3 PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x56E DUP2 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x578 DUP4 DUP4 PUSH2 0xE83 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x585 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH2 0x5BF DUP3 DUP3 PUSH2 0xEA5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5EF PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x2FD PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2939 JUMP JUMPDEST PUSH2 0x613 PUSH2 0xEC7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2A50 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x662 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x68B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x72D JUMPI PUSH2 0x6F2 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6E5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x38C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x712 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x726 DUP2 PUSH2 0x2D4C JUMP JUMPDEST SWAP1 POP PUSH2 0x691 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x747 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x76D JUMPI POP PUSH2 0x76D DUP4 PUSH2 0x361 PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x789 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2731 JUMP JUMPDEST PUSH2 0x578 DUP4 DUP4 DUP4 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0x7C0 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x2FD PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x7DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x287F JUMP JUMPDEST PUSH2 0x4E3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0x814 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x2FD PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2996 JUMP JUMPDEST PUSH2 0x613 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x850 SWAP1 DUP4 PUSH2 0x1236 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x5BF PUSH2 0x890 PUSH2 0xAF8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x3F3 SWAP1 PUSH2 0x12E5 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x8DB DUP3 PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x8E4 DUP2 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x578 DUP4 DUP4 PUSH2 0xEA5 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x948 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x96E JUMPI POP PUSH2 0x96E DUP6 PUSH2 0x361 PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x98A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2731 JUMP JUMPDEST PUSH2 0x555 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x12F0 JUMP JUMPDEST PUSH2 0x99F PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x9C5 JUMPI POP PUSH2 0x9C5 DUP4 PUSH2 0x361 PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2731 JUMP JUMPDEST PUSH2 0x578 DUP4 DUP4 DUP4 PUSH2 0x1451 JUMP JUMPDEST PUSH2 0x9F6 DUP3 DUP3 PUSH2 0x857 JUMP JUMPDEST PUSH2 0x5BF JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xA2D PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x850 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0xAE9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x3F3 JUMPI POP PUSH2 0x3F3 DUP3 PUSH2 0x15CF JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2B0A JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xB43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP PUSH2 0xB5E DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xC16 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB8A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xBB6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBFE SWAP2 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xC0E DUP2 PUSH2 0x2D4C JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB61 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xC67 SWAP3 SWAP2 SWAP1 PUSH2 0x24FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xC7E DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x555 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x161B JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x27C5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDE PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP PUSH2 0xCEE DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD1C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD48 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x28DC JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xDD8 SWAP1 DUP5 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xDEC SWAP1 PUSH2 0x2D4C JUMP JUMPDEST SWAP1 POP PUSH2 0xCF1 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xE43 SWAP3 SWAP2 SWAP1 PUSH2 0x24FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE59 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0xE67 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x161B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE80 DUP2 PUSH2 0xE7B PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x1740 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE8D DUP3 DUP3 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x578 SWAP1 DUP3 PUSH2 0xA71 JUMP JUMPDEST PUSH2 0xEAF DUP3 DUP3 PUSH2 0x1799 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x578 SWAP1 DUP3 PUSH2 0x181C JUMP JUMPDEST PUSH2 0xECF PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xF02 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0F SWAP2 SWAP1 PUSH2 0x2434 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2822 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xF60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6A PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP PUSH2 0xF8A DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x160D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x106E JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFB8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xFE4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x1035 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP1 PUSH2 0x1066 DUP2 PUSH2 0x2D4C JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF8D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x10BF SWAP3 SWAP2 SWAP1 PUSH2 0x24FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x4E3 DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x110B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2B0A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1115 PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1122 DUP6 PUSH2 0x1855 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x112F DUP6 PUSH2 0x1855 JUMP JUMPDEST SWAP1 POP PUSH2 0x1140 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1172 SWAP1 DUP5 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x11C9 SWAP3 SWAP2 SWAP1 PUSH2 0x2C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x11E0 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x11EF DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x18AE JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1200 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF02 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x850 DUP4 DUP4 PUSH2 0x19A4 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x29F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH2 0x12D8 SWAP1 DUP6 SWAP1 PUSH2 0x252A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3 DUP3 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x27C5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1320 PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x132D DUP6 PUSH2 0x1855 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x133A DUP6 PUSH2 0x1855 JUMP JUMPDEST SWAP1 POP PUSH2 0x134A DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x138D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x28DC JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x13CC SWAP1 DUP5 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x1422 SWAP3 SWAP2 SWAP1 PUSH2 0x2C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1438 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x1446 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x18AE JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1477 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2822 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1481 PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x148E DUP5 PUSH2 0x1855 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x149B DUP5 PUSH2 0x1855 JUMP JUMPDEST SWAP1 POP PUSH2 0x14BB DUP4 DUP8 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x160D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x14FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND DUP1 DUP7 MSTORE SWAP2 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP10 DUP7 SUB SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP2 DUP8 AND SWAP1 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP1 PUSH2 0x155F SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH2 0x2C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x11EF DUP5 DUP9 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1591 DUP4 DUP4 PUSH2 0x19E0 JUMP JUMPDEST PUSH2 0x15C7 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3E2 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3F3 JUMPI POP PUSH2 0x3F3 DUP3 PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0xE67 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1A36 JUMP JUMPDEST PUSH2 0x162D DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A69 JUMP JUMPDEST ISZERO PUSH2 0xE67 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1666 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2448 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x16B0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x16AD SWAP2 DUP2 ADD SWAP1 PUSH2 0x2331 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1710 JUMPI PUSH2 0x16BC PUSH2 0x2D93 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x16F6 JUMPI POP PUSH2 0x16D1 PUSH2 0x2DAA JUMP JUMPDEST DUP1 PUSH2 0x16DC JUMPI POP PUSH2 0x16F8 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x253E JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2B67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x11EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2586 JUMP JUMPDEST PUSH2 0x174A DUP3 DUP3 PUSH2 0x857 JUMP JUMPDEST PUSH2 0x5BF JUMPI PUSH2 0x1757 DUP2 PUSH2 0x1A78 JUMP JUMPDEST PUSH2 0x1762 DUP4 PUSH1 0x20 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1773 SWAP3 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x3B4 SWAP2 PUSH1 0x4 ADD PUSH2 0x253E JUMP JUMPDEST PUSH2 0x17A3 DUP3 DUP3 PUSH2 0x857 JUMP JUMPDEST ISZERO PUSH2 0x5BF JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x17D8 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x850 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C81 JUMP JUMPDEST PUSH2 0x1839 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x189D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18C0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A69 JUMP JUMPDEST ISZERO PUSH2 0xE67 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x18F9 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x24A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1913 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1943 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1940 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2331 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x194F JUMPI PUSH2 0x16BC PUSH2 0x2D93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x11EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2586 JUMP JUMPDEST PUSH2 0x1987 PUSH2 0x735 JUMP JUMPDEST ISZERO PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19C9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3F3 JUMPI POP PUSH2 0x3F3 DUP3 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0x1A44 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x1A4C PUSH2 0x735 JUMP JUMPDEST ISZERO PUSH2 0xE67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2677 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1A99 DUP4 PUSH1 0x2 PUSH2 0x2C6B JUMP JUMPDEST PUSH2 0x1AA4 SWAP1 PUSH1 0x2 PUSH2 0x2C53 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ACA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AF4 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1B39 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1B92 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1BB6 DUP5 PUSH1 0x2 PUSH2 0x2C6B JUMP JUMPDEST PUSH2 0x1BC1 SWAP1 PUSH1 0x1 PUSH2 0x2C53 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C62 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1C10 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C34 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1C5B DUP2 PUSH2 0x2CCD JUMP JUMPDEST SWAP1 POP PUSH2 0x1BC4 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1D94 JUMPI PUSH1 0x0 PUSH2 0x1CA5 PUSH1 0x1 DUP4 PUSH2 0x2C8A JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1CB9 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2C8A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1D3A JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1CE7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1D18 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1D59 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DF7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1E04 DUP3 PUSH2 0x2C2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E11 DUP3 DUP3 PUSH2 0x2D1F JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x1E2E JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1E4C JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1E30 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E69 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E83 JUMPI PUSH2 0x1E83 PUSH2 0x2D7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9A PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x2D1F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1EAE JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EDA JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1EE3 DUP4 PUSH2 0x1DD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF1 PUSH1 0x20 DUP5 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1F11 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1F1A DUP7 PUSH2 0x1DD0 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F28 PUSH1 0x20 DUP8 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1F44 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1F50 DUP10 DUP4 DUP11 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F65 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1F71 DUP10 DUP4 DUP11 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F86 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1F93 DUP9 DUP3 DUP10 ADD PUSH2 0x1E59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1FB7 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1FC0 DUP7 PUSH2 0x1DD0 JUMP JUMPDEST SWAP5 POP PUSH2 0x1FCE PUSH1 0x20 DUP8 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FF7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1F93 DUP9 DUP3 DUP10 ADD PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2017 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2020 DUP5 PUSH2 0x1DD0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x203C JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2048 DUP8 DUP4 DUP9 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x205D JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x206A DUP7 DUP3 DUP8 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2089 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2092 DUP6 PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x20AE JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x20BA DUP9 DUP4 DUP10 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x20CF JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x20DB DUP9 DUP4 DUP10 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x20F0 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x20FD DUP8 DUP3 DUP9 ADD PUSH2 0x1E59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x211B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2124 DUP4 PUSH2 0x1DD0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2138 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2155 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x215E DUP4 PUSH2 0x1DD0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2180 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2189 DUP5 PUSH2 0x1DD0 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x21B3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x21BC DUP6 PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21E5 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x20FD DUP8 DUP3 DUP9 ADD PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2203 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x221A JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x222D JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x223A DUP3 PUSH2 0x2C2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2247 DUP3 DUP3 PUSH2 0x2D1F JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x2264 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x228D JUMPI PUSH2 0x2279 DUP2 PUSH2 0x1DD0 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2268 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x22A3 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x22B0 DUP6 DUP3 DUP7 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22CB JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22E4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1EF1 PUSH1 0x20 DUP5 ADD PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2306 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2326 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x850 DUP2 PUSH2 0x2E3C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2342 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x850 DUP2 PUSH2 0x2E3C JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x237C JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2360 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x239F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2CA1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP3 MSTORE DUP4 MLOAD PUSH2 0x23EB DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2CA1 JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x2428 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2CA1 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2474 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x234D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2486 DUP2 DUP7 PUSH2 0x234D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x249A DUP2 DUP6 PUSH2 0x2387 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x24DE PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2387 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x850 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x234D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x250F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x234D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2521 DUP2 DUP6 PUSH2 0x234D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x850 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2387 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x616E636500000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135355061757361626C653A20746F6B656E207472616E7366657220 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7768696C65207061757365640000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6572206F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x38 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135355072657365744D696E7465725061757365723A206D75737420 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x68617665206D696E74657220726F6C6520746F206D696E740000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3B SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135355072657365744D696E7465725061757365723A206D75737420 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x686176652070617573657220726F6C6520746F20756E70617573650000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x39 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135355072657365744D696E7465725061757365723A206D75737420 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x686176652070617573657220726F6C6520746F20706175736500000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x34 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C49 JUMPI PUSH2 0x2C49 PUSH2 0x2D7D JUMP JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2C66 JUMPI PUSH2 0x2C66 PUSH2 0x2D67 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2C85 JUMPI PUSH2 0x2C85 PUSH2 0x2D67 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2C9C JUMPI PUSH2 0x2C9C PUSH2 0x2D67 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CBC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2CA4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4E3 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2CDC JUMPI PUSH2 0x2CDC PUSH2 0x2D67 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2CF8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2D19 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2D45 JUMPI PUSH2 0x2D45 PUSH2 0x2D7D JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2D60 JUMPI PUSH2 0x2D60 PUSH2 0x2D67 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x73C JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2DBA JUMPI PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x2DEC JUMPI POP POP POP POP POP PUSH2 0x73C JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2E06 JUMPI POP POP POP POP POP POP PUSH2 0x73C JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2E22 JUMPI POP POP POP POP POP POP PUSH2 0x73C JUMP JUMPDEST PUSH2 0x2E31 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x2D1F JUMP JUMPDEST POP SWAP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xE80 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT SHL 0x24 0x4C LOG3 SAR DELEGATECALL PUSH14 0xF8D9E562F1EB76A5AC7D9E981BEA BLOCKHASH 0xAD 0x21 DELEGATECALL SWAP16 PUSH28 0x20C37D6164736F6C6343000801003300000000000000000000000000 ","sourceMap":"1017:2790:13:-:0;;;1404:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1443:3;1149:13:7;1443:3:13;1149:7:7;:13::i;:::-;-1:-1:-1;996:7:5;:15;;-1:-1:-1;;996:15:5;;;1458:44:13::1;1006:5:5::0;1489:12:13::1;:10;:12::i;:::-;1458:10;:44::i;:::-;1513:37;1166:24;1537:12;:10;:12::i;1513:37::-;1560;1234:24;1584:12;:10;:12::i;1560:37::-;1404:200:::0;1017:2790;;8149:86:7;8215:13;;;;:4;;:13;;;;;:::i;:::-;;8149:86;:::o;640:96:21:-;719:10;640:96;:::o;6937:110:0:-;7015:25;7026:4;7032:7;2065:31:1;2082:4;2088:7;2065:16;;;;;:31;;:::i;:::-;2106:18;;;;:12;:18;;;;;;;;:31;;2129:7;;2106:22;;;;;:31;;:::i;:::-;;1978:166;;:::o;7587:233:0:-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;7740:4;7708:36;;;7790:12;:10;:12::i;:::-;-1:-1:-1;;;;;7763:40:0;7781:7;-1:-1:-1;;;;;7763:40:0;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;8305:150:28:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:28;;8398:4;:50::i;:::-;8391:57;;8305:150;;;;;:::o;3021:145:0:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;;;;3021:145::o;2214:404:28:-;2277:4;2298:21;2308:3;2313:5;2298:9;:21::i;:::-;2293:319;;-1:-1:-1;2335:23:28;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:28;2589:12;;4255:127;4328:4;4351:19;;;:12;;;;;:19;;;;;;:24;;;4255:127::o;1017:2790:13:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1017:2790:13;;;-1:-1:-1;1017:2790:13;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1137:30;;125:2;168;156:9;147:7;143:23;139:32;136:2;;;189:6;181;174:22;136:2;221:16;;-1:-1:-1;;;;;286:14:30;;;283:2;;;318:6;310;303:22;283:2;361:6;350:9;346:22;336:32;;406:7;399:4;395:2;391:13;387:27;377:2;;433:6;425;418:22;377:2;467;461:9;489:2;485;482:10;479:2;;;495:18;;:::i;:::-;570:2;564:9;538:2;624:13;;-1:-1:-1;;620:22:30;;;644:2;616:31;612:40;600:53;;;668:18;;;688:22;;;665:46;662:2;;;714:18;;:::i;:::-;754:10;750:2;743:22;789:2;781:6;774:18;829:7;824:2;819;815;811:11;807:20;804:33;801:2;;;855:6;847;840:22;801:2;882:6;873:15;;897:129;911:2;908:1;905:9;897:129;;;999:10;;;995:19;;989:26;968:14;;;964:23;;957:59;922:10;;;;897:129;;;1044:2;1041:1;1038:9;1035:2;;;1103:6;1098:2;1093;1085:6;1081:15;1077:24;1070:40;1035:2;1139:6;105:1046;-1:-1:-1;;;;;;;;105:1046:30:o;1156:380::-;1241:1;1231:12;;1288:1;1278:12;;;1299:2;;1353:4;1345:6;1341:17;1331:27;;1299:2;1406;1398:6;1395:14;1375:18;1372:38;1369:2;;;1452:10;1447:3;1443:20;1440:1;1433:31;1487:4;1484:1;1477:15;1515:4;1512:1;1505:15;1369:2;;1211:325;;;:::o;1541:127::-;1602:10;1597:3;1593:20;1590:1;1583:31;1633:4;1630:1;1623:15;1657:4;1654:1;1647:15;1573:95;1017:2790:13;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:25786:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"65:147:30","statements":[{"nodeType":"YulAssignment","src":"75:29:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"84:12:30"},"nodeType":"YulFunctionCall","src":"84:20:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:30"}]},{"body":{"nodeType":"YulBlock","src":"190:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"199:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"202:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"192:6:30"},"nodeType":"YulFunctionCall","src":"192:12:30"},"nodeType":"YulExpressionStatement","src":"192:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"126:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"137:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"144:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"133:3:30"},"nodeType":"YulFunctionCall","src":"133:54:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"123:2:30"},"nodeType":"YulFunctionCall","src":"123:65:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"116:6:30"},"nodeType":"YulFunctionCall","src":"116:73:30"},"nodeType":"YulIf","src":"113:2:30"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55:5:30","type":""}],"src":"14:198:30"},{"body":{"nodeType":"YulBlock","src":"287:698:30","statements":[{"body":{"nodeType":"YulBlock","src":"336:24:30","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"345:5:30"},{"name":"array","nodeType":"YulIdentifier","src":"352:5:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"338:6:30"},"nodeType":"YulFunctionCall","src":"338:20:30"},"nodeType":"YulExpressionStatement","src":"338:20:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"315:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"323:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"311:3:30"},"nodeType":"YulFunctionCall","src":"311:17:30"},{"name":"end","nodeType":"YulIdentifier","src":"330:3:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"307:3:30"},"nodeType":"YulFunctionCall","src":"307:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"300:6:30"},"nodeType":"YulFunctionCall","src":"300:35:30"},"nodeType":"YulIf","src":"297:2:30"},{"nodeType":"YulVariableDeclaration","src":"369:30:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"392:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"379:12:30"},"nodeType":"YulFunctionCall","src":"379:20:30"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"373:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"408:14:30","value":{"kind":"number","nodeType":"YulLiteral","src":"418:4:30","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"412:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"431:59:30","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"487:2:30"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn","nodeType":"YulIdentifier","src":"441:45:30"},"nodeType":"YulFunctionCall","src":"441:49:30"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"435:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"499:23:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"519:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"513:5:30"},"nodeType":"YulFunctionCall","src":"513:9:30"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"503:6:30","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"551:6:30"},{"name":"_3","nodeType":"YulIdentifier","src":"559:2:30"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"531:19:30"},"nodeType":"YulFunctionCall","src":"531:31:30"},"nodeType":"YulExpressionStatement","src":"531:31:30"},{"nodeType":"YulVariableDeclaration","src":"571:17:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"582:6:30"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"575:3:30","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"604:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"612:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:30"},"nodeType":"YulFunctionCall","src":"597:18:30"},"nodeType":"YulExpressionStatement","src":"597:18:30"},{"nodeType":"YulAssignment","src":"624:22:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"635:6:30"},{"name":"_2","nodeType":"YulIdentifier","src":"643:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"631:3:30"},"nodeType":"YulFunctionCall","src":"631:15:30"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"624:3:30"}]},{"nodeType":"YulVariableDeclaration","src":"655:26:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"670:6:30"},{"name":"_2","nodeType":"YulIdentifier","src":"678:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"666:3:30"},"nodeType":"YulFunctionCall","src":"666:15:30"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"659:3:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"736:24:30","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"745:5:30"},{"name":"array","nodeType":"YulIdentifier","src":"752:5:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"738:6:30"},"nodeType":"YulFunctionCall","src":"738:20:30"},"nodeType":"YulExpressionStatement","src":"738:20:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"704:6:30"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"716:2:30"},{"name":"_2","nodeType":"YulIdentifier","src":"720:2:30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"712:3:30"},"nodeType":"YulFunctionCall","src":"712:11:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"700:3:30"},"nodeType":"YulFunctionCall","src":"700:24:30"},{"name":"_2","nodeType":"YulIdentifier","src":"726:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"696:3:30"},"nodeType":"YulFunctionCall","src":"696:33:30"},{"name":"end","nodeType":"YulIdentifier","src":"731:3:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"693:2:30"},"nodeType":"YulFunctionCall","src":"693:42:30"},"nodeType":"YulIf","src":"690:2:30"},{"nodeType":"YulVariableDeclaration","src":"769:14:30","value":{"name":"array","nodeType":"YulIdentifier","src":"778:5:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"773:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"837:118:30","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"858:3:30"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"876:3:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"863:12:30"},"nodeType":"YulFunctionCall","src":"863:17:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"851:6:30"},"nodeType":"YulFunctionCall","src":"851:30:30"},"nodeType":"YulExpressionStatement","src":"851:30:30"},{"nodeType":"YulAssignment","src":"894:19:30","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"905:3:30"},{"name":"_2","nodeType":"YulIdentifier","src":"910:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"901:3:30"},"nodeType":"YulFunctionCall","src":"901:12:30"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"894:3:30"}]},{"nodeType":"YulAssignment","src":"926:19:30","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"937:3:30"},{"name":"_2","nodeType":"YulIdentifier","src":"942:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:30"},"nodeType":"YulFunctionCall","src":"933:12:30"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"926:3:30"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"803:1:30"},{"name":"_1","nodeType":"YulIdentifier","src":"806:2:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"800:2:30"},"nodeType":"YulFunctionCall","src":"800:9:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"810:18:30","statements":[{"nodeType":"YulAssignment","src":"812:14:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"821:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"824:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"817:3:30"},"nodeType":"YulFunctionCall","src":"817:9:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"812:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"796:3:30","statements":[]},"src":"792:163:30"},{"nodeType":"YulAssignment","src":"964:15:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"973:6:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"964:5:30"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"261:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"269:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"277:5:30","type":""}],"src":"217:768:30"},{"body":{"nodeType":"YulBlock","src":"1044:523:30","statements":[{"body":{"nodeType":"YulBlock","src":"1093:24:30","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1102:5:30"},{"name":"array","nodeType":"YulIdentifier","src":"1109:5:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1095:6:30"},"nodeType":"YulFunctionCall","src":"1095:20:30"},"nodeType":"YulExpressionStatement","src":"1095:20:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1072:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"1080:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1068:3:30"},"nodeType":"YulFunctionCall","src":"1068:17:30"},{"name":"end","nodeType":"YulIdentifier","src":"1087:3:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1064:3:30"},"nodeType":"YulFunctionCall","src":"1064:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1057:6:30"},"nodeType":"YulFunctionCall","src":"1057:35:30"},"nodeType":"YulIf","src":"1054:2:30"},{"nodeType":"YulVariableDeclaration","src":"1126:30:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1149:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1136:12:30"},"nodeType":"YulFunctionCall","src":"1136:20:30"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1130:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1195:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1197:16:30"},"nodeType":"YulFunctionCall","src":"1197:18:30"},"nodeType":"YulExpressionStatement","src":"1197:18:30"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1171:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"1175:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1168:2:30"},"nodeType":"YulFunctionCall","src":"1168:26:30"},"nodeType":"YulIf","src":"1165:2:30"},{"nodeType":"YulVariableDeclaration","src":"1226:23:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1246:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1240:5:30"},"nodeType":"YulFunctionCall","src":"1240:9:30"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1230:6:30","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1278:6:30"},{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1298:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"1302:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1294:3:30"},"nodeType":"YulFunctionCall","src":"1294:13:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1313:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1309:3:30"},"nodeType":"YulFunctionCall","src":"1309:7:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1290:3:30"},"nodeType":"YulFunctionCall","src":"1290:27:30"},{"kind":"number","nodeType":"YulLiteral","src":"1319:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:30"},"nodeType":"YulFunctionCall","src":"1286:38:30"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1258:19:30"},"nodeType":"YulFunctionCall","src":"1258:67:30"},"nodeType":"YulExpressionStatement","src":"1258:67:30"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1341:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1349:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:30"},"nodeType":"YulFunctionCall","src":"1334:18:30"},"nodeType":"YulExpressionStatement","src":"1334:18:30"},{"body":{"nodeType":"YulBlock","src":"1400:24:30","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1409:5:30"},{"name":"array","nodeType":"YulIdentifier","src":"1416:5:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1402:6:30"},"nodeType":"YulFunctionCall","src":"1402:20:30"},"nodeType":"YulExpressionStatement","src":"1402:20:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1375:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1383:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1371:3:30"},"nodeType":"YulFunctionCall","src":"1371:15:30"},{"kind":"number","nodeType":"YulLiteral","src":"1388:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1367:3:30"},"nodeType":"YulFunctionCall","src":"1367:26:30"},{"name":"end","nodeType":"YulIdentifier","src":"1395:3:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1364:2:30"},"nodeType":"YulFunctionCall","src":"1364:35:30"},"nodeType":"YulIf","src":"1361:2:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1450:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"1458:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1446:3:30"},"nodeType":"YulFunctionCall","src":"1446:17:30"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1469:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"1477:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1465:3:30"},"nodeType":"YulFunctionCall","src":"1465:17:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1484:2:30"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1433:12:30"},"nodeType":"YulFunctionCall","src":"1433:54:30"},"nodeType":"YulExpressionStatement","src":"1433:54:30"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1511:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1519:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1507:3:30"},"nodeType":"YulFunctionCall","src":"1507:15:30"},{"kind":"number","nodeType":"YulLiteral","src":"1524:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1503:3:30"},"nodeType":"YulFunctionCall","src":"1503:26:30"},{"name":"array","nodeType":"YulIdentifier","src":"1531:5:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1496:6:30"},"nodeType":"YulFunctionCall","src":"1496:41:30"},"nodeType":"YulExpressionStatement","src":"1496:41:30"},{"nodeType":"YulAssignment","src":"1546:15:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1555:6:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1546:5:30"}]}]},"name":"abi_decode_t_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1018:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"1026:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1034:5:30","type":""}],"src":"990:577:30"},{"body":{"nodeType":"YulBlock","src":"1659:187:30","statements":[{"body":{"nodeType":"YulBlock","src":"1705:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1714:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1722:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1707:6:30"},"nodeType":"YulFunctionCall","src":"1707:22:30"},"nodeType":"YulExpressionStatement","src":"1707:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1680:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1689:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1676:3:30"},"nodeType":"YulFunctionCall","src":"1676:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1701:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1672:3:30"},"nodeType":"YulFunctionCall","src":"1672:32:30"},"nodeType":"YulIf","src":"1669:2:30"},{"nodeType":"YulAssignment","src":"1740:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1771:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1750:20:30"},"nodeType":"YulFunctionCall","src":"1750:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1740:6:30"}]},{"nodeType":"YulAssignment","src":"1790:50:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1825:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1836:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1821:3:30"},"nodeType":"YulFunctionCall","src":"1821:18:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1800:20:30"},"nodeType":"YulFunctionCall","src":"1800:40:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1790:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1617:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1628:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1640:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1648:6:30","type":""}],"src":"1572:274:30"},{"body":{"nodeType":"YulBlock","src":"2048:804:30","statements":[{"body":{"nodeType":"YulBlock","src":"2095:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2104:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"2112:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2097:6:30"},"nodeType":"YulFunctionCall","src":"2097:22:30"},"nodeType":"YulExpressionStatement","src":"2097:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2069:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"2078:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2065:3:30"},"nodeType":"YulFunctionCall","src":"2065:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"2090:3:30","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2061:3:30"},"nodeType":"YulFunctionCall","src":"2061:33:30"},"nodeType":"YulIf","src":"2058:2:30"},{"nodeType":"YulAssignment","src":"2130:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2161:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2140:20:30"},"nodeType":"YulFunctionCall","src":"2140:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2130:6:30"}]},{"nodeType":"YulAssignment","src":"2180:50:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2215:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2226:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2211:3:30"},"nodeType":"YulFunctionCall","src":"2211:18:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2190:20:30"},"nodeType":"YulFunctionCall","src":"2190:40:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2180:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"2239:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2270:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2281:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2266:3:30"},"nodeType":"YulFunctionCall","src":"2266:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2253:12:30"},"nodeType":"YulFunctionCall","src":"2253:32:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2243:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2294:28:30","value":{"kind":"number","nodeType":"YulLiteral","src":"2304:18:30","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2298:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"2349:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2358:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"2366:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2351:6:30"},"nodeType":"YulFunctionCall","src":"2351:22:30"},"nodeType":"YulExpressionStatement","src":"2351:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2337:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"2345:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2334:2:30"},"nodeType":"YulFunctionCall","src":"2334:14:30"},"nodeType":"YulIf","src":"2331:2:30"},{"nodeType":"YulAssignment","src":"2384:77:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2433:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"2444:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2429:3:30"},"nodeType":"YulFunctionCall","src":"2429:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2453:7:30"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"2394:34:30"},"nodeType":"YulFunctionCall","src":"2394:67:30"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2384:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"2470:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2503:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2514:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2499:3:30"},"nodeType":"YulFunctionCall","src":"2499:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2486:12:30"},"nodeType":"YulFunctionCall","src":"2486:32:30"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"2474:8:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"2547:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2556:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"2564:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2549:6:30"},"nodeType":"YulFunctionCall","src":"2549:22:30"},"nodeType":"YulExpressionStatement","src":"2549:22:30"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"2533:8:30"},{"name":"_1","nodeType":"YulIdentifier","src":"2543:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2530:2:30"},"nodeType":"YulFunctionCall","src":"2530:16:30"},"nodeType":"YulIf","src":"2527:2:30"},{"nodeType":"YulAssignment","src":"2582:79:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2631:9:30"},{"name":"offset_1","nodeType":"YulIdentifier","src":"2642:8:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2627:3:30"},"nodeType":"YulFunctionCall","src":"2627:24:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2653:7:30"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"2592:34:30"},"nodeType":"YulFunctionCall","src":"2592:69:30"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2582:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"2670:49:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2703:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2714:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2699:3:30"},"nodeType":"YulFunctionCall","src":"2699:19:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2686:12:30"},"nodeType":"YulFunctionCall","src":"2686:33:30"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"2674:8:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"2748:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2757:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"2765:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2750:6:30"},"nodeType":"YulFunctionCall","src":"2750:22:30"},"nodeType":"YulExpressionStatement","src":"2750:22:30"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"2734:8:30"},{"name":"_1","nodeType":"YulIdentifier","src":"2744:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2731:2:30"},"nodeType":"YulFunctionCall","src":"2731:16:30"},"nodeType":"YulIf","src":"2728:2:30"},{"nodeType":"YulAssignment","src":"2783:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2816:9:30"},{"name":"offset_2","nodeType":"YulIdentifier","src":"2827:8:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2812:3:30"},"nodeType":"YulFunctionCall","src":"2812:24:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2838:7:30"}],"functionName":{"name":"abi_decode_t_bytes","nodeType":"YulIdentifier","src":"2793:18:30"},"nodeType":"YulFunctionCall","src":"2793:53:30"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2783:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1982:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1993:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2005:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2013:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2021:6:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2029:6:30","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2037:6:30","type":""}],"src":"1851:1001:30"},{"body":{"nodeType":"YulBlock","src":"3004:485:30","statements":[{"body":{"nodeType":"YulBlock","src":"3051:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3060:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"3068:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3053:6:30"},"nodeType":"YulFunctionCall","src":"3053:22:30"},"nodeType":"YulExpressionStatement","src":"3053:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3025:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"3034:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3021:3:30"},"nodeType":"YulFunctionCall","src":"3021:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"3046:3:30","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3017:3:30"},"nodeType":"YulFunctionCall","src":"3017:33:30"},"nodeType":"YulIf","src":"3014:2:30"},{"nodeType":"YulAssignment","src":"3086:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3117:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3096:20:30"},"nodeType":"YulFunctionCall","src":"3096:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3086:6:30"}]},{"nodeType":"YulAssignment","src":"3136:50:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3171:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3182:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3167:3:30"},"nodeType":"YulFunctionCall","src":"3167:18:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3146:20:30"},"nodeType":"YulFunctionCall","src":"3146:40:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3136:6:30"}]},{"nodeType":"YulAssignment","src":"3195:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3222:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3233:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3218:3:30"},"nodeType":"YulFunctionCall","src":"3218:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3205:12:30"},"nodeType":"YulFunctionCall","src":"3205:32:30"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3195:6:30"}]},{"nodeType":"YulAssignment","src":"3246:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3273:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3284:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3269:3:30"},"nodeType":"YulFunctionCall","src":"3269:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3256:12:30"},"nodeType":"YulFunctionCall","src":"3256:32:30"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3246:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"3297:47:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3328:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3339:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3324:3:30"},"nodeType":"YulFunctionCall","src":"3324:19:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3311:12:30"},"nodeType":"YulFunctionCall","src":"3311:33:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3301:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"3387:26:30","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3396:6:30"},{"name":"value4","nodeType":"YulIdentifier","src":"3404:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3389:6:30"},"nodeType":"YulFunctionCall","src":"3389:22:30"},"nodeType":"YulExpressionStatement","src":"3389:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3359:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"3367:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3356:2:30"},"nodeType":"YulFunctionCall","src":"3356:30:30"},"nodeType":"YulIf","src":"3353:2:30"},{"nodeType":"YulAssignment","src":"3422:61:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3455:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"3466:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3451:3:30"},"nodeType":"YulFunctionCall","src":"3451:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3475:7:30"}],"functionName":{"name":"abi_decode_t_bytes","nodeType":"YulIdentifier","src":"3432:18:30"},"nodeType":"YulFunctionCall","src":"3432:51:30"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3422:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2938:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2949:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2961:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2969:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2977:6:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2985:6:30","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2993:6:30","type":""}],"src":"2857:632:30"},{"body":{"nodeType":"YulBlock","src":"3648:559:30","statements":[{"body":{"nodeType":"YulBlock","src":"3694:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3703:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"3711:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3696:6:30"},"nodeType":"YulFunctionCall","src":"3696:22:30"},"nodeType":"YulExpressionStatement","src":"3696:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3669:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"3678:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3665:3:30"},"nodeType":"YulFunctionCall","src":"3665:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"3690:2:30","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3661:3:30"},"nodeType":"YulFunctionCall","src":"3661:32:30"},"nodeType":"YulIf","src":"3658:2:30"},{"nodeType":"YulAssignment","src":"3729:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3760:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3739:20:30"},"nodeType":"YulFunctionCall","src":"3739:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3729:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"3779:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3810:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3821:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3806:3:30"},"nodeType":"YulFunctionCall","src":"3806:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3793:12:30"},"nodeType":"YulFunctionCall","src":"3793:32:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3783:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3834:28:30","value":{"kind":"number","nodeType":"YulLiteral","src":"3844:18:30","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3838:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"3889:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3898:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"3906:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3891:6:30"},"nodeType":"YulFunctionCall","src":"3891:22:30"},"nodeType":"YulExpressionStatement","src":"3891:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3877:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"3885:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3874:2:30"},"nodeType":"YulFunctionCall","src":"3874:14:30"},"nodeType":"YulIf","src":"3871:2:30"},{"nodeType":"YulAssignment","src":"3924:77:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3973:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"3984:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3969:3:30"},"nodeType":"YulFunctionCall","src":"3969:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3993:7:30"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"3934:34:30"},"nodeType":"YulFunctionCall","src":"3934:67:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3924:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"4010:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4054:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:30"},"nodeType":"YulFunctionCall","src":"4039:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4026:12:30"},"nodeType":"YulFunctionCall","src":"4026:32:30"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4014:8:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"4087:26:30","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4096:6:30"},{"name":"value2","nodeType":"YulIdentifier","src":"4104:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4089:6:30"},"nodeType":"YulFunctionCall","src":"4089:22:30"},"nodeType":"YulExpressionStatement","src":"4089:22:30"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4073:8:30"},{"name":"_1","nodeType":"YulIdentifier","src":"4083:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4070:2:30"},"nodeType":"YulFunctionCall","src":"4070:16:30"},"nodeType":"YulIf","src":"4067:2:30"},{"nodeType":"YulAssignment","src":"4122:79:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4171:9:30"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4182:8:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4167:3:30"},"nodeType":"YulFunctionCall","src":"4167:24:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4193:7:30"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"4132:34:30"},"nodeType":"YulFunctionCall","src":"4132:69:30"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4122:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3598:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3609:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3621:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3629:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3637:6:30","type":""}],"src":"3494:713:30"},{"body":{"nodeType":"YulBlock","src":"4392:744:30","statements":[{"body":{"nodeType":"YulBlock","src":"4439:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4448:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"4456:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4441:6:30"},"nodeType":"YulFunctionCall","src":"4441:22:30"},"nodeType":"YulExpressionStatement","src":"4441:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4413:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"4422:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4409:3:30"},"nodeType":"YulFunctionCall","src":"4409:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"4434:3:30","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4405:3:30"},"nodeType":"YulFunctionCall","src":"4405:33:30"},"nodeType":"YulIf","src":"4402:2:30"},{"nodeType":"YulAssignment","src":"4474:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4505:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4484:20:30"},"nodeType":"YulFunctionCall","src":"4484:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4474:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"4524:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4555:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4566:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4551:3:30"},"nodeType":"YulFunctionCall","src":"4551:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4538:12:30"},"nodeType":"YulFunctionCall","src":"4538:32:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4528:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4579:28:30","value":{"kind":"number","nodeType":"YulLiteral","src":"4589:18:30","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4583:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"4634:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4643:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"4651:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4636:6:30"},"nodeType":"YulFunctionCall","src":"4636:22:30"},"nodeType":"YulExpressionStatement","src":"4636:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4622:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"4630:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4619:2:30"},"nodeType":"YulFunctionCall","src":"4619:14:30"},"nodeType":"YulIf","src":"4616:2:30"},{"nodeType":"YulAssignment","src":"4669:77:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4718:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"4729:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4714:3:30"},"nodeType":"YulFunctionCall","src":"4714:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4738:7:30"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"4679:34:30"},"nodeType":"YulFunctionCall","src":"4679:67:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4669:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"4755:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4788:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4799:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4784:3:30"},"nodeType":"YulFunctionCall","src":"4784:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4771:12:30"},"nodeType":"YulFunctionCall","src":"4771:32:30"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4759:8:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"4832:26:30","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4841:6:30"},{"name":"value2","nodeType":"YulIdentifier","src":"4849:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4834:6:30"},"nodeType":"YulFunctionCall","src":"4834:22:30"},"nodeType":"YulExpressionStatement","src":"4834:22:30"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4818:8:30"},{"name":"_1","nodeType":"YulIdentifier","src":"4828:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4815:2:30"},"nodeType":"YulFunctionCall","src":"4815:16:30"},"nodeType":"YulIf","src":"4812:2:30"},{"nodeType":"YulAssignment","src":"4867:79:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4916:9:30"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4927:8:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4912:3:30"},"nodeType":"YulFunctionCall","src":"4912:24:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4938:7:30"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"4877:34:30"},"nodeType":"YulFunctionCall","src":"4877:69:30"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4867:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"4955:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4988:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4999:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4984:3:30"},"nodeType":"YulFunctionCall","src":"4984:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4971:12:30"},"nodeType":"YulFunctionCall","src":"4971:32:30"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"4959:8:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"5032:26:30","statements":[{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"5041:6:30"},{"name":"value3","nodeType":"YulIdentifier","src":"5049:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5034:6:30"},"nodeType":"YulFunctionCall","src":"5034:22:30"},"nodeType":"YulExpressionStatement","src":"5034:22:30"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"5018:8:30"},{"name":"_1","nodeType":"YulIdentifier","src":"5028:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5015:2:30"},"nodeType":"YulFunctionCall","src":"5015:16:30"},"nodeType":"YulIf","src":"5012:2:30"},{"nodeType":"YulAssignment","src":"5067:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5100:9:30"},{"name":"offset_2","nodeType":"YulIdentifier","src":"5111:8:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5096:3:30"},"nodeType":"YulFunctionCall","src":"5096:24:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5122:7:30"}],"functionName":{"name":"abi_decode_t_bytes","nodeType":"YulIdentifier","src":"5077:18:30"},"nodeType":"YulFunctionCall","src":"5077:53:30"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5067:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4334:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4345:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4357:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4365:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4373:6:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4381:6:30","type":""}],"src":"4212:924:30"},{"body":{"nodeType":"YulBlock","src":"5225:285:30","statements":[{"body":{"nodeType":"YulBlock","src":"5271:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5280:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"5288:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5273:6:30"},"nodeType":"YulFunctionCall","src":"5273:22:30"},"nodeType":"YulExpressionStatement","src":"5273:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5246:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"5255:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5242:3:30"},"nodeType":"YulFunctionCall","src":"5242:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"5267:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5238:3:30"},"nodeType":"YulFunctionCall","src":"5238:32:30"},"nodeType":"YulIf","src":"5235:2:30"},{"nodeType":"YulAssignment","src":"5306:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5337:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5316:20:30"},"nodeType":"YulFunctionCall","src":"5316:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5306:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"5356:45:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5386:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5397:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5382:3:30"},"nodeType":"YulFunctionCall","src":"5382:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5369:12:30"},"nodeType":"YulFunctionCall","src":"5369:32:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5360:5:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"5454:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5463:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"5471:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5456:6:30"},"nodeType":"YulFunctionCall","src":"5456:22:30"},"nodeType":"YulExpressionStatement","src":"5456:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5423:5:30"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5444:5:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5437:6:30"},"nodeType":"YulFunctionCall","src":"5437:13:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5430:6:30"},"nodeType":"YulFunctionCall","src":"5430:21:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5420:2:30"},"nodeType":"YulFunctionCall","src":"5420:32:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5413:6:30"},"nodeType":"YulFunctionCall","src":"5413:40:30"},"nodeType":"YulIf","src":"5410:2:30"},{"nodeType":"YulAssignment","src":"5489:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"5499:5:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5489:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5183:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5194:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5206:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5214:6:30","type":""}],"src":"5141:369:30"},{"body":{"nodeType":"YulBlock","src":"5602:179:30","statements":[{"body":{"nodeType":"YulBlock","src":"5648:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5657:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"5665:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5650:6:30"},"nodeType":"YulFunctionCall","src":"5650:22:30"},"nodeType":"YulExpressionStatement","src":"5650:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5623:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"5632:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5619:3:30"},"nodeType":"YulFunctionCall","src":"5619:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"5644:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5615:3:30"},"nodeType":"YulFunctionCall","src":"5615:32:30"},"nodeType":"YulIf","src":"5612:2:30"},{"nodeType":"YulAssignment","src":"5683:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5714:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5693:20:30"},"nodeType":"YulFunctionCall","src":"5693:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5683:6:30"}]},{"nodeType":"YulAssignment","src":"5733:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5760:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5771:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5756:3:30"},"nodeType":"YulFunctionCall","src":"5756:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5743:12:30"},"nodeType":"YulFunctionCall","src":"5743:32:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5733:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5560:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5571:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5583:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5591:6:30","type":""}],"src":"5515:266:30"},{"body":{"nodeType":"YulBlock","src":"5890:230:30","statements":[{"body":{"nodeType":"YulBlock","src":"5936:26:30","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5945:6:30"},{"name":"value2","nodeType":"YulIdentifier","src":"5953:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5938:6:30"},"nodeType":"YulFunctionCall","src":"5938:22:30"},"nodeType":"YulExpressionStatement","src":"5938:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5911:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"5920:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5907:3:30"},"nodeType":"YulFunctionCall","src":"5907:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"5932:2:30","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5903:3:30"},"nodeType":"YulFunctionCall","src":"5903:32:30"},"nodeType":"YulIf","src":"5900:2:30"},{"nodeType":"YulAssignment","src":"5971:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6002:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5981:20:30"},"nodeType":"YulFunctionCall","src":"5981:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5971:6:30"}]},{"nodeType":"YulAssignment","src":"6021:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6048:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6059:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6044:3:30"},"nodeType":"YulFunctionCall","src":"6044:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6031:12:30"},"nodeType":"YulFunctionCall","src":"6031:32:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6021:6:30"}]},{"nodeType":"YulAssignment","src":"6072:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6099:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6110:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6095:3:30"},"nodeType":"YulFunctionCall","src":"6095:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6082:12:30"},"nodeType":"YulFunctionCall","src":"6082:32:30"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6072:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5840:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5851:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5863:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5871:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5879:6:30","type":""}],"src":"5786:334:30"},{"body":{"nodeType":"YulBlock","src":"6255:425:30","statements":[{"body":{"nodeType":"YulBlock","src":"6302:26:30","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6311:6:30"},{"name":"value2","nodeType":"YulIdentifier","src":"6319:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6304:6:30"},"nodeType":"YulFunctionCall","src":"6304:22:30"},"nodeType":"YulExpressionStatement","src":"6304:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6276:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"6285:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6272:3:30"},"nodeType":"YulFunctionCall","src":"6272:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"6297:3:30","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6268:3:30"},"nodeType":"YulFunctionCall","src":"6268:33:30"},"nodeType":"YulIf","src":"6265:2:30"},{"nodeType":"YulAssignment","src":"6337:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6368:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6347:20:30"},"nodeType":"YulFunctionCall","src":"6347:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6337:6:30"}]},{"nodeType":"YulAssignment","src":"6387:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6414:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6425:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6410:3:30"},"nodeType":"YulFunctionCall","src":"6410:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6397:12:30"},"nodeType":"YulFunctionCall","src":"6397:32:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6387:6:30"}]},{"nodeType":"YulAssignment","src":"6438:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6465:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6476:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6461:3:30"},"nodeType":"YulFunctionCall","src":"6461:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6448:12:30"},"nodeType":"YulFunctionCall","src":"6448:32:30"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6438:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"6489:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6520:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6531:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6516:3:30"},"nodeType":"YulFunctionCall","src":"6516:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6503:12:30"},"nodeType":"YulFunctionCall","src":"6503:32:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6493:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"6578:26:30","statements":[{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6587:6:30"},{"name":"value3","nodeType":"YulIdentifier","src":"6595:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6580:6:30"},"nodeType":"YulFunctionCall","src":"6580:22:30"},"nodeType":"YulExpressionStatement","src":"6580:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6550:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"6558:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6547:2:30"},"nodeType":"YulFunctionCall","src":"6547:30:30"},"nodeType":"YulIf","src":"6544:2:30"},{"nodeType":"YulAssignment","src":"6613:61:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6646:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"6657:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6642:3:30"},"nodeType":"YulFunctionCall","src":"6642:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6666:7:30"}],"functionName":{"name":"abi_decode_t_bytes","nodeType":"YulIdentifier","src":"6623:18:30"},"nodeType":"YulFunctionCall","src":"6623:51:30"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6613:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6197:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6208:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6220:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6228:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6236:6:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6244:6:30","type":""}],"src":"6125:555:30"},{"body":{"nodeType":"YulBlock","src":"6822:1152:30","statements":[{"body":{"nodeType":"YulBlock","src":"6868:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6877:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"6885:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6870:6:30"},"nodeType":"YulFunctionCall","src":"6870:22:30"},"nodeType":"YulExpressionStatement","src":"6870:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6843:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"6852:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6839:3:30"},"nodeType":"YulFunctionCall","src":"6839:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"6864:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6835:3:30"},"nodeType":"YulFunctionCall","src":"6835:32:30"},"nodeType":"YulIf","src":"6832:2:30"},{"nodeType":"YulVariableDeclaration","src":"6903:37:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6930:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6917:12:30"},"nodeType":"YulFunctionCall","src":"6917:23:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6907:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6949:28:30","value":{"kind":"number","nodeType":"YulLiteral","src":"6959:18:30","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6953:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"7004:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7013:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"7021:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7006:6:30"},"nodeType":"YulFunctionCall","src":"7006:22:30"},"nodeType":"YulExpressionStatement","src":"7006:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6992:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"7000:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6989:2:30"},"nodeType":"YulFunctionCall","src":"6989:14:30"},"nodeType":"YulIf","src":"6986:2:30"},{"nodeType":"YulVariableDeclaration","src":"7039:32:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7053:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"7064:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7049:3:30"},"nodeType":"YulFunctionCall","src":"7049:22:30"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"7043:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"7119:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7128:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"7136:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7121:6:30"},"nodeType":"YulFunctionCall","src":"7121:22:30"},"nodeType":"YulExpressionStatement","src":"7121:22:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7098:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"7102:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7094:3:30"},"nodeType":"YulFunctionCall","src":"7094:13:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7109:7:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7090:3:30"},"nodeType":"YulFunctionCall","src":"7090:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7083:6:30"},"nodeType":"YulFunctionCall","src":"7083:35:30"},"nodeType":"YulIf","src":"7080:2:30"},{"nodeType":"YulVariableDeclaration","src":"7154:26:30","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7177:2:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7164:12:30"},"nodeType":"YulFunctionCall","src":"7164:16:30"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"7158:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7189:14:30","value":{"kind":"number","nodeType":"YulLiteral","src":"7199:4:30","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"7193:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7212:59:30","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7268:2:30"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn","nodeType":"YulIdentifier","src":"7222:45:30"},"nodeType":"YulFunctionCall","src":"7222:49:30"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"7216:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7280:23:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7300:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7294:5:30"},"nodeType":"YulFunctionCall","src":"7294:9:30"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7284:6:30","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7332:6:30"},{"name":"_5","nodeType":"YulIdentifier","src":"7340:2:30"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7312:19:30"},"nodeType":"YulFunctionCall","src":"7312:31:30"},"nodeType":"YulExpressionStatement","src":"7312:31:30"},{"nodeType":"YulVariableDeclaration","src":"7352:17:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"7363:6:30"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7356:3:30","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7385:6:30"},{"name":"_3","nodeType":"YulIdentifier","src":"7393:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7378:6:30"},"nodeType":"YulFunctionCall","src":"7378:18:30"},"nodeType":"YulExpressionStatement","src":"7378:18:30"},{"nodeType":"YulAssignment","src":"7405:22:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7416:6:30"},{"name":"_4","nodeType":"YulIdentifier","src":"7424:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7412:3:30"},"nodeType":"YulFunctionCall","src":"7412:15:30"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7405:3:30"}]},{"nodeType":"YulVariableDeclaration","src":"7436:22:30","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7451:2:30"},{"name":"_4","nodeType":"YulIdentifier","src":"7455:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7447:3:30"},"nodeType":"YulFunctionCall","src":"7447:11:30"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7440:3:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"7513:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7522:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"7530:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7515:6:30"},"nodeType":"YulFunctionCall","src":"7515:22:30"},"nodeType":"YulExpressionStatement","src":"7515:22:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7481:2:30"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7489:2:30"},{"name":"_4","nodeType":"YulIdentifier","src":"7493:2:30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7485:3:30"},"nodeType":"YulFunctionCall","src":"7485:11:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7477:3:30"},"nodeType":"YulFunctionCall","src":"7477:20:30"},{"name":"_4","nodeType":"YulIdentifier","src":"7499:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7473:3:30"},"nodeType":"YulFunctionCall","src":"7473:29:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7504:7:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7470:2:30"},"nodeType":"YulFunctionCall","src":"7470:42:30"},"nodeType":"YulIf","src":"7467:2:30"},{"nodeType":"YulVariableDeclaration","src":"7548:15:30","value":{"name":"value0","nodeType":"YulIdentifier","src":"7557:6:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7552:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"7617:126:30","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7638:3:30"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7664:3:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7643:20:30"},"nodeType":"YulFunctionCall","src":"7643:25:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7631:6:30"},"nodeType":"YulFunctionCall","src":"7631:38:30"},"nodeType":"YulExpressionStatement","src":"7631:38:30"},{"nodeType":"YulAssignment","src":"7682:19:30","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7693:3:30"},{"name":"_4","nodeType":"YulIdentifier","src":"7698:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7689:3:30"},"nodeType":"YulFunctionCall","src":"7689:12:30"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7682:3:30"}]},{"nodeType":"YulAssignment","src":"7714:19:30","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7725:3:30"},{"name":"_4","nodeType":"YulIdentifier","src":"7730:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7721:3:30"},"nodeType":"YulFunctionCall","src":"7721:12:30"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7714:3:30"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7583:1:30"},{"name":"_3","nodeType":"YulIdentifier","src":"7586:2:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7580:2:30"},"nodeType":"YulFunctionCall","src":"7580:9:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7590:18:30","statements":[{"nodeType":"YulAssignment","src":"7592:14:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7601:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"7604:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7597:3:30"},"nodeType":"YulFunctionCall","src":"7597:9:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7592:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"7576:3:30","statements":[]},"src":"7572:171:30"},{"nodeType":"YulAssignment","src":"7752:16:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"7762:6:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7752:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"7777:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7810:9:30"},{"name":"_4","nodeType":"YulIdentifier","src":"7821:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7806:3:30"},"nodeType":"YulFunctionCall","src":"7806:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7793:12:30"},"nodeType":"YulFunctionCall","src":"7793:32:30"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"7781:8:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"7854:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7863:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"7871:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7856:6:30"},"nodeType":"YulFunctionCall","src":"7856:22:30"},"nodeType":"YulExpressionStatement","src":"7856:22:30"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"7840:8:30"},{"name":"_1","nodeType":"YulIdentifier","src":"7850:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7837:2:30"},"nodeType":"YulFunctionCall","src":"7837:16:30"},"nodeType":"YulIf","src":"7834:2:30"},{"nodeType":"YulAssignment","src":"7889:79:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7938:9:30"},{"name":"offset_1","nodeType":"YulIdentifier","src":"7949:8:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7934:3:30"},"nodeType":"YulFunctionCall","src":"7934:24:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7960:7:30"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"7899:34:30"},"nodeType":"YulFunctionCall","src":"7899:69:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7889:6:30"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6780:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6791:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6803:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6811:6:30","type":""}],"src":"6685:1289:30"},{"body":{"nodeType":"YulBlock","src":"8049:120:30","statements":[{"body":{"nodeType":"YulBlock","src":"8095:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8104:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"8112:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8097:6:30"},"nodeType":"YulFunctionCall","src":"8097:22:30"},"nodeType":"YulExpressionStatement","src":"8097:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8070:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"8079:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8066:3:30"},"nodeType":"YulFunctionCall","src":"8066:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"8091:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8062:3:30"},"nodeType":"YulFunctionCall","src":"8062:32:30"},"nodeType":"YulIf","src":"8059:2:30"},{"nodeType":"YulAssignment","src":"8130:33:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8153:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8140:12:30"},"nodeType":"YulFunctionCall","src":"8140:23:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8130:6:30"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8015:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8026:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8038:6:30","type":""}],"src":"7979:190:30"},{"body":{"nodeType":"YulBlock","src":"8261:179:30","statements":[{"body":{"nodeType":"YulBlock","src":"8307:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8316:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"8324:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8309:6:30"},"nodeType":"YulFunctionCall","src":"8309:22:30"},"nodeType":"YulExpressionStatement","src":"8309:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8282:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"8291:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8278:3:30"},"nodeType":"YulFunctionCall","src":"8278:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"8303:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8274:3:30"},"nodeType":"YulFunctionCall","src":"8274:32:30"},"nodeType":"YulIf","src":"8271:2:30"},{"nodeType":"YulAssignment","src":"8342:33:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8365:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8352:12:30"},"nodeType":"YulFunctionCall","src":"8352:23:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8342:6:30"}]},{"nodeType":"YulAssignment","src":"8384:50:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8430:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:30"},"nodeType":"YulFunctionCall","src":"8415:18:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8394:20:30"},"nodeType":"YulFunctionCall","src":"8394:40:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8384:6:30"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8219:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8230:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8242:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8250:6:30","type":""}],"src":"8174:266:30"},{"body":{"nodeType":"YulBlock","src":"8532:171:30","statements":[{"body":{"nodeType":"YulBlock","src":"8578:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8587:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"8595:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8580:6:30"},"nodeType":"YulFunctionCall","src":"8580:22:30"},"nodeType":"YulExpressionStatement","src":"8580:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8553:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"8562:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8549:3:30"},"nodeType":"YulFunctionCall","src":"8549:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"8574:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8545:3:30"},"nodeType":"YulFunctionCall","src":"8545:32:30"},"nodeType":"YulIf","src":"8542:2:30"},{"nodeType":"YulAssignment","src":"8613:33:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8636:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8623:12:30"},"nodeType":"YulFunctionCall","src":"8623:23:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8613:6:30"}]},{"nodeType":"YulAssignment","src":"8655:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8682:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8693:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8678:3:30"},"nodeType":"YulFunctionCall","src":"8678:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8665:12:30"},"nodeType":"YulFunctionCall","src":"8665:32:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8655:6:30"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8490:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8501:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8513:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8521:6:30","type":""}],"src":"8445:258:30"},{"body":{"nodeType":"YulBlock","src":"8777:188:30","statements":[{"body":{"nodeType":"YulBlock","src":"8823:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8832:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"8840:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8825:6:30"},"nodeType":"YulFunctionCall","src":"8825:22:30"},"nodeType":"YulExpressionStatement","src":"8825:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8798:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"8807:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8794:3:30"},"nodeType":"YulFunctionCall","src":"8794:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"8819:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8790:3:30"},"nodeType":"YulFunctionCall","src":"8790:32:30"},"nodeType":"YulIf","src":"8787:2:30"},{"nodeType":"YulVariableDeclaration","src":"8858:36:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8884:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8871:12:30"},"nodeType":"YulFunctionCall","src":"8871:23:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8862:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8929:5:30"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"8903:25:30"},"nodeType":"YulFunctionCall","src":"8903:32:30"},"nodeType":"YulExpressionStatement","src":"8903:32:30"},{"nodeType":"YulAssignment","src":"8944:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"8954:5:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8944:6:30"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8743:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8754:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8766:6:30","type":""}],"src":"8708:257:30"},{"body":{"nodeType":"YulBlock","src":"9050:181:30","statements":[{"body":{"nodeType":"YulBlock","src":"9096:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9105:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"9113:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9098:6:30"},"nodeType":"YulFunctionCall","src":"9098:22:30"},"nodeType":"YulExpressionStatement","src":"9098:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9071:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"9080:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9067:3:30"},"nodeType":"YulFunctionCall","src":"9067:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"9092:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9063:3:30"},"nodeType":"YulFunctionCall","src":"9063:32:30"},"nodeType":"YulIf","src":"9060:2:30"},{"nodeType":"YulVariableDeclaration","src":"9131:29:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9150:9:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9144:5:30"},"nodeType":"YulFunctionCall","src":"9144:16:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9135:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9195:5:30"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"9169:25:30"},"nodeType":"YulFunctionCall","src":"9169:32:30"},"nodeType":"YulExpressionStatement","src":"9169:32:30"},{"nodeType":"YulAssignment","src":"9210:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"9220:5:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9210:6:30"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9016:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9027:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9039:6:30","type":""}],"src":"8970:261:30"},{"body":{"nodeType":"YulBlock","src":"9306:120:30","statements":[{"body":{"nodeType":"YulBlock","src":"9352:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9361:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"9369:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9354:6:30"},"nodeType":"YulFunctionCall","src":"9354:22:30"},"nodeType":"YulExpressionStatement","src":"9354:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9327:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"9336:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9323:3:30"},"nodeType":"YulFunctionCall","src":"9323:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"9348:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9319:3:30"},"nodeType":"YulFunctionCall","src":"9319:32:30"},"nodeType":"YulIf","src":"9316:2:30"},{"nodeType":"YulAssignment","src":"9387:33:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9410:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9397:12:30"},"nodeType":"YulFunctionCall","src":"9397:23:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9387:6:30"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9272:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9283:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9295:6:30","type":""}],"src":"9236:190:30"},{"body":{"nodeType":"YulBlock","src":"9498:376:30","statements":[{"nodeType":"YulVariableDeclaration","src":"9508:26:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9528:5:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9522:5:30"},"nodeType":"YulFunctionCall","src":"9522:12:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9512:6:30","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9550:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"9555:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9543:6:30"},"nodeType":"YulFunctionCall","src":"9543:19:30"},"nodeType":"YulExpressionStatement","src":"9543:19:30"},{"nodeType":"YulVariableDeclaration","src":"9571:14:30","value":{"kind":"number","nodeType":"YulLiteral","src":"9581:4:30","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9575:2:30","type":""}]},{"nodeType":"YulAssignment","src":"9594:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9605:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"9610:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9601:3:30"},"nodeType":"YulFunctionCall","src":"9601:12:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9594:3:30"}]},{"nodeType":"YulVariableDeclaration","src":"9622:28:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9640:5:30"},{"name":"_1","nodeType":"YulIdentifier","src":"9647:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9636:3:30"},"nodeType":"YulFunctionCall","src":"9636:14:30"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"9626:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9659:12:30","value":{"name":"end","nodeType":"YulIdentifier","src":"9668:3:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9663:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"9729:120:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9750:3:30"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9761:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9755:5:30"},"nodeType":"YulFunctionCall","src":"9755:13:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9743:6:30"},"nodeType":"YulFunctionCall","src":"9743:26:30"},"nodeType":"YulExpressionStatement","src":"9743:26:30"},{"nodeType":"YulAssignment","src":"9782:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9793:3:30"},{"name":"_1","nodeType":"YulIdentifier","src":"9798:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9789:3:30"},"nodeType":"YulFunctionCall","src":"9789:12:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9782:3:30"}]},{"nodeType":"YulAssignment","src":"9814:25:30","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9828:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"9836:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9824:3:30"},"nodeType":"YulFunctionCall","src":"9824:15:30"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9814:6:30"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9691:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"9694:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9688:2:30"},"nodeType":"YulFunctionCall","src":"9688:13:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9702:18:30","statements":[{"nodeType":"YulAssignment","src":"9704:14:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9713:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"9716:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9709:3:30"},"nodeType":"YulFunctionCall","src":"9709:9:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9704:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"9684:3:30","statements":[]},"src":"9680:169:30"},{"nodeType":"YulAssignment","src":"9858:10:30","value":{"name":"pos","nodeType":"YulIdentifier","src":"9865:3:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9858:3:30"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9475:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9482:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9490:3:30","type":""}],"src":"9431:443:30"},{"body":{"nodeType":"YulBlock","src":"9930:208:30","statements":[{"nodeType":"YulVariableDeclaration","src":"9940:26:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9960:5:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9954:5:30"},"nodeType":"YulFunctionCall","src":"9954:12:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9944:6:30","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9982:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"9987:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9975:6:30"},"nodeType":"YulFunctionCall","src":"9975:19:30"},"nodeType":"YulExpressionStatement","src":"9975:19:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10029:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"10036:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10025:3:30"},"nodeType":"YulFunctionCall","src":"10025:16:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"10052:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10043:3:30"},"nodeType":"YulFunctionCall","src":"10043:14:30"},{"name":"length","nodeType":"YulIdentifier","src":"10059:6:30"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"10003:21:30"},"nodeType":"YulFunctionCall","src":"10003:63:30"},"nodeType":"YulExpressionStatement","src":"10003:63:30"},{"nodeType":"YulAssignment","src":"10075:57:30","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10090:3:30"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10103:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"10111:2:30","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10099:3:30"},"nodeType":"YulFunctionCall","src":"10099:15:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10120:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10116:3:30"},"nodeType":"YulFunctionCall","src":"10116:7:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10095:3:30"},"nodeType":"YulFunctionCall","src":"10095:29:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10086:3:30"},"nodeType":"YulFunctionCall","src":"10086:39:30"},{"kind":"number","nodeType":"YulLiteral","src":"10127:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10082:3:30"},"nodeType":"YulFunctionCall","src":"10082:50:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10075:3:30"}]}]},"name":"abi_encode_t_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9907:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9914:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9922:3:30","type":""}],"src":"9879:259:30"},{"body":{"nodeType":"YulBlock","src":"10532:397:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10549:3:30"},{"kind":"string","nodeType":"YulLiteral","src":"10554:25:30","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10542:6:30"},"nodeType":"YulFunctionCall","src":"10542:38:30"},"nodeType":"YulExpressionStatement","src":"10542:38:30"},{"nodeType":"YulVariableDeclaration","src":"10589:27:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10609:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10603:5:30"},"nodeType":"YulFunctionCall","src":"10603:13:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10593:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10651:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"10659:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10647:3:30"},"nodeType":"YulFunctionCall","src":"10647:17:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10670:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"10675:2:30","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10666:3:30"},"nodeType":"YulFunctionCall","src":"10666:12:30"},{"name":"length","nodeType":"YulIdentifier","src":"10680:6:30"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"10625:21:30"},"nodeType":"YulFunctionCall","src":"10625:62:30"},"nodeType":"YulExpressionStatement","src":"10625:62:30"},{"nodeType":"YulVariableDeclaration","src":"10696:26:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10710:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"10715:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10706:3:30"},"nodeType":"YulFunctionCall","src":"10706:16:30"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10700:2:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10742:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"10746:2:30","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10738:3:30"},"nodeType":"YulFunctionCall","src":"10738:11:30"},{"kind":"string","nodeType":"YulLiteral","src":"10751:19:30","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10731:6:30"},"nodeType":"YulFunctionCall","src":"10731:40:30"},"nodeType":"YulExpressionStatement","src":"10731:40:30"},{"nodeType":"YulVariableDeclaration","src":"10780:29:30","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10802:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10796:5:30"},"nodeType":"YulFunctionCall","src":"10796:13:30"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"10784:8:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10844:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"10852:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10840:3:30"},"nodeType":"YulFunctionCall","src":"10840:17:30"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10863:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"10867:2:30","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10859:3:30"},"nodeType":"YulFunctionCall","src":"10859:11:30"},{"name":"length_1","nodeType":"YulIdentifier","src":"10872:8:30"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"10818:21:30"},"nodeType":"YulFunctionCall","src":"10818:63:30"},"nodeType":"YulExpressionStatement","src":"10818:63:30"},{"nodeType":"YulAssignment","src":"10890:33:30","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10905:2:30"},{"name":"length_1","nodeType":"YulIdentifier","src":"10909:8:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10901:3:30"},"nodeType":"YulFunctionCall","src":"10901:17:30"},{"kind":"number","nodeType":"YulLiteral","src":"10920:2:30","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10897:3:30"},"nodeType":"YulFunctionCall","src":"10897:26:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10890:3:30"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10500:3:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10505:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10513:6:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10524:3:30","type":""}],"src":"10143:786:30"},{"body":{"nodeType":"YulBlock","src":"11035:125:30","statements":[{"nodeType":"YulAssignment","src":"11045:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11057:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11068:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11053:3:30"},"nodeType":"YulFunctionCall","src":"11053:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11045:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11087:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11102:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"11110:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11098:3:30"},"nodeType":"YulFunctionCall","src":"11098:55:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11080:6:30"},"nodeType":"YulFunctionCall","src":"11080:74:30"},"nodeType":"YulExpressionStatement","src":"11080:74:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11004:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11015:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11026:4:30","type":""}],"src":"10934:226:30"},{"body":{"nodeType":"YulBlock","src":"11496:532:30","statements":[{"nodeType":"YulVariableDeclaration","src":"11506:52:30","value":{"kind":"number","nodeType":"YulLiteral","src":"11516:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11510:2:30","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11574:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11589:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"11597:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11585:3:30"},"nodeType":"YulFunctionCall","src":"11585:15:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11567:6:30"},"nodeType":"YulFunctionCall","src":"11567:34:30"},"nodeType":"YulExpressionStatement","src":"11567:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11621:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11632:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11617:3:30"},"nodeType":"YulFunctionCall","src":"11617:18:30"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11641:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"11649:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11637:3:30"},"nodeType":"YulFunctionCall","src":"11637:15:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11610:6:30"},"nodeType":"YulFunctionCall","src":"11610:43:30"},"nodeType":"YulExpressionStatement","src":"11610:43:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11673:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11684:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11669:3:30"},"nodeType":"YulFunctionCall","src":"11669:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"11689:3:30","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11662:6:30"},"nodeType":"YulFunctionCall","src":"11662:31:30"},"nodeType":"YulExpressionStatement","src":"11662:31:30"},{"nodeType":"YulVariableDeclaration","src":"11702:77:30","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11751:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11763:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11774:3:30","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11759:3:30"},"nodeType":"YulFunctionCall","src":"11759:19:30"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"11716:34:30"},"nodeType":"YulFunctionCall","src":"11716:63:30"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"11706:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11799:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11810:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11795:3:30"},"nodeType":"YulFunctionCall","src":"11795:18:30"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"11819:6:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"11827:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11815:3:30"},"nodeType":"YulFunctionCall","src":"11815:22:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11788:6:30"},"nodeType":"YulFunctionCall","src":"11788:50:30"},"nodeType":"YulExpressionStatement","src":"11788:50:30"},{"nodeType":"YulVariableDeclaration","src":"11847:64:30","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11896:6:30"},{"name":"tail_1","nodeType":"YulIdentifier","src":"11904:6:30"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"11861:34:30"},"nodeType":"YulFunctionCall","src":"11861:50:30"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"11851:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11931:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11942:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11927:3:30"},"nodeType":"YulFunctionCall","src":"11927:19:30"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"11952:6:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"11960:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11948:3:30"},"nodeType":"YulFunctionCall","src":"11948:22:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11920:6:30"},"nodeType":"YulFunctionCall","src":"11920:51:30"},"nodeType":"YulExpressionStatement","src":"11920:51:30"},{"nodeType":"YulAssignment","src":"11980:42:30","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12007:6:30"},{"name":"tail_2","nodeType":"YulIdentifier","src":"12015:6:30"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"11988:18:30"},"nodeType":"YulFunctionCall","src":"11988:34:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11980:4:30"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11433:9:30","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11444:6:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11452:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11460:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11468:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11476:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11487:4:30","type":""}],"src":"11165:863:30"},{"body":{"nodeType":"YulBlock","src":"12264:354:30","statements":[{"nodeType":"YulVariableDeclaration","src":"12274:52:30","value":{"kind":"number","nodeType":"YulLiteral","src":"12284:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12278:2:30","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12342:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12357:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"12365:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12353:3:30"},"nodeType":"YulFunctionCall","src":"12353:15:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12335:6:30"},"nodeType":"YulFunctionCall","src":"12335:34:30"},"nodeType":"YulExpressionStatement","src":"12335:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12389:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12400:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12385:3:30"},"nodeType":"YulFunctionCall","src":"12385:18:30"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12409:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"12417:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12405:3:30"},"nodeType":"YulFunctionCall","src":"12405:15:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12378:6:30"},"nodeType":"YulFunctionCall","src":"12378:43:30"},"nodeType":"YulExpressionStatement","src":"12378:43:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12441:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12452:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12437:3:30"},"nodeType":"YulFunctionCall","src":"12437:18:30"},{"name":"value2","nodeType":"YulIdentifier","src":"12457:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12430:6:30"},"nodeType":"YulFunctionCall","src":"12430:34:30"},"nodeType":"YulExpressionStatement","src":"12430:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12484:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12495:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12480:3:30"},"nodeType":"YulFunctionCall","src":"12480:18:30"},{"name":"value3","nodeType":"YulIdentifier","src":"12500:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12473:6:30"},"nodeType":"YulFunctionCall","src":"12473:34:30"},"nodeType":"YulExpressionStatement","src":"12473:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12527:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12538:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12523:3:30"},"nodeType":"YulFunctionCall","src":"12523:19:30"},{"kind":"number","nodeType":"YulLiteral","src":"12544:3:30","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12516:6:30"},"nodeType":"YulFunctionCall","src":"12516:32:30"},"nodeType":"YulExpressionStatement","src":"12516:32:30"},{"nodeType":"YulAssignment","src":"12557:55:30","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12584:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12596:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12607:3:30","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12592:3:30"},"nodeType":"YulFunctionCall","src":"12592:19:30"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"12565:18:30"},"nodeType":"YulFunctionCall","src":"12565:47:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12557:4:30"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12201:9:30","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12212:6:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12220:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12228:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12236:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12244:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12255:4:30","type":""}],"src":"12033:585:30"},{"body":{"nodeType":"YulBlock","src":"12774:116:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12791:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12802:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12784:6:30"},"nodeType":"YulFunctionCall","src":"12784:21:30"},"nodeType":"YulExpressionStatement","src":"12784:21:30"},{"nodeType":"YulAssignment","src":"12814:70:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12857:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12869:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12880:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12865:3:30"},"nodeType":"YulFunctionCall","src":"12865:18:30"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"12822:34:30"},"nodeType":"YulFunctionCall","src":"12822:62:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12814:4:30"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12743:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12754:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12765:4:30","type":""}],"src":"12623:267:30"},{"body":{"nodeType":"YulBlock","src":"13124:248:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13141:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13152:2:30","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13134:6:30"},"nodeType":"YulFunctionCall","src":"13134:21:30"},"nodeType":"YulExpressionStatement","src":"13134:21:30"},{"nodeType":"YulVariableDeclaration","src":"13164:76:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13213:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13225:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13236:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13221:3:30"},"nodeType":"YulFunctionCall","src":"13221:18:30"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"13178:34:30"},"nodeType":"YulFunctionCall","src":"13178:62:30"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"13168:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13260:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13271:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13256:3:30"},"nodeType":"YulFunctionCall","src":"13256:18:30"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"13280:6:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"13288:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13276:3:30"},"nodeType":"YulFunctionCall","src":"13276:22:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13249:6:30"},"nodeType":"YulFunctionCall","src":"13249:50:30"},"nodeType":"YulExpressionStatement","src":"13249:50:30"},{"nodeType":"YulAssignment","src":"13308:58:30","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13351:6:30"},{"name":"tail_1","nodeType":"YulIdentifier","src":"13359:6:30"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"13316:34:30"},"nodeType":"YulFunctionCall","src":"13316:50:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13308:4:30"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13085:9:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13096:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13104:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13115:4:30","type":""}],"src":"12895:477:30"},{"body":{"nodeType":"YulBlock","src":"13472:92:30","statements":[{"nodeType":"YulAssignment","src":"13482:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13494:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13505:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13490:3:30"},"nodeType":"YulFunctionCall","src":"13490:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13482:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13524:9:30"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13549:6:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13542:6:30"},"nodeType":"YulFunctionCall","src":"13542:14:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13535:6:30"},"nodeType":"YulFunctionCall","src":"13535:22:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13517:6:30"},"nodeType":"YulFunctionCall","src":"13517:41:30"},"nodeType":"YulExpressionStatement","src":"13517:41:30"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13441:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13452:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13463:4:30","type":""}],"src":"13377:187:30"},{"body":{"nodeType":"YulBlock","src":"13670:76:30","statements":[{"nodeType":"YulAssignment","src":"13680:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13692:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13703:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13688:3:30"},"nodeType":"YulFunctionCall","src":"13688:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13680:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13722:9:30"},{"name":"value0","nodeType":"YulIdentifier","src":"13733:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13715:6:30"},"nodeType":"YulFunctionCall","src":"13715:25:30"},"nodeType":"YulExpressionStatement","src":"13715:25:30"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13639:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13650:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13661:4:30","type":""}],"src":"13569:177:30"},{"body":{"nodeType":"YulBlock","src":"13872:100:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13889:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13900:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13882:6:30"},"nodeType":"YulFunctionCall","src":"13882:21:30"},"nodeType":"YulExpressionStatement","src":"13882:21:30"},{"nodeType":"YulAssignment","src":"13912:54:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13939:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13951:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13962:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13947:3:30"},"nodeType":"YulFunctionCall","src":"13947:18:30"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"13920:18:30"},"nodeType":"YulFunctionCall","src":"13920:46:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13912:4:30"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13841:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13852:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13863:4:30","type":""}],"src":"13751:221:30"},{"body":{"nodeType":"YulBlock","src":"14151:182:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14168:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"14179:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14161:6:30"},"nodeType":"YulFunctionCall","src":"14161:21:30"},"nodeType":"YulExpressionStatement","src":"14161:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14202:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"14213:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14198:3:30"},"nodeType":"YulFunctionCall","src":"14198:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"14218:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14191:6:30"},"nodeType":"YulFunctionCall","src":"14191:30:30"},"nodeType":"YulExpressionStatement","src":"14191:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14241:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"14252:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14237:3:30"},"nodeType":"YulFunctionCall","src":"14237:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"14257:34:30","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14230:6:30"},"nodeType":"YulFunctionCall","src":"14230:62:30"},"nodeType":"YulExpressionStatement","src":"14230:62:30"},{"nodeType":"YulAssignment","src":"14301:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14313:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"14324:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14309:3:30"},"nodeType":"YulFunctionCall","src":"14309:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14301:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14128:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14142:4:30","type":""}],"src":"13977:356:30"},{"body":{"nodeType":"YulBlock","src":"14512:230:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14529:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"14540:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14522:6:30"},"nodeType":"YulFunctionCall","src":"14522:21:30"},"nodeType":"YulExpressionStatement","src":"14522:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14563:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"14574:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14559:3:30"},"nodeType":"YulFunctionCall","src":"14559:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"14579:2:30","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14552:6:30"},"nodeType":"YulFunctionCall","src":"14552:30:30"},"nodeType":"YulExpressionStatement","src":"14552:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14602:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"14613:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14598:3:30"},"nodeType":"YulFunctionCall","src":"14598:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"14618:34:30","type":"","value":"ERC1155: ERC1155Receiver rejecte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14591:6:30"},"nodeType":"YulFunctionCall","src":"14591:62:30"},"nodeType":"YulExpressionStatement","src":"14591:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14673:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"14684:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14669:3:30"},"nodeType":"YulFunctionCall","src":"14669:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"14689:10:30","type":"","value":"d tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14662:6:30"},"nodeType":"YulFunctionCall","src":"14662:38:30"},"nodeType":"YulExpressionStatement","src":"14662:38:30"},{"nodeType":"YulAssignment","src":"14709:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14721:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"14732:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14717:3:30"},"nodeType":"YulFunctionCall","src":"14717:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14709:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14489:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14503:4:30","type":""}],"src":"14338:404:30"},{"body":{"nodeType":"YulBlock","src":"14921:170:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14938:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"14949:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14931:6:30"},"nodeType":"YulFunctionCall","src":"14931:21:30"},"nodeType":"YulExpressionStatement","src":"14931:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14972:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"14983:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14968:3:30"},"nodeType":"YulFunctionCall","src":"14968:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"14988:2:30","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14961:6:30"},"nodeType":"YulFunctionCall","src":"14961:30:30"},"nodeType":"YulExpressionStatement","src":"14961:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15011:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"15022:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15007:3:30"},"nodeType":"YulFunctionCall","src":"15007:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"15027:22:30","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15000:6:30"},"nodeType":"YulFunctionCall","src":"15000:50:30"},"nodeType":"YulExpressionStatement","src":"15000:50:30"},{"nodeType":"YulAssignment","src":"15059:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15071:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"15082:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15067:3:30"},"nodeType":"YulFunctionCall","src":"15067:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15059:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14898:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14912:4:30","type":""}],"src":"14747:344:30"},{"body":{"nodeType":"YulBlock","src":"15270:226:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15287:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"15298:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15280:6:30"},"nodeType":"YulFunctionCall","src":"15280:21:30"},"nodeType":"YulExpressionStatement","src":"15280:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15321:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"15332:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15317:3:30"},"nodeType":"YulFunctionCall","src":"15317:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"15337:2:30","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15310:6:30"},"nodeType":"YulFunctionCall","src":"15310:30:30"},"nodeType":"YulExpressionStatement","src":"15310:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15360:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"15371:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15356:3:30"},"nodeType":"YulFunctionCall","src":"15356:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"15376:34:30","type":"","value":"ERC1155: burn amount exceeds bal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15349:6:30"},"nodeType":"YulFunctionCall","src":"15349:62:30"},"nodeType":"YulExpressionStatement","src":"15349:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15431:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"15442:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15427:3:30"},"nodeType":"YulFunctionCall","src":"15427:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"15447:6:30","type":"","value":"ance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15420:6:30"},"nodeType":"YulFunctionCall","src":"15420:34:30"},"nodeType":"YulExpressionStatement","src":"15420:34:30"},{"nodeType":"YulAssignment","src":"15463:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15475:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"15486:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15471:3:30"},"nodeType":"YulFunctionCall","src":"15471:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15463:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15247:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15261:4:30","type":""}],"src":"15096:400:30"},{"body":{"nodeType":"YulBlock","src":"15675:234:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15692:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"15703:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15685:6:30"},"nodeType":"YulFunctionCall","src":"15685:21:30"},"nodeType":"YulExpressionStatement","src":"15685:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15726:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"15737:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15722:3:30"},"nodeType":"YulFunctionCall","src":"15722:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"15742:2:30","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15715:6:30"},"nodeType":"YulFunctionCall","src":"15715:30:30"},"nodeType":"YulExpressionStatement","src":"15715:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15765:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"15776:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15761:3:30"},"nodeType":"YulFunctionCall","src":"15761:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"15781:34:30","type":"","value":"ERC1155Pausable: token transfer "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15754:6:30"},"nodeType":"YulFunctionCall","src":"15754:62:30"},"nodeType":"YulExpressionStatement","src":"15754:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15836:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"15847:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15832:3:30"},"nodeType":"YulFunctionCall","src":"15832:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"15852:14:30","type":"","value":"while paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15825:6:30"},"nodeType":"YulFunctionCall","src":"15825:42:30"},"nodeType":"YulExpressionStatement","src":"15825:42:30"},{"nodeType":"YulAssignment","src":"15876:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15888:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"15899:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15884:3:30"},"nodeType":"YulFunctionCall","src":"15884:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15876:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_382791644f51336ed3667770955aa8eb4efb839029c48708cadb22e92d271435__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15652:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15666:4:30","type":""}],"src":"15501:408:30"},{"body":{"nodeType":"YulBlock","src":"16088:232:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16105:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"16116:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16098:6:30"},"nodeType":"YulFunctionCall","src":"16098:21:30"},"nodeType":"YulExpressionStatement","src":"16098:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16139:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"16150:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16135:3:30"},"nodeType":"YulFunctionCall","src":"16135:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"16155:2:30","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16128:6:30"},"nodeType":"YulFunctionCall","src":"16128:30:30"},"nodeType":"YulExpressionStatement","src":"16128:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16178:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"16189:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16174:3:30"},"nodeType":"YulFunctionCall","src":"16174:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"16194:34:30","type":"","value":"ERC1155: address zero is not a v"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16167:6:30"},"nodeType":"YulFunctionCall","src":"16167:62:30"},"nodeType":"YulExpressionStatement","src":"16167:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16249:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"16260:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16245:3:30"},"nodeType":"YulFunctionCall","src":"16245:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"16265:12:30","type":"","value":"alid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16238:6:30"},"nodeType":"YulFunctionCall","src":"16238:40:30"},"nodeType":"YulExpressionStatement","src":"16238:40:30"},{"nodeType":"YulAssignment","src":"16287:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16299:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"16310:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16295:3:30"},"nodeType":"YulFunctionCall","src":"16295:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16287:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16065:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16079:4:30","type":""}],"src":"15914:406:30"},{"body":{"nodeType":"YulBlock","src":"16499:236:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16516:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"16527:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16509:6:30"},"nodeType":"YulFunctionCall","src":"16509:21:30"},"nodeType":"YulExpressionStatement","src":"16509:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16550:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"16561:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16546:3:30"},"nodeType":"YulFunctionCall","src":"16546:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"16566:2:30","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16539:6:30"},"nodeType":"YulFunctionCall","src":"16539:30:30"},"nodeType":"YulExpressionStatement","src":"16539:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16589:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"16600:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16585:3:30"},"nodeType":"YulFunctionCall","src":"16585:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"16605:34:30","type":"","value":"ERC1155: caller is not token own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16578:6:30"},"nodeType":"YulFunctionCall","src":"16578:62:30"},"nodeType":"YulExpressionStatement","src":"16578:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16660:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"16671:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16656:3:30"},"nodeType":"YulFunctionCall","src":"16656:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"16676:16:30","type":"","value":"er or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16649:6:30"},"nodeType":"YulFunctionCall","src":"16649:44:30"},"nodeType":"YulExpressionStatement","src":"16649:44:30"},{"nodeType":"YulAssignment","src":"16702:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16714:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"16725:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16710:3:30"},"nodeType":"YulFunctionCall","src":"16710:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16702:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16476:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16490:4:30","type":""}],"src":"16325:410:30"},{"body":{"nodeType":"YulBlock","src":"16914:166:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16931:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"16942:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16924:6:30"},"nodeType":"YulFunctionCall","src":"16924:21:30"},"nodeType":"YulExpressionStatement","src":"16924:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16965:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"16976:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16961:3:30"},"nodeType":"YulFunctionCall","src":"16961:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"16981:2:30","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16954:6:30"},"nodeType":"YulFunctionCall","src":"16954:30:30"},"nodeType":"YulExpressionStatement","src":"16954:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17004:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"17015:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17000:3:30"},"nodeType":"YulFunctionCall","src":"17000:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"17020:18:30","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16993:6:30"},"nodeType":"YulFunctionCall","src":"16993:46:30"},"nodeType":"YulExpressionStatement","src":"16993:46:30"},{"nodeType":"YulAssignment","src":"17048:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17060:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"17071:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17056:3:30"},"nodeType":"YulFunctionCall","src":"17056:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17048:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16891:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16905:4:30","type":""}],"src":"16740:340:30"},{"body":{"nodeType":"YulBlock","src":"17259:227:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17276:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"17287:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17269:6:30"},"nodeType":"YulFunctionCall","src":"17269:21:30"},"nodeType":"YulExpressionStatement","src":"17269:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17310:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"17321:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17306:3:30"},"nodeType":"YulFunctionCall","src":"17306:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"17326:2:30","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17299:6:30"},"nodeType":"YulFunctionCall","src":"17299:30:30"},"nodeType":"YulExpressionStatement","src":"17299:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17349:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"17360:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17345:3:30"},"nodeType":"YulFunctionCall","src":"17345:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"17365:34:30","type":"","value":"ERC1155: transfer to the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17338:6:30"},"nodeType":"YulFunctionCall","src":"17338:62:30"},"nodeType":"YulExpressionStatement","src":"17338:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17420:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"17431:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17416:3:30"},"nodeType":"YulFunctionCall","src":"17416:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"17436:7:30","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17409:6:30"},"nodeType":"YulFunctionCall","src":"17409:35:30"},"nodeType":"YulExpressionStatement","src":"17409:35:30"},{"nodeType":"YulAssignment","src":"17453:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17465:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"17476:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17461:3:30"},"nodeType":"YulFunctionCall","src":"17461:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17453:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17236:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17250:4:30","type":""}],"src":"17085:401:30"},{"body":{"nodeType":"YulBlock","src":"17665:225:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17682:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"17693:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17675:6:30"},"nodeType":"YulFunctionCall","src":"17675:21:30"},"nodeType":"YulExpressionStatement","src":"17675:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17716:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"17727:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17712:3:30"},"nodeType":"YulFunctionCall","src":"17712:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"17732:2:30","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17705:6:30"},"nodeType":"YulFunctionCall","src":"17705:30:30"},"nodeType":"YulExpressionStatement","src":"17705:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17755:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"17766:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17751:3:30"},"nodeType":"YulFunctionCall","src":"17751:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"17771:34:30","type":"","value":"ERC1155: burn from the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17744:6:30"},"nodeType":"YulFunctionCall","src":"17744:62:30"},"nodeType":"YulExpressionStatement","src":"17744:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17826:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"17837:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17822:3:30"},"nodeType":"YulFunctionCall","src":"17822:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"17842:5:30","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17815:6:30"},"nodeType":"YulFunctionCall","src":"17815:33:30"},"nodeType":"YulExpressionStatement","src":"17815:33:30"},{"nodeType":"YulAssignment","src":"17857:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17869:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"17880:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17865:3:30"},"nodeType":"YulFunctionCall","src":"17865:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17857:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17642:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17656:4:30","type":""}],"src":"17491:399:30"},{"body":{"nodeType":"YulBlock","src":"18069:246:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18086:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18097:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18079:6:30"},"nodeType":"YulFunctionCall","src":"18079:21:30"},"nodeType":"YulExpressionStatement","src":"18079:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18120:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18131:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18116:3:30"},"nodeType":"YulFunctionCall","src":"18116:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"18136:2:30","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18109:6:30"},"nodeType":"YulFunctionCall","src":"18109:30:30"},"nodeType":"YulExpressionStatement","src":"18109:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18159:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18170:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18155:3:30"},"nodeType":"YulFunctionCall","src":"18155:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"18175:34:30","type":"","value":"ERC1155PresetMinterPauser: must "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18148:6:30"},"nodeType":"YulFunctionCall","src":"18148:62:30"},"nodeType":"YulExpressionStatement","src":"18148:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18230:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18241:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18226:3:30"},"nodeType":"YulFunctionCall","src":"18226:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"18246:26:30","type":"","value":"have minter role to mint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18219:6:30"},"nodeType":"YulFunctionCall","src":"18219:54:30"},"nodeType":"YulExpressionStatement","src":"18219:54:30"},{"nodeType":"YulAssignment","src":"18282:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18294:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18305:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18290:3:30"},"nodeType":"YulFunctionCall","src":"18290:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18282:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18046:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18060:4:30","type":""}],"src":"17895:420:30"},{"body":{"nodeType":"YulBlock","src":"18494:232:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18511:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18522:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18504:6:30"},"nodeType":"YulFunctionCall","src":"18504:21:30"},"nodeType":"YulExpressionStatement","src":"18504:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18545:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18556:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18541:3:30"},"nodeType":"YulFunctionCall","src":"18541:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"18561:2:30","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18534:6:30"},"nodeType":"YulFunctionCall","src":"18534:30:30"},"nodeType":"YulExpressionStatement","src":"18534:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18584:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18595:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18580:3:30"},"nodeType":"YulFunctionCall","src":"18580:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"18600:34:30","type":"","value":"ERC1155: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18573:6:30"},"nodeType":"YulFunctionCall","src":"18573:62:30"},"nodeType":"YulExpressionStatement","src":"18573:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18655:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18666:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18651:3:30"},"nodeType":"YulFunctionCall","src":"18651:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"18671:12:30","type":"","value":"r transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18644:6:30"},"nodeType":"YulFunctionCall","src":"18644:40:30"},"nodeType":"YulExpressionStatement","src":"18644:40:30"},{"nodeType":"YulAssignment","src":"18693:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18705:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18716:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18701:3:30"},"nodeType":"YulFunctionCall","src":"18701:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18693:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18471:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18485:4:30","type":""}],"src":"18320:406:30"},{"body":{"nodeType":"YulBlock","src":"18905:249:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18922:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18933:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18915:6:30"},"nodeType":"YulFunctionCall","src":"18915:21:30"},"nodeType":"YulExpressionStatement","src":"18915:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18956:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18967:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18952:3:30"},"nodeType":"YulFunctionCall","src":"18952:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"18972:2:30","type":"","value":"59"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18945:6:30"},"nodeType":"YulFunctionCall","src":"18945:30:30"},"nodeType":"YulExpressionStatement","src":"18945:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18995:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19006:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18991:3:30"},"nodeType":"YulFunctionCall","src":"18991:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"19011:34:30","type":"","value":"ERC1155PresetMinterPauser: must "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18984:6:30"},"nodeType":"YulFunctionCall","src":"18984:62:30"},"nodeType":"YulExpressionStatement","src":"18984:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19066:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19077:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19062:3:30"},"nodeType":"YulFunctionCall","src":"19062:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"19082:29:30","type":"","value":"have pauser role to unpause"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19055:6:30"},"nodeType":"YulFunctionCall","src":"19055:57:30"},"nodeType":"YulExpressionStatement","src":"19055:57:30"},{"nodeType":"YulAssignment","src":"19121:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19133:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19144:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19129:3:30"},"nodeType":"YulFunctionCall","src":"19129:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19121:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_be510562063387b7714478be5eff01a8c39efbb1b76d9be224d34aac440c9e31__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18882:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18896:4:30","type":""}],"src":"18731:423:30"},{"body":{"nodeType":"YulBlock","src":"19333:247:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19350:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19361:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19343:6:30"},"nodeType":"YulFunctionCall","src":"19343:21:30"},"nodeType":"YulExpressionStatement","src":"19343:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19384:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19395:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19380:3:30"},"nodeType":"YulFunctionCall","src":"19380:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"19400:2:30","type":"","value":"57"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19373:6:30"},"nodeType":"YulFunctionCall","src":"19373:30:30"},"nodeType":"YulExpressionStatement","src":"19373:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19423:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19434:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19419:3:30"},"nodeType":"YulFunctionCall","src":"19419:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"19439:34:30","type":"","value":"ERC1155PresetMinterPauser: must "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19412:6:30"},"nodeType":"YulFunctionCall","src":"19412:62:30"},"nodeType":"YulExpressionStatement","src":"19412:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19494:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19505:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19490:3:30"},"nodeType":"YulFunctionCall","src":"19490:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"19510:27:30","type":"","value":"have pauser role to pause"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19483:6:30"},"nodeType":"YulFunctionCall","src":"19483:55:30"},"nodeType":"YulExpressionStatement","src":"19483:55:30"},{"nodeType":"YulAssignment","src":"19547:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19559:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19570:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19555:3:30"},"nodeType":"YulFunctionCall","src":"19555:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19547:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_d5053a301adec69bf5c7c3782556a354b14090e41fa7ca93c4de3863fd6a98b9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19310:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19324:4:30","type":""}],"src":"19159:421:30"},{"body":{"nodeType":"YulBlock","src":"19759:231:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19776:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19787:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19769:6:30"},"nodeType":"YulFunctionCall","src":"19769:21:30"},"nodeType":"YulExpressionStatement","src":"19769:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19810:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19821:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19806:3:30"},"nodeType":"YulFunctionCall","src":"19806:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"19826:2:30","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19799:6:30"},"nodeType":"YulFunctionCall","src":"19799:30:30"},"nodeType":"YulExpressionStatement","src":"19799:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19849:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19860:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19845:3:30"},"nodeType":"YulFunctionCall","src":"19845:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"19865:34:30","type":"","value":"ERC1155: setting approval status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19838:6:30"},"nodeType":"YulFunctionCall","src":"19838:62:30"},"nodeType":"YulExpressionStatement","src":"19838:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19920:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19931:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19916:3:30"},"nodeType":"YulFunctionCall","src":"19916:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"19936:11:30","type":"","value":" for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19909:6:30"},"nodeType":"YulFunctionCall","src":"19909:39:30"},"nodeType":"YulExpressionStatement","src":"19909:39:30"},{"nodeType":"YulAssignment","src":"19957:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19969:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19980:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19965:3:30"},"nodeType":"YulFunctionCall","src":"19965:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19957:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19736:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19750:4:30","type":""}],"src":"19585:405:30"},{"body":{"nodeType":"YulBlock","src":"20169:231:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20186:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"20197:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20179:6:30"},"nodeType":"YulFunctionCall","src":"20179:21:30"},"nodeType":"YulExpressionStatement","src":"20179:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20220:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"20231:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20216:3:30"},"nodeType":"YulFunctionCall","src":"20216:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"20236:2:30","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20209:6:30"},"nodeType":"YulFunctionCall","src":"20209:30:30"},"nodeType":"YulExpressionStatement","src":"20209:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20259:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"20270:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20255:3:30"},"nodeType":"YulFunctionCall","src":"20255:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"20275:34:30","type":"","value":"ERC1155: accounts and ids length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20248:6:30"},"nodeType":"YulFunctionCall","src":"20248:62:30"},"nodeType":"YulExpressionStatement","src":"20248:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20330:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"20341:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20326:3:30"},"nodeType":"YulFunctionCall","src":"20326:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"20346:11:30","type":"","value":" mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20319:6:30"},"nodeType":"YulFunctionCall","src":"20319:39:30"},"nodeType":"YulExpressionStatement","src":"20319:39:30"},{"nodeType":"YulAssignment","src":"20367:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20379:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"20390:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20375:3:30"},"nodeType":"YulFunctionCall","src":"20375:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20367:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20146:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20160:4:30","type":""}],"src":"19995:405:30"},{"body":{"nodeType":"YulBlock","src":"20579:230:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20596:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"20607:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20589:6:30"},"nodeType":"YulFunctionCall","src":"20589:21:30"},"nodeType":"YulExpressionStatement","src":"20589:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20630:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"20641:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20626:3:30"},"nodeType":"YulFunctionCall","src":"20626:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"20646:2:30","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20619:6:30"},"nodeType":"YulFunctionCall","src":"20619:30:30"},"nodeType":"YulExpressionStatement","src":"20619:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20669:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"20680:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20665:3:30"},"nodeType":"YulFunctionCall","src":"20665:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"20685:34:30","type":"","value":"ERC1155: ids and amounts length "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20658:6:30"},"nodeType":"YulFunctionCall","src":"20658:62:30"},"nodeType":"YulExpressionStatement","src":"20658:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20740:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"20751:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20736:3:30"},"nodeType":"YulFunctionCall","src":"20736:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"20756:10:30","type":"","value":"mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20729:6:30"},"nodeType":"YulFunctionCall","src":"20729:38:30"},"nodeType":"YulExpressionStatement","src":"20729:38:30"},{"nodeType":"YulAssignment","src":"20776:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20788:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"20799:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20784:3:30"},"nodeType":"YulFunctionCall","src":"20784:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20776:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20556:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20570:4:30","type":""}],"src":"20405:404:30"},{"body":{"nodeType":"YulBlock","src":"20988:223:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21005:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"21016:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20998:6:30"},"nodeType":"YulFunctionCall","src":"20998:21:30"},"nodeType":"YulExpressionStatement","src":"20998:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21039:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"21050:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21035:3:30"},"nodeType":"YulFunctionCall","src":"21035:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"21055:2:30","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21028:6:30"},"nodeType":"YulFunctionCall","src":"21028:30:30"},"nodeType":"YulExpressionStatement","src":"21028:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21078:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"21089:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21074:3:30"},"nodeType":"YulFunctionCall","src":"21074:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"21094:34:30","type":"","value":"ERC1155: mint to the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21067:6:30"},"nodeType":"YulFunctionCall","src":"21067:62:30"},"nodeType":"YulExpressionStatement","src":"21067:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21149:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"21160:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21145:3:30"},"nodeType":"YulFunctionCall","src":"21145:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"21165:3:30","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21138:6:30"},"nodeType":"YulFunctionCall","src":"21138:31:30"},"nodeType":"YulExpressionStatement","src":"21138:31:30"},{"nodeType":"YulAssignment","src":"21178:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21190:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"21201:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21186:3:30"},"nodeType":"YulFunctionCall","src":"21186:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21178:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20965:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20979:4:30","type":""}],"src":"20814:397:30"},{"body":{"nodeType":"YulBlock","src":"21390:242:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21407:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"21418:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21400:6:30"},"nodeType":"YulFunctionCall","src":"21400:21:30"},"nodeType":"YulExpressionStatement","src":"21400:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21441:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"21452:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21437:3:30"},"nodeType":"YulFunctionCall","src":"21437:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"21457:2:30","type":"","value":"52"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21430:6:30"},"nodeType":"YulFunctionCall","src":"21430:30:30"},"nodeType":"YulExpressionStatement","src":"21430:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21480:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"21491:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21476:3:30"},"nodeType":"YulFunctionCall","src":"21476:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"21496:34:30","type":"","value":"ERC1155: transfer to non-ERC1155"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21469:6:30"},"nodeType":"YulFunctionCall","src":"21469:62:30"},"nodeType":"YulExpressionStatement","src":"21469:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21551:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"21562:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21547:3:30"},"nodeType":"YulFunctionCall","src":"21547:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"21567:22:30","type":"","value":"Receiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21540:6:30"},"nodeType":"YulFunctionCall","src":"21540:50:30"},"nodeType":"YulExpressionStatement","src":"21540:50:30"},{"nodeType":"YulAssignment","src":"21599:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21611:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"21622:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21607:3:30"},"nodeType":"YulFunctionCall","src":"21607:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21599:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21367:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21381:4:30","type":""}],"src":"21216:416:30"},{"body":{"nodeType":"YulBlock","src":"21811:237:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21828:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"21839:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21821:6:30"},"nodeType":"YulFunctionCall","src":"21821:21:30"},"nodeType":"YulExpressionStatement","src":"21821:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21862:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"21873:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21858:3:30"},"nodeType":"YulFunctionCall","src":"21858:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"21878:2:30","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21851:6:30"},"nodeType":"YulFunctionCall","src":"21851:30:30"},"nodeType":"YulExpressionStatement","src":"21851:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21901:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"21912:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21897:3:30"},"nodeType":"YulFunctionCall","src":"21897:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"21917:34:30","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21890:6:30"},"nodeType":"YulFunctionCall","src":"21890:62:30"},"nodeType":"YulExpressionStatement","src":"21890:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21972:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"21983:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21968:3:30"},"nodeType":"YulFunctionCall","src":"21968:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"21988:17:30","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21961:6:30"},"nodeType":"YulFunctionCall","src":"21961:45:30"},"nodeType":"YulExpressionStatement","src":"21961:45:30"},{"nodeType":"YulAssignment","src":"22015:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22027:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"22038:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22023:3:30"},"nodeType":"YulFunctionCall","src":"22023:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22015:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21788:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21802:4:30","type":""}],"src":"21637:411:30"},{"body":{"nodeType":"YulBlock","src":"22154:76:30","statements":[{"nodeType":"YulAssignment","src":"22164:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22176:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"22187:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22172:3:30"},"nodeType":"YulFunctionCall","src":"22172:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22164:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22206:9:30"},{"name":"value0","nodeType":"YulIdentifier","src":"22217:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22199:6:30"},"nodeType":"YulFunctionCall","src":"22199:25:30"},"nodeType":"YulExpressionStatement","src":"22199:25:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22123:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22134:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22145:4:30","type":""}],"src":"22053:177:30"},{"body":{"nodeType":"YulBlock","src":"22364:119:30","statements":[{"nodeType":"YulAssignment","src":"22374:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22386:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"22397:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22382:3:30"},"nodeType":"YulFunctionCall","src":"22382:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22374:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22416:9:30"},{"name":"value0","nodeType":"YulIdentifier","src":"22427:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22409:6:30"},"nodeType":"YulFunctionCall","src":"22409:25:30"},"nodeType":"YulExpressionStatement","src":"22409:25:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22454:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"22465:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22450:3:30"},"nodeType":"YulFunctionCall","src":"22450:18:30"},{"name":"value1","nodeType":"YulIdentifier","src":"22470:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22443:6:30"},"nodeType":"YulFunctionCall","src":"22443:34:30"},"nodeType":"YulExpressionStatement","src":"22443:34:30"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22325:9:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22336:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22344:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22355:4:30","type":""}],"src":"22235:248:30"},{"body":{"nodeType":"YulBlock","src":"22563:117:30","statements":[{"body":{"nodeType":"YulBlock","src":"22607:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"22609:16:30"},"nodeType":"YulFunctionCall","src":"22609:18:30"},"nodeType":"YulExpressionStatement","src":"22609:18:30"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22579:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"22587:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22576:2:30"},"nodeType":"YulFunctionCall","src":"22576:30:30"},"nodeType":"YulIf","src":"22573:2:30"},{"nodeType":"YulAssignment","src":"22638:36:30","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22654:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"22662:4:30","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22650:3:30"},"nodeType":"YulFunctionCall","src":"22650:17:30"},{"kind":"number","nodeType":"YulLiteral","src":"22669:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22646:3:30"},"nodeType":"YulFunctionCall","src":"22646:28:30"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"22638:4:30"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"22543:6:30","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"22554:4:30","type":""}],"src":"22488:192:30"},{"body":{"nodeType":"YulBlock","src":"22733:80:30","statements":[{"body":{"nodeType":"YulBlock","src":"22760:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22762:16:30"},"nodeType":"YulFunctionCall","src":"22762:18:30"},"nodeType":"YulExpressionStatement","src":"22762:18:30"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22749:1:30"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22756:1:30"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22752:3:30"},"nodeType":"YulFunctionCall","src":"22752:6:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22746:2:30"},"nodeType":"YulFunctionCall","src":"22746:13:30"},"nodeType":"YulIf","src":"22743:2:30"},{"nodeType":"YulAssignment","src":"22791:16:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22802:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"22805:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22798:3:30"},"nodeType":"YulFunctionCall","src":"22798:9:30"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"22791:3:30"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22716:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"22719:1:30","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"22725:3:30","type":""}],"src":"22685:128:30"},{"body":{"nodeType":"YulBlock","src":"22870:116:30","statements":[{"body":{"nodeType":"YulBlock","src":"22929:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22931:16:30"},"nodeType":"YulFunctionCall","src":"22931:18:30"},"nodeType":"YulExpressionStatement","src":"22931:18:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22901:1:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22894:6:30"},"nodeType":"YulFunctionCall","src":"22894:9:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22887:6:30"},"nodeType":"YulFunctionCall","src":"22887:17:30"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22909:1:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22920:1:30","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22916:3:30"},"nodeType":"YulFunctionCall","src":"22916:6:30"},{"name":"x","nodeType":"YulIdentifier","src":"22924:1:30"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"22912:3:30"},"nodeType":"YulFunctionCall","src":"22912:14:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22906:2:30"},"nodeType":"YulFunctionCall","src":"22906:21:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22883:3:30"},"nodeType":"YulFunctionCall","src":"22883:45:30"},"nodeType":"YulIf","src":"22880:2:30"},{"nodeType":"YulAssignment","src":"22960:20:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22975:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"22978:1:30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22971:3:30"},"nodeType":"YulFunctionCall","src":"22971:9:30"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"22960:7:30"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22849:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"22852:1:30","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"22858:7:30","type":""}],"src":"22818:168:30"},{"body":{"nodeType":"YulBlock","src":"23040:76:30","statements":[{"body":{"nodeType":"YulBlock","src":"23062:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23064:16:30"},"nodeType":"YulFunctionCall","src":"23064:18:30"},"nodeType":"YulExpressionStatement","src":"23064:18:30"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23056:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"23059:1:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23053:2:30"},"nodeType":"YulFunctionCall","src":"23053:8:30"},"nodeType":"YulIf","src":"23050:2:30"},{"nodeType":"YulAssignment","src":"23093:17:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23105:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"23108:1:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23101:3:30"},"nodeType":"YulFunctionCall","src":"23101:9:30"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"23093:4:30"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23022:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"23025:1:30","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"23031:4:30","type":""}],"src":"22991:125:30"},{"body":{"nodeType":"YulBlock","src":"23174:205:30","statements":[{"nodeType":"YulVariableDeclaration","src":"23184:10:30","value":{"kind":"number","nodeType":"YulLiteral","src":"23193:1:30","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"23188:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"23253:63:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"23278:3:30"},{"name":"i","nodeType":"YulIdentifier","src":"23283:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23274:3:30"},"nodeType":"YulFunctionCall","src":"23274:11:30"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23297:3:30"},{"name":"i","nodeType":"YulIdentifier","src":"23302:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23293:3:30"},"nodeType":"YulFunctionCall","src":"23293:11:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23287:5:30"},"nodeType":"YulFunctionCall","src":"23287:18:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23267:6:30"},"nodeType":"YulFunctionCall","src":"23267:39:30"},"nodeType":"YulExpressionStatement","src":"23267:39:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23214:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"23217:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23211:2:30"},"nodeType":"YulFunctionCall","src":"23211:13:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23225:19:30","statements":[{"nodeType":"YulAssignment","src":"23227:15:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23236:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"23239:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23232:3:30"},"nodeType":"YulFunctionCall","src":"23232:10:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"23227:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"23207:3:30","statements":[]},"src":"23203:113:30"},{"body":{"nodeType":"YulBlock","src":"23342:31:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"23355:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"23360:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23351:3:30"},"nodeType":"YulFunctionCall","src":"23351:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"23369:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23344:6:30"},"nodeType":"YulFunctionCall","src":"23344:27:30"},"nodeType":"YulExpressionStatement","src":"23344:27:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23331:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"23334:6:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23328:2:30"},"nodeType":"YulFunctionCall","src":"23328:13:30"},"nodeType":"YulIf","src":"23325:2:30"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"23152:3:30","type":""},{"name":"dst","nodeType":"YulTypedName","src":"23157:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"23162:6:30","type":""}],"src":"23121:258:30"},{"body":{"nodeType":"YulBlock","src":"23431:89:30","statements":[{"body":{"nodeType":"YulBlock","src":"23458:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23460:16:30"},"nodeType":"YulFunctionCall","src":"23460:18:30"},"nodeType":"YulExpressionStatement","src":"23460:18:30"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23451:5:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23444:6:30"},"nodeType":"YulFunctionCall","src":"23444:13:30"},"nodeType":"YulIf","src":"23441:2:30"},{"nodeType":"YulAssignment","src":"23489:25:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23500:5:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23511:1:30","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23507:3:30"},"nodeType":"YulFunctionCall","src":"23507:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23496:3:30"},"nodeType":"YulFunctionCall","src":"23496:18:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23489:3:30"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23413:5:30","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23423:3:30","type":""}],"src":"23384:136:30"},{"body":{"nodeType":"YulBlock","src":"23580:382:30","statements":[{"nodeType":"YulAssignment","src":"23590:22:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23604:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"23610:1:30","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23600:3:30"},"nodeType":"YulFunctionCall","src":"23600:12:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23590:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"23621:38:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23651:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"23657:1:30","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23647:3:30"},"nodeType":"YulFunctionCall","src":"23647:12:30"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"23625:18:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"23698:31:30","statements":[{"nodeType":"YulAssignment","src":"23700:27:30","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23714:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"23722:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23710:3:30"},"nodeType":"YulFunctionCall","src":"23710:17:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23700:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"23678:18:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23671:6:30"},"nodeType":"YulFunctionCall","src":"23671:26:30"},"nodeType":"YulIf","src":"23668:2:30"},{"body":{"nodeType":"YulBlock","src":"23788:168:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23809:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23812:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23802:6:30"},"nodeType":"YulFunctionCall","src":"23802:88:30"},"nodeType":"YulExpressionStatement","src":"23802:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23910:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23913:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23903:6:30"},"nodeType":"YulFunctionCall","src":"23903:15:30"},"nodeType":"YulExpressionStatement","src":"23903:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23938:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23941:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23931:6:30"},"nodeType":"YulFunctionCall","src":"23931:15:30"},"nodeType":"YulExpressionStatement","src":"23931:15:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"23744:18:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23767:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"23775:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23764:2:30"},"nodeType":"YulFunctionCall","src":"23764:14:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23741:2:30"},"nodeType":"YulFunctionCall","src":"23741:38:30"},"nodeType":"YulIf","src":"23738:2:30"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"23560:4:30","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"23569:6:30","type":""}],"src":"23525:437:30"},{"body":{"nodeType":"YulBlock","src":"24014:202:30","statements":[{"nodeType":"YulVariableDeclaration","src":"24024:58:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24046:6:30"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"24062:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"24068:2:30","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24058:3:30"},"nodeType":"YulFunctionCall","src":"24058:13:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24077:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24073:3:30"},"nodeType":"YulFunctionCall","src":"24073:7:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24054:3:30"},"nodeType":"YulFunctionCall","src":"24054:27:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24042:3:30"},"nodeType":"YulFunctionCall","src":"24042:40:30"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"24028:10:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"24157:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"24159:16:30"},"nodeType":"YulFunctionCall","src":"24159:18:30"},"nodeType":"YulExpressionStatement","src":"24159:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"24100:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"24112:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24097:2:30"},"nodeType":"YulFunctionCall","src":"24097:34:30"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"24136:10:30"},{"name":"memPtr","nodeType":"YulIdentifier","src":"24148:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24133:2:30"},"nodeType":"YulFunctionCall","src":"24133:22:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"24094:2:30"},"nodeType":"YulFunctionCall","src":"24094:62:30"},"nodeType":"YulIf","src":"24091:2:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24195:2:30","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"24199:10:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24188:6:30"},"nodeType":"YulFunctionCall","src":"24188:22:30"},"nodeType":"YulExpressionStatement","src":"24188:22:30"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23996:6:30","type":""},{"name":"size","nodeType":"YulTypedName","src":"24004:4:30","type":""}],"src":"23967:249:30"},{"body":{"nodeType":"YulBlock","src":"24268:88:30","statements":[{"body":{"nodeType":"YulBlock","src":"24299:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24301:16:30"},"nodeType":"YulFunctionCall","src":"24301:18:30"},"nodeType":"YulExpressionStatement","src":"24301:18:30"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24284:5:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24295:1:30","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24291:3:30"},"nodeType":"YulFunctionCall","src":"24291:6:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24281:2:30"},"nodeType":"YulFunctionCall","src":"24281:17:30"},"nodeType":"YulIf","src":"24278:2:30"},{"nodeType":"YulAssignment","src":"24330:20:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24341:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"24348:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24337:3:30"},"nodeType":"YulFunctionCall","src":"24337:13:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24330:3:30"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24250:5:30","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"24260:3:30","type":""}],"src":"24221:135:30"},{"body":{"nodeType":"YulBlock","src":"24393:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24410:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24413:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24403:6:30"},"nodeType":"YulFunctionCall","src":"24403:88:30"},"nodeType":"YulExpressionStatement","src":"24403:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24507:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24510:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24500:6:30"},"nodeType":"YulFunctionCall","src":"24500:15:30"},"nodeType":"YulExpressionStatement","src":"24500:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24531:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24534:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24524:6:30"},"nodeType":"YulFunctionCall","src":"24524:15:30"},"nodeType":"YulExpressionStatement","src":"24524:15:30"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"24361:184:30"},{"body":{"nodeType":"YulBlock","src":"24582:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24599:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24602:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24592:6:30"},"nodeType":"YulFunctionCall","src":"24592:88:30"},"nodeType":"YulExpressionStatement","src":"24592:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24696:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24699:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24689:6:30"},"nodeType":"YulFunctionCall","src":"24689:15:30"},"nodeType":"YulExpressionStatement","src":"24689:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24720:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24723:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24713:6:30"},"nodeType":"YulFunctionCall","src":"24713:15:30"},"nodeType":"YulExpressionStatement","src":"24713:15:30"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"24550:184:30"},{"body":{"nodeType":"YulBlock","src":"24782:142:30","statements":[{"body":{"nodeType":"YulBlock","src":"24827:91:30","statements":[{"expression":{"arguments":[{"name":"sig","nodeType":"YulIdentifier","src":"24856:3:30"},{"name":"sig","nodeType":"YulIdentifier","src":"24861:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"24866:1:30","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"24841:14:30"},"nodeType":"YulFunctionCall","src":"24841:27:30"},"nodeType":"YulExpressionStatement","src":"24841:27:30"},{"nodeType":"YulAssignment","src":"24881:27:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24892:3:30","type":"","value":"224"},{"arguments":[{"name":"sig","nodeType":"YulIdentifier","src":"24903:3:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24897:5:30"},"nodeType":"YulFunctionCall","src":"24897:10:30"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"24888:3:30"},"nodeType":"YulFunctionCall","src":"24888:20:30"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"24881:3:30"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"24798:14:30"},"nodeType":"YulFunctionCall","src":"24798:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"24816:1:30","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24795:2:30"},"nodeType":"YulFunctionCall","src":"24795:23:30"},"nodeType":"YulIf","src":"24792:2:30"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"24774:3:30","type":""}],"src":"24739:185:30"},{"body":{"nodeType":"YulBlock","src":"24976:624:30","statements":[{"body":{"nodeType":"YulBlock","src":"25016:9:30","statements":[{"nodeType":"YulLeave","src":"25018:5:30"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"24992:14:30"},"nodeType":"YulFunctionCall","src":"24992:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"25010:4:30","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24989:2:30"},"nodeType":"YulFunctionCall","src":"24989:26:30"},"nodeType":"YulIf","src":"24986:2:30"},{"nodeType":"YulVariableDeclaration","src":"25034:21:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25052:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25046:5:30"},"nodeType":"YulFunctionCall","src":"25046:9:30"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"25038:4:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25064:16:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25078:1:30","type":"","value":"3"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"25074:3:30"},"nodeType":"YulFunctionCall","src":"25074:6:30"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"25068:2:30","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"25104:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"25110:1:30","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"25117:14:30"},"nodeType":"YulFunctionCall","src":"25117:16:30"},{"name":"_1","nodeType":"YulIdentifier","src":"25135:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25113:3:30"},"nodeType":"YulFunctionCall","src":"25113:25:30"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"25089:14:30"},"nodeType":"YulFunctionCall","src":"25089:50:30"},"nodeType":"YulExpressionStatement","src":"25089:50:30"},{"nodeType":"YulVariableDeclaration","src":"25148:25:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"25168:4:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25162:5:30"},"nodeType":"YulFunctionCall","src":"25162:11:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25152:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25182:26:30","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"25192:14:30"},"nodeType":"YulFunctionCall","src":"25192:16:30"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"25186:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25217:28:30","value":{"kind":"number","nodeType":"YulLiteral","src":"25227:18:30","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"25221:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"25303:9:30","statements":[{"nodeType":"YulLeave","src":"25305:5:30"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25263:6:30"},{"name":"_3","nodeType":"YulIdentifier","src":"25271:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25260:2:30"},"nodeType":"YulFunctionCall","src":"25260:14:30"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25283:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"25291:4:30","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25279:3:30"},"nodeType":"YulFunctionCall","src":"25279:17:30"},{"name":"_2","nodeType":"YulIdentifier","src":"25298:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25276:2:30"},"nodeType":"YulFunctionCall","src":"25276:25:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"25257:2:30"},"nodeType":"YulFunctionCall","src":"25257:45:30"},"nodeType":"YulIf","src":"25254:2:30"},{"nodeType":"YulVariableDeclaration","src":"25321:28:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"25336:4:30"},{"name":"offset","nodeType":"YulIdentifier","src":"25342:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25332:3:30"},"nodeType":"YulFunctionCall","src":"25332:17:30"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"25325:3:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25358:24:30","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"25378:3:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25372:5:30"},"nodeType":"YulFunctionCall","src":"25372:10:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"25362:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"25409:9:30","statements":[{"nodeType":"YulLeave","src":"25411:5:30"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25397:6:30"},{"name":"_3","nodeType":"YulIdentifier","src":"25405:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25394:2:30"},"nodeType":"YulFunctionCall","src":"25394:14:30"},"nodeType":"YulIf","src":"25391:2:30"},{"body":{"nodeType":"YulBlock","src":"25500:9:30","statements":[{"nodeType":"YulLeave","src":"25502:5:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"25441:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"25446:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25437:3:30"},"nodeType":"YulFunctionCall","src":"25437:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"25455:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25433:3:30"},"nodeType":"YulFunctionCall","src":"25433:27:30"},{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"25470:4:30"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"25476:14:30"},"nodeType":"YulFunctionCall","src":"25476:16:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25466:3:30"},"nodeType":"YulFunctionCall","src":"25466:27:30"},{"name":"_1","nodeType":"YulIdentifier","src":"25495:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25462:3:30"},"nodeType":"YulFunctionCall","src":"25462:36:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25430:2:30"},"nodeType":"YulFunctionCall","src":"25430:69:30"},"nodeType":"YulIf","src":"25427:2:30"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"25538:4:30"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25552:6:30"},{"name":"length","nodeType":"YulIdentifier","src":"25560:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25548:3:30"},"nodeType":"YulFunctionCall","src":"25548:19:30"},{"kind":"number","nodeType":"YulLiteral","src":"25569:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25544:3:30"},"nodeType":"YulFunctionCall","src":"25544:30:30"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"25518:19:30"},"nodeType":"YulFunctionCall","src":"25518:57:30"},"nodeType":"YulExpressionStatement","src":"25518:57:30"},{"nodeType":"YulAssignment","src":"25584:10:30","value":{"name":"msg","nodeType":"YulIdentifier","src":"25591:3:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"25584:3:30"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"24968:3:30","type":""}],"src":"24929:671:30"},{"body":{"nodeType":"YulBlock","src":"25651:133:30","statements":[{"body":{"nodeType":"YulBlock","src":"25762:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25771:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25774:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25764:6:30"},"nodeType":"YulFunctionCall","src":"25764:12:30"},"nodeType":"YulExpressionStatement","src":"25764:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25674:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25685:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"25692:66:30","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25681:3:30"},"nodeType":"YulFunctionCall","src":"25681:78:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25671:2:30"},"nodeType":"YulFunctionCall","src":"25671:89:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25664:6:30"},"nodeType":"YulFunctionCall","src":"25664:97:30"},"nodeType":"YulIf","src":"25661:2:30"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25640:5:30","type":""}],"src":"25605:179:30"}]},"contents":"{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_array$_t_uint256_$dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_t_array$_t_address_$dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, mul(_1, _2)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_t_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), array)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        value2 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value3 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(value4, value4) }\n        value4 := abi_decode_t_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        value4 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(value2, value2) }\n        value2 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(value2, value2) }\n        value2 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(value3, value3) }\n        value3 := abi_decode_t_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value1, value1) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(value3, value3) }\n        value3 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_t_array$_t_address_$dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, mul(_3, _4)), _4), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_t_address(src))\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_t_array$_t_uint256_$dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_t_array$_t_uint256_$dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_t_array$_t_uint256_$dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_t_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_t_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC1155: burn amount exceeds bal\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_382791644f51336ed3667770955aa8eb4efb839029c48708cadb22e92d271435__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC1155Pausable: token transfer \")\n        mstore(add(headStart, 96), \"while paused\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC1155: burn from the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC1155PresetMinterPauser: must \")\n        mstore(add(headStart, 96), \"have minter role to mint\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_be510562063387b7714478be5eff01a8c39efbb1b76d9be224d34aac440c9e31__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"ERC1155PresetMinterPauser: must \")\n        mstore(add(headStart, 96), \"have pauser role to unpause\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d5053a301adec69bf5c7c3782556a354b14090e41fa7ca93c4de3863fd6a98b9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"ERC1155PresetMinterPauser: must \")\n        mstore(add(headStart, 96), \"have pauser role to pause\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_t_array$_t_address_$dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(mul(length, 0x20), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(sig, sig, 4)\n            sig := shr(224, mload(sig))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_t_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x731133E9 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0xCA15C873 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE63AB1E9 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x379 JUMPI PUSH2 0x1A2 JUMP JUMPDEST DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x338 JUMPI PUSH2 0x1A2 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x30A JUMPI PUSH2 0x1A2 JUMP JUMPDEST DUP1 PUSH4 0x731133E9 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x2CF JUMPI PUSH2 0x1A2 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x150 JUMPI DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x12A JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x2A1 JUMPI PUSH2 0x1A2 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x271 JUMPI PUSH2 0x1A2 JUMP JUMPDEST DUP1 PUSH4 0x1F7FDFFA GT PUSH2 0x181 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x238 JUMPI PUSH2 0x1A2 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x1F0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BA PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2143 JUMP JUMPDEST PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x2315 JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x252A JUMP JUMPDEST PUSH2 0x203 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x22BA JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x223 PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x2074 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x22BA JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EFA JUMP JUMPDEST PUSH2 0x4FE JUMP JUMPDEST PUSH2 0x223 PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x22D2 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH2 0x223 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x22D2 JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST PUSH2 0x223 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x21F1 JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x24E9 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x2003 JUMP JUMPDEST PUSH2 0x73F JUMP JUMPDEST PUSH2 0x223 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x219E JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x2434 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x2FD CALLDATASIZE PUSH1 0x4 PUSH2 0x22D2 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x880 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x22BA JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x8AE JUMP JUMPDEST PUSH2 0x223 PUSH2 0x346 CALLDATASIZE PUSH1 0x4 PUSH2 0x22D2 JUMP JUMPDEST PUSH2 0x8D2 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x361 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC8 JUMP JUMPDEST PUSH2 0x912 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x374 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA0 JUMP JUMPDEST PUSH2 0x940 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x216C JUMP JUMPDEST PUSH2 0x997 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x26D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3 DUP3 PUSH2 0xA86 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x40A SWAP1 PUSH2 0x2CE4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x436 SWAP1 PUSH2 0x2CE4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x483 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x458 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x483 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x466 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BB PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x2FD PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x4D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x287F JUMP JUMPDEST PUSH2 0x4E3 DUP5 DUP5 DUP5 DUP5 PUSH2 0xAFC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x506 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x52C JUMPI POP PUSH2 0x52C DUP6 PUSH2 0x361 PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2731 JUMP JUMPDEST PUSH2 0x555 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC8D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x565 DUP3 PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x56E DUP2 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x578 DUP4 DUP4 PUSH2 0xE83 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x585 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH2 0x5BF DUP3 DUP3 PUSH2 0xEA5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5EF PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x2FD PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2939 JUMP JUMPDEST PUSH2 0x613 PUSH2 0xEC7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2A50 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x662 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x68B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x72D JUMPI PUSH2 0x6F2 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6E5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x38C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x712 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x726 DUP2 PUSH2 0x2D4C JUMP JUMPDEST SWAP1 POP PUSH2 0x691 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x747 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x76D JUMPI POP PUSH2 0x76D DUP4 PUSH2 0x361 PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x789 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2731 JUMP JUMPDEST PUSH2 0x578 DUP4 DUP4 DUP4 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0x7C0 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x2FD PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x7DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x287F JUMP JUMPDEST PUSH2 0x4E3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0x814 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x2FD PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2996 JUMP JUMPDEST PUSH2 0x613 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x850 SWAP1 DUP4 PUSH2 0x1236 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x5BF PUSH2 0x890 PUSH2 0xAF8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x3F3 SWAP1 PUSH2 0x12E5 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x8DB DUP3 PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x8E4 DUP2 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x578 DUP4 DUP4 PUSH2 0xEA5 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x948 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x96E JUMPI POP PUSH2 0x96E DUP6 PUSH2 0x361 PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x98A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2731 JUMP JUMPDEST PUSH2 0x555 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x12F0 JUMP JUMPDEST PUSH2 0x99F PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x9C5 JUMPI POP PUSH2 0x9C5 DUP4 PUSH2 0x361 PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2731 JUMP JUMPDEST PUSH2 0x578 DUP4 DUP4 DUP4 PUSH2 0x1451 JUMP JUMPDEST PUSH2 0x9F6 DUP3 DUP3 PUSH2 0x857 JUMP JUMPDEST PUSH2 0x5BF JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xA2D PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x850 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0xAE9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x3F3 JUMPI POP PUSH2 0x3F3 DUP3 PUSH2 0x15CF JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2B0A JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xB43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP PUSH2 0xB5E DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xC16 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB8A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xBB6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBFE SWAP2 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xC0E DUP2 PUSH2 0x2D4C JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB61 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xC67 SWAP3 SWAP2 SWAP1 PUSH2 0x24FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xC7E DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x555 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x161B JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x27C5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDE PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP PUSH2 0xCEE DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD1C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD48 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x28DC JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xDD8 SWAP1 DUP5 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xDEC SWAP1 PUSH2 0x2D4C JUMP JUMPDEST SWAP1 POP PUSH2 0xCF1 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xE43 SWAP3 SWAP2 SWAP1 PUSH2 0x24FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE59 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0xE67 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x161B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE80 DUP2 PUSH2 0xE7B PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x1740 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE8D DUP3 DUP3 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x578 SWAP1 DUP3 PUSH2 0xA71 JUMP JUMPDEST PUSH2 0xEAF DUP3 DUP3 PUSH2 0x1799 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x578 SWAP1 DUP3 PUSH2 0x181C JUMP JUMPDEST PUSH2 0xECF PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xF02 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0F SWAP2 SWAP1 PUSH2 0x2434 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2822 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xF60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6A PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP PUSH2 0xF8A DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x160D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x106E JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFB8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xFE4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x1035 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP1 PUSH2 0x1066 DUP2 PUSH2 0x2D4C JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF8D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x10BF SWAP3 SWAP2 SWAP1 PUSH2 0x24FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x4E3 DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x110B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2B0A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1115 PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1122 DUP6 PUSH2 0x1855 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x112F DUP6 PUSH2 0x1855 JUMP JUMPDEST SWAP1 POP PUSH2 0x1140 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1172 SWAP1 DUP5 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x11C9 SWAP3 SWAP2 SWAP1 PUSH2 0x2C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x11E0 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x11EF DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x18AE JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1200 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF02 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x850 DUP4 DUP4 PUSH2 0x19A4 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x29F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH2 0x12D8 SWAP1 DUP6 SWAP1 PUSH2 0x252A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3 DUP3 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x27C5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1320 PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x132D DUP6 PUSH2 0x1855 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x133A DUP6 PUSH2 0x1855 JUMP JUMPDEST SWAP1 POP PUSH2 0x134A DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x138D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x28DC JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x13CC SWAP1 DUP5 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x1422 SWAP3 SWAP2 SWAP1 PUSH2 0x2C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1438 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x1446 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x18AE JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1477 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2822 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1481 PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x148E DUP5 PUSH2 0x1855 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x149B DUP5 PUSH2 0x1855 JUMP JUMPDEST SWAP1 POP PUSH2 0x14BB DUP4 DUP8 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x160D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x14FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND DUP1 DUP7 MSTORE SWAP2 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP10 DUP7 SUB SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP2 DUP8 AND SWAP1 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP1 PUSH2 0x155F SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH2 0x2C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x11EF DUP5 DUP9 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1591 DUP4 DUP4 PUSH2 0x19E0 JUMP JUMPDEST PUSH2 0x15C7 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3E2 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3F3 JUMPI POP PUSH2 0x3F3 DUP3 PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0xE67 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1A36 JUMP JUMPDEST PUSH2 0x162D DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A69 JUMP JUMPDEST ISZERO PUSH2 0xE67 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1666 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2448 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x16B0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x16AD SWAP2 DUP2 ADD SWAP1 PUSH2 0x2331 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1710 JUMPI PUSH2 0x16BC PUSH2 0x2D93 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x16F6 JUMPI POP PUSH2 0x16D1 PUSH2 0x2DAA JUMP JUMPDEST DUP1 PUSH2 0x16DC JUMPI POP PUSH2 0x16F8 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x253E JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2B67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x11EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2586 JUMP JUMPDEST PUSH2 0x174A DUP3 DUP3 PUSH2 0x857 JUMP JUMPDEST PUSH2 0x5BF JUMPI PUSH2 0x1757 DUP2 PUSH2 0x1A78 JUMP JUMPDEST PUSH2 0x1762 DUP4 PUSH1 0x20 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1773 SWAP3 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x3B4 SWAP2 PUSH1 0x4 ADD PUSH2 0x253E JUMP JUMPDEST PUSH2 0x17A3 DUP3 DUP3 PUSH2 0x857 JUMP JUMPDEST ISZERO PUSH2 0x5BF JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x17D8 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x850 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C81 JUMP JUMPDEST PUSH2 0x1839 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x189D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18C0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A69 JUMP JUMPDEST ISZERO PUSH2 0xE67 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x18F9 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x24A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1913 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1943 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1940 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2331 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x194F JUMPI PUSH2 0x16BC PUSH2 0x2D93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x11EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2586 JUMP JUMPDEST PUSH2 0x1987 PUSH2 0x735 JUMP JUMPDEST ISZERO PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19C9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3F3 JUMPI POP PUSH2 0x3F3 DUP3 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0x1A44 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x1A4C PUSH2 0x735 JUMP JUMPDEST ISZERO PUSH2 0xE67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2677 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1A99 DUP4 PUSH1 0x2 PUSH2 0x2C6B JUMP JUMPDEST PUSH2 0x1AA4 SWAP1 PUSH1 0x2 PUSH2 0x2C53 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ACA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AF4 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1B39 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1B92 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1BB6 DUP5 PUSH1 0x2 PUSH2 0x2C6B JUMP JUMPDEST PUSH2 0x1BC1 SWAP1 PUSH1 0x1 PUSH2 0x2C53 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C62 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1C10 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C34 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1C5B DUP2 PUSH2 0x2CCD JUMP JUMPDEST SWAP1 POP PUSH2 0x1BC4 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1D94 JUMPI PUSH1 0x0 PUSH2 0x1CA5 PUSH1 0x1 DUP4 PUSH2 0x2C8A JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1CB9 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2C8A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1D3A JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1CE7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1D18 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1D59 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DF7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1E04 DUP3 PUSH2 0x2C2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E11 DUP3 DUP3 PUSH2 0x2D1F JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x1E2E JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1E4C JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1E30 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E69 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E83 JUMPI PUSH2 0x1E83 PUSH2 0x2D7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9A PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x2D1F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1EAE JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EDA JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1EE3 DUP4 PUSH2 0x1DD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF1 PUSH1 0x20 DUP5 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1F11 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1F1A DUP7 PUSH2 0x1DD0 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F28 PUSH1 0x20 DUP8 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1F44 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1F50 DUP10 DUP4 DUP11 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F65 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1F71 DUP10 DUP4 DUP11 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F86 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1F93 DUP9 DUP3 DUP10 ADD PUSH2 0x1E59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1FB7 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1FC0 DUP7 PUSH2 0x1DD0 JUMP JUMPDEST SWAP5 POP PUSH2 0x1FCE PUSH1 0x20 DUP8 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FF7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1F93 DUP9 DUP3 DUP10 ADD PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2017 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2020 DUP5 PUSH2 0x1DD0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x203C JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2048 DUP8 DUP4 DUP9 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x205D JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x206A DUP7 DUP3 DUP8 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2089 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2092 DUP6 PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x20AE JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x20BA DUP9 DUP4 DUP10 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x20CF JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x20DB DUP9 DUP4 DUP10 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x20F0 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x20FD DUP8 DUP3 DUP9 ADD PUSH2 0x1E59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x211B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2124 DUP4 PUSH2 0x1DD0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2138 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2155 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x215E DUP4 PUSH2 0x1DD0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2180 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2189 DUP5 PUSH2 0x1DD0 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x21B3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x21BC DUP6 PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21E5 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x20FD DUP8 DUP3 DUP9 ADD PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2203 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x221A JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x222D JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x223A DUP3 PUSH2 0x2C2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2247 DUP3 DUP3 PUSH2 0x2D1F JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x2264 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x228D JUMPI PUSH2 0x2279 DUP2 PUSH2 0x1DD0 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2268 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x22A3 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x22B0 DUP6 DUP3 DUP7 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22CB JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22E4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1EF1 PUSH1 0x20 DUP5 ADD PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2306 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2326 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x850 DUP2 PUSH2 0x2E3C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2342 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x850 DUP2 PUSH2 0x2E3C JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x237C JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2360 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x239F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2CA1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP3 MSTORE DUP4 MLOAD PUSH2 0x23EB DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2CA1 JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x2428 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2CA1 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2474 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x234D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2486 DUP2 DUP7 PUSH2 0x234D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x249A DUP2 DUP6 PUSH2 0x2387 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x24DE PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2387 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x850 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x234D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x250F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x234D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2521 DUP2 DUP6 PUSH2 0x234D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x850 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2387 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x616E636500000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135355061757361626C653A20746F6B656E207472616E7366657220 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7768696C65207061757365640000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6572206F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x38 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135355072657365744D696E7465725061757365723A206D75737420 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x68617665206D696E74657220726F6C6520746F206D696E740000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3B SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135355072657365744D696E7465725061757365723A206D75737420 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x686176652070617573657220726F6C6520746F20756E70617573650000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x39 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135355072657365744D696E7465725061757365723A206D75737420 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x686176652070617573657220726F6C6520746F20706175736500000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x34 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C49 JUMPI PUSH2 0x2C49 PUSH2 0x2D7D JUMP JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2C66 JUMPI PUSH2 0x2C66 PUSH2 0x2D67 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2C85 JUMPI PUSH2 0x2C85 PUSH2 0x2D67 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2C9C JUMPI PUSH2 0x2C9C PUSH2 0x2D67 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CBC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2CA4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4E3 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2CDC JUMPI PUSH2 0x2CDC PUSH2 0x2D67 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2CF8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2D19 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2D45 JUMPI PUSH2 0x2D45 PUSH2 0x2D7D JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2D60 JUMPI PUSH2 0x2D60 PUSH2 0x2D67 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x73C JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2DBA JUMPI PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x2DEC JUMPI POP POP POP POP POP PUSH2 0x73C JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2E06 JUMPI POP POP POP POP POP POP PUSH2 0x73C JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2E22 JUMPI POP POP POP POP POP POP PUSH2 0x73C JUMP JUMPDEST PUSH2 0x2E31 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x2D1F JUMP JUMPDEST POP SWAP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xE80 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT SHL 0x24 0x4C LOG3 SAR DELEGATECALL PUSH14 0xF8D9E562F1EB76A5AC7D9E981BEA BLOCKHASH 0xAD 0x21 DELEGATECALL SWAP16 PUSH28 0x20C37D6164736F6C6343000801003300000000000000000000000000 ","sourceMap":"1017:2790:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227:7;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3270:199:13;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1940:103:7:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2163:278:13:-;;;;;;:::i;:::-;;:::i;:::-;;4504:129:0;;;;;;:::i;:::-;;:::i;4042:426:7:-;;;;;;:::i;:::-;;:::i;4929:145:0:-;;;;;;:::i;:::-;;:::i;6038:214::-;;;;;;:::i;:::-;;:::i;3026:177:13:-;;;:::i;2569:486:7:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1615:84:5:-;;;:::i;699:317:10:-;;;;;;:::i;:::-;;:::i;1815:246:13:-;;;;;;:::i;:::-;;:::i;2646:171::-;;;:::i;1431:151:1:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3021:145:0:-;;;;;;:::i;:::-;;:::i;2153:49::-;;;:::i;3123:153:7:-;;;;;;:::i;:::-;;:::i;1750:140:1:-;;;;;;:::i;:::-;;:::i;1128:62:13:-;;;:::i;5354:147:0:-;;;;;;:::i;:::-;;:::i;1196:62:13:-;;;:::i;3343:166:7:-;;;;;;:::i;:::-;;:::i;3576:394::-;;;;;;:::i;:::-;;:::i;408:285:10:-;;;;;;:::i;:::-;;:::i;2185:227:7:-;2271:7;-1:-1:-1;;;;;2298:21:7;;2290:76;;;;-1:-1:-1;;;2290:76:7;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;2383:13:7;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;2383:22:7;;;;;;;;;;2185:227;;;;;:::o;3270:199:13:-;3403:4;3426:36;3450:11;3426:23;:36::i;:::-;3419:43;;3270:199;;;;:::o;1940:103:7:-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;2163:278:13:-;2294:34;1166:24;2315:12;:10;:12::i;2294:34::-;2286:103;;;;-1:-1:-1;;;2286:103:13;;;;;;;:::i;:::-;2400:34;2411:2;2415:3;2420:7;2429:4;2400:10;:34::i;:::-;2163:278;;;;:::o;4504:129:0:-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129::o;4042:426:7:-;4275:12;:10;:12::i;:::-;-1:-1:-1;;;;;4267:20:7;:4;-1:-1:-1;;;;;4267:20:7;;:60;;;;4291:36;4308:4;4314:12;:10;:12::i;4291:36::-;4246:153;;;;-1:-1:-1;;;4246:153:7;;;;;;;:::i;:::-;4409:52;4432:4;4438:2;4442:3;4447:7;4456:4;4409:22;:52::i;:::-;4042:426;;;;;:::o;4929:145:0:-;5012:18;5025:4;5012:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;6144:12;:10;:12::i;:::-;-1:-1:-1;;;;;6133:23:0;:7;-1:-1:-1;;;;;6133:23:0;;6125:83;;;;-1:-1:-1;;;6125:83:0;;;;;;;:::i;:::-;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;3026:177:13:-;3078:34;1234:24;3099:12;:10;:12::i;3078:34::-;3070:106;;;;-1:-1:-1;;;3070:106:13;;;;;;;:::i;:::-;3186:10;:8;:10::i;:::-;3026:177::o;2569:486:7:-;2702:16;2757:3;:10;2738:8;:15;:29;2730:83;;;;-1:-1:-1;;;2730:83:7;;;;;;;:::i;:::-;2824:30;2871:8;:15;2857:30;;;;;;-1:-1:-1;;;2857:30:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2857:30:7;;2824:63;;2903:9;2898:120;2922:8;:15;2918:1;:19;2898:120;;;2977:30;2987:8;2996:1;2987:11;;;;;;-1:-1:-1;;;2987:11:7;;;;;;;;;;;;;;;3000:3;3004:1;3000:6;;;;;;-1:-1:-1;;;3000:6:7;;;;;;;;;;;;;;;2977:9;:30::i;:::-;2958:13;2972:1;2958:16;;;;;;-1:-1:-1;;;2958:16:7;;;;;;;;;;;;;;;;;;:49;2939:3;;;:::i;:::-;;;2898:120;;;-1:-1:-1;3035:13:7;2569:486;-1:-1:-1;;;2569:486:7:o;1615:84:5:-;1685:7;;;;1615:84;;:::o;699:317:10:-;839:12;:10;:12::i;:::-;-1:-1:-1;;;;;828:23:10;:7;-1:-1:-1;;;;;828:23:10;;:66;;;;855:39;872:7;881:12;:10;:12::i;855:39::-;807:159;;;;-1:-1:-1;;;807:159:10;;;;;;;:::i;:::-;977:32;988:7;997:3;1002:6;977:10;:32::i;1815:246:13:-;1921:34;1166:24;1942:12;:10;:12::i;1921:34::-;1913:103;;;;-1:-1:-1;;;1913:103:13;;;;;;;:::i;:::-;2027:27;2033:2;2037;2041:6;2049:4;2027:5;:27::i;2646:171::-;2696:34;1234:24;2717:12;:10;:12::i;2696:34::-;2688:104;;;;-1:-1:-1;;;2688:104:13;;;;;;;:::i;:::-;2802:8;:6;:8::i;1431:151:1:-;1521:7;1547:18;;;:12;:18;;;;;:28;;1569:5;1547:21;:28::i;:::-;1540:35;1431:151;-1:-1:-1;;;1431:151:1:o;3021:145:0:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;;;;3021:145::o;2153:49::-;2198:4;2153:49;:::o;3123:153:7:-;3217:52;3236:12;:10;:12::i;:::-;3250:8;3260;3217:18;:52::i;1750:140:1:-;1830:7;1856:18;;;:12;:18;;;;;:27;;:25;:27::i;1128:62:13:-;1166:24;1128:62;:::o;5354:147:0:-;5438:18;5451:4;5438:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;1196:62:13:-:0;1234:24;1196:62;:::o;3343:166:7:-;-1:-1:-1;;;;;3465:27:7;;;3442:4;3465:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3343:166::o;3576:394::-;3784:12;:10;:12::i;:::-;-1:-1:-1;;;;;3776:20:7;:4;-1:-1:-1;;;;;3776:20:7;;:60;;;;3800:36;3817:4;3823:12;:10;:12::i;3800:36::-;3755:153;;;;-1:-1:-1;;;3755:153:7;;;;;;;:::i;:::-;3918:45;3936:4;3942:2;3946;3950:6;3958:4;3918:17;:45::i;408:285:10:-;523:12;:10;:12::i;:::-;-1:-1:-1;;;;;512:23:10;:7;-1:-1:-1;;;;;512:23:10;;:66;;;;539:39;556:7;565:12;:10;:12::i;539:39::-;491:159;;;;-1:-1:-1;;;491:159:10;;;;;;;:::i;:::-;661:25;667:7;676:2;680:5;661;:25::i;7587:233:0:-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;7740:4;7708:36;;;7790:12;:10;:12::i;:::-;-1:-1:-1;;;;;7763:40:0;7781:7;-1:-1:-1;;;;;7763:40:0;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;8305:150:28:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:28;;8398:4;:50::i;1236:305:7:-;1338:4;-1:-1:-1;;;;;;1373:41:7;;1388:26;1373:41;;:109;;-1:-1:-1;;;;;;;1430:52:7;;1445:37;1430:52;1373:109;:161;;;;1498:36;1522:11;1498:23;:36::i;640:96:21:-;719:10;640:96;:::o;9669:791:7:-;-1:-1:-1;;;;;9841:16:7;;9833:62;;;;-1:-1:-1;;;9833:62:7;;;;;;;:::i;:::-;9927:7;:14;9913:3;:10;:28;9905:81;;;;-1:-1:-1;;;9905:81:7;;;;;;;:::i;:::-;9997:16;10016:12;:10;:12::i;:::-;9997:31;;10039:66;10060:8;10078:1;10082:2;10086:3;10091:7;10100:4;10039:20;:66::i;:::-;10121:9;10116:101;10140:3;:10;10136:1;:14;10116:101;;;10196:7;10204:1;10196:10;;;;;;-1:-1:-1;;;10196:10:7;;;;;;;;;;;;;;;10171:9;:17;10181:3;10185:1;10181:6;;;;;;-1:-1:-1;;;10181:6:7;;;;;;;;;;;;;;;10171:17;;;;;;;;;;;:21;10189:2;-1:-1:-1;;;;;10171:21:7;-1:-1:-1;;;;;10171:21:7;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;10152:3:7;;-1:-1:-1;10152:3:7;;;:::i;:::-;;;;10116:101;;;;10268:2;-1:-1:-1;;;;;10232:53:7;10264:1;-1:-1:-1;;;;;10232:53:7;10246:8;-1:-1:-1;;;;;10232:53:7;;10272:3;10277:7;10232:53;;;;;;;:::i;:::-;;;;;;;;10296:65;10316:8;10334:1;10338:2;10342:3;10347:7;10356:4;10296:19;:65::i;:::-;10372:81;10408:8;10426:1;10430:2;10434:3;10439:7;10448:4;10372:35;:81::i;6211:1115::-;6431:7;:14;6417:3;:10;:28;6409:81;;;;-1:-1:-1;;;6409:81:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;6508:16:7;;6500:66;;;;-1:-1:-1;;;6500:66:7;;;;;;;:::i;:::-;6577:16;6596:12;:10;:12::i;:::-;6577:31;;6619:60;6640:8;6650:4;6656:2;6660:3;6665:7;6674:4;6619:20;:60::i;:::-;6695:9;6690:411;6714:3;:10;6710:1;:14;6690:411;;;6745:10;6758:3;6762:1;6758:6;;;;;;-1:-1:-1;;;6758:6:7;;;;;;;;;;;;;;;6745:19;;6778:14;6795:7;6803:1;6795:10;;;;;;-1:-1:-1;;;6795:10:7;;;;;;;;;;;;;;;;;;;;6820:19;6842:13;;;:9;:13;;;;;;-1:-1:-1;;;;;6842:19:7;;;;;;;;;;;;6795:10;;-1:-1:-1;6883:21:7;;;;6875:76;;;;-1:-1:-1;;;6875:76:7;;;;;;;:::i;:::-;6993:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6993:19:7;;;;;;;;;;7015:20;;;6993:42;;7063:17;;;;;;;:27;;7015:20;;6993:13;7063:27;;7015:20;;7063:27;:::i;:::-;;;;;;;;6690:411;;;6726:3;;;;:::i;:::-;;;6690:411;;;;7146:2;-1:-1:-1;;;;;7116:47:7;7140:4;-1:-1:-1;;;;;7116:47:7;7130:8;-1:-1:-1;;;;;7116:47:7;;7150:3;7155:7;7116:47;;;;;;;:::i;:::-;;;;;;;;7174:59;7194:8;7204:4;7210:2;7214:3;7219:7;7228:4;7174:19;:59::i;:::-;7244:75;7280:8;7290:4;7296:2;7300:3;7305:7;7314:4;7244:35;:75::i;:::-;6211:1115;;;;;;:::o;3460:103:0:-;3526:30;3537:4;3543:12;:10;:12::i;:::-;3526:10;:30::i;:::-;3460:103;:::o;1978:166:1:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106:18;;;;:12;:18;;;;;:31;;2129:7;2106:22;:31::i;2233:171::-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:18;;;;:12;:18;;;;;:34;;2389:7;2363:25;:34::i;2433:117:5:-;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:5::1;::::0;;2521:22:::1;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;11741:913:7:-;-1:-1:-1;;;;;11858:18:7;;11850:66;;;;-1:-1:-1;;;11850:66:7;;;;;;;:::i;:::-;11948:7;:14;11934:3;:10;:28;11926:81;;;;-1:-1:-1;;;11926:81:7;;;;;;;:::i;:::-;12018:16;12037:12;:10;:12::i;:::-;12018:31;;12060:66;12081:8;12091:4;12105:1;12109:3;12114:7;12060:66;;;;;;;;;;;;:20;:66::i;:::-;12142:9;12137:364;12161:3;:10;12157:1;:14;12137:364;;;12192:10;12205:3;12209:1;12205:6;;;;;;-1:-1:-1;;;12205:6:7;;;;;;;;;;;;;;;12192:19;;12225:14;12242:7;12250:1;12242:10;;;;;;-1:-1:-1;;;12242:10:7;;;;;;;;;;;;;;;;;;;;12267:19;12289:13;;;:9;:13;;;;;;-1:-1:-1;;;;;12289:19:7;;;;;;;;;;;;12242:10;;-1:-1:-1;12330:21:7;;;;12322:70;;;;-1:-1:-1;;;12322:70:7;;;;;;;:::i;:::-;12434:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;12434:19:7;;;;;;;;;;12456:20;;12434:42;;12173:3;;;;:::i;:::-;;;;12137:364;;;;12554:1;-1:-1:-1;;;;;12516:55:7;12540:4;-1:-1:-1;;;;;12516:55:7;12530:8;-1:-1:-1;;;;;12516:55:7;;12558:3;12563:7;12516:55;;;;;;;:::i;:::-;;;;;;;;12582:65;12602:8;12612:4;12626:1;12630:3;12635:7;12582:65;;;;;;;;;;;;:19;:65::i;8608:671::-;-1:-1:-1;;;;;8717:16:7;;8709:62;;;;-1:-1:-1;;;8709:62:7;;;;;;;:::i;:::-;8782:16;8801:12;:10;:12::i;:::-;8782:31;;8823:20;8846:21;8864:2;8846:17;:21::i;:::-;8823:44;;8877:24;8904:25;8922:6;8904:17;:25::i;:::-;8877:52;;8940:66;8961:8;8979:1;8983:2;8987:3;8992:7;9001:4;8940:20;:66::i;:::-;9017:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;9017:17:7;;;;;;;;;:27;;9038:6;;9017:13;:27;;9038:6;;9017:27;:::i;:::-;;;;;;;;9096:2;-1:-1:-1;;;;;9059:52:7;9092:1;-1:-1:-1;;;;;9059:52:7;9074:8;-1:-1:-1;;;;;9059:52:7;;9100:2;9104:6;9059:52;;;;;;;:::i;:::-;;;;;;;;9122:65;9142:8;9160:1;9164:2;9168:3;9173:7;9182:4;9122:19;:65::i;:::-;9198:74;9229:8;9247:1;9251:2;9255;9259:6;9267:4;9198:30;:74::i;:::-;8608:671;;;;;;;:::o;2186:115:5:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:5::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;:10;:12::i;9563:156:28:-:0;9637:7;9687:22;9691:3;9703:5;9687:3;:22::i;12790:293:7:-;12910:8;-1:-1:-1;;;;;12901:17:7;:5;-1:-1:-1;;;;;12901:17:7;;;12893:71;;;;-1:-1:-1;;;12893:71:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;12974:25:7;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;:46;;-1:-1:-1;;12974:46:7;;;;;;;13035:41;;;;;12974:46;;13035:41;:::i;:::-;;;;;;;;12790:293;;;:::o;9106:115:28:-;9169:7;9195:19;9203:3;9195:7;:19::i;4918:947:7:-;-1:-1:-1;;;;;5099:16:7;;5091:66;;;;-1:-1:-1;;;5091:66:7;;;;;;;:::i;:::-;5168:16;5187:12;:10;:12::i;:::-;5168:31;;5209:20;5232:21;5250:2;5232:17;:21::i;:::-;5209:44;;5263:24;5290:25;5308:6;5290:17;:25::i;:::-;5263:52;;5326:60;5347:8;5357:4;5363:2;5367:3;5372:7;5381:4;5326:20;:60::i;:::-;5397:19;5419:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5419:19:7;;;;;;;;;;5456:21;;;;5448:76;;;;-1:-1:-1;;;5448:76:7;;;;;;;:::i;:::-;5558:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5558:19:7;;;;;;;;;;5580:20;;;5558:42;;5620:17;;;;;;;:27;;5580:20;;5558:13;5620:27;;5580:20;;5620:27;:::i;:::-;;;;;;;;5694:2;-1:-1:-1;;;;;5663:46:7;5688:4;-1:-1:-1;;;;;5663:46:7;5678:8;-1:-1:-1;;;;;5663:46:7;;5698:2;5702:6;5663:46;;;;;;;:::i;:::-;;;;;;;;5720:59;5740:8;5750:4;5756:2;5760:3;5765:7;5774:4;5720:19;:59::i;:::-;5790:68;5821:8;5831:4;5837:2;5841;5845:6;5853:4;5790:30;:68::i;:::-;4918:947;;;;;;;;;:::o;10746:756::-;-1:-1:-1;;;;;10838:18:7;;10830:66;;;;-1:-1:-1;;;10830:66:7;;;;;;;:::i;:::-;10907:16;10926:12;:10;:12::i;:::-;10907:31;;10948:20;10971:21;10989:2;10971:17;:21::i;:::-;10948:44;;11002:24;11029:25;11047:6;11029:17;:25::i;:::-;11002:52;;11065:66;11086:8;11096:4;11110:1;11114:3;11119:7;11065:66;;;;;;;;;;;;:20;:66::i;:::-;11142:19;11164:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;11164:19:7;;;;;;;;;;11201:21;;;;11193:70;;;;-1:-1:-1;;;11193:70:7;;;;;;;:::i;:::-;11297:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;11297:19:7;;;;;;;;;;;;;11319:20;;;11297:42;;11365:54;;11297:19;;11365:54;;;;;;;11307:2;;11333:6;;11365:54;:::i;:::-;;;;;;;;11430:65;11450:8;11460:4;11474:1;11478:3;11483:7;11430:65;;;;;;;;;;;;:19;:65::i;2214:404:28:-;2277:4;2298:21;2308:3;2313:5;2298:9;:21::i;:::-;2293:319;;-1:-1:-1;2335:23:28;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:28;2589:12;;634:212:1;719:4;-1:-1:-1;;;;;;742:57:1;;757:42;742:57;;:97;;;803:36;827:11;803:23;:36::i;3475:330:13:-;3732:66;3759:8;3769:4;3775:2;3779:3;3784:7;3793:4;3732:26;:66::i;16116:792:7:-;16348:15;:2;-1:-1:-1;;;;;16348:13:7;;:15::i;:::-;16344:558;;;16383:79;;-1:-1:-1;;;16383:79:7;;-1:-1:-1;;;;;16383:43:7;;;;;:79;;16427:8;;16437:4;;16443:3;;16448:7;;16457:4;;16383:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16383:79:7;;;;;;;;-1:-1:-1;;16383:79:7;;;;;;;;;;;;:::i;:::-;;;16379:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;16768:6;16761:14;;-1:-1:-1;;;16761:14:7;;;;;;;;:::i;16379:513::-;;;16815:62;;-1:-1:-1;;;16815:62:7;;;;;;;:::i;16379:513::-;-1:-1:-1;;;;;;16541:60:7;;-1:-1:-1;;;16541:60:7;16537:157;;16625:50;;-1:-1:-1;;;16625:50:7;;;;;;;:::i;3844:479:0:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:0;;;;;;;;;;-1:-1:-1;;;3970:336:0;;;;;;;:::i;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:0;;;;;;;;;:37;;-1:-1:-1;;8112:37:0;;;8195:12;:10;:12::i;:::-;-1:-1:-1;;;;;8168:40:0;8186:7;-1:-1:-1;;;;;8168:40:0;8180:4;8168:40;;;;;;;;;;7991:234;;:::o;8623:156:28:-;8696:4;8719:53;8727:3;-1:-1:-1;;;;;8747:23:28;;8719:7;:53::i;1945:106:5:-;2011:8;:6;:8::i;:::-;2003:41;;;;-1:-1:-1;;;2003:41:5;;;;;;;:::i;16914:193:7:-;17033:16;;;17047:1;17033:16;;;;;;;;;16980;;17008:22;;17033:16;;;;;;;;;;;;-1:-1:-1;17033:16:7;17008:41;;17070:7;17059:5;17065:1;17059:8;;;;;;-1:-1:-1;;;17059:8:7;;;;;;;;;;;;;;;;;;:18;17095:5;16914:193;-1:-1:-1;;16914:193:7:o;15385:725::-;15592:15;:2;-1:-1:-1;;;;;15592:13:7;;:15::i;:::-;15588:516;;;15627:72;;-1:-1:-1;;;15627:72:7;;-1:-1:-1;;;;;15627:38:7;;;;;:72;;15666:8;;15676:4;;15682:2;;15686:6;;15694:4;;15627:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15627:72:7;;;;;;;;-1:-1:-1;;15627:72:7;;;;;;;;;;;;:::i;:::-;;;15623:471;;;;:::i;:::-;-1:-1:-1;;;;;;15748:55:7;;-1:-1:-1;;;15748:55:7;15744:152;;15827:50;;-1:-1:-1;;;15827:50:7;;;;;;;:::i;1767:106:5:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:5;;;;;;;:::i;4912:118:28:-;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;-1:-1:-1;;;5005:18:28;;;;;;;;;;;;;;;;;4998:25;;4912:118;;;;:::o;4463:107::-;4545:18;;4463:107::o;4255:127::-;4328:4;4351:19;;;:12;;;;;:19;;;;;;:24;;;4255:127::o;2732:202:0:-;2817:4;-1:-1:-1;;;;;;2840:47:0;;2855:32;2840:47;;:87;;;2891:36;2915:11;2891:23;:36::i;1090:381:11:-;1321:66;1348:8;1358:4;1364:2;1368:3;1373:7;1382:4;1321:26;:66::i;:::-;1407:8;:6;:8::i;:::-;1406:9;1398:66;;;;-1:-1:-1;;;1398:66:11;;;;;;;:::i;1412:320:20:-;-1:-1:-1;;;;;1702:19:20;;:23;;;1412:320::o;2407:149:22:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:22;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;-1:-1:-1;;;1940:25:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:22;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;-1:-1:-1;;;1975:9:22;;;;;;;;;;;;:15;-1:-1:-1;;;;;1975:15:22;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;-1:-1:-1;;;2000:9:22;;;;;;;;;;;;:15;-1:-1:-1;;;;;2000:15:22;;;;;;;;-1:-1:-1;2030:9:22;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2105:5;2113:3;2105:11;2096:21;;;;;-1:-1:-1;;;2096:21:22;;;;;;;;;;;;2084:6;2091:1;2084:9;;;;;;-1:-1:-1;;;2084:9:22;;;;;;;;;;;;:33;-1:-1:-1;;;;;2084:33:22;;;;;;;;-1:-1:-1;2141:1:22;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:22;;2162:55;;;;-1:-1:-1;;;2162:55:22;;;;;;;:::i;2786:1388:28:-;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:28;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;-1:-1:-1;;;3571:22:28;;;;;;;;;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;-1:-1:-1;;;3693:26:28;;;;;;;;;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;-1:-1:-1;;;3977:17:28;;;;;;;;;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;829:155:23;-1:-1:-1;;;;;;937:40:23;;952:25;937:40;829:155;;;:::o;14:198:30:-;84:20;;-1:-1:-1;;;;;133:54:30;;123:65;;113:2;;202:1;199;192:12;217:768;;330:3;323:4;315:6;311:17;307:27;297:2;;352:5;345;338:20;297:2;392:6;379:20;418:4;441:49;487:2;441:49;:::i;:::-;519:2;513:9;531:31;559:2;551:6;531:31;:::i;:::-;597:18;;;631:15;;;;-1:-1:-1;666:15:30;;;712:11;;;700:24;;696:33;;693:42;-1:-1:-1;690:2:30;;;752:5;745;738:20;690:2;778:5;792:163;806:2;803:1;800:9;792:163;;;863:17;;851:30;;901:12;;;;933;;;;824:1;817:9;792:163;;;-1:-1:-1;973:6:30;;287:698;-1:-1:-1;;;;;;;287:698:30:o;990:577::-;;1087:3;1080:4;1072:6;1068:17;1064:27;1054:2;;1109:5;1102;1095:20;1054:2;1149:6;1136:20;1175:18;1171:2;1168:26;1165:2;;;1197:18;;:::i;:::-;1246:2;1240:9;1258:67;1313:2;1294:13;;-1:-1:-1;;1290:27:30;1319:4;1286:38;1240:9;1258:67;:::i;:::-;1349:2;1341:6;1334:18;1395:3;1388:4;1383:2;1375:6;1371:15;1367:26;1364:35;1361:2;;;1416:5;1409;1402:20;1361:2;1484;1477:4;1469:6;1465:17;1458:4;1450:6;1446:17;1433:54;1507:15;;;1524:4;1503:26;1496:41;;;;1511:6;1044:523;-1:-1:-1;;1044:523:30:o;1572:274::-;;;1701:2;1689:9;1680:7;1676:23;1672:32;1669:2;;;1722:6;1714;1707:22;1669:2;1750:31;1771:9;1750:31;:::i;:::-;1740:41;;1800:40;1836:2;1825:9;1821:18;1800:40;:::i;:::-;1790:50;;1659:187;;;;;:::o;1851:1001::-;;;;;;2090:3;2078:9;2069:7;2065:23;2061:33;2058:2;;;2112:6;2104;2097:22;2058:2;2140:31;2161:9;2140:31;:::i;:::-;2130:41;;2190:40;2226:2;2215:9;2211:18;2190:40;:::i;:::-;2180:50;;2281:2;2270:9;2266:18;2253:32;2304:18;2345:2;2337:6;2334:14;2331:2;;;2366:6;2358;2351:22;2331:2;2394:67;2453:7;2444:6;2433:9;2429:22;2394:67;:::i;:::-;2384:77;;2514:2;2503:9;2499:18;2486:32;2470:48;;2543:2;2533:8;2530:16;2527:2;;;2564:6;2556;2549:22;2527:2;2592:69;2653:7;2642:8;2631:9;2627:24;2592:69;:::i;:::-;2582:79;;2714:3;2703:9;2699:19;2686:33;2670:49;;2744:2;2734:8;2731:16;2728:2;;;2765:6;2757;2750:22;2728:2;;2793:53;2838:7;2827:8;2816:9;2812:24;2793:53;:::i;:::-;2783:63;;;2048:804;;;;;;;;:::o;2857:632::-;;;;;;3046:3;3034:9;3025:7;3021:23;3017:33;3014:2;;;3068:6;3060;3053:22;3014:2;3096:31;3117:9;3096:31;:::i;:::-;3086:41;;3146:40;3182:2;3171:9;3167:18;3146:40;:::i;:::-;3136:50;;3233:2;3222:9;3218:18;3205:32;3195:42;;3284:2;3273:9;3269:18;3256:32;3246:42;;3339:3;3328:9;3324:19;3311:33;3367:18;3359:6;3356:30;3353:2;;;3404:6;3396;3389:22;3353:2;3432:51;3475:7;3466:6;3455:9;3451:22;3432:51;:::i;3494:713::-;;;;3690:2;3678:9;3669:7;3665:23;3661:32;3658:2;;;3711:6;3703;3696:22;3658:2;3739:31;3760:9;3739:31;:::i;:::-;3729:41;;3821:2;3810:9;3806:18;3793:32;3844:18;3885:2;3877:6;3874:14;3871:2;;;3906:6;3898;3891:22;3871:2;3934:67;3993:7;3984:6;3973:9;3969:22;3934:67;:::i;:::-;3924:77;;4054:2;4043:9;4039:18;4026:32;4010:48;;4083:2;4073:8;4070:16;4067:2;;;4104:6;4096;4089:22;4067:2;;4132:69;4193:7;4182:8;4171:9;4167:24;4132:69;:::i;:::-;4122:79;;;3648:559;;;;;:::o;4212:924::-;;;;;4434:3;4422:9;4413:7;4409:23;4405:33;4402:2;;;4456:6;4448;4441:22;4402:2;4484:31;4505:9;4484:31;:::i;:::-;4474:41;;4566:2;4555:9;4551:18;4538:32;4589:18;4630:2;4622:6;4619:14;4616:2;;;4651:6;4643;4636:22;4616:2;4679:67;4738:7;4729:6;4718:9;4714:22;4679:67;:::i;:::-;4669:77;;4799:2;4788:9;4784:18;4771:32;4755:48;;4828:2;4818:8;4815:16;4812:2;;;4849:6;4841;4834:22;4812:2;4877:69;4938:7;4927:8;4916:9;4912:24;4877:69;:::i;:::-;4867:79;;4999:2;4988:9;4984:18;4971:32;4955:48;;5028:2;5018:8;5015:16;5012:2;;;5049:6;5041;5034:22;5012:2;;5077:53;5122:7;5111:8;5100:9;5096:24;5077:53;:::i;:::-;5067:63;;;4392:744;;;;;;;:::o;5141:369::-;;;5267:2;5255:9;5246:7;5242:23;5238:32;5235:2;;;5288:6;5280;5273:22;5235:2;5316:31;5337:9;5316:31;:::i;:::-;5306:41;;5397:2;5386:9;5382:18;5369:32;5444:5;5437:13;5430:21;5423:5;5420:32;5410:2;;5471:6;5463;5456:22;5410:2;5499:5;5489:15;;;5225:285;;;;;:::o;5515:266::-;;;5644:2;5632:9;5623:7;5619:23;5615:32;5612:2;;;5665:6;5657;5650:22;5612:2;5693:31;5714:9;5693:31;:::i;:::-;5683:41;5771:2;5756:18;;;;5743:32;;-1:-1:-1;;;5602:179:30:o;5786:334::-;;;;5932:2;5920:9;5911:7;5907:23;5903:32;5900:2;;;5953:6;5945;5938:22;5900:2;5981:31;6002:9;5981:31;:::i;:::-;5971:41;6059:2;6044:18;;6031:32;;-1:-1:-1;6110:2:30;6095:18;;;6082:32;;5890:230;-1:-1:-1;;;5890:230:30:o;6125:555::-;;;;;6297:3;6285:9;6276:7;6272:23;6268:33;6265:2;;;6319:6;6311;6304:22;6265:2;6347:31;6368:9;6347:31;:::i;:::-;6337:41;;6425:2;6414:9;6410:18;6397:32;6387:42;;6476:2;6465:9;6461:18;6448:32;6438:42;;6531:2;6520:9;6516:18;6503:32;6558:18;6550:6;6547:30;6544:2;;;6595:6;6587;6580:22;6544:2;6623:51;6666:7;6657:6;6646:9;6642:22;6623:51;:::i;6685:1289::-;;;6864:2;6852:9;6843:7;6839:23;6835:32;6832:2;;;6885:6;6877;6870:22;6832:2;6930:9;6917:23;6959:18;7000:2;6992:6;6989:14;6986:2;;;7021:6;7013;7006:22;6986:2;7064:6;7053:9;7049:22;7039:32;;7109:7;7102:4;7098:2;7094:13;7090:27;7080:2;;7136:6;7128;7121:22;7080:2;7177;7164:16;7199:4;7222:49;7268:2;7222:49;:::i;:::-;7300:2;7294:9;7312:31;7340:2;7332:6;7312:31;:::i;:::-;7378:18;;;7412:15;;;;-1:-1:-1;7447:11:30;;;7485;;;7477:20;;7473:29;;7470:42;-1:-1:-1;7467:2:30;;;7530:6;7522;7515:22;7467:2;7557:6;7548:15;;7572:171;7586:2;7583:1;7580:9;7572:171;;;7643:25;7664:3;7643:25;:::i;:::-;7631:38;;7604:1;7597:9;;;;;7689:12;;;;7721;;7572:171;;;-1:-1:-1;7762:6:30;-1:-1:-1;;7806:18:30;;7793:32;;-1:-1:-1;;7837:16:30;;;7834:2;;;7871:6;7863;7856:22;7834:2;;7899:69;7960:7;7949:8;7938:9;7934:24;7899:69;:::i;:::-;7889:79;;;6822:1152;;;;;:::o;7979:190::-;;8091:2;8079:9;8070:7;8066:23;8062:32;8059:2;;;8112:6;8104;8097:22;8059:2;-1:-1:-1;8140:23:30;;8049:120;-1:-1:-1;8049:120:30:o;8174:266::-;;;8303:2;8291:9;8282:7;8278:23;8274:32;8271:2;;;8324:6;8316;8309:22;8271:2;8365:9;8352:23;8342:33;;8394:40;8430:2;8419:9;8415:18;8394:40;:::i;8445:258::-;;;8574:2;8562:9;8553:7;8549:23;8545:32;8542:2;;;8595:6;8587;8580:22;8542:2;-1:-1:-1;;8623:23:30;;;8693:2;8678:18;;;8665:32;;-1:-1:-1;8532:171:30:o;8708:257::-;;8819:2;8807:9;8798:7;8794:23;8790:32;8787:2;;;8840:6;8832;8825:22;8787:2;8884:9;8871:23;8903:32;8929:5;8903:32;:::i;8970:261::-;;9092:2;9080:9;9071:7;9067:23;9063:32;9060:2;;;9113:6;9105;9098:22;9060:2;9150:9;9144:16;9169:32;9195:5;9169:32;:::i;9431:443::-;;9528:5;9522:12;9555:6;9550:3;9543:19;9581:4;9610:2;9605:3;9601:12;9594:19;;9647:2;9640:5;9636:14;9668:3;9680:169;9694:6;9691:1;9688:13;9680:169;;;9755:13;;9743:26;;9789:12;;;;9824:15;;;;9716:1;9709:9;9680:169;;;-1:-1:-1;9865:3:30;;9498:376;-1:-1:-1;;;;;9498:376:30:o;9879:259::-;;9960:5;9954:12;9987:6;9982:3;9975:19;10003:63;10059:6;10052:4;10047:3;10043:14;10036:4;10029:5;10025:16;10003:63;:::i;:::-;10120:2;10099:15;-1:-1:-1;;10095:29:30;10086:39;;;;10127:4;10082:50;;9930:208;-1:-1:-1;;9930:208:30:o;10143:786::-;;10554:25;10549:3;10542:38;10609:6;10603:13;10625:62;10680:6;10675:2;10670:3;10666:12;10659:4;10651:6;10647:17;10625:62;:::i;:::-;10751:19;10746:2;10706:16;;;10738:11;;;10731:40;10796:13;;10818:63;10796:13;10867:2;10859:11;;10852:4;10840:17;;10818:63;:::i;:::-;10901:17;10920:2;10897:26;;10532:397;-1:-1:-1;;;;10532:397:30:o;10934:226::-;-1:-1:-1;;;;;11098:55:30;;;;11080:74;;11068:2;11053:18;;11035:125::o;11165:863::-;;-1:-1:-1;;;;;11597:2:30;11589:6;11585:15;11574:9;11567:34;11649:2;11641:6;11637:15;11632:2;11621:9;11617:18;11610:43;;11689:3;11684:2;11673:9;11669:18;11662:31;11716:63;11774:3;11763:9;11759:19;11751:6;11716:63;:::i;:::-;11827:9;11819:6;11815:22;11810:2;11799:9;11795:18;11788:50;11861;11904:6;11896;11861:50;:::i;:::-;11847:64;;11960:9;11952:6;11948:22;11942:3;11931:9;11927:19;11920:51;11988:34;12015:6;12007;11988:34;:::i;:::-;11980:42;11496:532;-1:-1:-1;;;;;;;;11496:532:30:o;12033:585::-;;-1:-1:-1;;;;;12365:2:30;12357:6;12353:15;12342:9;12335:34;12417:2;12409:6;12405:15;12400:2;12389:9;12385:18;12378:43;;12457:6;12452:2;12441:9;12437:18;12430:34;12500:6;12495:2;12484:9;12480:18;12473:34;12544:3;12538;12527:9;12523:19;12516:32;12565:47;12607:3;12596:9;12592:19;12584:6;12565:47;:::i;:::-;12557:55;12264:354;-1:-1:-1;;;;;;;12264:354:30:o;12623:267::-;;12802:2;12791:9;12784:21;12822:62;12880:2;12869:9;12865:18;12857:6;12822:62;:::i;12895:477::-;;13152:2;13141:9;13134:21;13178:62;13236:2;13225:9;13221:18;13213:6;13178:62;:::i;:::-;13288:9;13280:6;13276:22;13271:2;13260:9;13256:18;13249:50;13316;13359:6;13351;13316:50;:::i;:::-;13308:58;13124:248;-1:-1:-1;;;;;13124:248:30:o;13377:187::-;13542:14;;13535:22;13517:41;;13505:2;13490:18;;13472:92::o;13569:177::-;13715:25;;;13703:2;13688:18;;13670:76::o;13751:221::-;;13900:2;13889:9;13882:21;13920:46;13962:2;13951:9;13947:18;13939:6;13920:46;:::i;13977:356::-;14179:2;14161:21;;;14198:18;;;14191:30;14257:34;14252:2;14237:18;;14230:62;14324:2;14309:18;;14151:182::o;14338:404::-;14540:2;14522:21;;;14579:2;14559:18;;;14552:30;14618:34;14613:2;14598:18;;14591:62;14689:10;14684:2;14669:18;;14662:38;14732:3;14717:19;;14512:230::o;14747:344::-;14949:2;14931:21;;;14988:2;14968:18;;;14961:30;15027:22;15022:2;15007:18;;15000:50;15082:2;15067:18;;14921:170::o;15096:400::-;15298:2;15280:21;;;15337:2;15317:18;;;15310:30;15376:34;15371:2;15356:18;;15349:62;15447:6;15442:2;15427:18;;15420:34;15486:3;15471:19;;15270:226::o;15501:408::-;15703:2;15685:21;;;15742:2;15722:18;;;15715:30;15781:34;15776:2;15761:18;;15754:62;15852:14;15847:2;15832:18;;15825:42;15899:3;15884:19;;15675:234::o;15914:406::-;16116:2;16098:21;;;16155:2;16135:18;;;16128:30;16194:34;16189:2;16174:18;;16167:62;16265:12;16260:2;16245:18;;16238:40;16310:3;16295:19;;16088:232::o;16325:410::-;16527:2;16509:21;;;16566:2;16546:18;;;16539:30;16605:34;16600:2;16585:18;;16578:62;16676:16;16671:2;16656:18;;16649:44;16725:3;16710:19;;16499:236::o;16740:340::-;16942:2;16924:21;;;16981:2;16961:18;;;16954:30;17020:18;17015:2;17000:18;;16993:46;17071:2;17056:18;;16914:166::o;17085:401::-;17287:2;17269:21;;;17326:2;17306:18;;;17299:30;17365:34;17360:2;17345:18;;17338:62;17436:7;17431:2;17416:18;;17409:35;17476:3;17461:19;;17259:227::o;17491:399::-;17693:2;17675:21;;;17732:2;17712:18;;;17705:30;17771:34;17766:2;17751:18;;17744:62;17842:5;17837:2;17822:18;;17815:33;17880:3;17865:19;;17665:225::o;17895:420::-;18097:2;18079:21;;;18136:2;18116:18;;;18109:30;18175:34;18170:2;18155:18;;18148:62;18246:26;18241:2;18226:18;;18219:54;18305:3;18290:19;;18069:246::o;18320:406::-;18522:2;18504:21;;;18561:2;18541:18;;;18534:30;18600:34;18595:2;18580:18;;18573:62;18671:12;18666:2;18651:18;;18644:40;18716:3;18701:19;;18494:232::o;18731:423::-;18933:2;18915:21;;;18972:2;18952:18;;;18945:30;19011:34;19006:2;18991:18;;18984:62;19082:29;19077:2;19062:18;;19055:57;19144:3;19129:19;;18905:249::o;19159:421::-;19361:2;19343:21;;;19400:2;19380:18;;;19373:30;19439:34;19434:2;19419:18;;19412:62;19510:27;19505:2;19490:18;;19483:55;19570:3;19555:19;;19333:247::o;19585:405::-;19787:2;19769:21;;;19826:2;19806:18;;;19799:30;19865:34;19860:2;19845:18;;19838:62;19936:11;19931:2;19916:18;;19909:39;19980:3;19965:19;;19759:231::o;19995:405::-;20197:2;20179:21;;;20236:2;20216:18;;;20209:30;20275:34;20270:2;20255:18;;20248:62;20346:11;20341:2;20326:18;;20319:39;20390:3;20375:19;;20169:231::o;20405:404::-;20607:2;20589:21;;;20646:2;20626:18;;;20619:30;20685:34;20680:2;20665:18;;20658:62;20756:10;20751:2;20736:18;;20729:38;20799:3;20784:19;;20579:230::o;20814:397::-;21016:2;20998:21;;;21055:2;21035:18;;;21028:30;21094:34;21089:2;21074:18;;21067:62;21165:3;21160:2;21145:18;;21138:31;21201:3;21186:19;;20988:223::o;21216:416::-;21418:2;21400:21;;;21457:2;21437:18;;;21430:30;21496:34;21491:2;21476:18;;21469:62;21567:22;21562:2;21547:18;;21540:50;21622:3;21607:19;;21390:242::o;21637:411::-;21839:2;21821:21;;;21878:2;21858:18;;;21851:30;21917:34;21912:2;21897:18;;21890:62;21988:17;21983:2;21968:18;;21961:45;22038:3;22023:19;;21811:237::o;22235:248::-;22409:25;;;22465:2;22450:18;;22443:34;22397:2;22382:18;;22364:119::o;22488:192::-;;22587:18;22579:6;22576:30;22573:2;;;22609:18;;:::i;:::-;-1:-1:-1;22669:4:30;22650:17;;;22646:28;;22563:117::o;22685:128::-;;22756:1;22752:6;22749:1;22746:13;22743:2;;;22762:18;;:::i;:::-;-1:-1:-1;22798:9:30;;22733:80::o;22818:168::-;;22924:1;22920;22916:6;22912:14;22909:1;22906:21;22901:1;22894:9;22887:17;22883:45;22880:2;;;22931:18;;:::i;:::-;-1:-1:-1;22971:9:30;;22870:116::o;22991:125::-;;23059:1;23056;23053:8;23050:2;;;23064:18;;:::i;:::-;-1:-1:-1;23101:9:30;;23040:76::o;23121:258::-;23193:1;23203:113;23217:6;23214:1;23211:13;23203:113;;;23293:11;;;23287:18;23274:11;;;23267:39;23239:2;23232:10;23203:113;;;23334:6;23331:1;23328:13;23325:2;;;-1:-1:-1;;23369:1:30;23351:16;;23344:27;23174:205::o;23384:136::-;;23451:5;23441:2;;23460:18;;:::i;:::-;-1:-1:-1;;;23496:18:30;;23431:89::o;23525:437::-;23610:1;23600:12;;23657:1;23647:12;;;23668:2;;23722:4;23714:6;23710:17;23700:27;;23668:2;23775;23767:6;23764:14;23744:18;23741:38;23738:2;;;-1:-1:-1;;;23809:1:30;23802:88;23913:4;23910:1;23903:15;23941:4;23938:1;23931:15;23738:2;;23580:382;;;:::o;23967:249::-;24077:2;24058:13;;-1:-1:-1;;24054:27:30;24042:40;;24112:18;24097:34;;24133:22;;;24094:62;24091:2;;;24159:18;;:::i;:::-;24195:2;24188:22;-1:-1:-1;;24014:202:30:o;24221:135::-;;-1:-1:-1;;24281:17:30;;24278:2;;;24301:18;;:::i;:::-;-1:-1:-1;24348:1:30;24337:13;;24268:88::o;24361:184::-;-1:-1:-1;;;24410:1:30;24403:88;24510:4;24507:1;24500:15;24534:4;24531:1;24524:15;24550:184;-1:-1:-1;;;24599:1:30;24592:88;24699:4;24696:1;24689:15;24723:4;24720:1;24713:15;24739:185;;24816:1;24798:16;24795:23;24792:2;;;24866:1;24861:3;24856;24841:27;24897:10;24892:3;24888:20;24782:142;:::o;24929:671::-;;25010:4;24992:16;24989:26;24986:2;;;25018:5;;24986:2;25052;25046:9;-1:-1:-1;;25117:16:30;25113:25;;25110:1;25046:9;25089:50;25168:4;25162:11;25192:16;25227:18;25298:2;25291:4;25283:6;25279:17;25276:25;25271:2;25263:6;25260:14;25257:45;25254:2;;;25305:5;;;;;;;25254:2;25342:6;25336:4;25332:17;25321:28;;25378:3;25372:10;25405:2;25397:6;25394:14;25391:2;;;25411:5;;;;;;;;25391:2;25495;25476:16;25470:4;25466:27;25462:36;25455:4;25446:6;25441:3;25437:16;25433:27;25430:69;25427:2;;;25502:5;;;;;;;;25427:2;25518:57;25569:4;25560:6;25552;25548:19;25544:30;25538:4;25518:57;:::i;:::-;-1:-1:-1;25591:3:30;;-1:-1:-1;;;;;24976:624:30;:::o;25605:179::-;-1:-1:-1;;;;;;25685:5:30;25681:78;25674:5;25671:89;25661:2;;25774:1;25771;25764:12"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","PAUSER_ROLE()":"e63ab1e9","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256,uint256,bytes)":"731133e9","mintBatch(address,uint256[],uint256[],bytes)":"1f7fdffa","pause()":"8456cb59","paused()":"5c975abb","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","unpause()":"3f4ba83a","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC1155} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts. _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE`, and `PAUSER_ROLE` to the account that deploys the contract.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"mint(address,uint256,uint256,bytes)\":{\"details\":\"Creates `amount` new tokens for `to`, of token type `id`. See {ERC1155-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"mintBatch(address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] variant of {mint}.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC1155Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC1155Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/presets/ERC1155PresetMinterPauser.sol\":\"ERC1155PresetMinterPauser\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b488da93995672b613897afa8ed85bb10442351ed54124001832bf2944108601\",\"dweb:/ipfs/QmP2fX6BzbgZyskxXqckeMzC1C3g7wKEbdtZfMegHoGW3j\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0x45381337dbccfb58e9443257ba1850070be892ecacd4b0da7db4c4cfa7df0b09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f07344858992165efa674db005a804953f74882b4bb3f9089813f8a0c6586734\",\"dweb:/ipfs/QmZaAEqBENBkDQa4nuPeNiBWt4Yc1VpTynEadb3o6i8Mek\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":{\"keccak256\":\"0xcdafc421d9de3c739fbc332ba62afebf617e1becaecf598b77420ba0d6709f85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c011181eae0ce89cc0929701df657094e58dd65036fadea8098a16b9740c427\",\"dweb:/ipfs/QmUMBMvTXrrVxVkm841ok2RT2L4fRzV7cGXAVhgDB6hpXN\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/token/ERC1155/presets/ERC1155PresetMinterPauser.sol\":{\"keccak256\":\"0x14c461ef29dbdf524cc9d3c48c648524a996b53b46af6e19bf5aec10854647a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f06569fdb86c89ba40039fabe1fb37ed00da25d619dc5c9158dc5af3d1951568\",\"dweb:/ipfs/QmaiYEuHCQDBnpTStp42pNKnfcJo3iUc7b77cTqj83jXNY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x86e0ebad1483881d5efde55e4e9ef96aae772bc20448289e9a9f566519abd42d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76bd2c6eed6ea1d3a4c433c8174503ee1f5148424d04127fab0691a8fccc4432\",\"dweb:/ipfs/QmXepji41LDhKRSQS9gC8tSpgpomAeM6gyStTEXMdwecyW\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2045:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"80:845:30","statements":[{"body":{"nodeType":"YulBlock","src":"129:24:30","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"138:5:30"},{"name":"array","nodeType":"YulIdentifier","src":"145:5:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:30"},"nodeType":"YulFunctionCall","src":"131:20:30"},"nodeType":"YulExpressionStatement","src":"131:20:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"108:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"116:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"104:3:30"},"nodeType":"YulFunctionCall","src":"104:17:30"},{"name":"end","nodeType":"YulIdentifier","src":"123:3:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"100:3:30"},"nodeType":"YulFunctionCall","src":"100:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"93:6:30"},"nodeType":"YulFunctionCall","src":"93:35:30"},"nodeType":"YulIf","src":"90:2:30"},{"nodeType":"YulVariableDeclaration","src":"162:23:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"178:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"172:5:30"},"nodeType":"YulFunctionCall","src":"172:13:30"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"166:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"194:28:30","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"212:2:30","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"216:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"208:3:30"},"nodeType":"YulFunctionCall","src":"208:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"220:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"204:3:30"},"nodeType":"YulFunctionCall","src":"204:18:30"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"198:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"245:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"247:16:30"},"nodeType":"YulFunctionCall","src":"247:18:30"},"nodeType":"YulExpressionStatement","src":"247:18:30"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"237:2:30"},{"name":"_2","nodeType":"YulIdentifier","src":"241:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"234:2:30"},"nodeType":"YulFunctionCall","src":"234:10:30"},"nodeType":"YulIf","src":"231:2:30"},{"nodeType":"YulVariableDeclaration","src":"276:17:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"290:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"286:3:30"},"nodeType":"YulFunctionCall","src":"286:7:30"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"280:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"302:23:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"322:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"316:5:30"},"nodeType":"YulFunctionCall","src":"316:9:30"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"306:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"334:71:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"356:6:30"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"380:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"384:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"376:3:30"},"nodeType":"YulFunctionCall","src":"376:13:30"},{"name":"_3","nodeType":"YulIdentifier","src":"391:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"372:3:30"},"nodeType":"YulFunctionCall","src":"372:22:30"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:30","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"368:3:30"},"nodeType":"YulFunctionCall","src":"368:31:30"},{"name":"_3","nodeType":"YulIdentifier","src":"401:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"364:3:30"},"nodeType":"YulFunctionCall","src":"364:40:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"352:3:30"},"nodeType":"YulFunctionCall","src":"352:53:30"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"338:10:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"464:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"466:16:30"},"nodeType":"YulFunctionCall","src":"466:18:30"},"nodeType":"YulExpressionStatement","src":"466:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"423:10:30"},{"name":"_2","nodeType":"YulIdentifier","src":"435:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"420:2:30"},"nodeType":"YulFunctionCall","src":"420:18:30"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"443:10:30"},{"name":"memPtr","nodeType":"YulIdentifier","src":"455:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"440:2:30"},"nodeType":"YulFunctionCall","src":"440:22:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"417:2:30"},"nodeType":"YulFunctionCall","src":"417:46:30"},"nodeType":"YulIf","src":"414:2:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:2:30","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"506:10:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"495:6:30"},"nodeType":"YulFunctionCall","src":"495:22:30"},"nodeType":"YulExpressionStatement","src":"495:22:30"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"533:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"541:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"526:6:30"},"nodeType":"YulFunctionCall","src":"526:18:30"},"nodeType":"YulExpressionStatement","src":"526:18:30"},{"nodeType":"YulVariableDeclaration","src":"553:14:30","value":{"kind":"number","nodeType":"YulLiteral","src":"563:4:30","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"557:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"613:24:30","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"622:5:30"},{"name":"array","nodeType":"YulIdentifier","src":"629:5:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"615:6:30"},"nodeType":"YulFunctionCall","src":"615:20:30"},"nodeType":"YulExpressionStatement","src":"615:20:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"590:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"598:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"586:3:30"},"nodeType":"YulFunctionCall","src":"586:15:30"},{"name":"_4","nodeType":"YulIdentifier","src":"603:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"582:3:30"},"nodeType":"YulFunctionCall","src":"582:24:30"},{"name":"end","nodeType":"YulIdentifier","src":"608:3:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"579:2:30"},"nodeType":"YulFunctionCall","src":"579:33:30"},"nodeType":"YulIf","src":"576:2:30"},{"nodeType":"YulVariableDeclaration","src":"646:14:30","value":{"name":"array","nodeType":"YulIdentifier","src":"655:5:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"650:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"715:87:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"744:6:30"},{"name":"i","nodeType":"YulIdentifier","src":"752:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"740:3:30"},"nodeType":"YulFunctionCall","src":"740:14:30"},{"name":"_4","nodeType":"YulIdentifier","src":"756:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"736:3:30"},"nodeType":"YulFunctionCall","src":"736:23:30"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"775:6:30"},{"name":"i","nodeType":"YulIdentifier","src":"783:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"771:3:30"},"nodeType":"YulFunctionCall","src":"771:14:30"},{"name":"_4","nodeType":"YulIdentifier","src":"787:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"767:3:30"},"nodeType":"YulFunctionCall","src":"767:23:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"761:5:30"},"nodeType":"YulFunctionCall","src":"761:30:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"729:6:30"},"nodeType":"YulFunctionCall","src":"729:63:30"},"nodeType":"YulExpressionStatement","src":"729:63:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"680:1:30"},{"name":"_1","nodeType":"YulIdentifier","src":"683:2:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"677:2:30"},"nodeType":"YulFunctionCall","src":"677:9:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"687:19:30","statements":[{"nodeType":"YulAssignment","src":"689:15:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"698:1:30"},{"name":"_4","nodeType":"YulIdentifier","src":"701:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"694:3:30"},"nodeType":"YulFunctionCall","src":"694:10:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"689:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"673:3:30","statements":[]},"src":"669:133:30"},{"body":{"nodeType":"YulBlock","src":"832:63:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"861:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"869:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"857:3:30"},"nodeType":"YulFunctionCall","src":"857:15:30"},{"name":"_4","nodeType":"YulIdentifier","src":"874:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"853:3:30"},"nodeType":"YulFunctionCall","src":"853:24:30"},{"name":"array","nodeType":"YulIdentifier","src":"879:5:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"846:6:30"},"nodeType":"YulFunctionCall","src":"846:39:30"},"nodeType":"YulExpressionStatement","src":"846:39:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"817:1:30"},{"name":"_1","nodeType":"YulIdentifier","src":"820:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"814:2:30"},"nodeType":"YulFunctionCall","src":"814:9:30"},"nodeType":"YulIf","src":"811:2:30"},{"nodeType":"YulAssignment","src":"904:15:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"913:6:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"904:5:30"}]}]},"name":"abi_decode_t_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"54:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"62:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"70:5:30","type":""}],"src":"14:911:30"},{"body":{"nodeType":"YulBlock","src":"1048:478:30","statements":[{"body":{"nodeType":"YulBlock","src":"1094:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1103:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1111:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1096:6:30"},"nodeType":"YulFunctionCall","src":"1096:22:30"},"nodeType":"YulExpressionStatement","src":"1096:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1069:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1078:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1065:3:30"},"nodeType":"YulFunctionCall","src":"1065:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1090:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1061:3:30"},"nodeType":"YulFunctionCall","src":"1061:32:30"},"nodeType":"YulIf","src":"1058:2:30"},{"nodeType":"YulVariableDeclaration","src":"1129:30:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1149:9:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1143:5:30"},"nodeType":"YulFunctionCall","src":"1143:16:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1133:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1168:28:30","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1186:2:30","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1190:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1182:3:30"},"nodeType":"YulFunctionCall","src":"1182:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"1194:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1178:3:30"},"nodeType":"YulFunctionCall","src":"1178:18:30"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1172:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1223:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1232:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1240:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1225:6:30"},"nodeType":"YulFunctionCall","src":"1225:22:30"},"nodeType":"YulExpressionStatement","src":"1225:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1211:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1219:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1208:2:30"},"nodeType":"YulFunctionCall","src":"1208:14:30"},"nodeType":"YulIf","src":"1205:2:30"},{"nodeType":"YulAssignment","src":"1258:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1303:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"1314:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1299:3:30"},"nodeType":"YulFunctionCall","src":"1299:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1323:7:30"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"1268:30:30"},"nodeType":"YulFunctionCall","src":"1268:63:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1258:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"1340:41:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1366:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1377:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1362:3:30"},"nodeType":"YulFunctionCall","src":"1362:18:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1356:5:30"},"nodeType":"YulFunctionCall","src":"1356:25:30"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1344:8:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1410:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1419:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"1427:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1412:6:30"},"nodeType":"YulFunctionCall","src":"1412:22:30"},"nodeType":"YulExpressionStatement","src":"1412:22:30"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1396:8:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1406:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1393:2:30"},"nodeType":"YulFunctionCall","src":"1393:16:30"},"nodeType":"YulIf","src":"1390:2:30"},{"nodeType":"YulAssignment","src":"1445:75:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1490:9:30"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1501:8:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1486:3:30"},"nodeType":"YulFunctionCall","src":"1486:24:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1512:7:30"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"1455:30:30"},"nodeType":"YulFunctionCall","src":"1455:65:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1445:6:30"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1006:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1017:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1029:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1037:6:30","type":""}],"src":"930:596:30"},{"body":{"nodeType":"YulBlock","src":"1586:325:30","statements":[{"nodeType":"YulAssignment","src":"1596:22:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1610:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"1616:1:30","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1606:3:30"},"nodeType":"YulFunctionCall","src":"1606:12:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1596:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"1627:38:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1657:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"1663:1:30","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1653:3:30"},"nodeType":"YulFunctionCall","src":"1653:12:30"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1631:18:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1704:31:30","statements":[{"nodeType":"YulAssignment","src":"1706:27:30","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1720:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"1728:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1716:3:30"},"nodeType":"YulFunctionCall","src":"1716:17:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1706:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1684:18:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1677:6:30"},"nodeType":"YulFunctionCall","src":"1677:26:30"},"nodeType":"YulIf","src":"1674:2:30"},{"body":{"nodeType":"YulBlock","src":"1794:111:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1815:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1822:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1827:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1818:3:30"},"nodeType":"YulFunctionCall","src":"1818:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1808:6:30"},"nodeType":"YulFunctionCall","src":"1808:31:30"},"nodeType":"YulExpressionStatement","src":"1808:31:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1859:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1862:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1852:6:30"},"nodeType":"YulFunctionCall","src":"1852:15:30"},"nodeType":"YulExpressionStatement","src":"1852:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1887:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1890:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1880:6:30"},"nodeType":"YulFunctionCall","src":"1880:15:30"},"nodeType":"YulExpressionStatement","src":"1880:15:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1750:18:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1773:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"1781:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1770:2:30"},"nodeType":"YulFunctionCall","src":"1770:14:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1747:2:30"},"nodeType":"YulFunctionCall","src":"1747:38:30"},"nodeType":"YulIf","src":"1744:2:30"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1566:4:30","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1575:6:30","type":""}],"src":"1531:380:30"},{"body":{"nodeType":"YulBlock","src":"1948:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1965:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1972:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1977:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1968:3:30"},"nodeType":"YulFunctionCall","src":"1968:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1958:6:30"},"nodeType":"YulFunctionCall","src":"1958:31:30"},"nodeType":"YulExpressionStatement","src":"1958:31:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2005:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2008:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1998:6:30"},"nodeType":"YulFunctionCall","src":"1998:15:30"},"nodeType":"YulExpressionStatement","src":"1998:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2029:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2032:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2022:6:30"},"nodeType":"YulFunctionCall","src":"2022:15:30"},"nodeType":"YulExpressionStatement","src":"2022:15:30"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1916:127:30"}]},"contents":"{\n    { }\n    function abi_decode_t_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_t_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000c5738038062000c578339810160408190526200003491620001c1565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b6002810460018216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6109cc806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610177578063a9059cbb1461018a578063dd62ed3e1461019d576100c9565b8063395093511461014957806370a082311461015c57806395d89b411461016f576100c9565b806318160ddd116100b257806318160ddd1461010c57806323b872dd14610121578063313ce56714610134576100c9565b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d66101b0565b6040516100e39190610668565b60405180910390f35b6100ff6100fa366004610634565b610242565b6040516100e3919061065d565b610114610264565b6040516100e39190610920565b6100ff61012f3660046105f9565b61026a565b61013c610298565b6040516100e39190610929565b6100ff610157366004610634565b61029d565b61011461016a3660046105a6565b6102c9565b6100d66102e8565b6100ff610185366004610634565b6102f7565b6100ff610198366004610634565b610348565b6101146101ab3660046105c7565b610360565b6060600380546101bf9061095b565b80601f01602080910402602001604051908101604052809291908181526020018280546101eb9061095b565b80156102385780601f1061020d57610100808354040283529160200191610238565b820191906000526020600020905b81548152906001019060200180831161021b57829003601f168201915b5050505050905090565b60008061024d61038b565b905061025a81858561038f565b5060019392505050565b60025490565b60008061027561038b565b9050610282858285610443565b61028d85858561048d565b506001949350505050565b601290565b6000806102a861038b565b905061025a8185856102ba8589610360565b6102c49190610937565b61038f565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101bf9061095b565b60008061030261038b565b905060006103108286610360565b90508381101561033b5760405162461bcd60e51b8152600401610332906108c3565b60405180910390fd5b61028d828686840361038f565b60008061035361038b565b905061025a81858561048d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166103b55760405162461bcd60e51b815260040161033290610866565b6001600160a01b0382166103db5760405162461bcd60e51b815260040161033290610718565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610436908590610920565b60405180910390a3505050565b600061044f8484610360565b90506000198114610487578181101561047a5760405162461bcd60e51b815260040161033290610775565b610487848484840361038f565b50505050565b6001600160a01b0383166104b35760405162461bcd60e51b815260040161033290610809565b6001600160a01b0382166104d95760405162461bcd60e51b8152600401610332906106bb565b6104e483838361058a565b6001600160a01b0383166000908152602081905260409020548181101561051d5760405162461bcd60e51b8152600401610332906107ac565b6001600160a01b0380851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061057b908690610920565b60405180910390a36104878484845b505050565b80356001600160a01b03811681146102e357600080fd5b6000602082840312156105b7578081fd5b6105c08261058f565b9392505050565b600080604083850312156105d9578081fd5b6105e28361058f565b91506105f06020840161058f565b90509250929050565b60008060006060848603121561060d578081fd5b6106168461058f565b92506106246020850161058f565b9150604084013590509250925092565b60008060408385031215610646578182fd5b61064f8361058f565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b8181101561069457858101830151858201604001528201610678565b818111156106a55783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560408201527f7373000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e63650000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408201527f207a65726f000000000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b60ff91909116815260200190565b6000821982111561095657634e487b7160e01b81526011600452602481fd5b500190565b60028104600182168061096f57607f821691505b6020821081141561099057634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212209babb4fc37d6897ae19ef7601a3f16c61ea536f523b555ba6754e0531548150264736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC57 CODESIZE SUB DUP1 PUSH3 0xC57 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C1 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x27B JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x228 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x11F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13C JUMPI PUSH3 0x13C PUSH3 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x167 JUMPI PUSH3 0x167 PUSH3 0x265 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x183 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A6 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x187 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1B7 JUMPI DUP5 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1EB JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x1F9 DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x20F JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x21E DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x23D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x25F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x9CC DUP1 PUSH3 0x28B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x19D JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x16F JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x634 JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x65D JUMP JUMPDEST PUSH2 0x114 PUSH2 0x264 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x920 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST PUSH2 0x13C PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x929 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x634 JUMP JUMPDEST PUSH2 0x29D JUMP JUMPDEST PUSH2 0x114 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x634 JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x634 JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1BF SWAP1 PUSH2 0x95B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1EB SWAP1 PUSH2 0x95B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x238 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x238 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x21B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x24D PUSH2 0x38B JUMP JUMPDEST SWAP1 POP PUSH2 0x25A DUP2 DUP6 DUP6 PUSH2 0x38F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x275 PUSH2 0x38B JUMP JUMPDEST SWAP1 POP PUSH2 0x282 DUP6 DUP3 DUP6 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x28D DUP6 DUP6 DUP6 PUSH2 0x48D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2A8 PUSH2 0x38B JUMP JUMPDEST SWAP1 POP PUSH2 0x25A DUP2 DUP6 DUP6 PUSH2 0x2BA DUP6 DUP10 PUSH2 0x360 JUMP JUMPDEST PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x38F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1BF SWAP1 PUSH2 0x95B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x302 PUSH2 0x38B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x310 DUP3 DUP7 PUSH2 0x360 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28D DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x38F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x353 PUSH2 0x38B JUMP JUMPDEST SWAP1 POP PUSH2 0x25A DUP2 DUP6 DUP6 PUSH2 0x48D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0x866 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x436 SWAP1 DUP6 SWAP1 PUSH2 0x920 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44F DUP5 DUP5 PUSH2 0x360 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x487 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x487 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x38F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0x6BB JUMP JUMPDEST PUSH2 0x4E4 DUP4 DUP4 DUP4 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x57B SWAP1 DUP7 SWAP1 PUSH2 0x920 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x487 DUP5 DUP5 DUP5 JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B7 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5C0 DUP3 PUSH2 0x58F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5D9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5E2 DUP4 PUSH2 0x58F JUMP JUMPDEST SWAP2 POP PUSH2 0x5F0 PUSH1 0x20 DUP5 ADD PUSH2 0x58F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x60D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x616 DUP5 PUSH2 0x58F JUMP JUMPDEST SWAP3 POP PUSH2 0x624 PUSH1 0x20 DUP6 ADD PUSH2 0x58F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x646 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x64F DUP4 PUSH2 0x58F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x694 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x678 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6A5 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x956 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x96F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x990 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xAB 0xB4 0xFC CALLDATACOPY 0xD6 DUP10 PUSH27 0xE19EF7601A3F16C61EA536F523B555BA6754E0531548150264736F PUSH13 0x63430008010033000000000000 ","sourceMap":"1532:11312:14:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2069:17:14;;;;:7;;:17;;;;;:::i;:::-;;1980:113;;1532:11312;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:14;;;-1:-1:-1;1532:11312:14;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:911:30;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:30;;;231:2;;;247:18;;:::i;:::-;322:2;316:9;290:2;376:13;;-1:-1:-1;;372:22:30;;;396:2;368:31;364:40;352:53;;;420:18;;;440:22;;;417:46;414:2;;;466:18;;:::i;:::-;506:10;502:2;495:22;541:2;533:6;526:18;563:4;553:14;;608:3;603:2;598;590:6;586:15;582:24;579:33;576:2;;;629:5;622;615:20;576:2;655:5;646:14;;669:133;683:2;680:1;677:9;669:133;;;771:14;;;767:23;;761:30;740:14;;;736:23;;729:63;694:10;;;;669:133;;;820:2;817:1;814:9;811:2;;;879:5;874:2;869;861:6;857:15;853:24;846:39;811:2;913:6;80:845;-1:-1:-1;;;;;;80:845:30:o;930:596::-;;;1090:2;1078:9;1069:7;1065:23;1061:32;1058:2;;;1111:6;1103;1096:22;1058:2;1143:16;;-1:-1:-1;;;;;1208:14:30;;;1205:2;;;1240:6;1232;1225:22;1205:2;1268:63;1323:7;1314:6;1303:9;1299:22;1268:63;:::i;:::-;1258:73;;1377:2;1366:9;1362:18;1356:25;1340:41;;1406:2;1396:8;1393:16;1390:2;;;1427:6;1419;1412:22;1390:2;;1455:65;1512:7;1501:8;1490:9;1486:24;1455:65;:::i;:::-;1445:75;;;1048:478;;;;;:::o;1531:380::-;1616:1;1606:12;;1663:1;1653:12;;;1674:2;;1728:4;1720:6;1716:17;1706:27;;1674:2;1781;1773:6;1770:14;1750:18;1747:38;1744:2;;;1827:10;1822:3;1818:20;1815:1;1808:31;1862:4;1859:1;1852:15;1890:4;1887:1;1880:15;1744:2;;1586:325;;;:::o;1916:127::-;1977:10;1972:3;1968:20;1965:1;1958:31;2008:4;2005:1;1998:15;2032:4;2029:1;2022:15;1948:95;1532:11312:14;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6007:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"65:147:30","statements":[{"nodeType":"YulAssignment","src":"75:29:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"84:12:30"},"nodeType":"YulFunctionCall","src":"84:20:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:30"}]},{"body":{"nodeType":"YulBlock","src":"190:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"199:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"202:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"192:6:30"},"nodeType":"YulFunctionCall","src":"192:12:30"},"nodeType":"YulExpressionStatement","src":"192:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"126:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"137:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"144:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"133:3:30"},"nodeType":"YulFunctionCall","src":"133:54:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"123:2:30"},"nodeType":"YulFunctionCall","src":"123:65:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"116:6:30"},"nodeType":"YulFunctionCall","src":"116:73:30"},"nodeType":"YulIf","src":"113:2:30"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55:5:30","type":""}],"src":"14:198:30"},{"body":{"nodeType":"YulBlock","src":"287:128:30","statements":[{"body":{"nodeType":"YulBlock","src":"333:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"342:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"350:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"335:6:30"},"nodeType":"YulFunctionCall","src":"335:22:30"},"nodeType":"YulExpressionStatement","src":"335:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"308:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"317:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"304:3:30"},"nodeType":"YulFunctionCall","src":"304:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"329:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"300:3:30"},"nodeType":"YulFunctionCall","src":"300:32:30"},"nodeType":"YulIf","src":"297:2:30"},{"nodeType":"YulAssignment","src":"368:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"399:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"378:20:30"},"nodeType":"YulFunctionCall","src":"378:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"368:6:30"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"253:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"264:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"276:6:30","type":""}],"src":"217:198:30"},{"body":{"nodeType":"YulBlock","src":"507:187:30","statements":[{"body":{"nodeType":"YulBlock","src":"553:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"562:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"570:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"555:6:30"},"nodeType":"YulFunctionCall","src":"555:22:30"},"nodeType":"YulExpressionStatement","src":"555:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"528:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"537:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"524:3:30"},"nodeType":"YulFunctionCall","src":"524:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"549:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"520:3:30"},"nodeType":"YulFunctionCall","src":"520:32:30"},"nodeType":"YulIf","src":"517:2:30"},{"nodeType":"YulAssignment","src":"588:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"619:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"598:20:30"},"nodeType":"YulFunctionCall","src":"598:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"588:6:30"}]},{"nodeType":"YulAssignment","src":"638:50:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"673:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"684:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"669:3:30"},"nodeType":"YulFunctionCall","src":"669:18:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"648:20:30"},"nodeType":"YulFunctionCall","src":"648:40:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"638:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"465:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"476:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"488:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"496:6:30","type":""}],"src":"420:274:30"},{"body":{"nodeType":"YulBlock","src":"803:238:30","statements":[{"body":{"nodeType":"YulBlock","src":"849:26:30","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"858:6:30"},{"name":"value2","nodeType":"YulIdentifier","src":"866:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"851:6:30"},"nodeType":"YulFunctionCall","src":"851:22:30"},"nodeType":"YulExpressionStatement","src":"851:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"824:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"833:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"820:3:30"},"nodeType":"YulFunctionCall","src":"820:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"845:2:30","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"816:3:30"},"nodeType":"YulFunctionCall","src":"816:32:30"},"nodeType":"YulIf","src":"813:2:30"},{"nodeType":"YulAssignment","src":"884:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"915:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"894:20:30"},"nodeType":"YulFunctionCall","src":"894:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"884:6:30"}]},{"nodeType":"YulAssignment","src":"934:50:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"980:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"965:3:30"},"nodeType":"YulFunctionCall","src":"965:18:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"944:20:30"},"nodeType":"YulFunctionCall","src":"944:40:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"934:6:30"}]},{"nodeType":"YulAssignment","src":"993:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1020:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1031:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1016:3:30"},"nodeType":"YulFunctionCall","src":"1016:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1003:12:30"},"nodeType":"YulFunctionCall","src":"1003:32:30"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"993:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"753:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"764:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"776:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"784:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"792:6:30","type":""}],"src":"699:342:30"},{"body":{"nodeType":"YulBlock","src":"1133:179:30","statements":[{"body":{"nodeType":"YulBlock","src":"1179:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1188:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1196:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1181:6:30"},"nodeType":"YulFunctionCall","src":"1181:22:30"},"nodeType":"YulExpressionStatement","src":"1181:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1154:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1163:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1150:3:30"},"nodeType":"YulFunctionCall","src":"1150:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1146:3:30"},"nodeType":"YulFunctionCall","src":"1146:32:30"},"nodeType":"YulIf","src":"1143:2:30"},{"nodeType":"YulAssignment","src":"1214:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1245:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1224:20:30"},"nodeType":"YulFunctionCall","src":"1224:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1214:6:30"}]},{"nodeType":"YulAssignment","src":"1264:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1291:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1302:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1287:3:30"},"nodeType":"YulFunctionCall","src":"1287:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1274:12:30"},"nodeType":"YulFunctionCall","src":"1274:32:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1264:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1091:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1102:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1114:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1122:6:30","type":""}],"src":"1046:266:30"},{"body":{"nodeType":"YulBlock","src":"1412:92:30","statements":[{"nodeType":"YulAssignment","src":"1422:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1434:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1445:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1430:3:30"},"nodeType":"YulFunctionCall","src":"1430:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1422:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1464:9:30"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1489:6:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1482:6:30"},"nodeType":"YulFunctionCall","src":"1482:14:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1475:6:30"},"nodeType":"YulFunctionCall","src":"1475:22:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1457:6:30"},"nodeType":"YulFunctionCall","src":"1457:41:30"},"nodeType":"YulExpressionStatement","src":"1457:41:30"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1381:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1392:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1403:4:30","type":""}],"src":"1317:187:30"},{"body":{"nodeType":"YulBlock","src":"1630:482:30","statements":[{"nodeType":"YulVariableDeclaration","src":"1640:12:30","value":{"kind":"number","nodeType":"YulLiteral","src":"1650:2:30","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1644:2:30","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1668:9:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1679:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1661:6:30"},"nodeType":"YulFunctionCall","src":"1661:21:30"},"nodeType":"YulExpressionStatement","src":"1661:21:30"},{"nodeType":"YulVariableDeclaration","src":"1691:27:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1711:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1705:5:30"},"nodeType":"YulFunctionCall","src":"1705:13:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1695:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1738:9:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1749:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1734:3:30"},"nodeType":"YulFunctionCall","src":"1734:18:30"},{"name":"length","nodeType":"YulIdentifier","src":"1754:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1727:6:30"},"nodeType":"YulFunctionCall","src":"1727:34:30"},"nodeType":"YulExpressionStatement","src":"1727:34:30"},{"nodeType":"YulVariableDeclaration","src":"1770:13:30","value":{"name":"tail","nodeType":"YulIdentifier","src":"1779:4:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1774:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1842:90:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1871:9:30"},{"name":"i","nodeType":"YulIdentifier","src":"1882:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1867:3:30"},"nodeType":"YulFunctionCall","src":"1867:17:30"},{"kind":"number","nodeType":"YulLiteral","src":"1886:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1863:3:30"},"nodeType":"YulFunctionCall","src":"1863:26:30"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1905:6:30"},{"name":"i","nodeType":"YulIdentifier","src":"1913:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1901:3:30"},"nodeType":"YulFunctionCall","src":"1901:14:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1917:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1897:3:30"},"nodeType":"YulFunctionCall","src":"1897:23:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1891:5:30"},"nodeType":"YulFunctionCall","src":"1891:30:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1856:6:30"},"nodeType":"YulFunctionCall","src":"1856:66:30"},"nodeType":"YulExpressionStatement","src":"1856:66:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1803:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"1806:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1800:2:30"},"nodeType":"YulFunctionCall","src":"1800:13:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1814:19:30","statements":[{"nodeType":"YulAssignment","src":"1816:15:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1825:1:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1828:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1821:3:30"},"nodeType":"YulFunctionCall","src":"1821:10:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"1796:3:30","statements":[]},"src":"1792:140:30"},{"body":{"nodeType":"YulBlock","src":"1966:69:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1995:9:30"},{"name":"length","nodeType":"YulIdentifier","src":"2006:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1991:3:30"},"nodeType":"YulFunctionCall","src":"1991:22:30"},{"kind":"number","nodeType":"YulLiteral","src":"2015:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1987:3:30"},"nodeType":"YulFunctionCall","src":"1987:31:30"},{"name":"tail","nodeType":"YulIdentifier","src":"2020:4:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1980:6:30"},"nodeType":"YulFunctionCall","src":"1980:45:30"},"nodeType":"YulExpressionStatement","src":"1980:45:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1947:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"1950:6:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1944:2:30"},"nodeType":"YulFunctionCall","src":"1944:13:30"},"nodeType":"YulIf","src":"1941:2:30"},{"nodeType":"YulAssignment","src":"2044:62:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2060:9:30"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2079:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"2087:2:30","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2075:3:30"},"nodeType":"YulFunctionCall","src":"2075:15:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2096:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2092:3:30"},"nodeType":"YulFunctionCall","src":"2092:7:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2071:3:30"},"nodeType":"YulFunctionCall","src":"2071:29:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2056:3:30"},"nodeType":"YulFunctionCall","src":"2056:45:30"},{"kind":"number","nodeType":"YulLiteral","src":"2103:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2052:3:30"},"nodeType":"YulFunctionCall","src":"2052:54:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2044:4:30"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1599:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1610:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1621:4:30","type":""}],"src":"1509:603:30"},{"body":{"nodeType":"YulBlock","src":"2291:225:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2308:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2319:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2301:6:30"},"nodeType":"YulFunctionCall","src":"2301:21:30"},"nodeType":"YulExpressionStatement","src":"2301:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2342:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2353:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2338:3:30"},"nodeType":"YulFunctionCall","src":"2338:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"2358:2:30","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2331:6:30"},"nodeType":"YulFunctionCall","src":"2331:30:30"},"nodeType":"YulExpressionStatement","src":"2331:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2381:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2392:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2377:3:30"},"nodeType":"YulFunctionCall","src":"2377:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"2397:34:30","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2370:6:30"},"nodeType":"YulFunctionCall","src":"2370:62:30"},"nodeType":"YulExpressionStatement","src":"2370:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2452:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2463:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2448:3:30"},"nodeType":"YulFunctionCall","src":"2448:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"2468:5:30","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2441:6:30"},"nodeType":"YulFunctionCall","src":"2441:33:30"},"nodeType":"YulExpressionStatement","src":"2441:33:30"},{"nodeType":"YulAssignment","src":"2483:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2495:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2506:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2491:3:30"},"nodeType":"YulFunctionCall","src":"2491:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2483:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2268:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2282:4:30","type":""}],"src":"2117:399:30"},{"body":{"nodeType":"YulBlock","src":"2695:224:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2712:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2723:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:30"},"nodeType":"YulFunctionCall","src":"2705:21:30"},"nodeType":"YulExpressionStatement","src":"2705:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2746:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2757:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2742:3:30"},"nodeType":"YulFunctionCall","src":"2742:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"2762:2:30","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2735:6:30"},"nodeType":"YulFunctionCall","src":"2735:30:30"},"nodeType":"YulExpressionStatement","src":"2735:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2785:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2796:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2781:3:30"},"nodeType":"YulFunctionCall","src":"2781:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"2801:34:30","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2774:6:30"},"nodeType":"YulFunctionCall","src":"2774:62:30"},"nodeType":"YulExpressionStatement","src":"2774:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2856:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2867:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2852:3:30"},"nodeType":"YulFunctionCall","src":"2852:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"2872:4:30","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2845:6:30"},"nodeType":"YulFunctionCall","src":"2845:32:30"},"nodeType":"YulExpressionStatement","src":"2845:32:30"},{"nodeType":"YulAssignment","src":"2886:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2898:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2909:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2894:3:30"},"nodeType":"YulFunctionCall","src":"2894:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2886:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2672:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2686:4:30","type":""}],"src":"2521:398:30"},{"body":{"nodeType":"YulBlock","src":"3098:179:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3115:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3126:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3108:6:30"},"nodeType":"YulFunctionCall","src":"3108:21:30"},"nodeType":"YulExpressionStatement","src":"3108:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3149:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3160:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3145:3:30"},"nodeType":"YulFunctionCall","src":"3145:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"3165:2:30","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3138:6:30"},"nodeType":"YulFunctionCall","src":"3138:30:30"},"nodeType":"YulExpressionStatement","src":"3138:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3188:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3199:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3184:3:30"},"nodeType":"YulFunctionCall","src":"3184:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"3204:31:30","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3177:6:30"},"nodeType":"YulFunctionCall","src":"3177:59:30"},"nodeType":"YulExpressionStatement","src":"3177:59:30"},{"nodeType":"YulAssignment","src":"3245:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3257:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3268:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3253:3:30"},"nodeType":"YulFunctionCall","src":"3253:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3245:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3075:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3089:4:30","type":""}],"src":"2924:353:30"},{"body":{"nodeType":"YulBlock","src":"3456:228:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3473:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3484:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3466:6:30"},"nodeType":"YulFunctionCall","src":"3466:21:30"},"nodeType":"YulExpressionStatement","src":"3466:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3507:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3518:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3503:3:30"},"nodeType":"YulFunctionCall","src":"3503:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"3523:2:30","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3496:6:30"},"nodeType":"YulFunctionCall","src":"3496:30:30"},"nodeType":"YulExpressionStatement","src":"3496:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3546:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3557:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3542:3:30"},"nodeType":"YulFunctionCall","src":"3542:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"3562:34:30","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3535:6:30"},"nodeType":"YulFunctionCall","src":"3535:62:30"},"nodeType":"YulExpressionStatement","src":"3535:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3617:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3628:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3613:3:30"},"nodeType":"YulFunctionCall","src":"3613:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"3633:8:30","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3606:6:30"},"nodeType":"YulFunctionCall","src":"3606:36:30"},"nodeType":"YulExpressionStatement","src":"3606:36:30"},{"nodeType":"YulAssignment","src":"3651:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3663:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3674:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3659:3:30"},"nodeType":"YulFunctionCall","src":"3659:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3651:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3433:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3447:4:30","type":""}],"src":"3282:402:30"},{"body":{"nodeType":"YulBlock","src":"3863:227:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3880:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3891:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3873:6:30"},"nodeType":"YulFunctionCall","src":"3873:21:30"},"nodeType":"YulExpressionStatement","src":"3873:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3914:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3925:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3910:3:30"},"nodeType":"YulFunctionCall","src":"3910:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"3930:2:30","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3903:6:30"},"nodeType":"YulFunctionCall","src":"3903:30:30"},"nodeType":"YulExpressionStatement","src":"3903:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3953:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3964:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3949:3:30"},"nodeType":"YulFunctionCall","src":"3949:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"3969:34:30","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3942:6:30"},"nodeType":"YulFunctionCall","src":"3942:62:30"},"nodeType":"YulExpressionStatement","src":"3942:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4024:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4035:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4020:3:30"},"nodeType":"YulFunctionCall","src":"4020:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"4040:7:30","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4013:6:30"},"nodeType":"YulFunctionCall","src":"4013:35:30"},"nodeType":"YulExpressionStatement","src":"4013:35:30"},{"nodeType":"YulAssignment","src":"4057:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4069:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4080:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4065:3:30"},"nodeType":"YulFunctionCall","src":"4065:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4057:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3840:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3854:4:30","type":""}],"src":"3689:401:30"},{"body":{"nodeType":"YulBlock","src":"4269:226:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4286:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4297:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4279:6:30"},"nodeType":"YulFunctionCall","src":"4279:21:30"},"nodeType":"YulExpressionStatement","src":"4279:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4320:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4331:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4316:3:30"},"nodeType":"YulFunctionCall","src":"4316:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"4336:2:30","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4309:6:30"},"nodeType":"YulFunctionCall","src":"4309:30:30"},"nodeType":"YulExpressionStatement","src":"4309:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4359:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4370:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4355:3:30"},"nodeType":"YulFunctionCall","src":"4355:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"4375:34:30","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4348:6:30"},"nodeType":"YulFunctionCall","src":"4348:62:30"},"nodeType":"YulExpressionStatement","src":"4348:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4430:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4441:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4426:3:30"},"nodeType":"YulFunctionCall","src":"4426:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"4446:6:30","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4419:6:30"},"nodeType":"YulFunctionCall","src":"4419:34:30"},"nodeType":"YulExpressionStatement","src":"4419:34:30"},{"nodeType":"YulAssignment","src":"4462:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4474:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4485:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4470:3:30"},"nodeType":"YulFunctionCall","src":"4470:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4462:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4246:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4260:4:30","type":""}],"src":"4095:400:30"},{"body":{"nodeType":"YulBlock","src":"4674:227:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4691:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4702:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4684:6:30"},"nodeType":"YulFunctionCall","src":"4684:21:30"},"nodeType":"YulExpressionStatement","src":"4684:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4725:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4736:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4721:3:30"},"nodeType":"YulFunctionCall","src":"4721:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"4741:2:30","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4714:6:30"},"nodeType":"YulFunctionCall","src":"4714:30:30"},"nodeType":"YulExpressionStatement","src":"4714:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4764:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4775:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4760:3:30"},"nodeType":"YulFunctionCall","src":"4760:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"4780:34:30","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4753:6:30"},"nodeType":"YulFunctionCall","src":"4753:62:30"},"nodeType":"YulExpressionStatement","src":"4753:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4835:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4846:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4831:3:30"},"nodeType":"YulFunctionCall","src":"4831:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"4851:7:30","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4824:6:30"},"nodeType":"YulFunctionCall","src":"4824:35:30"},"nodeType":"YulExpressionStatement","src":"4824:35:30"},{"nodeType":"YulAssignment","src":"4868:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4880:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4891:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4876:3:30"},"nodeType":"YulFunctionCall","src":"4876:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4868:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4651:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4665:4:30","type":""}],"src":"4500:401:30"},{"body":{"nodeType":"YulBlock","src":"5007:76:30","statements":[{"nodeType":"YulAssignment","src":"5017:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5029:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5040:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5025:3:30"},"nodeType":"YulFunctionCall","src":"5025:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5017:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5059:9:30"},{"name":"value0","nodeType":"YulIdentifier","src":"5070:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5052:6:30"},"nodeType":"YulFunctionCall","src":"5052:25:30"},"nodeType":"YulExpressionStatement","src":"5052:25:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4976:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4987:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4998:4:30","type":""}],"src":"4906:177:30"},{"body":{"nodeType":"YulBlock","src":"5185:87:30","statements":[{"nodeType":"YulAssignment","src":"5195:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5207:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5218:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5203:3:30"},"nodeType":"YulFunctionCall","src":"5203:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5195:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5237:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5252:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"5260:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5248:3:30"},"nodeType":"YulFunctionCall","src":"5248:17:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5230:6:30"},"nodeType":"YulFunctionCall","src":"5230:36:30"},"nodeType":"YulExpressionStatement","src":"5230:36:30"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5154:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5165:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5176:4:30","type":""}],"src":"5088:184:30"},{"body":{"nodeType":"YulBlock","src":"5325:238:30","statements":[{"body":{"nodeType":"YulBlock","src":"5360:172:30","statements":[{"expression":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"5381:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"5386:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5374:6:30"},"nodeType":"YulFunctionCall","src":"5374:90:30"},"nodeType":"YulExpressionStatement","src":"5374:90:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5484:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5487:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5477:6:30"},"nodeType":"YulFunctionCall","src":"5477:15:30"},"nodeType":"YulExpressionStatement","src":"5477:15:30"},{"expression":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"5512:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"5517:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5505:6:30"},"nodeType":"YulFunctionCall","src":"5505:17:30"},"nodeType":"YulExpressionStatement","src":"5505:17:30"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5341:1:30"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5348:1:30"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5344:3:30"},"nodeType":"YulFunctionCall","src":"5344:6:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5338:2:30"},"nodeType":"YulFunctionCall","src":"5338:13:30"},"nodeType":"YulIf","src":"5335:2:30"},{"nodeType":"YulAssignment","src":"5541:16:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5552:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"5555:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5548:3:30"},"nodeType":"YulFunctionCall","src":"5548:9:30"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5541:3:30"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5308:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"5311:1:30","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5317:3:30","type":""}],"src":"5277:286:30"},{"body":{"nodeType":"YulBlock","src":"5623:382:30","statements":[{"nodeType":"YulAssignment","src":"5633:22:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5647:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"5653:1:30","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5643:3:30"},"nodeType":"YulFunctionCall","src":"5643:12:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5633:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"5664:38:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5694:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"5700:1:30","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5690:3:30"},"nodeType":"YulFunctionCall","src":"5690:12:30"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5668:18:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"5741:31:30","statements":[{"nodeType":"YulAssignment","src":"5743:27:30","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5757:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"5765:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5753:3:30"},"nodeType":"YulFunctionCall","src":"5753:17:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5743:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5721:18:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5714:6:30"},"nodeType":"YulFunctionCall","src":"5714:26:30"},"nodeType":"YulIf","src":"5711:2:30"},{"body":{"nodeType":"YulBlock","src":"5831:168:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5852:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5855:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5845:6:30"},"nodeType":"YulFunctionCall","src":"5845:88:30"},"nodeType":"YulExpressionStatement","src":"5845:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5953:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5956:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5946:6:30"},"nodeType":"YulFunctionCall","src":"5946:15:30"},"nodeType":"YulExpressionStatement","src":"5946:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5981:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5984:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5974:6:30"},"nodeType":"YulFunctionCall","src":"5974:15:30"},"nodeType":"YulExpressionStatement","src":"5974:15:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5787:18:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5810:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"5818:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5807:2:30"},"nodeType":"YulFunctionCall","src":"5807:14:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5784:2:30"},"nodeType":"YulFunctionCall","src":"5784:38:30"},"nodeType":"YulIf","src":"5781:2:30"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5603:4:30","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5612:6:30","type":""}],"src":"5568:437:30"}]},"contents":"{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610177578063a9059cbb1461018a578063dd62ed3e1461019d576100c9565b8063395093511461014957806370a082311461015c57806395d89b411461016f576100c9565b806318160ddd116100b257806318160ddd1461010c57806323b872dd14610121578063313ce56714610134576100c9565b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d66101b0565b6040516100e39190610668565b60405180910390f35b6100ff6100fa366004610634565b610242565b6040516100e3919061065d565b610114610264565b6040516100e39190610920565b6100ff61012f3660046105f9565b61026a565b61013c610298565b6040516100e39190610929565b6100ff610157366004610634565b61029d565b61011461016a3660046105a6565b6102c9565b6100d66102e8565b6100ff610185366004610634565b6102f7565b6100ff610198366004610634565b610348565b6101146101ab3660046105c7565b610360565b6060600380546101bf9061095b565b80601f01602080910402602001604051908101604052809291908181526020018280546101eb9061095b565b80156102385780601f1061020d57610100808354040283529160200191610238565b820191906000526020600020905b81548152906001019060200180831161021b57829003601f168201915b5050505050905090565b60008061024d61038b565b905061025a81858561038f565b5060019392505050565b60025490565b60008061027561038b565b9050610282858285610443565b61028d85858561048d565b506001949350505050565b601290565b6000806102a861038b565b905061025a8185856102ba8589610360565b6102c49190610937565b61038f565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101bf9061095b565b60008061030261038b565b905060006103108286610360565b90508381101561033b5760405162461bcd60e51b8152600401610332906108c3565b60405180910390fd5b61028d828686840361038f565b60008061035361038b565b905061025a81858561048d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166103b55760405162461bcd60e51b815260040161033290610866565b6001600160a01b0382166103db5760405162461bcd60e51b815260040161033290610718565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610436908590610920565b60405180910390a3505050565b600061044f8484610360565b90506000198114610487578181101561047a5760405162461bcd60e51b815260040161033290610775565b610487848484840361038f565b50505050565b6001600160a01b0383166104b35760405162461bcd60e51b815260040161033290610809565b6001600160a01b0382166104d95760405162461bcd60e51b8152600401610332906106bb565b6104e483838361058a565b6001600160a01b0383166000908152602081905260409020548181101561051d5760405162461bcd60e51b8152600401610332906107ac565b6001600160a01b0380851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061057b908690610920565b60405180910390a36104878484845b505050565b80356001600160a01b03811681146102e357600080fd5b6000602082840312156105b7578081fd5b6105c08261058f565b9392505050565b600080604083850312156105d9578081fd5b6105e28361058f565b91506105f06020840161058f565b90509250929050565b60008060006060848603121561060d578081fd5b6106168461058f565b92506106246020850161058f565b9150604084013590509250925092565b60008060408385031215610646578182fd5b61064f8361058f565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b8181101561069457858101830151858201604001528201610678565b818111156106a55783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560408201527f7373000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e63650000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408201527f207a65726f000000000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b60ff91909116815260200190565b6000821982111561095657634e487b7160e01b81526011600452602481fd5b500190565b60028104600182168061096f57607f821691505b6020821081141561099057634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212209babb4fc37d6897ae19ef7601a3f16c61ea536f523b555ba6754e0531548150264736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x19D JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x16F JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x634 JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x65D JUMP JUMPDEST PUSH2 0x114 PUSH2 0x264 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x920 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST PUSH2 0x13C PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x929 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x634 JUMP JUMPDEST PUSH2 0x29D JUMP JUMPDEST PUSH2 0x114 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x634 JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x634 JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1BF SWAP1 PUSH2 0x95B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1EB SWAP1 PUSH2 0x95B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x238 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x238 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x21B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x24D PUSH2 0x38B JUMP JUMPDEST SWAP1 POP PUSH2 0x25A DUP2 DUP6 DUP6 PUSH2 0x38F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x275 PUSH2 0x38B JUMP JUMPDEST SWAP1 POP PUSH2 0x282 DUP6 DUP3 DUP6 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x28D DUP6 DUP6 DUP6 PUSH2 0x48D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2A8 PUSH2 0x38B JUMP JUMPDEST SWAP1 POP PUSH2 0x25A DUP2 DUP6 DUP6 PUSH2 0x2BA DUP6 DUP10 PUSH2 0x360 JUMP JUMPDEST PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x38F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1BF SWAP1 PUSH2 0x95B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x302 PUSH2 0x38B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x310 DUP3 DUP7 PUSH2 0x360 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28D DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x38F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x353 PUSH2 0x38B JUMP JUMPDEST SWAP1 POP PUSH2 0x25A DUP2 DUP6 DUP6 PUSH2 0x48D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0x866 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x436 SWAP1 DUP6 SWAP1 PUSH2 0x920 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44F DUP5 DUP5 PUSH2 0x360 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x487 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x487 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x38F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0x6BB JUMP JUMPDEST PUSH2 0x4E4 DUP4 DUP4 DUP4 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x57B SWAP1 DUP7 SWAP1 PUSH2 0x920 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x487 DUP5 DUP5 DUP5 JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B7 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5C0 DUP3 PUSH2 0x58F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5D9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5E2 DUP4 PUSH2 0x58F JUMP JUMPDEST SWAP2 POP PUSH2 0x5F0 PUSH1 0x20 DUP5 ADD PUSH2 0x58F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x60D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x616 DUP5 PUSH2 0x58F JUMP JUMPDEST SWAP3 POP PUSH2 0x624 PUSH1 0x20 DUP6 ADD PUSH2 0x58F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x646 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x64F DUP4 PUSH2 0x58F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x694 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x678 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6A5 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x956 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x96F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x990 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xAB 0xB4 0xFC CALLDATACOPY 0xD6 DUP10 PUSH27 0xE19EF7601A3F16C61EA536F523B555BA6754E0531548150264736F PUSH13 0x63430008010033000000000000 ","sourceMap":"1532:11312:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3255:106::-;;;:::i;:::-;;;;;;;:::i;5203:256::-;;;;;;:::i;:::-;;:::i;3104:91::-;;;:::i;:::-;;;;;;;:::i;5854:234::-;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;;:::i;2369:102::-;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;-1:-1:-1;4630:4:14;;4444:197;-1:-1:-1;;;4444:197:14:o;3255:106::-;3342:12;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:14;;5203:256;-1:-1:-1;;;;5203:256:14:o;3104:91::-;3186:2;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;3419:125::-;-1:-1:-1;;;;;3519:18:14;;3493:7;3519:18;;;;;;;;;;;3419:125;;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:14;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:14;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;640:96:21:-;719:10;640:96;:::o;10457:340:14:-;-1:-1:-1;;;;;10558:19:14;;10550:68;;;;-1:-1:-1;;;10550:68:14;;;;;;;:::i;:::-;-1:-1:-1;;;;;10636:21:14;;10628:68;;;;-1:-1:-1;;;10628:68:14;;;;;;;:::i;:::-;-1:-1:-1;;;;;10707:18:14;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10758:32;;;;;10737:6;;10758:32;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:14;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:14;;;;;;;:::i;:::-;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11078:411;;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:14;;7544:68;;;;-1:-1:-1;;;7544:68:14;;;;;;;:::i;:::-;-1:-1:-1;;;;;7630:16:14;;7622:64;;;;-1:-1:-1;;;7622:64:14;;;;;;;:::i;:::-;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;-1:-1:-1;;;;;7768:15:14;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:14;;;;;;;:::i;:::-;-1:-1:-1;;;;;7899:15:14;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;;;;;7931:6;;8163:26;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;12073:91;;;;:::o;14:198:30:-;84:20;;-1:-1:-1;;;;;133:54:30;;123:65;;113:2;;202:1;199;192:12;217:198;;329:2;317:9;308:7;304:23;300:32;297:2;;;350:6;342;335:22;297:2;378:31;399:9;378:31;:::i;:::-;368:41;287:128;-1:-1:-1;;;287:128:30:o;420:274::-;;;549:2;537:9;528:7;524:23;520:32;517:2;;;570:6;562;555:22;517:2;598:31;619:9;598:31;:::i;:::-;588:41;;648:40;684:2;673:9;669:18;648:40;:::i;:::-;638:50;;507:187;;;;;:::o;699:342::-;;;;845:2;833:9;824:7;820:23;816:32;813:2;;;866:6;858;851:22;813:2;894:31;915:9;894:31;:::i;:::-;884:41;;944:40;980:2;969:9;965:18;944:40;:::i;:::-;934:50;;1031:2;1020:9;1016:18;1003:32;993:42;;803:238;;;;;:::o;1046:266::-;;;1175:2;1163:9;1154:7;1150:23;1146:32;1143:2;;;1196:6;1188;1181:22;1143:2;1224:31;1245:9;1224:31;:::i;:::-;1214:41;1302:2;1287:18;;;;1274:32;;-1:-1:-1;;;1133:179:30:o;1317:187::-;1482:14;;1475:22;1457:41;;1445:2;1430:18;;1412:92::o;1509:603::-;;1650:2;1679;1668:9;1661:21;1711:6;1705:13;1754:6;1749:2;1738:9;1734:18;1727:34;1779:4;1792:140;1806:6;1803:1;1800:13;1792:140;;;1901:14;;;1897:23;;1891:30;1867:17;;;1886:2;1863:26;1856:66;1821:10;;1792:140;;;1950:6;1947:1;1944:13;1941:2;;;2020:4;2015:2;2006:6;1995:9;1991:22;1987:31;1980:45;1941:2;-1:-1:-1;2096:2:30;2075:15;-1:-1:-1;;2071:29:30;2056:45;;;;2103:2;2052:54;;1630:482;-1:-1:-1;;;1630:482:30:o;2117:399::-;2319:2;2301:21;;;2358:2;2338:18;;;2331:30;2397:34;2392:2;2377:18;;2370:62;2468:5;2463:2;2448:18;;2441:33;2506:3;2491:19;;2291:225::o;2521:398::-;2723:2;2705:21;;;2762:2;2742:18;;;2735:30;2801:34;2796:2;2781:18;;2774:62;2872:4;2867:2;2852:18;;2845:32;2909:3;2894:19;;2695:224::o;2924:353::-;3126:2;3108:21;;;3165:2;3145:18;;;3138:30;3204:31;3199:2;3184:18;;3177:59;3268:2;3253:18;;3098:179::o;3282:402::-;3484:2;3466:21;;;3523:2;3503:18;;;3496:30;3562:34;3557:2;3542:18;;3535:62;3633:8;3628:2;3613:18;;3606:36;3674:3;3659:19;;3456:228::o;3689:401::-;3891:2;3873:21;;;3930:2;3910:18;;;3903:30;3969:34;3964:2;3949:18;;3942:62;4040:7;4035:2;4020:18;;4013:35;4080:3;4065:19;;3863:227::o;4095:400::-;4297:2;4279:21;;;4336:2;4316:18;;;4309:30;4375:34;4370:2;4355:18;;4348:62;4446:6;4441:2;4426:18;;4419:34;4485:3;4470:19;;4269:226::o;4500:401::-;4702:2;4684:21;;;4741:2;4721:18;;;4714:30;4780:34;4775:2;4760:18;;4753:62;4851:7;4846:2;4831:18;;4824:35;4891:3;4876:19;;4674:227::o;4906:177::-;5052:25;;;5040:2;5025:18;;5007:76::o;5088:184::-;5260:4;5248:17;;;;5230:36;;5218:2;5203:18;;5185:87::o;5277:286::-;;5348:1;5344:6;5341:1;5338:13;5335:2;;;-1:-1:-1;;;5381:3:30;5374:90;5487:4;5484:1;5477:15;5517:4;5512:3;5505:17;5335:2;-1:-1:-1;5548:9:30;;5325:238::o;5568:437::-;5653:1;5643:12;;5700:1;5690:12;;;5711:2;;5765:4;5757:6;5753:17;5743:27;;5711:2;5818;5810:6;5807:14;5787:18;5784:38;5781:2;;;-1:-1:-1;;;5852:1:30;5845:88;5956:4;5953:1;5946:15;5984:4;5981:1;5974:15;5781:2;;5623:382;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ERC20Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract unpausable.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol":{"ERC20PresetMinterPauser":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2045:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"80:845:30","statements":[{"body":{"nodeType":"YulBlock","src":"129:24:30","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"138:5:30"},{"name":"array","nodeType":"YulIdentifier","src":"145:5:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:30"},"nodeType":"YulFunctionCall","src":"131:20:30"},"nodeType":"YulExpressionStatement","src":"131:20:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"108:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"116:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"104:3:30"},"nodeType":"YulFunctionCall","src":"104:17:30"},{"name":"end","nodeType":"YulIdentifier","src":"123:3:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"100:3:30"},"nodeType":"YulFunctionCall","src":"100:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"93:6:30"},"nodeType":"YulFunctionCall","src":"93:35:30"},"nodeType":"YulIf","src":"90:2:30"},{"nodeType":"YulVariableDeclaration","src":"162:23:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"178:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"172:5:30"},"nodeType":"YulFunctionCall","src":"172:13:30"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"166:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"194:28:30","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"212:2:30","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"216:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"208:3:30"},"nodeType":"YulFunctionCall","src":"208:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"220:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"204:3:30"},"nodeType":"YulFunctionCall","src":"204:18:30"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"198:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"245:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"247:16:30"},"nodeType":"YulFunctionCall","src":"247:18:30"},"nodeType":"YulExpressionStatement","src":"247:18:30"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"237:2:30"},{"name":"_2","nodeType":"YulIdentifier","src":"241:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"234:2:30"},"nodeType":"YulFunctionCall","src":"234:10:30"},"nodeType":"YulIf","src":"231:2:30"},{"nodeType":"YulVariableDeclaration","src":"276:17:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"290:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"286:3:30"},"nodeType":"YulFunctionCall","src":"286:7:30"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"280:2:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"302:23:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"322:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"316:5:30"},"nodeType":"YulFunctionCall","src":"316:9:30"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"306:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"334:71:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"356:6:30"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"380:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"384:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"376:3:30"},"nodeType":"YulFunctionCall","src":"376:13:30"},{"name":"_3","nodeType":"YulIdentifier","src":"391:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"372:3:30"},"nodeType":"YulFunctionCall","src":"372:22:30"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:30","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"368:3:30"},"nodeType":"YulFunctionCall","src":"368:31:30"},{"name":"_3","nodeType":"YulIdentifier","src":"401:2:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"364:3:30"},"nodeType":"YulFunctionCall","src":"364:40:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"352:3:30"},"nodeType":"YulFunctionCall","src":"352:53:30"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"338:10:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"464:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"466:16:30"},"nodeType":"YulFunctionCall","src":"466:18:30"},"nodeType":"YulExpressionStatement","src":"466:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"423:10:30"},{"name":"_2","nodeType":"YulIdentifier","src":"435:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"420:2:30"},"nodeType":"YulFunctionCall","src":"420:18:30"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"443:10:30"},{"name":"memPtr","nodeType":"YulIdentifier","src":"455:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"440:2:30"},"nodeType":"YulFunctionCall","src":"440:22:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"417:2:30"},"nodeType":"YulFunctionCall","src":"417:46:30"},"nodeType":"YulIf","src":"414:2:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:2:30","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"506:10:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"495:6:30"},"nodeType":"YulFunctionCall","src":"495:22:30"},"nodeType":"YulExpressionStatement","src":"495:22:30"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"533:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"541:2:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"526:6:30"},"nodeType":"YulFunctionCall","src":"526:18:30"},"nodeType":"YulExpressionStatement","src":"526:18:30"},{"nodeType":"YulVariableDeclaration","src":"553:14:30","value":{"kind":"number","nodeType":"YulLiteral","src":"563:4:30","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"557:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"613:24:30","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"622:5:30"},{"name":"array","nodeType":"YulIdentifier","src":"629:5:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"615:6:30"},"nodeType":"YulFunctionCall","src":"615:20:30"},"nodeType":"YulExpressionStatement","src":"615:20:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"590:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"598:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"586:3:30"},"nodeType":"YulFunctionCall","src":"586:15:30"},{"name":"_4","nodeType":"YulIdentifier","src":"603:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"582:3:30"},"nodeType":"YulFunctionCall","src":"582:24:30"},{"name":"end","nodeType":"YulIdentifier","src":"608:3:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"579:2:30"},"nodeType":"YulFunctionCall","src":"579:33:30"},"nodeType":"YulIf","src":"576:2:30"},{"nodeType":"YulVariableDeclaration","src":"646:14:30","value":{"name":"array","nodeType":"YulIdentifier","src":"655:5:30"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"650:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"715:87:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"744:6:30"},{"name":"i","nodeType":"YulIdentifier","src":"752:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"740:3:30"},"nodeType":"YulFunctionCall","src":"740:14:30"},{"name":"_4","nodeType":"YulIdentifier","src":"756:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"736:3:30"},"nodeType":"YulFunctionCall","src":"736:23:30"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"775:6:30"},{"name":"i","nodeType":"YulIdentifier","src":"783:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"771:3:30"},"nodeType":"YulFunctionCall","src":"771:14:30"},{"name":"_4","nodeType":"YulIdentifier","src":"787:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"767:3:30"},"nodeType":"YulFunctionCall","src":"767:23:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"761:5:30"},"nodeType":"YulFunctionCall","src":"761:30:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"729:6:30"},"nodeType":"YulFunctionCall","src":"729:63:30"},"nodeType":"YulExpressionStatement","src":"729:63:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"680:1:30"},{"name":"_1","nodeType":"YulIdentifier","src":"683:2:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"677:2:30"},"nodeType":"YulFunctionCall","src":"677:9:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"687:19:30","statements":[{"nodeType":"YulAssignment","src":"689:15:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"698:1:30"},{"name":"_4","nodeType":"YulIdentifier","src":"701:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"694:3:30"},"nodeType":"YulFunctionCall","src":"694:10:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"689:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"673:3:30","statements":[]},"src":"669:133:30"},{"body":{"nodeType":"YulBlock","src":"832:63:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"861:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"869:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"857:3:30"},"nodeType":"YulFunctionCall","src":"857:15:30"},{"name":"_4","nodeType":"YulIdentifier","src":"874:2:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"853:3:30"},"nodeType":"YulFunctionCall","src":"853:24:30"},{"name":"array","nodeType":"YulIdentifier","src":"879:5:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"846:6:30"},"nodeType":"YulFunctionCall","src":"846:39:30"},"nodeType":"YulExpressionStatement","src":"846:39:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"817:1:30"},{"name":"_1","nodeType":"YulIdentifier","src":"820:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"814:2:30"},"nodeType":"YulFunctionCall","src":"814:9:30"},"nodeType":"YulIf","src":"811:2:30"},{"nodeType":"YulAssignment","src":"904:15:30","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"913:6:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"904:5:30"}]}]},"name":"abi_decode_t_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"54:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"62:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"70:5:30","type":""}],"src":"14:911:30"},{"body":{"nodeType":"YulBlock","src":"1048:478:30","statements":[{"body":{"nodeType":"YulBlock","src":"1094:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1103:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1111:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1096:6:30"},"nodeType":"YulFunctionCall","src":"1096:22:30"},"nodeType":"YulExpressionStatement","src":"1096:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1069:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1078:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1065:3:30"},"nodeType":"YulFunctionCall","src":"1065:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1090:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1061:3:30"},"nodeType":"YulFunctionCall","src":"1061:32:30"},"nodeType":"YulIf","src":"1058:2:30"},{"nodeType":"YulVariableDeclaration","src":"1129:30:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1149:9:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1143:5:30"},"nodeType":"YulFunctionCall","src":"1143:16:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1133:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1168:28:30","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1186:2:30","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1190:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1182:3:30"},"nodeType":"YulFunctionCall","src":"1182:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"1194:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1178:3:30"},"nodeType":"YulFunctionCall","src":"1178:18:30"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1172:2:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1223:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1232:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1240:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1225:6:30"},"nodeType":"YulFunctionCall","src":"1225:22:30"},"nodeType":"YulExpressionStatement","src":"1225:22:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1211:6:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1219:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1208:2:30"},"nodeType":"YulFunctionCall","src":"1208:14:30"},"nodeType":"YulIf","src":"1205:2:30"},{"nodeType":"YulAssignment","src":"1258:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1303:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"1314:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1299:3:30"},"nodeType":"YulFunctionCall","src":"1299:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1323:7:30"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"1268:30:30"},"nodeType":"YulFunctionCall","src":"1268:63:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1258:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"1340:41:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1366:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1377:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1362:3:30"},"nodeType":"YulFunctionCall","src":"1362:18:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1356:5:30"},"nodeType":"YulFunctionCall","src":"1356:25:30"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1344:8:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1410:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1419:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"1427:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1412:6:30"},"nodeType":"YulFunctionCall","src":"1412:22:30"},"nodeType":"YulExpressionStatement","src":"1412:22:30"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1396:8:30"},{"name":"_1","nodeType":"YulIdentifier","src":"1406:2:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1393:2:30"},"nodeType":"YulFunctionCall","src":"1393:16:30"},"nodeType":"YulIf","src":"1390:2:30"},{"nodeType":"YulAssignment","src":"1445:75:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1490:9:30"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1501:8:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1486:3:30"},"nodeType":"YulFunctionCall","src":"1486:24:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1512:7:30"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"1455:30:30"},"nodeType":"YulFunctionCall","src":"1455:65:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1445:6:30"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1006:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1017:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1029:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1037:6:30","type":""}],"src":"930:596:30"},{"body":{"nodeType":"YulBlock","src":"1586:325:30","statements":[{"nodeType":"YulAssignment","src":"1596:22:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1610:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"1616:1:30","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1606:3:30"},"nodeType":"YulFunctionCall","src":"1606:12:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1596:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"1627:38:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1657:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"1663:1:30","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1653:3:30"},"nodeType":"YulFunctionCall","src":"1653:12:30"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1631:18:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1704:31:30","statements":[{"nodeType":"YulAssignment","src":"1706:27:30","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1720:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"1728:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1716:3:30"},"nodeType":"YulFunctionCall","src":"1716:17:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1706:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1684:18:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1677:6:30"},"nodeType":"YulFunctionCall","src":"1677:26:30"},"nodeType":"YulIf","src":"1674:2:30"},{"body":{"nodeType":"YulBlock","src":"1794:111:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1815:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1822:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1827:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1818:3:30"},"nodeType":"YulFunctionCall","src":"1818:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1808:6:30"},"nodeType":"YulFunctionCall","src":"1808:31:30"},"nodeType":"YulExpressionStatement","src":"1808:31:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1859:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1862:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1852:6:30"},"nodeType":"YulFunctionCall","src":"1852:15:30"},"nodeType":"YulExpressionStatement","src":"1852:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1887:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1890:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1880:6:30"},"nodeType":"YulFunctionCall","src":"1880:15:30"},"nodeType":"YulExpressionStatement","src":"1880:15:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1750:18:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1773:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"1781:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1770:2:30"},"nodeType":"YulFunctionCall","src":"1770:14:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1747:2:30"},"nodeType":"YulFunctionCall","src":"1747:38:30"},"nodeType":"YulIf","src":"1744:2:30"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1566:4:30","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1575:6:30","type":""}],"src":"1531:380:30"},{"body":{"nodeType":"YulBlock","src":"1948:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1965:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1972:3:30","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1977:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1968:3:30"},"nodeType":"YulFunctionCall","src":"1968:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1958:6:30"},"nodeType":"YulFunctionCall","src":"1958:31:30"},"nodeType":"YulExpressionStatement","src":"1958:31:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2005:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2008:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1998:6:30"},"nodeType":"YulFunctionCall","src":"1998:15:30"},"nodeType":"YulExpressionStatement","src":"1998:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2029:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2032:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2022:6:30"},"nodeType":"YulFunctionCall","src":"2022:15:30"},"nodeType":"YulExpressionStatement","src":"2022:15:30"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1916:127:30"}]},"contents":"{\n    { }\n    function abi_decode_t_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_t_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620020c4380380620020c48339810160408190526200003491620003d6565b8151829082906200004d9060059060208501906200027d565b508051620000639060069060208401906200027d565b50506007805460ff191690555062000086600062000080620000ec565b620000f0565b620000b57f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a662000080620000ec565b620000e47f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a62000080620000ec565b505062000490565b3390565b620000fc828262000100565b5050565b6200011782826200014360201b6200084b1760201c565b60008281526001602090815260409091206200013e918390620008d0620001cd821b17901c565b505050565b6200014f8282620001ed565b620000fc576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905562000189620000ec565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001e4836001600160a01b03841662000216565b90505b92915050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600062000224838362000265565b6200025c57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620001e7565b506000620001e7565b60009081526001919091016020526040902054151590565b8280546200028b906200043d565b90600052602060002090601f016020900481019282620002af5760008555620002fa565b82601f10620002ca57805160ff1916838001178555620002fa565b82800160010185558215620002fa579182015b82811115620002fa578251825591602001919060010190620002dd565b50620003089291506200030c565b5090565b5b808211156200030857600081556001016200030d565b600082601f83011262000334578081fd5b81516001600160401b03808211156200035157620003516200047a565b604051601f8301601f19908116603f011681019082821181831017156200037c576200037c6200047a565b8160405283815260209250868385880101111562000398578485fd5b8491505b83821015620003bb57858201830151818301840152908201906200039c565b83821115620003cc57848385830101525b9695505050505050565b60008060408385031215620003e9578182fd5b82516001600160401b038082111562000400578384fd5b6200040e8683870162000323565b9350602085015191508082111562000424578283fd5b50620004338582860162000323565b9150509250929050565b6002810460018216806200045257607f821691505b602082108114156200047457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611c2480620004a06000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d539139311610071578063d539139314610385578063d547741f1461038d578063dd62ed3e146103a0578063e63ab1e9146103b3576101c4565b8063a457c2d71461034c578063a9059cbb1461035f578063ca15c87314610372576101c4565b80639010d07c116100d35780639010d07c1461030957806391d148541461032957806395d89b411461033c578063a217fddf14610344576101c4565b806370a08231146102db57806379cc6790146102ee5780638456cb5914610301576101c4565b8063313ce567116101665780633f4ba83a116101405780633f4ba83a146102a557806340c10f19146102ad57806342966c68146102c05780635c975abb146102d3576101c4565b8063313ce5671461026a57806336568abe1461027f5780633950935114610292576101c4565b806318160ddd116101a257806318160ddd1461021a57806323b872dd1461022f578063248a9ca3146102425780632f2ff15d14610255576101c4565b806301ffc9a7146101c957806306fdde03146101f2578063095ea7b314610207575b600080fd5b6101dc6101d7366004611430565b6103bb565b6040516101e991906114ed565b60405180910390f35b6101fa610401565b6040516101e99190611501565b6101dc6102153660046113ac565b610493565b6102226104b7565b6040516101e991906114f8565b6101dc61023d366004611371565b6104bd565b6102226102503660046113d5565b6104eb565b6102686102633660046113ed565b610500565b005b610272610521565b6040516101e99190611afe565b61026861028d3660046113ed565b610526565b6101dc6102a03660046113ac565b610575565b6102686105a1565b6102686102bb3660046113ac565b6105f3565b6102686102ce3660046113d5565b610645565b6101dc610659565b6102226102e9366004611325565b610662565b6102686102fc3660046113ac565b61067d565b610268610699565b61031c61031736600461140f565b6106e9565b6040516101e991906114d9565b6101dc6103373660046113ed565b610708565b6101fa610731565b610222610740565b6101dc61035a3660046113ac565b610745565b6101dc61036d3660046113ac565b61078d565b6102226103803660046113d5565b6107a5565b6102226107bc565b61026861039b3660046113ed565b6107e0565b6102226103ae36600461133f565b6107fc565b610222610827565b60006001600160e01b031982167f5a05180f0000000000000000000000000000000000000000000000000000000014806103f957506103f9826108e5565b90505b919050565b60606005805461041090611b9d565b80601f016020809104026020016040519081016040528092919081815260200182805461043c90611b9d565b80156104895780601f1061045e57610100808354040283529160200191610489565b820191906000526020600020905b81548152906001019060200180831161046c57829003601f168201915b5050505050905090565b60008061049e610923565b90506104ab818585610927565b60019150505b92915050565b60045490565b6000806104c8610923565b90506104d58582856109db565b6104e0858585610a25565b506001949350505050565b60009081526020819052604090206001015490565b610509826104eb565b61051281610b26565b61051c8383610b37565b505050565b601290565b61052e610923565b6001600160a01b0316816001600160a01b0316146105675760405162461bcd60e51b815260040161055e90611a0d565b60405180910390fd5b6105718282610b59565b5050565b600080610580610923565b90506104ab81858561059285896107fc565b61059c9190611b0c565b610927565b6105cd7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610337610923565b6105e95760405162461bcd60e51b815260040161055e9061165a565b6105f1610b7b565b565b61061f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610337610923565b61063b5760405162461bcd60e51b815260040161055e906117df565b6105718282610bcd565b610656610650610923565b82610c77565b50565b60075460ff1690565b6001600160a01b031660009081526002602052604090205490565b61068f82610689610923565b836109db565b6105718282610c77565b6106c57f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610337610923565b6106e15760405162461bcd60e51b815260040161055e90611953565b6105f1610d4e565b60008281526001602052604081206107019083610d8c565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60606006805461041090611b9d565b600081565b600080610750610923565b9050600061075e82866107fc565b9050838110156107805760405162461bcd60e51b815260040161055e906119b0565b6104e08286868403610927565b600080610798610923565b90506104ab818585610a25565b60008181526001602052604081206103f990610d98565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6107e9826104eb565b6107f281610b26565b61051c8383610b59565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6108558282610708565b610571576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561088c610923565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610701836001600160a01b038416610da3565b60006001600160e01b031982167f7965db0b0000000000000000000000000000000000000000000000000000000014806103f957506103f982610ded565b3390565b6001600160a01b03831661094d5760405162461bcd60e51b815260040161055e906118f6565b6001600160a01b0382166109735760405162461bcd60e51b815260040161055e906116b7565b6001600160a01b0380841660008181526003602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906109ce9085906114f8565b60405180910390a3505050565b60006109e784846107fc565b90506000198114610a1f5781811015610a125760405162461bcd60e51b815260040161055e90611714565b610a1f8484848403610927565b50505050565b6001600160a01b038316610a4b5760405162461bcd60e51b815260040161055e90611899565b6001600160a01b038216610a715760405162461bcd60e51b815260040161055e90611569565b610a7c838383610e1f565b6001600160a01b03831660009081526002602052604090205481811015610ab55760405162461bcd60e51b815260040161055e9061174b565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610b139086906114f8565b60405180910390a3610a1f84848461051c565b61065681610b32610923565b610e2a565b610b41828261084b565b600082815260016020526040902061051c90826108d0565b610b638282610e83565b600082815260016020526040902061051c9082610f06565b610b83610f1b565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610bb6610923565b604051610bc391906114d9565b60405180910390a1565b6001600160a01b038216610bf35760405162461bcd60e51b815260040161055e90611a6a565b610bff60008383610e1f565b8060046000828254610c119190611b0c565b90915550506001600160a01b038216600081815260026020526040808220805485019055517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610c639085906114f8565b60405180910390a36105716000838361051c565b6001600160a01b038216610c9d5760405162461bcd60e51b815260040161055e9061183c565b610ca982600083610e1f565b6001600160a01b03821660009081526002602052604090205481811015610ce25760405162461bcd60e51b815260040161055e906115fd565b6001600160a01b0383166000818152600260205260408082208585039055600480548690039055519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d3a9086906114f8565b60405180910390a361051c8360008461051c565b610d56610f3f565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610bb6610923565b60006107018383610f64565b60006103f982610f9c565b6000610daf8383610fa0565b610de5575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104b1565b5060006104b1565b6001600160e01b031981167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b61051c838383610fb8565b610e348282610708565b61057157610e4181610fe8565b610e4c836020610ffa565b604051602001610e5d929190611458565b60408051601f198184030181529082905262461bcd60e51b825261055e91600401611501565b610e8d8282610708565b15610571576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055610ec2610923565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000610701836001600160a01b0384166111f1565b610f23610659565b6105f15760405162461bcd60e51b815260040161055e906115c6565b610f47610659565b156105f15760405162461bcd60e51b815260040161055e906117a8565b6000826000018281548110610f8957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b5490565b60009081526001919091016020526040902054151590565b610fc383838361051c565b610fcb610659565b1561051c5760405162461bcd60e51b815260040161055e90611aa1565b60606103f96001600160a01b03831660145b60606000611009836002611b24565b611014906002611b0c565b67ffffffffffffffff81111561103a57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611064576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106110a957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061110257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611126846002611b24565b611131906001611b0c565b90505b60018111156111d2577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061118057634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106111a457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936111cb81611b86565b9050611134565b5083156107015760405162461bcd60e51b815260040161055e90611534565b60008181526001830160205260408120548015611304576000611215600183611b43565b855490915060009061122990600190611b43565b90508181146112aa57600086600001828154811061125757634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508087600001848154811061128857634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b85548690806112c957634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104b1565b60009150506104b1565b80356001600160a01b03811681146103fc57600080fd5b600060208284031215611336578081fd5b6107018261130e565b60008060408385031215611351578081fd5b61135a8361130e565b91506113686020840161130e565b90509250929050565b600080600060608486031215611385578081fd5b61138e8461130e565b925061139c6020850161130e565b9150604084013590509250925092565b600080604083850312156113be578182fd5b6113c78361130e565b946020939093013593505050565b6000602082840312156113e6578081fd5b5035919050565b600080604083850312156113ff578182fd5b823591506113686020840161130e565b60008060408385031215611421578182fd5b50508035926020909101359150565b600060208284031215611441578081fd5b81356001600160e01b031981168114610701578182fd5b60007f416363657373436f6e74726f6c3a206163636f756e742000000000000000000082528351611490816017850160208801611b5a565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516114cd816028840160208801611b5a565b01602801949350505050565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b6000602082528251806020840152611520816040850160208701611b5a565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526014908201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604082015260600190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60408201527f6365000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526039908201527f45524332305072657365744d696e7465725061757365723a206d75737420686160408201527f76652070617573657220726f6c6520746f20756e706175736500000000000000606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560408201527f7373000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e63650000000000000000000000000000000000000000000000000000606082015260800190565b60208082526010908201527f5061757361626c653a2070617573656400000000000000000000000000000000604082015260600190565b60208082526036908201527f45524332305072657365744d696e7465725061757365723a206d75737420686160408201527f7665206d696e74657220726f6c6520746f206d696e7400000000000000000000606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360408201527f7300000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f45524332305072657365744d696e7465725061757365723a206d75737420686160408201527f76652070617573657220726f6c6520746f207061757365000000000000000000606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408201527f207a65726f000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201527f20726f6c657320666f722073656c660000000000000000000000000000000000606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b6020808252602a908201527f45524332305061757361626c653a20746f6b656e207472616e7366657220776860408201527f696c652070617573656400000000000000000000000000000000000000000000606082015260800190565b60ff91909116815260200190565b60008219821115611b1f57611b1f611bd8565b500190565b6000816000190483118215151615611b3e57611b3e611bd8565b500290565b600082821015611b5557611b55611bd8565b500390565b60005b83811015611b75578181015183820152602001611b5d565b83811115610a1f5750506000910152565b600081611b9557611b95611bd8565b506000190190565b600281046001821680611bb157607f821691505b60208210811415611bd257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220638d97ed6c467bf0dc6f36761f2dc3010d87920cb6f0978f3809b76505e7693d64736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x20C4 CODESIZE SUB DUP1 PUSH3 0x20C4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x3D6 JUMP JUMPDEST DUP2 MLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH3 0x4D SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x27D JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x63 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x27D JUMP JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH3 0x86 PUSH1 0x0 PUSH3 0x80 PUSH3 0xEC JUMP JUMPDEST PUSH3 0xF0 JUMP JUMPDEST PUSH3 0xB5 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH3 0x80 PUSH3 0xEC JUMP JUMPDEST PUSH3 0xE4 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH3 0x80 PUSH3 0xEC JUMP JUMPDEST POP POP PUSH3 0x490 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH3 0xFC DUP3 DUP3 PUSH3 0x100 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x117 DUP3 DUP3 PUSH3 0x143 PUSH1 0x20 SHL PUSH3 0x84B OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH3 0x13E SWAP2 DUP4 SWAP1 PUSH3 0x8D0 PUSH3 0x1CD DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x14F DUP3 DUP3 PUSH3 0x1ED JUMP JUMPDEST PUSH3 0xFC JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x189 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E4 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x216 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x224 DUP4 DUP4 PUSH3 0x265 JUMP JUMPDEST PUSH3 0x25C JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH3 0x1E7 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x1E7 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x28B SWAP1 PUSH3 0x43D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x2AF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2FA JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2CA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2FA JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2FA JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2FA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2DD JUMP JUMPDEST POP PUSH3 0x308 SWAP3 SWAP2 POP PUSH3 0x30C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x308 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x30D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x334 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x351 JUMPI PUSH3 0x351 PUSH3 0x47A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x37C JUMPI PUSH3 0x37C PUSH3 0x47A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x398 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x3BB JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x39C JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x3CC JUMPI DUP5 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x3E9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x400 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x40E DUP7 DUP4 DUP8 ADD PUSH3 0x323 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x424 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x433 DUP6 DUP3 DUP7 ADD PUSH3 0x323 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x452 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x474 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1C24 DUP1 PUSH3 0x4A0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x3B3 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x372 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x9010D07C GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x344 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x301 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2D3 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x292 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x255 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x207 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x222 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D5 JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x268 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x13ED JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1AFE JUMP JUMPDEST PUSH2 0x268 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x13ED JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x13D5 JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x659 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x67D JUMP JUMPDEST PUSH2 0x268 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x31C PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x140F JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x13ED JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x731 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x740 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH2 0x222 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D5 JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x268 PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x13ED JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x222 PUSH2 0x827 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3F9 JUMPI POP PUSH2 0x3F9 DUP3 PUSH2 0x8E5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x410 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x43C SWAP1 PUSH2 0x1B9D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x489 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x489 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x46C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x49E PUSH2 0x923 JUMP JUMPDEST SWAP1 POP PUSH2 0x4AB DUP2 DUP6 DUP6 PUSH2 0x927 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4C8 PUSH2 0x923 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D5 DUP6 DUP3 DUP6 PUSH2 0x9DB JUMP JUMPDEST PUSH2 0x4E0 DUP6 DUP6 DUP6 PUSH2 0xA25 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x509 DUP3 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x512 DUP2 PUSH2 0xB26 JUMP JUMPDEST PUSH2 0x51C DUP4 DUP4 PUSH2 0xB37 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH2 0x52E PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1A0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x571 DUP3 DUP3 PUSH2 0xB59 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x580 PUSH2 0x923 JUMP JUMPDEST SWAP1 POP PUSH2 0x4AB DUP2 DUP6 DUP6 PUSH2 0x592 DUP6 DUP10 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH2 0x5CD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x337 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x165A JUMP JUMPDEST PUSH2 0x5F1 PUSH2 0xB7B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x61F PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x337 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x63B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x571 DUP3 DUP3 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x656 PUSH2 0x650 PUSH2 0x923 JUMP JUMPDEST DUP3 PUSH2 0xC77 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x68F DUP3 PUSH2 0x689 PUSH2 0x923 JUMP JUMPDEST DUP4 PUSH2 0x9DB JUMP JUMPDEST PUSH2 0x571 DUP3 DUP3 PUSH2 0xC77 JUMP JUMPDEST PUSH2 0x6C5 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x337 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x6E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x5F1 PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x701 SWAP1 DUP4 PUSH2 0xD8C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x410 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x750 PUSH2 0x923 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x75E DUP3 DUP7 PUSH2 0x7FC JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0x4E0 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x927 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x798 PUSH2 0x923 JUMP JUMPDEST SWAP1 POP PUSH2 0x4AB DUP2 DUP6 DUP6 PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x3F9 SWAP1 PUSH2 0xD98 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x7E9 DUP3 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x7F2 DUP2 PUSH2 0xB26 JUMP JUMPDEST PUSH2 0x51C DUP4 DUP4 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x855 DUP3 DUP3 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x571 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x88C PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x701 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3F9 JUMPI POP PUSH2 0x3F9 DUP3 PUSH2 0xDED JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x94D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x973 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x9CE SWAP1 DUP6 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E7 DUP5 DUP5 PUSH2 0x7FC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xA1F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1714 JUMP JUMPDEST PUSH2 0xA1F DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x927 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0xA7C DUP4 DUP4 DUP4 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x174B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xB13 SWAP1 DUP7 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA1F DUP5 DUP5 DUP5 PUSH2 0x51C JUMP JUMPDEST PUSH2 0x656 DUP2 PUSH2 0xB32 PUSH2 0x923 JUMP JUMPDEST PUSH2 0xE2A JUMP JUMPDEST PUSH2 0xB41 DUP3 DUP3 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x51C SWAP1 DUP3 PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0xB63 DUP3 DUP3 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x51C SWAP1 DUP3 PUSH2 0xF06 JUMP JUMPDEST PUSH2 0xB83 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xBB6 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC3 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0xBFF PUSH1 0x0 DUP4 DUP4 PUSH2 0xE1F JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xC63 SWAP1 DUP6 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x571 PUSH1 0x0 DUP4 DUP4 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x183C JUMP JUMPDEST PUSH2 0xCA9 DUP3 PUSH1 0x0 DUP4 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP7 SWAP1 SUB SWAP1 SSTORE MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xD3A SWAP1 DUP7 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x51C DUP4 PUSH1 0x0 DUP5 PUSH2 0x51C JUMP JUMPDEST PUSH2 0xD56 PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xBB6 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x701 DUP4 DUP4 PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F9 DUP3 PUSH2 0xF9C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAF DUP4 DUP4 PUSH2 0xFA0 JUMP JUMPDEST PUSH2 0xDE5 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x4B1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x51C DUP4 DUP4 DUP4 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0xE34 DUP3 DUP3 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x571 JUMPI PUSH2 0xE41 DUP2 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0xE4C DUP4 PUSH1 0x20 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE5D SWAP3 SWAP2 SWAP1 PUSH2 0x1458 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x55E SWAP2 PUSH1 0x4 ADD PUSH2 0x1501 JUMP JUMPDEST PUSH2 0xE8D DUP3 DUP3 PUSH2 0x708 JUMP JUMPDEST ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xEC2 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x701 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0xF23 PUSH2 0x659 JUMP JUMPDEST PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH2 0xF47 PUSH2 0x659 JUMP JUMPDEST ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x17A8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF89 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xFC3 DUP4 DUP4 DUP4 PUSH2 0x51C JUMP JUMPDEST PUSH2 0xFCB PUSH2 0x659 JUMP JUMPDEST ISZERO PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1009 DUP4 PUSH1 0x2 PUSH2 0x1B24 JUMP JUMPDEST PUSH2 0x1014 SWAP1 PUSH1 0x2 PUSH2 0x1B0C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x103A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1064 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10A9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1102 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1126 DUP5 PUSH1 0x2 PUSH2 0x1B24 JUMP JUMPDEST PUSH2 0x1131 SWAP1 PUSH1 0x1 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11D2 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1180 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11A4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x11CB DUP2 PUSH2 0x1B86 JUMP JUMPDEST SWAP1 POP PUSH2 0x1134 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1304 JUMPI PUSH1 0x0 PUSH2 0x1215 PUSH1 0x1 DUP4 PUSH2 0x1B43 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1229 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1B43 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x12AA JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1257 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1288 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x12C9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x4B1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1336 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x701 DUP3 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1351 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x135A DUP4 PUSH2 0x130E JUMP JUMPDEST SWAP2 POP PUSH2 0x1368 PUSH1 0x20 DUP5 ADD PUSH2 0x130E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1385 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x138E DUP5 PUSH2 0x130E JUMP JUMPDEST SWAP3 POP PUSH2 0x139C PUSH1 0x20 DUP6 ADD PUSH2 0x130E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13BE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x13C7 DUP4 PUSH2 0x130E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E6 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1368 PUSH1 0x20 DUP5 ADD PUSH2 0x130E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1421 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1441 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP3 MSTORE DUP4 MLOAD PUSH2 0x1490 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1B5A JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x14CD DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1B5A JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1520 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1B5A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x39 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305072657365744D696E7465725061757365723A206D757374206861 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x76652070617573657220726F6C6520746F20756E706175736500000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305072657365744D696E7465725061757365723A206D757374206861 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7665206D696E74657220726F6C6520746F206D696E7400000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x37 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305072657365744D696E7465725061757365723A206D757374206861 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x76652070617573657220726F6C6520746F207061757365000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x696C652070617573656400000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1B1F JUMPI PUSH2 0x1B1F PUSH2 0x1BD8 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B3E JUMPI PUSH2 0x1B3E PUSH2 0x1BD8 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B55 JUMPI PUSH2 0x1B55 PUSH2 0x1BD8 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B75 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B5D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xA1F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1B95 JUMPI PUSH2 0x1B95 PUSH2 0x1BD8 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BB1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1BD2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x8D97ED6C CHAINID PUSH28 0xF0DC6F36761F2DC3010D87920CB6F0978F3809B76505E7693D64736F PUSH13 0x63430008010033000000000000 ","sourceMap":"1005:2013:19:-:0;;;1424:230;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:13:14;;1484:4:19;;1490:6;;2046:13:14;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2069:17:14;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;996:7:5;:15;;-1:-1:-1;;996:15:5;;;-1:-1:-1;1508:44:19::1;1006:5:5::0;1539:12:19::1;:10;:12::i;:::-;1508:10;:44::i;:::-;1563:37;1148:24;1587:12;:10;:12::i;1563:37::-;1610;1216:24;1634:12;:10;:12::i;1610:37::-;1424:230:::0;;1005:2013;;640:96:21;719:10;640:96;:::o;6937:110:0:-;7015:25;7026:4;7032:7;7015:10;:25::i;:::-;6937:110;;:::o;1978:166:1:-;2065:31;2082:4;2088:7;2065:16;;;;;:31;;:::i;:::-;2106:18;;;;:12;:18;;;;;;;;:31;;2129:7;;2106:22;;;;;:31;;:::i;:::-;;1978:166;;:::o;7587:233:0:-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;7740:4;7708:36;;;7790:12;:10;:12::i;:::-;-1:-1:-1;;;;;7763:40:0;7781:7;-1:-1:-1;;;;;7763:40:0;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;8305:150:28:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:28;;8398:4;:50::i;:::-;8391:57;;8305:150;;;;;:::o;3021:145:0:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;;;;3021:145::o;2214:404:28:-;2277:4;2298:21;2308:3;2313:5;2298:9;:21::i;:::-;2293:319;;-1:-1:-1;2335:23:28;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:28;2589:12;;4255:127;4328:4;4351:19;;;:12;;;;;:19;;;;;;:24;;;4255:127::o;1005:2013:19:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1005:2013:19;;;-1:-1:-1;1005:2013:19;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:911:30;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:30;;;231:2;;;247:18;;:::i;:::-;322:2;316:9;290:2;376:13;;-1:-1:-1;;372:22:30;;;396:2;368:31;364:40;352:53;;;420:18;;;440:22;;;417:46;414:2;;;466:18;;:::i;:::-;506:10;502:2;495:22;541:2;533:6;526:18;563:4;553:14;;608:3;603:2;598;590:6;586:15;582:24;579:33;576:2;;;629:5;622;615:20;576:2;655:5;646:14;;669:133;683:2;680:1;677:9;669:133;;;771:14;;;767:23;;761:30;740:14;;;736:23;;729:63;694:10;;;;669:133;;;820:2;817:1;814:9;811:2;;;879:5;874:2;869;861:6;857:15;853:24;846:39;811:2;913:6;80:845;-1:-1:-1;;;;;;80:845:30:o;930:596::-;;;1090:2;1078:9;1069:7;1065:23;1061:32;1058:2;;;1111:6;1103;1096:22;1058:2;1143:16;;-1:-1:-1;;;;;1208:14:30;;;1205:2;;;1240:6;1232;1225:22;1205:2;1268:63;1323:7;1314:6;1303:9;1299:22;1268:63;:::i;:::-;1258:73;;1377:2;1366:9;1362:18;1356:25;1340:41;;1406:2;1396:8;1393:16;1390:2;;;1427:6;1419;1412:22;1390:2;;1455:65;1512:7;1501:8;1490:9;1486:24;1455:65;:::i;:::-;1445:75;;;1048:478;;;;;:::o;1531:380::-;1616:1;1606:12;;1663:1;1653:12;;;1674:2;;1728:4;1720:6;1716:17;1706:27;;1674:2;1781;1773:6;1770:14;1750:18;1747:38;1744:2;;;1827:10;1822:3;1818:20;1815:1;1808:31;1862:4;1859:1;1852:15;1890:4;1887:1;1880:15;1744:2;;1586:325;;;:::o;1916:127::-;1977:10;1972:3;1968:20;1965:1;1958:31;2008:4;2005:1;1998:15;2032:4;2029:1;2022:15;1948:95;1005:2013:19;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13330:30","statements":[{"nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nodeType":"YulBlock","src":"65:147:30","statements":[{"nodeType":"YulAssignment","src":"75:29:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"84:12:30"},"nodeType":"YulFunctionCall","src":"84:20:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:30"}]},{"body":{"nodeType":"YulBlock","src":"190:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"199:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"202:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"192:6:30"},"nodeType":"YulFunctionCall","src":"192:12:30"},"nodeType":"YulExpressionStatement","src":"192:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"126:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"137:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"144:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"133:3:30"},"nodeType":"YulFunctionCall","src":"133:54:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"123:2:30"},"nodeType":"YulFunctionCall","src":"123:65:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"116:6:30"},"nodeType":"YulFunctionCall","src":"116:73:30"},"nodeType":"YulIf","src":"113:2:30"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44:6:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55:5:30","type":""}],"src":"14:198:30"},{"body":{"nodeType":"YulBlock","src":"287:128:30","statements":[{"body":{"nodeType":"YulBlock","src":"333:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"342:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"350:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"335:6:30"},"nodeType":"YulFunctionCall","src":"335:22:30"},"nodeType":"YulExpressionStatement","src":"335:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"308:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"317:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"304:3:30"},"nodeType":"YulFunctionCall","src":"304:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"329:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"300:3:30"},"nodeType":"YulFunctionCall","src":"300:32:30"},"nodeType":"YulIf","src":"297:2:30"},{"nodeType":"YulAssignment","src":"368:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"399:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"378:20:30"},"nodeType":"YulFunctionCall","src":"378:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"368:6:30"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"253:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"264:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"276:6:30","type":""}],"src":"217:198:30"},{"body":{"nodeType":"YulBlock","src":"507:187:30","statements":[{"body":{"nodeType":"YulBlock","src":"553:26:30","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"562:6:30"},{"name":"value1","nodeType":"YulIdentifier","src":"570:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"555:6:30"},"nodeType":"YulFunctionCall","src":"555:22:30"},"nodeType":"YulExpressionStatement","src":"555:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"528:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"537:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"524:3:30"},"nodeType":"YulFunctionCall","src":"524:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"549:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"520:3:30"},"nodeType":"YulFunctionCall","src":"520:32:30"},"nodeType":"YulIf","src":"517:2:30"},{"nodeType":"YulAssignment","src":"588:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"619:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"598:20:30"},"nodeType":"YulFunctionCall","src":"598:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"588:6:30"}]},{"nodeType":"YulAssignment","src":"638:50:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"673:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"684:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"669:3:30"},"nodeType":"YulFunctionCall","src":"669:18:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"648:20:30"},"nodeType":"YulFunctionCall","src":"648:40:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"638:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"465:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"476:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"488:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"496:6:30","type":""}],"src":"420:274:30"},{"body":{"nodeType":"YulBlock","src":"803:238:30","statements":[{"body":{"nodeType":"YulBlock","src":"849:26:30","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"858:6:30"},{"name":"value2","nodeType":"YulIdentifier","src":"866:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"851:6:30"},"nodeType":"YulFunctionCall","src":"851:22:30"},"nodeType":"YulExpressionStatement","src":"851:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"824:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"833:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"820:3:30"},"nodeType":"YulFunctionCall","src":"820:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"845:2:30","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"816:3:30"},"nodeType":"YulFunctionCall","src":"816:32:30"},"nodeType":"YulIf","src":"813:2:30"},{"nodeType":"YulAssignment","src":"884:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"915:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"894:20:30"},"nodeType":"YulFunctionCall","src":"894:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"884:6:30"}]},{"nodeType":"YulAssignment","src":"934:50:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"980:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"965:3:30"},"nodeType":"YulFunctionCall","src":"965:18:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"944:20:30"},"nodeType":"YulFunctionCall","src":"944:40:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"934:6:30"}]},{"nodeType":"YulAssignment","src":"993:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1020:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1031:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1016:3:30"},"nodeType":"YulFunctionCall","src":"1016:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1003:12:30"},"nodeType":"YulFunctionCall","src":"1003:32:30"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"993:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"753:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"764:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"776:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"784:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"792:6:30","type":""}],"src":"699:342:30"},{"body":{"nodeType":"YulBlock","src":"1133:179:30","statements":[{"body":{"nodeType":"YulBlock","src":"1179:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1188:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1196:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1181:6:30"},"nodeType":"YulFunctionCall","src":"1181:22:30"},"nodeType":"YulExpressionStatement","src":"1181:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1154:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1163:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1150:3:30"},"nodeType":"YulFunctionCall","src":"1150:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1146:3:30"},"nodeType":"YulFunctionCall","src":"1146:32:30"},"nodeType":"YulIf","src":"1143:2:30"},{"nodeType":"YulAssignment","src":"1214:41:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1245:9:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1224:20:30"},"nodeType":"YulFunctionCall","src":"1224:31:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1214:6:30"}]},{"nodeType":"YulAssignment","src":"1264:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1291:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1302:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1287:3:30"},"nodeType":"YulFunctionCall","src":"1287:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1274:12:30"},"nodeType":"YulFunctionCall","src":"1274:32:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1264:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1091:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1102:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1114:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1122:6:30","type":""}],"src":"1046:266:30"},{"body":{"nodeType":"YulBlock","src":"1387:120:30","statements":[{"body":{"nodeType":"YulBlock","src":"1433:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1442:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1450:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1435:6:30"},"nodeType":"YulFunctionCall","src":"1435:22:30"},"nodeType":"YulExpressionStatement","src":"1435:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1408:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1417:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1404:3:30"},"nodeType":"YulFunctionCall","src":"1404:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1429:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1400:3:30"},"nodeType":"YulFunctionCall","src":"1400:32:30"},"nodeType":"YulIf","src":"1397:2:30"},{"nodeType":"YulAssignment","src":"1468:33:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1478:12:30"},"nodeType":"YulFunctionCall","src":"1478:23:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1468:6:30"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1353:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1364:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1376:6:30","type":""}],"src":"1317:190:30"},{"body":{"nodeType":"YulBlock","src":"1599:179:30","statements":[{"body":{"nodeType":"YulBlock","src":"1645:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1654:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1662:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1647:6:30"},"nodeType":"YulFunctionCall","src":"1647:22:30"},"nodeType":"YulExpressionStatement","src":"1647:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1620:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1629:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1616:3:30"},"nodeType":"YulFunctionCall","src":"1616:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1641:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1612:3:30"},"nodeType":"YulFunctionCall","src":"1612:32:30"},"nodeType":"YulIf","src":"1609:2:30"},{"nodeType":"YulAssignment","src":"1680:33:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1703:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1690:12:30"},"nodeType":"YulFunctionCall","src":"1690:23:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1680:6:30"}]},{"nodeType":"YulAssignment","src":"1722:50:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1757:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1768:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1753:3:30"},"nodeType":"YulFunctionCall","src":"1753:18:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1732:20:30"},"nodeType":"YulFunctionCall","src":"1732:40:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1722:6:30"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1557:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1568:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1580:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1588:6:30","type":""}],"src":"1512:266:30"},{"body":{"nodeType":"YulBlock","src":"1870:171:30","statements":[{"body":{"nodeType":"YulBlock","src":"1916:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1925:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"1933:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1918:6:30"},"nodeType":"YulFunctionCall","src":"1918:22:30"},"nodeType":"YulExpressionStatement","src":"1918:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1891:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1900:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1887:3:30"},"nodeType":"YulFunctionCall","src":"1887:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1883:3:30"},"nodeType":"YulFunctionCall","src":"1883:32:30"},"nodeType":"YulIf","src":"1880:2:30"},{"nodeType":"YulAssignment","src":"1951:33:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1974:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1961:12:30"},"nodeType":"YulFunctionCall","src":"1961:23:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1951:6:30"}]},{"nodeType":"YulAssignment","src":"1993:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2020:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"2031:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2016:3:30"},"nodeType":"YulFunctionCall","src":"2016:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2003:12:30"},"nodeType":"YulFunctionCall","src":"2003:32:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1993:6:30"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1828:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1839:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1851:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1859:6:30","type":""}],"src":"1783:258:30"},{"body":{"nodeType":"YulBlock","src":"2115:283:30","statements":[{"body":{"nodeType":"YulBlock","src":"2161:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2170:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"2178:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2163:6:30"},"nodeType":"YulFunctionCall","src":"2163:22:30"},"nodeType":"YulExpressionStatement","src":"2163:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2136:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"2145:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2132:3:30"},"nodeType":"YulFunctionCall","src":"2132:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"2157:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2128:3:30"},"nodeType":"YulFunctionCall","src":"2128:32:30"},"nodeType":"YulIf","src":"2125:2:30"},{"nodeType":"YulVariableDeclaration","src":"2196:36:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2222:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2209:12:30"},"nodeType":"YulFunctionCall","src":"2209:23:30"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2200:5:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"2342:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2351:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"2359:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2344:6:30"},"nodeType":"YulFunctionCall","src":"2344:22:30"},"nodeType":"YulExpressionStatement","src":"2344:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2254:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2265:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2272:66:30","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2261:3:30"},"nodeType":"YulFunctionCall","src":"2261:78:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2251:2:30"},"nodeType":"YulFunctionCall","src":"2251:89:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2244:6:30"},"nodeType":"YulFunctionCall","src":"2244:97:30"},"nodeType":"YulIf","src":"2241:2:30"},{"nodeType":"YulAssignment","src":"2377:15:30","value":{"name":"value","nodeType":"YulIdentifier","src":"2387:5:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2377:6:30"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2081:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2092:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2104:6:30","type":""}],"src":"2046:352:30"},{"body":{"nodeType":"YulBlock","src":"2473:120:30","statements":[{"body":{"nodeType":"YulBlock","src":"2519:26:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2528:6:30"},{"name":"value0","nodeType":"YulIdentifier","src":"2536:6:30"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2521:6:30"},"nodeType":"YulFunctionCall","src":"2521:22:30"},"nodeType":"YulExpressionStatement","src":"2521:22:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2494:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"2503:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2490:3:30"},"nodeType":"YulFunctionCall","src":"2490:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"2515:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2486:3:30"},"nodeType":"YulFunctionCall","src":"2486:32:30"},"nodeType":"YulIf","src":"2483:2:30"},{"nodeType":"YulAssignment","src":"2554:33:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2577:9:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2564:12:30"},"nodeType":"YulFunctionCall","src":"2564:23:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2554:6:30"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2439:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2450:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2462:6:30","type":""}],"src":"2403:190:30"},{"body":{"nodeType":"YulBlock","src":"2987:397:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3004:3:30"},{"kind":"string","nodeType":"YulLiteral","src":"3009:25:30","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2997:6:30"},"nodeType":"YulFunctionCall","src":"2997:38:30"},"nodeType":"YulExpressionStatement","src":"2997:38:30"},{"nodeType":"YulVariableDeclaration","src":"3044:27:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3064:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3058:5:30"},"nodeType":"YulFunctionCall","src":"3058:13:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3048:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3106:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"3114:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3102:3:30"},"nodeType":"YulFunctionCall","src":"3102:17:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3125:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"3130:2:30","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3121:3:30"},"nodeType":"YulFunctionCall","src":"3121:12:30"},{"name":"length","nodeType":"YulIdentifier","src":"3135:6:30"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3080:21:30"},"nodeType":"YulFunctionCall","src":"3080:62:30"},"nodeType":"YulExpressionStatement","src":"3080:62:30"},{"nodeType":"YulVariableDeclaration","src":"3151:26:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3165:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"3170:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3161:3:30"},"nodeType":"YulFunctionCall","src":"3161:16:30"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3155:2:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3197:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"3201:2:30","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3193:3:30"},"nodeType":"YulFunctionCall","src":"3193:11:30"},{"kind":"string","nodeType":"YulLiteral","src":"3206:19:30","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3186:6:30"},"nodeType":"YulFunctionCall","src":"3186:40:30"},"nodeType":"YulExpressionStatement","src":"3186:40:30"},{"nodeType":"YulVariableDeclaration","src":"3235:29:30","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3257:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3251:5:30"},"nodeType":"YulFunctionCall","src":"3251:13:30"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"3239:8:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3299:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"3307:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3295:3:30"},"nodeType":"YulFunctionCall","src":"3295:17:30"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3318:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"3322:2:30","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:30"},"nodeType":"YulFunctionCall","src":"3314:11:30"},{"name":"length_1","nodeType":"YulIdentifier","src":"3327:8:30"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3273:21:30"},"nodeType":"YulFunctionCall","src":"3273:63:30"},"nodeType":"YulExpressionStatement","src":"3273:63:30"},{"nodeType":"YulAssignment","src":"3345:33:30","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3360:2:30"},{"name":"length_1","nodeType":"YulIdentifier","src":"3364:8:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3356:3:30"},"nodeType":"YulFunctionCall","src":"3356:17:30"},{"kind":"number","nodeType":"YulLiteral","src":"3375:2:30","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3352:3:30"},"nodeType":"YulFunctionCall","src":"3352:26:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3345:3:30"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2955:3:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2960:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2968:6:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2979:3:30","type":""}],"src":"2598:786:30"},{"body":{"nodeType":"YulBlock","src":"3490:125:30","statements":[{"nodeType":"YulAssignment","src":"3500:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3512:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3523:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3508:3:30"},"nodeType":"YulFunctionCall","src":"3508:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3500:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3542:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3557:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"3565:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3553:3:30"},"nodeType":"YulFunctionCall","src":"3553:55:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3535:6:30"},"nodeType":"YulFunctionCall","src":"3535:74:30"},"nodeType":"YulExpressionStatement","src":"3535:74:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3459:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3470:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3481:4:30","type":""}],"src":"3389:226:30"},{"body":{"nodeType":"YulBlock","src":"3715:92:30","statements":[{"nodeType":"YulAssignment","src":"3725:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3737:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3748:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3733:3:30"},"nodeType":"YulFunctionCall","src":"3733:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3725:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3767:9:30"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3792:6:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3785:6:30"},"nodeType":"YulFunctionCall","src":"3785:14:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3778:6:30"},"nodeType":"YulFunctionCall","src":"3778:22:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3760:6:30"},"nodeType":"YulFunctionCall","src":"3760:41:30"},"nodeType":"YulExpressionStatement","src":"3760:41:30"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3684:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3695:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3706:4:30","type":""}],"src":"3620:187:30"},{"body":{"nodeType":"YulBlock","src":"3913:76:30","statements":[{"nodeType":"YulAssignment","src":"3923:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3935:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3946:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3931:3:30"},"nodeType":"YulFunctionCall","src":"3931:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3923:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3965:9:30"},{"name":"value0","nodeType":"YulIdentifier","src":"3976:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3958:6:30"},"nodeType":"YulFunctionCall","src":"3958:25:30"},"nodeType":"YulExpressionStatement","src":"3958:25:30"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3882:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3893:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3904:4:30","type":""}],"src":"3812:177:30"},{"body":{"nodeType":"YulBlock","src":"4115:262:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4132:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4143:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4125:6:30"},"nodeType":"YulFunctionCall","src":"4125:21:30"},"nodeType":"YulExpressionStatement","src":"4125:21:30"},{"nodeType":"YulVariableDeclaration","src":"4155:27:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4175:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4169:5:30"},"nodeType":"YulFunctionCall","src":"4169:13:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4159:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4202:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4213:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4198:3:30"},"nodeType":"YulFunctionCall","src":"4198:18:30"},{"name":"length","nodeType":"YulIdentifier","src":"4218:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4191:6:30"},"nodeType":"YulFunctionCall","src":"4191:34:30"},"nodeType":"YulExpressionStatement","src":"4191:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4260:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"4268:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4256:3:30"},"nodeType":"YulFunctionCall","src":"4256:15:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4277:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4288:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4273:3:30"},"nodeType":"YulFunctionCall","src":"4273:18:30"},{"name":"length","nodeType":"YulIdentifier","src":"4293:6:30"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4234:21:30"},"nodeType":"YulFunctionCall","src":"4234:66:30"},"nodeType":"YulExpressionStatement","src":"4234:66:30"},{"nodeType":"YulAssignment","src":"4309:62:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4325:9:30"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4344:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"4352:2:30","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4340:3:30"},"nodeType":"YulFunctionCall","src":"4340:15:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4361:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4357:3:30"},"nodeType":"YulFunctionCall","src":"4357:7:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4336:3:30"},"nodeType":"YulFunctionCall","src":"4336:29:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4321:3:30"},"nodeType":"YulFunctionCall","src":"4321:45:30"},{"kind":"number","nodeType":"YulLiteral","src":"4368:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4317:3:30"},"nodeType":"YulFunctionCall","src":"4317:54:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4309:4:30"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4084:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4095:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4106:4:30","type":""}],"src":"3994:383:30"},{"body":{"nodeType":"YulBlock","src":"4556:182:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4573:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4584:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4566:6:30"},"nodeType":"YulFunctionCall","src":"4566:21:30"},"nodeType":"YulExpressionStatement","src":"4566:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4607:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4618:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4603:3:30"},"nodeType":"YulFunctionCall","src":"4603:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"4623:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4596:6:30"},"nodeType":"YulFunctionCall","src":"4596:30:30"},"nodeType":"YulExpressionStatement","src":"4596:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4646:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4657:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4642:3:30"},"nodeType":"YulFunctionCall","src":"4642:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"4662:34:30","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4635:6:30"},"nodeType":"YulFunctionCall","src":"4635:62:30"},"nodeType":"YulExpressionStatement","src":"4635:62:30"},{"nodeType":"YulAssignment","src":"4706:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4718:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4729:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4714:3:30"},"nodeType":"YulFunctionCall","src":"4714:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4706:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4533:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4547:4:30","type":""}],"src":"4382:356:30"},{"body":{"nodeType":"YulBlock","src":"4917:225:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4934:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4945:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4927:6:30"},"nodeType":"YulFunctionCall","src":"4927:21:30"},"nodeType":"YulExpressionStatement","src":"4927:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4968:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4979:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4964:3:30"},"nodeType":"YulFunctionCall","src":"4964:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"4984:2:30","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4957:6:30"},"nodeType":"YulFunctionCall","src":"4957:30:30"},"nodeType":"YulExpressionStatement","src":"4957:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5007:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5018:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5003:3:30"},"nodeType":"YulFunctionCall","src":"5003:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"5023:34:30","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4996:6:30"},"nodeType":"YulFunctionCall","src":"4996:62:30"},"nodeType":"YulExpressionStatement","src":"4996:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5078:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5089:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5074:3:30"},"nodeType":"YulFunctionCall","src":"5074:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"5094:5:30","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5067:6:30"},"nodeType":"YulFunctionCall","src":"5067:33:30"},"nodeType":"YulExpressionStatement","src":"5067:33:30"},{"nodeType":"YulAssignment","src":"5109:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5121:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5132:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5117:3:30"},"nodeType":"YulFunctionCall","src":"5117:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5109:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4894:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4908:4:30","type":""}],"src":"4743:399:30"},{"body":{"nodeType":"YulBlock","src":"5321:170:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5338:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5349:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5331:6:30"},"nodeType":"YulFunctionCall","src":"5331:21:30"},"nodeType":"YulExpressionStatement","src":"5331:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5372:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5383:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5368:3:30"},"nodeType":"YulFunctionCall","src":"5368:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"5388:2:30","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5361:6:30"},"nodeType":"YulFunctionCall","src":"5361:30:30"},"nodeType":"YulExpressionStatement","src":"5361:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5411:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5422:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5407:3:30"},"nodeType":"YulFunctionCall","src":"5407:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"5427:22:30","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5400:6:30"},"nodeType":"YulFunctionCall","src":"5400:50:30"},"nodeType":"YulExpressionStatement","src":"5400:50:30"},{"nodeType":"YulAssignment","src":"5459:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5471:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5482:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5467:3:30"},"nodeType":"YulFunctionCall","src":"5467:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5459:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5298:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5312:4:30","type":""}],"src":"5147:344:30"},{"body":{"nodeType":"YulBlock","src":"5670:224:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5687:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5698:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5680:6:30"},"nodeType":"YulFunctionCall","src":"5680:21:30"},"nodeType":"YulExpressionStatement","src":"5680:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5721:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5732:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5717:3:30"},"nodeType":"YulFunctionCall","src":"5717:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"5737:2:30","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5710:6:30"},"nodeType":"YulFunctionCall","src":"5710:30:30"},"nodeType":"YulExpressionStatement","src":"5710:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5760:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5771:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5756:3:30"},"nodeType":"YulFunctionCall","src":"5756:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"5776:34:30","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5749:6:30"},"nodeType":"YulFunctionCall","src":"5749:62:30"},"nodeType":"YulExpressionStatement","src":"5749:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5831:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5842:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5827:3:30"},"nodeType":"YulFunctionCall","src":"5827:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"5847:4:30","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5820:6:30"},"nodeType":"YulFunctionCall","src":"5820:32:30"},"nodeType":"YulExpressionStatement","src":"5820:32:30"},{"nodeType":"YulAssignment","src":"5861:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5873:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5884:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5869:3:30"},"nodeType":"YulFunctionCall","src":"5869:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5861:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5647:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5661:4:30","type":""}],"src":"5496:398:30"},{"body":{"nodeType":"YulBlock","src":"6073:247:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6090:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6101:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6083:6:30"},"nodeType":"YulFunctionCall","src":"6083:21:30"},"nodeType":"YulExpressionStatement","src":"6083:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6124:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6135:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6120:3:30"},"nodeType":"YulFunctionCall","src":"6120:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"6140:2:30","type":"","value":"57"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6113:6:30"},"nodeType":"YulFunctionCall","src":"6113:30:30"},"nodeType":"YulExpressionStatement","src":"6113:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6163:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6174:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6159:3:30"},"nodeType":"YulFunctionCall","src":"6159:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"6179:34:30","type":"","value":"ERC20PresetMinterPauser: must ha"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6152:6:30"},"nodeType":"YulFunctionCall","src":"6152:62:30"},"nodeType":"YulExpressionStatement","src":"6152:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6234:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6245:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6230:3:30"},"nodeType":"YulFunctionCall","src":"6230:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"6250:27:30","type":"","value":"ve pauser role to unpause"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6223:6:30"},"nodeType":"YulFunctionCall","src":"6223:55:30"},"nodeType":"YulExpressionStatement","src":"6223:55:30"},{"nodeType":"YulAssignment","src":"6287:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6299:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6310:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6295:3:30"},"nodeType":"YulFunctionCall","src":"6295:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6287:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6050:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6064:4:30","type":""}],"src":"5899:421:30"},{"body":{"nodeType":"YulBlock","src":"6499:224:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6516:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6527:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6509:6:30"},"nodeType":"YulFunctionCall","src":"6509:21:30"},"nodeType":"YulExpressionStatement","src":"6509:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6550:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6561:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6546:3:30"},"nodeType":"YulFunctionCall","src":"6546:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"6566:2:30","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6539:6:30"},"nodeType":"YulFunctionCall","src":"6539:30:30"},"nodeType":"YulExpressionStatement","src":"6539:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6589:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6600:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6585:3:30"},"nodeType":"YulFunctionCall","src":"6585:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"6605:34:30","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6578:6:30"},"nodeType":"YulFunctionCall","src":"6578:62:30"},"nodeType":"YulExpressionStatement","src":"6578:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6660:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6671:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6656:3:30"},"nodeType":"YulFunctionCall","src":"6656:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"6676:4:30","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6649:6:30"},"nodeType":"YulFunctionCall","src":"6649:32:30"},"nodeType":"YulExpressionStatement","src":"6649:32:30"},{"nodeType":"YulAssignment","src":"6690:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6702:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6713:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6698:3:30"},"nodeType":"YulFunctionCall","src":"6698:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6690:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6476:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6490:4:30","type":""}],"src":"6325:398:30"},{"body":{"nodeType":"YulBlock","src":"6902:179:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6919:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6930:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6912:6:30"},"nodeType":"YulFunctionCall","src":"6912:21:30"},"nodeType":"YulExpressionStatement","src":"6912:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6953:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6964:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6949:3:30"},"nodeType":"YulFunctionCall","src":"6949:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"6969:2:30","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6942:6:30"},"nodeType":"YulFunctionCall","src":"6942:30:30"},"nodeType":"YulExpressionStatement","src":"6942:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6992:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7003:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6988:3:30"},"nodeType":"YulFunctionCall","src":"6988:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"7008:31:30","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6981:6:30"},"nodeType":"YulFunctionCall","src":"6981:59:30"},"nodeType":"YulExpressionStatement","src":"6981:59:30"},{"nodeType":"YulAssignment","src":"7049:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7061:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7072:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7057:3:30"},"nodeType":"YulFunctionCall","src":"7057:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7049:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6879:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6893:4:30","type":""}],"src":"6728:353:30"},{"body":{"nodeType":"YulBlock","src":"7260:228:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7277:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7288:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7270:6:30"},"nodeType":"YulFunctionCall","src":"7270:21:30"},"nodeType":"YulExpressionStatement","src":"7270:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7311:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7322:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7307:3:30"},"nodeType":"YulFunctionCall","src":"7307:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"7327:2:30","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7300:6:30"},"nodeType":"YulFunctionCall","src":"7300:30:30"},"nodeType":"YulExpressionStatement","src":"7300:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7350:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7361:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7346:3:30"},"nodeType":"YulFunctionCall","src":"7346:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"7366:34:30","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7339:6:30"},"nodeType":"YulFunctionCall","src":"7339:62:30"},"nodeType":"YulExpressionStatement","src":"7339:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7421:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7432:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7417:3:30"},"nodeType":"YulFunctionCall","src":"7417:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"7437:8:30","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7410:6:30"},"nodeType":"YulFunctionCall","src":"7410:36:30"},"nodeType":"YulExpressionStatement","src":"7410:36:30"},{"nodeType":"YulAssignment","src":"7455:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7467:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7478:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7463:3:30"},"nodeType":"YulFunctionCall","src":"7463:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7455:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7237:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7251:4:30","type":""}],"src":"7086:402:30"},{"body":{"nodeType":"YulBlock","src":"7667:166:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7684:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7695:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7677:6:30"},"nodeType":"YulFunctionCall","src":"7677:21:30"},"nodeType":"YulExpressionStatement","src":"7677:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7718:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7729:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:30"},"nodeType":"YulFunctionCall","src":"7714:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"7734:2:30","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:30"},"nodeType":"YulFunctionCall","src":"7707:30:30"},"nodeType":"YulExpressionStatement","src":"7707:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7757:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7768:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7753:3:30"},"nodeType":"YulFunctionCall","src":"7753:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"7773:18:30","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7746:6:30"},"nodeType":"YulFunctionCall","src":"7746:46:30"},"nodeType":"YulExpressionStatement","src":"7746:46:30"},{"nodeType":"YulAssignment","src":"7801:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7813:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7824:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7809:3:30"},"nodeType":"YulFunctionCall","src":"7809:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7801:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7644:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7658:4:30","type":""}],"src":"7493:340:30"},{"body":{"nodeType":"YulBlock","src":"8012:244:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8029:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8040:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8022:6:30"},"nodeType":"YulFunctionCall","src":"8022:21:30"},"nodeType":"YulExpressionStatement","src":"8022:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8063:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8074:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8059:3:30"},"nodeType":"YulFunctionCall","src":"8059:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"8079:2:30","type":"","value":"54"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8052:6:30"},"nodeType":"YulFunctionCall","src":"8052:30:30"},"nodeType":"YulExpressionStatement","src":"8052:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8102:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8113:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8098:3:30"},"nodeType":"YulFunctionCall","src":"8098:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"8118:34:30","type":"","value":"ERC20PresetMinterPauser: must ha"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8091:6:30"},"nodeType":"YulFunctionCall","src":"8091:62:30"},"nodeType":"YulExpressionStatement","src":"8091:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8173:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8184:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8169:3:30"},"nodeType":"YulFunctionCall","src":"8169:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"8189:24:30","type":"","value":"ve minter role to mint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8162:6:30"},"nodeType":"YulFunctionCall","src":"8162:52:30"},"nodeType":"YulExpressionStatement","src":"8162:52:30"},{"nodeType":"YulAssignment","src":"8223:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8235:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8246:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8231:3:30"},"nodeType":"YulFunctionCall","src":"8231:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8223:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7989:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8003:4:30","type":""}],"src":"7838:418:30"},{"body":{"nodeType":"YulBlock","src":"8435:223:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8452:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8463:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8445:6:30"},"nodeType":"YulFunctionCall","src":"8445:21:30"},"nodeType":"YulExpressionStatement","src":"8445:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8486:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8497:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8482:3:30"},"nodeType":"YulFunctionCall","src":"8482:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"8502:2:30","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8475:6:30"},"nodeType":"YulFunctionCall","src":"8475:30:30"},"nodeType":"YulExpressionStatement","src":"8475:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8525:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8536:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8521:3:30"},"nodeType":"YulFunctionCall","src":"8521:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"8541:34:30","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8514:6:30"},"nodeType":"YulFunctionCall","src":"8514:62:30"},"nodeType":"YulExpressionStatement","src":"8514:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8596:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8607:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8592:3:30"},"nodeType":"YulFunctionCall","src":"8592:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"8612:3:30","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8585:6:30"},"nodeType":"YulFunctionCall","src":"8585:31:30"},"nodeType":"YulExpressionStatement","src":"8585:31:30"},{"nodeType":"YulAssignment","src":"8625:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8637:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8648:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8633:3:30"},"nodeType":"YulFunctionCall","src":"8633:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8625:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8412:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8426:4:30","type":""}],"src":"8261:397:30"},{"body":{"nodeType":"YulBlock","src":"8837:227:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8854:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8865:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8847:6:30"},"nodeType":"YulFunctionCall","src":"8847:21:30"},"nodeType":"YulExpressionStatement","src":"8847:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8888:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8899:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8884:3:30"},"nodeType":"YulFunctionCall","src":"8884:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"8904:2:30","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8877:6:30"},"nodeType":"YulFunctionCall","src":"8877:30:30"},"nodeType":"YulExpressionStatement","src":"8877:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8927:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8938:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8923:3:30"},"nodeType":"YulFunctionCall","src":"8923:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"8943:34:30","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8916:6:30"},"nodeType":"YulFunctionCall","src":"8916:62:30"},"nodeType":"YulExpressionStatement","src":"8916:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8998:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9009:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8994:3:30"},"nodeType":"YulFunctionCall","src":"8994:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"9014:7:30","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8987:6:30"},"nodeType":"YulFunctionCall","src":"8987:35:30"},"nodeType":"YulExpressionStatement","src":"8987:35:30"},{"nodeType":"YulAssignment","src":"9031:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9043:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9054:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9039:3:30"},"nodeType":"YulFunctionCall","src":"9039:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9031:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8814:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8828:4:30","type":""}],"src":"8663:401:30"},{"body":{"nodeType":"YulBlock","src":"9243:226:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9260:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9271:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9253:6:30"},"nodeType":"YulFunctionCall","src":"9253:21:30"},"nodeType":"YulExpressionStatement","src":"9253:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9294:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9305:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9290:3:30"},"nodeType":"YulFunctionCall","src":"9290:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"9310:2:30","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9283:6:30"},"nodeType":"YulFunctionCall","src":"9283:30:30"},"nodeType":"YulExpressionStatement","src":"9283:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9333:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9344:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9329:3:30"},"nodeType":"YulFunctionCall","src":"9329:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"9349:34:30","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9322:6:30"},"nodeType":"YulFunctionCall","src":"9322:62:30"},"nodeType":"YulExpressionStatement","src":"9322:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9404:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9415:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9400:3:30"},"nodeType":"YulFunctionCall","src":"9400:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"9420:6:30","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9393:6:30"},"nodeType":"YulFunctionCall","src":"9393:34:30"},"nodeType":"YulExpressionStatement","src":"9393:34:30"},{"nodeType":"YulAssignment","src":"9436:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9448:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9459:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9444:3:30"},"nodeType":"YulFunctionCall","src":"9444:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9436:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9220:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9234:4:30","type":""}],"src":"9069:400:30"},{"body":{"nodeType":"YulBlock","src":"9648:245:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9665:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9676:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9658:6:30"},"nodeType":"YulFunctionCall","src":"9658:21:30"},"nodeType":"YulExpressionStatement","src":"9658:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9699:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9710:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9695:3:30"},"nodeType":"YulFunctionCall","src":"9695:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"9715:2:30","type":"","value":"55"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9688:6:30"},"nodeType":"YulFunctionCall","src":"9688:30:30"},"nodeType":"YulExpressionStatement","src":"9688:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9738:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9749:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9734:3:30"},"nodeType":"YulFunctionCall","src":"9734:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"9754:34:30","type":"","value":"ERC20PresetMinterPauser: must ha"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9727:6:30"},"nodeType":"YulFunctionCall","src":"9727:62:30"},"nodeType":"YulExpressionStatement","src":"9727:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9809:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9820:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9805:3:30"},"nodeType":"YulFunctionCall","src":"9805:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"9825:25:30","type":"","value":"ve pauser role to pause"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9798:6:30"},"nodeType":"YulFunctionCall","src":"9798:53:30"},"nodeType":"YulExpressionStatement","src":"9798:53:30"},{"nodeType":"YulAssignment","src":"9860:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9872:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9883:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9868:3:30"},"nodeType":"YulFunctionCall","src":"9868:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9860:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9625:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9639:4:30","type":""}],"src":"9474:419:30"},{"body":{"nodeType":"YulBlock","src":"10072:227:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10089:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10100:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10082:6:30"},"nodeType":"YulFunctionCall","src":"10082:21:30"},"nodeType":"YulExpressionStatement","src":"10082:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10123:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10134:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10119:3:30"},"nodeType":"YulFunctionCall","src":"10119:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"10139:2:30","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10112:6:30"},"nodeType":"YulFunctionCall","src":"10112:30:30"},"nodeType":"YulExpressionStatement","src":"10112:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10162:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10173:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10158:3:30"},"nodeType":"YulFunctionCall","src":"10158:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"10178:34:30","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10151:6:30"},"nodeType":"YulFunctionCall","src":"10151:62:30"},"nodeType":"YulExpressionStatement","src":"10151:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10233:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10244:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10229:3:30"},"nodeType":"YulFunctionCall","src":"10229:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"10249:7:30","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10222:6:30"},"nodeType":"YulFunctionCall","src":"10222:35:30"},"nodeType":"YulExpressionStatement","src":"10222:35:30"},{"nodeType":"YulAssignment","src":"10266:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10278:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10289:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10274:3:30"},"nodeType":"YulFunctionCall","src":"10274:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10266:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10049:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10063:4:30","type":""}],"src":"9898:401:30"},{"body":{"nodeType":"YulBlock","src":"10478:237:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10495:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10506:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10488:6:30"},"nodeType":"YulFunctionCall","src":"10488:21:30"},"nodeType":"YulExpressionStatement","src":"10488:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10529:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10540:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10525:3:30"},"nodeType":"YulFunctionCall","src":"10525:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"10545:2:30","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10518:6:30"},"nodeType":"YulFunctionCall","src":"10518:30:30"},"nodeType":"YulExpressionStatement","src":"10518:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10568:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10579:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10564:3:30"},"nodeType":"YulFunctionCall","src":"10564:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"10584:34:30","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10557:6:30"},"nodeType":"YulFunctionCall","src":"10557:62:30"},"nodeType":"YulExpressionStatement","src":"10557:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10639:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10650:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10635:3:30"},"nodeType":"YulFunctionCall","src":"10635:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"10655:17:30","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10628:6:30"},"nodeType":"YulFunctionCall","src":"10628:45:30"},"nodeType":"YulExpressionStatement","src":"10628:45:30"},{"nodeType":"YulAssignment","src":"10682:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10694:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10705:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10690:3:30"},"nodeType":"YulFunctionCall","src":"10690:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10682:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10455:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10469:4:30","type":""}],"src":"10304:411:30"},{"body":{"nodeType":"YulBlock","src":"10894:181:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10911:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10922:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10904:6:30"},"nodeType":"YulFunctionCall","src":"10904:21:30"},"nodeType":"YulExpressionStatement","src":"10904:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10945:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10956:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10941:3:30"},"nodeType":"YulFunctionCall","src":"10941:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"10961:2:30","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10934:6:30"},"nodeType":"YulFunctionCall","src":"10934:30:30"},"nodeType":"YulExpressionStatement","src":"10934:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10984:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10995:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10980:3:30"},"nodeType":"YulFunctionCall","src":"10980:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"11000:33:30","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10973:6:30"},"nodeType":"YulFunctionCall","src":"10973:61:30"},"nodeType":"YulExpressionStatement","src":"10973:61:30"},{"nodeType":"YulAssignment","src":"11043:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11055:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11066:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11051:3:30"},"nodeType":"YulFunctionCall","src":"11051:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11043:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10871:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10885:4:30","type":""}],"src":"10720:355:30"},{"body":{"nodeType":"YulBlock","src":"11254:232:30","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11271:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11282:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11264:6:30"},"nodeType":"YulFunctionCall","src":"11264:21:30"},"nodeType":"YulExpressionStatement","src":"11264:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11305:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11316:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11301:3:30"},"nodeType":"YulFunctionCall","src":"11301:18:30"},{"kind":"number","nodeType":"YulLiteral","src":"11321:2:30","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11294:6:30"},"nodeType":"YulFunctionCall","src":"11294:30:30"},"nodeType":"YulExpressionStatement","src":"11294:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11344:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11355:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11340:3:30"},"nodeType":"YulFunctionCall","src":"11340:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"11360:34:30","type":"","value":"ERC20Pausable: token transfer wh"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11333:6:30"},"nodeType":"YulFunctionCall","src":"11333:62:30"},"nodeType":"YulExpressionStatement","src":"11333:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11415:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11426:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11411:3:30"},"nodeType":"YulFunctionCall","src":"11411:18:30"},{"kind":"string","nodeType":"YulLiteral","src":"11431:12:30","type":"","value":"ile paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11404:6:30"},"nodeType":"YulFunctionCall","src":"11404:40:30"},"nodeType":"YulExpressionStatement","src":"11404:40:30"},{"nodeType":"YulAssignment","src":"11453:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11465:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11476:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11461:3:30"},"nodeType":"YulFunctionCall","src":"11461:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11453:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11231:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11245:4:30","type":""}],"src":"11080:406:30"},{"body":{"nodeType":"YulBlock","src":"11592:76:30","statements":[{"nodeType":"YulAssignment","src":"11602:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11614:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11625:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11610:3:30"},"nodeType":"YulFunctionCall","src":"11610:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11602:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11644:9:30"},{"name":"value0","nodeType":"YulIdentifier","src":"11655:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11637:6:30"},"nodeType":"YulFunctionCall","src":"11637:25:30"},"nodeType":"YulExpressionStatement","src":"11637:25:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11561:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11572:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11583:4:30","type":""}],"src":"11491:177:30"},{"body":{"nodeType":"YulBlock","src":"11770:87:30","statements":[{"nodeType":"YulAssignment","src":"11780:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11792:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11803:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11788:3:30"},"nodeType":"YulFunctionCall","src":"11788:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11780:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11822:9:30"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11837:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"11845:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11833:3:30"},"nodeType":"YulFunctionCall","src":"11833:17:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11815:6:30"},"nodeType":"YulFunctionCall","src":"11815:36:30"},"nodeType":"YulExpressionStatement","src":"11815:36:30"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11739:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11750:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11761:4:30","type":""}],"src":"11673:184:30"},{"body":{"nodeType":"YulBlock","src":"11910:80:30","statements":[{"body":{"nodeType":"YulBlock","src":"11937:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11939:16:30"},"nodeType":"YulFunctionCall","src":"11939:18:30"},"nodeType":"YulExpressionStatement","src":"11939:18:30"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11926:1:30"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11933:1:30"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11929:3:30"},"nodeType":"YulFunctionCall","src":"11929:6:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11923:2:30"},"nodeType":"YulFunctionCall","src":"11923:13:30"},"nodeType":"YulIf","src":"11920:2:30"},{"nodeType":"YulAssignment","src":"11968:16:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11979:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"11982:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11975:3:30"},"nodeType":"YulFunctionCall","src":"11975:9:30"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11968:3:30"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11893:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"11896:1:30","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11902:3:30","type":""}],"src":"11862:128:30"},{"body":{"nodeType":"YulBlock","src":"12047:116:30","statements":[{"body":{"nodeType":"YulBlock","src":"12106:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12108:16:30"},"nodeType":"YulFunctionCall","src":"12108:18:30"},"nodeType":"YulExpressionStatement","src":"12108:18:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12078:1:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12071:6:30"},"nodeType":"YulFunctionCall","src":"12071:9:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12064:6:30"},"nodeType":"YulFunctionCall","src":"12064:17:30"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12086:1:30"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12097:1:30","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12093:3:30"},"nodeType":"YulFunctionCall","src":"12093:6:30"},{"name":"x","nodeType":"YulIdentifier","src":"12101:1:30"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12089:3:30"},"nodeType":"YulFunctionCall","src":"12089:14:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12083:2:30"},"nodeType":"YulFunctionCall","src":"12083:21:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12060:3:30"},"nodeType":"YulFunctionCall","src":"12060:45:30"},"nodeType":"YulIf","src":"12057:2:30"},{"nodeType":"YulAssignment","src":"12137:20:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12152:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"12155:1:30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12148:3:30"},"nodeType":"YulFunctionCall","src":"12148:9:30"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"12137:7:30"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12026:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"12029:1:30","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"12035:7:30","type":""}],"src":"11995:168:30"},{"body":{"nodeType":"YulBlock","src":"12217:76:30","statements":[{"body":{"nodeType":"YulBlock","src":"12239:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12241:16:30"},"nodeType":"YulFunctionCall","src":"12241:18:30"},"nodeType":"YulExpressionStatement","src":"12241:18:30"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12233:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"12236:1:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12230:2:30"},"nodeType":"YulFunctionCall","src":"12230:8:30"},"nodeType":"YulIf","src":"12227:2:30"},{"nodeType":"YulAssignment","src":"12270:17:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12282:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"12285:1:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12278:3:30"},"nodeType":"YulFunctionCall","src":"12278:9:30"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"12270:4:30"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12199:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"12202:1:30","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"12208:4:30","type":""}],"src":"12168:125:30"},{"body":{"nodeType":"YulBlock","src":"12351:205:30","statements":[{"nodeType":"YulVariableDeclaration","src":"12361:10:30","value":{"kind":"number","nodeType":"YulLiteral","src":"12370:1:30","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12365:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"12430:63:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12455:3:30"},{"name":"i","nodeType":"YulIdentifier","src":"12460:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12451:3:30"},"nodeType":"YulFunctionCall","src":"12451:11:30"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12474:3:30"},{"name":"i","nodeType":"YulIdentifier","src":"12479:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12470:3:30"},"nodeType":"YulFunctionCall","src":"12470:11:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12464:5:30"},"nodeType":"YulFunctionCall","src":"12464:18:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12444:6:30"},"nodeType":"YulFunctionCall","src":"12444:39:30"},"nodeType":"YulExpressionStatement","src":"12444:39:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12391:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"12394:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12388:2:30"},"nodeType":"YulFunctionCall","src":"12388:13:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12402:19:30","statements":[{"nodeType":"YulAssignment","src":"12404:15:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12413:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"12416:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12409:3:30"},"nodeType":"YulFunctionCall","src":"12409:10:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12404:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"12384:3:30","statements":[]},"src":"12380:113:30"},{"body":{"nodeType":"YulBlock","src":"12519:31:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12532:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"12537:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12528:3:30"},"nodeType":"YulFunctionCall","src":"12528:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"12546:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12521:6:30"},"nodeType":"YulFunctionCall","src":"12521:27:30"},"nodeType":"YulExpressionStatement","src":"12521:27:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12508:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"12511:6:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12505:2:30"},"nodeType":"YulFunctionCall","src":"12505:13:30"},"nodeType":"YulIf","src":"12502:2:30"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"12329:3:30","type":""},{"name":"dst","nodeType":"YulTypedName","src":"12334:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"12339:6:30","type":""}],"src":"12298:258:30"},{"body":{"nodeType":"YulBlock","src":"12608:89:30","statements":[{"body":{"nodeType":"YulBlock","src":"12635:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12637:16:30"},"nodeType":"YulFunctionCall","src":"12637:18:30"},"nodeType":"YulExpressionStatement","src":"12637:18:30"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12628:5:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12621:6:30"},"nodeType":"YulFunctionCall","src":"12621:13:30"},"nodeType":"YulIf","src":"12618:2:30"},{"nodeType":"YulAssignment","src":"12666:25:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12677:5:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12688:1:30","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12684:3:30"},"nodeType":"YulFunctionCall","src":"12684:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12673:3:30"},"nodeType":"YulFunctionCall","src":"12673:18:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12666:3:30"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12590:5:30","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12600:3:30","type":""}],"src":"12561:136:30"},{"body":{"nodeType":"YulBlock","src":"12757:382:30","statements":[{"nodeType":"YulAssignment","src":"12767:22:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12781:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"12787:1:30","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12777:3:30"},"nodeType":"YulFunctionCall","src":"12777:12:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12767:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"12798:38:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12828:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"12834:1:30","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12824:3:30"},"nodeType":"YulFunctionCall","src":"12824:12:30"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12802:18:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"12875:31:30","statements":[{"nodeType":"YulAssignment","src":"12877:27:30","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12891:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"12899:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12887:3:30"},"nodeType":"YulFunctionCall","src":"12887:17:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12877:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12855:18:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12848:6:30"},"nodeType":"YulFunctionCall","src":"12848:26:30"},"nodeType":"YulIf","src":"12845:2:30"},{"body":{"nodeType":"YulBlock","src":"12965:168:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12986:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12989:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12979:6:30"},"nodeType":"YulFunctionCall","src":"12979:88:30"},"nodeType":"YulExpressionStatement","src":"12979:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13087:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13090:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13080:6:30"},"nodeType":"YulFunctionCall","src":"13080:15:30"},"nodeType":"YulExpressionStatement","src":"13080:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13115:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13118:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13108:6:30"},"nodeType":"YulFunctionCall","src":"13108:15:30"},"nodeType":"YulExpressionStatement","src":"13108:15:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12921:18:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12944:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"12952:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12941:2:30"},"nodeType":"YulFunctionCall","src":"12941:14:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12918:2:30"},"nodeType":"YulFunctionCall","src":"12918:38:30"},"nodeType":"YulIf","src":"12915:2:30"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12737:4:30","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12746:6:30","type":""}],"src":"12702:437:30"},{"body":{"nodeType":"YulBlock","src":"13176:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13193:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13196:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13186:6:30"},"nodeType":"YulFunctionCall","src":"13186:88:30"},"nodeType":"YulExpressionStatement","src":"13186:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13290:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13293:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13283:6:30"},"nodeType":"YulFunctionCall","src":"13283:15:30"},"nodeType":"YulExpressionStatement","src":"13283:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13314:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13317:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13307:6:30"},"nodeType":"YulFunctionCall","src":"13307:15:30"},"nodeType":"YulExpressionStatement","src":"13307:15:30"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13144:184:30"}]},"contents":"{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"ERC20PresetMinterPauser: must ha\")\n        mstore(add(headStart, 96), \"ve pauser role to unpause\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"ERC20PresetMinterPauser: must ha\")\n        mstore(add(headStart, 96), \"ve minter role to mint\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"ERC20PresetMinterPauser: must ha\")\n        mstore(add(headStart, 96), \"ve pauser role to pause\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC20Pausable: token transfer wh\")\n        mstore(add(headStart, 96), \"ile paused\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d539139311610071578063d539139314610385578063d547741f1461038d578063dd62ed3e146103a0578063e63ab1e9146103b3576101c4565b8063a457c2d71461034c578063a9059cbb1461035f578063ca15c87314610372576101c4565b80639010d07c116100d35780639010d07c1461030957806391d148541461032957806395d89b411461033c578063a217fddf14610344576101c4565b806370a08231146102db57806379cc6790146102ee5780638456cb5914610301576101c4565b8063313ce567116101665780633f4ba83a116101405780633f4ba83a146102a557806340c10f19146102ad57806342966c68146102c05780635c975abb146102d3576101c4565b8063313ce5671461026a57806336568abe1461027f5780633950935114610292576101c4565b806318160ddd116101a257806318160ddd1461021a57806323b872dd1461022f578063248a9ca3146102425780632f2ff15d14610255576101c4565b806301ffc9a7146101c957806306fdde03146101f2578063095ea7b314610207575b600080fd5b6101dc6101d7366004611430565b6103bb565b6040516101e991906114ed565b60405180910390f35b6101fa610401565b6040516101e99190611501565b6101dc6102153660046113ac565b610493565b6102226104b7565b6040516101e991906114f8565b6101dc61023d366004611371565b6104bd565b6102226102503660046113d5565b6104eb565b6102686102633660046113ed565b610500565b005b610272610521565b6040516101e99190611afe565b61026861028d3660046113ed565b610526565b6101dc6102a03660046113ac565b610575565b6102686105a1565b6102686102bb3660046113ac565b6105f3565b6102686102ce3660046113d5565b610645565b6101dc610659565b6102226102e9366004611325565b610662565b6102686102fc3660046113ac565b61067d565b610268610699565b61031c61031736600461140f565b6106e9565b6040516101e991906114d9565b6101dc6103373660046113ed565b610708565b6101fa610731565b610222610740565b6101dc61035a3660046113ac565b610745565b6101dc61036d3660046113ac565b61078d565b6102226103803660046113d5565b6107a5565b6102226107bc565b61026861039b3660046113ed565b6107e0565b6102226103ae36600461133f565b6107fc565b610222610827565b60006001600160e01b031982167f5a05180f0000000000000000000000000000000000000000000000000000000014806103f957506103f9826108e5565b90505b919050565b60606005805461041090611b9d565b80601f016020809104026020016040519081016040528092919081815260200182805461043c90611b9d565b80156104895780601f1061045e57610100808354040283529160200191610489565b820191906000526020600020905b81548152906001019060200180831161046c57829003601f168201915b5050505050905090565b60008061049e610923565b90506104ab818585610927565b60019150505b92915050565b60045490565b6000806104c8610923565b90506104d58582856109db565b6104e0858585610a25565b506001949350505050565b60009081526020819052604090206001015490565b610509826104eb565b61051281610b26565b61051c8383610b37565b505050565b601290565b61052e610923565b6001600160a01b0316816001600160a01b0316146105675760405162461bcd60e51b815260040161055e90611a0d565b60405180910390fd5b6105718282610b59565b5050565b600080610580610923565b90506104ab81858561059285896107fc565b61059c9190611b0c565b610927565b6105cd7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610337610923565b6105e95760405162461bcd60e51b815260040161055e9061165a565b6105f1610b7b565b565b61061f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610337610923565b61063b5760405162461bcd60e51b815260040161055e906117df565b6105718282610bcd565b610656610650610923565b82610c77565b50565b60075460ff1690565b6001600160a01b031660009081526002602052604090205490565b61068f82610689610923565b836109db565b6105718282610c77565b6106c57f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610337610923565b6106e15760405162461bcd60e51b815260040161055e90611953565b6105f1610d4e565b60008281526001602052604081206107019083610d8c565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60606006805461041090611b9d565b600081565b600080610750610923565b9050600061075e82866107fc565b9050838110156107805760405162461bcd60e51b815260040161055e906119b0565b6104e08286868403610927565b600080610798610923565b90506104ab818585610a25565b60008181526001602052604081206103f990610d98565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6107e9826104eb565b6107f281610b26565b61051c8383610b59565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6108558282610708565b610571576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561088c610923565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610701836001600160a01b038416610da3565b60006001600160e01b031982167f7965db0b0000000000000000000000000000000000000000000000000000000014806103f957506103f982610ded565b3390565b6001600160a01b03831661094d5760405162461bcd60e51b815260040161055e906118f6565b6001600160a01b0382166109735760405162461bcd60e51b815260040161055e906116b7565b6001600160a01b0380841660008181526003602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906109ce9085906114f8565b60405180910390a3505050565b60006109e784846107fc565b90506000198114610a1f5781811015610a125760405162461bcd60e51b815260040161055e90611714565b610a1f8484848403610927565b50505050565b6001600160a01b038316610a4b5760405162461bcd60e51b815260040161055e90611899565b6001600160a01b038216610a715760405162461bcd60e51b815260040161055e90611569565b610a7c838383610e1f565b6001600160a01b03831660009081526002602052604090205481811015610ab55760405162461bcd60e51b815260040161055e9061174b565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610b139086906114f8565b60405180910390a3610a1f84848461051c565b61065681610b32610923565b610e2a565b610b41828261084b565b600082815260016020526040902061051c90826108d0565b610b638282610e83565b600082815260016020526040902061051c9082610f06565b610b83610f1b565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610bb6610923565b604051610bc391906114d9565b60405180910390a1565b6001600160a01b038216610bf35760405162461bcd60e51b815260040161055e90611a6a565b610bff60008383610e1f565b8060046000828254610c119190611b0c565b90915550506001600160a01b038216600081815260026020526040808220805485019055517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610c639085906114f8565b60405180910390a36105716000838361051c565b6001600160a01b038216610c9d5760405162461bcd60e51b815260040161055e9061183c565b610ca982600083610e1f565b6001600160a01b03821660009081526002602052604090205481811015610ce25760405162461bcd60e51b815260040161055e906115fd565b6001600160a01b0383166000818152600260205260408082208585039055600480548690039055519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d3a9086906114f8565b60405180910390a361051c8360008461051c565b610d56610f3f565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610bb6610923565b60006107018383610f64565b60006103f982610f9c565b6000610daf8383610fa0565b610de5575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104b1565b5060006104b1565b6001600160e01b031981167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b61051c838383610fb8565b610e348282610708565b61057157610e4181610fe8565b610e4c836020610ffa565b604051602001610e5d929190611458565b60408051601f198184030181529082905262461bcd60e51b825261055e91600401611501565b610e8d8282610708565b15610571576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055610ec2610923565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000610701836001600160a01b0384166111f1565b610f23610659565b6105f15760405162461bcd60e51b815260040161055e906115c6565b610f47610659565b156105f15760405162461bcd60e51b815260040161055e906117a8565b6000826000018281548110610f8957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b5490565b60009081526001919091016020526040902054151590565b610fc383838361051c565b610fcb610659565b1561051c5760405162461bcd60e51b815260040161055e90611aa1565b60606103f96001600160a01b03831660145b60606000611009836002611b24565b611014906002611b0c565b67ffffffffffffffff81111561103a57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611064576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106110a957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061110257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611126846002611b24565b611131906001611b0c565b90505b60018111156111d2577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061118057634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106111a457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936111cb81611b86565b9050611134565b5083156107015760405162461bcd60e51b815260040161055e90611534565b60008181526001830160205260408120548015611304576000611215600183611b43565b855490915060009061122990600190611b43565b90508181146112aa57600086600001828154811061125757634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508087600001848154811061128857634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b85548690806112c957634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104b1565b60009150506104b1565b80356001600160a01b03811681146103fc57600080fd5b600060208284031215611336578081fd5b6107018261130e565b60008060408385031215611351578081fd5b61135a8361130e565b91506113686020840161130e565b90509250929050565b600080600060608486031215611385578081fd5b61138e8461130e565b925061139c6020850161130e565b9150604084013590509250925092565b600080604083850312156113be578182fd5b6113c78361130e565b946020939093013593505050565b6000602082840312156113e6578081fd5b5035919050565b600080604083850312156113ff578182fd5b823591506113686020840161130e565b60008060408385031215611421578182fd5b50508035926020909101359150565b600060208284031215611441578081fd5b81356001600160e01b031981168114610701578182fd5b60007f416363657373436f6e74726f6c3a206163636f756e742000000000000000000082528351611490816017850160208801611b5a565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516114cd816028840160208801611b5a565b01602801949350505050565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b6000602082528251806020840152611520816040850160208701611b5a565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526014908201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604082015260600190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60408201527f6365000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526039908201527f45524332305072657365744d696e7465725061757365723a206d75737420686160408201527f76652070617573657220726f6c6520746f20756e706175736500000000000000606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560408201527f7373000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e63650000000000000000000000000000000000000000000000000000606082015260800190565b60208082526010908201527f5061757361626c653a2070617573656400000000000000000000000000000000604082015260600190565b60208082526036908201527f45524332305072657365744d696e7465725061757365723a206d75737420686160408201527f7665206d696e74657220726f6c6520746f206d696e7400000000000000000000606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360408201527f7300000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f45524332305072657365744d696e7465725061757365723a206d75737420686160408201527f76652070617573657220726f6c6520746f207061757365000000000000000000606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408201527f207a65726f000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201527f20726f6c657320666f722073656c660000000000000000000000000000000000606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b6020808252602a908201527f45524332305061757361626c653a20746f6b656e207472616e7366657220776860408201527f696c652070617573656400000000000000000000000000000000000000000000606082015260800190565b60ff91909116815260200190565b60008219821115611b1f57611b1f611bd8565b500190565b6000816000190483118215151615611b3e57611b3e611bd8565b500290565b600082821015611b5557611b55611bd8565b500390565b60005b83811015611b75578181015183820152602001611b5d565b83811115610a1f5750506000910152565b600081611b9557611b95611bd8565b506000190190565b600281046001821680611bb157607f821691505b60208210811415611bd257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220638d97ed6c467bf0dc6f36761f2dc3010d87920cb6f0978f3809b76505e7693d64736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x3B3 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x372 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x9010D07C GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x344 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x301 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2D3 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x292 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x255 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x207 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x222 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D5 JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x268 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x13ED JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1AFE JUMP JUMPDEST PUSH2 0x268 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x13ED JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x13D5 JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x659 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x67D JUMP JUMPDEST PUSH2 0x268 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x31C PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x140F JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x13ED JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x731 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x740 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH2 0x222 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D5 JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x268 PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x13ED JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x222 PUSH2 0x827 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3F9 JUMPI POP PUSH2 0x3F9 DUP3 PUSH2 0x8E5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x410 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x43C SWAP1 PUSH2 0x1B9D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x489 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x489 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x46C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x49E PUSH2 0x923 JUMP JUMPDEST SWAP1 POP PUSH2 0x4AB DUP2 DUP6 DUP6 PUSH2 0x927 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4C8 PUSH2 0x923 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D5 DUP6 DUP3 DUP6 PUSH2 0x9DB JUMP JUMPDEST PUSH2 0x4E0 DUP6 DUP6 DUP6 PUSH2 0xA25 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x509 DUP3 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x512 DUP2 PUSH2 0xB26 JUMP JUMPDEST PUSH2 0x51C DUP4 DUP4 PUSH2 0xB37 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH2 0x52E PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1A0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x571 DUP3 DUP3 PUSH2 0xB59 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x580 PUSH2 0x923 JUMP JUMPDEST SWAP1 POP PUSH2 0x4AB DUP2 DUP6 DUP6 PUSH2 0x592 DUP6 DUP10 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH2 0x5CD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x337 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x165A JUMP JUMPDEST PUSH2 0x5F1 PUSH2 0xB7B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x61F PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x337 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x63B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x571 DUP3 DUP3 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x656 PUSH2 0x650 PUSH2 0x923 JUMP JUMPDEST DUP3 PUSH2 0xC77 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x68F DUP3 PUSH2 0x689 PUSH2 0x923 JUMP JUMPDEST DUP4 PUSH2 0x9DB JUMP JUMPDEST PUSH2 0x571 DUP3 DUP3 PUSH2 0xC77 JUMP JUMPDEST PUSH2 0x6C5 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x337 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x6E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x5F1 PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x701 SWAP1 DUP4 PUSH2 0xD8C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x410 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x750 PUSH2 0x923 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x75E DUP3 DUP7 PUSH2 0x7FC JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0x4E0 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x927 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x798 PUSH2 0x923 JUMP JUMPDEST SWAP1 POP PUSH2 0x4AB DUP2 DUP6 DUP6 PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x3F9 SWAP1 PUSH2 0xD98 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x7E9 DUP3 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x7F2 DUP2 PUSH2 0xB26 JUMP JUMPDEST PUSH2 0x51C DUP4 DUP4 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x855 DUP3 DUP3 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x571 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x88C PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x701 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3F9 JUMPI POP PUSH2 0x3F9 DUP3 PUSH2 0xDED JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x94D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x973 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x9CE SWAP1 DUP6 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E7 DUP5 DUP5 PUSH2 0x7FC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xA1F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1714 JUMP JUMPDEST PUSH2 0xA1F DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x927 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0xA7C DUP4 DUP4 DUP4 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x174B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xB13 SWAP1 DUP7 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA1F DUP5 DUP5 DUP5 PUSH2 0x51C JUMP JUMPDEST PUSH2 0x656 DUP2 PUSH2 0xB32 PUSH2 0x923 JUMP JUMPDEST PUSH2 0xE2A JUMP JUMPDEST PUSH2 0xB41 DUP3 DUP3 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x51C SWAP1 DUP3 PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0xB63 DUP3 DUP3 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x51C SWAP1 DUP3 PUSH2 0xF06 JUMP JUMPDEST PUSH2 0xB83 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xBB6 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC3 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0xBFF PUSH1 0x0 DUP4 DUP4 PUSH2 0xE1F JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xC63 SWAP1 DUP6 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x571 PUSH1 0x0 DUP4 DUP4 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x183C JUMP JUMPDEST PUSH2 0xCA9 DUP3 PUSH1 0x0 DUP4 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP7 SWAP1 SUB SWAP1 SSTORE MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xD3A SWAP1 DUP7 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x51C DUP4 PUSH1 0x0 DUP5 PUSH2 0x51C JUMP JUMPDEST PUSH2 0xD56 PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xBB6 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x701 DUP4 DUP4 PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F9 DUP3 PUSH2 0xF9C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAF DUP4 DUP4 PUSH2 0xFA0 JUMP JUMPDEST PUSH2 0xDE5 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x4B1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x51C DUP4 DUP4 DUP4 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0xE34 DUP3 DUP3 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x571 JUMPI PUSH2 0xE41 DUP2 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0xE4C DUP4 PUSH1 0x20 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE5D SWAP3 SWAP2 SWAP1 PUSH2 0x1458 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x55E SWAP2 PUSH1 0x4 ADD PUSH2 0x1501 JUMP JUMPDEST PUSH2 0xE8D DUP3 DUP3 PUSH2 0x708 JUMP JUMPDEST ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xEC2 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x701 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0xF23 PUSH2 0x659 JUMP JUMPDEST PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH2 0xF47 PUSH2 0x659 JUMP JUMPDEST ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x17A8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF89 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xFC3 DUP4 DUP4 DUP4 PUSH2 0x51C JUMP JUMPDEST PUSH2 0xFCB PUSH2 0x659 JUMP JUMPDEST ISZERO PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1009 DUP4 PUSH1 0x2 PUSH2 0x1B24 JUMP JUMPDEST PUSH2 0x1014 SWAP1 PUSH1 0x2 PUSH2 0x1B0C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x103A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1064 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10A9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1102 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1126 DUP5 PUSH1 0x2 PUSH2 0x1B24 JUMP JUMPDEST PUSH2 0x1131 SWAP1 PUSH1 0x1 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11D2 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1180 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11A4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x11CB DUP2 PUSH2 0x1B86 JUMP JUMPDEST SWAP1 POP PUSH2 0x1134 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1304 JUMPI PUSH1 0x0 PUSH2 0x1215 PUSH1 0x1 DUP4 PUSH2 0x1B43 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1229 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1B43 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x12AA JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1257 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1288 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x12C9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x4B1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1336 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x701 DUP3 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1351 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x135A DUP4 PUSH2 0x130E JUMP JUMPDEST SWAP2 POP PUSH2 0x1368 PUSH1 0x20 DUP5 ADD PUSH2 0x130E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1385 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x138E DUP5 PUSH2 0x130E JUMP JUMPDEST SWAP3 POP PUSH2 0x139C PUSH1 0x20 DUP6 ADD PUSH2 0x130E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13BE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x13C7 DUP4 PUSH2 0x130E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E6 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1368 PUSH1 0x20 DUP5 ADD PUSH2 0x130E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1421 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1441 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP3 MSTORE DUP4 MLOAD PUSH2 0x1490 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1B5A JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x14CD DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1B5A JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1520 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1B5A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x39 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305072657365744D696E7465725061757365723A206D757374206861 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x76652070617573657220726F6C6520746F20756E706175736500000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305072657365744D696E7465725061757365723A206D757374206861 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7665206D696E74657220726F6C6520746F206D696E7400000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x37 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305072657365744D696E7465725061757365723A206D757374206861 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x76652070617573657220726F6C6520746F207061757365000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x696C652070617573656400000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1B1F JUMPI PUSH2 0x1B1F PUSH2 0x1BD8 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B3E JUMPI PUSH2 0x1B3E PUSH2 0x1BD8 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B55 JUMPI PUSH2 0x1B55 PUSH2 0x1BD8 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B75 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B5D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xA1F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1B95 JUMPI PUSH2 0x1B95 PUSH2 0x1BD8 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BB1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1BD2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x8D97ED6C CHAINID PUSH28 0xF0DC6F36761F2DC3010D87920CB6F0978F3809B76505E7693D64736F PUSH13 0x63430008010033000000000000 ","sourceMap":"1005:2013:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:212:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98:14;;;:::i;:::-;;;;;;;:::i;4444:197::-;;;;;;:::i;:::-;;:::i;3255:106::-;;;:::i;:::-;;;;;;;:::i;5203:256::-;;;;;;:::i;:::-;;:::i;4504:129:0:-;;;;;;:::i;:::-;;:::i;4929:145::-;;;;;;:::i;:::-;;:::i;:::-;;3104:91:14;;;:::i;:::-;;;;;;;:::i;6038:214:0:-;;;;;;:::i;:::-;;:::i;5854:234:14:-;;;;;;:::i;:::-;;:::i;2624:175:19:-;;;:::i;1843:202::-;;;;;;:::i;:::-;;:::i;578:89:16:-;;;;;;:::i;:::-;;:::i;1615:84:5:-;;;:::i;3419:125:14:-;;;;;;:::i;:::-;;:::i;973:161:16:-;;;;;;:::i;:::-;;:::i;2248:169:19:-;;;:::i;1431:151:1:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3021:145:0:-;;;;;;:::i;:::-;;:::i;2369:102:14:-;;;:::i;2153:49:0:-;;;:::i;6575:427:14:-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;1750:140:1:-;;;;;;:::i;:::-;;:::i;1110:62:19:-;;;:::i;5354:147:0:-;;;;;;:::i;:::-;;:::i;3987:149:14:-;;;;;;:::i;:::-;;:::i;1178:62:19:-;;;:::i;634:212:1:-;719:4;-1:-1:-1;;;;;;742:57:1;;757:42;742:57;;:97;;;803:36;827:11;803:23;:36::i;:::-;735:104;;634:212;;;;:::o;2158:98:14:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;3255:106::-;3342:12;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:14;;5203:256;-1:-1:-1;;;;5203:256:14:o;4504:129:0:-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129::o;4929:145::-;5012:18;5025:4;5012:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;3104:91:14:-;3186:2;3104:91;:::o;6038:214:0:-;6144:12;:10;:12::i;:::-;-1:-1:-1;;;;;6133:23:0;:7;-1:-1:-1;;;;;6133:23:0;;6125:83;;;;-1:-1:-1;;;6125:83:0;;;;;;;:::i;:::-;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;5854:234:14:-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2624:175:19:-;2676:34;1216:24;2697:12;:10;:12::i;2676:34::-;2668:104;;;;-1:-1:-1;;;2668:104:19;;;;;;;:::i;:::-;2782:10;:8;:10::i;:::-;2624:175::o;1843:202::-;1918:34;1148:24;1939:12;:10;:12::i;1918:34::-;1910:101;;;;-1:-1:-1;;;1910:101:19;;;;;;;:::i;:::-;2021:17;2027:2;2031:6;2021:5;:17::i;578:89:16:-;633:27;639:12;:10;:12::i;:::-;653:6;633:5;:27::i;:::-;578:89;:::o;1615:84:5:-;1685:7;;;;1615:84;:::o;3419:125:14:-;-1:-1:-1;;;;;3519:18:14;3493:7;3519:18;;;:9;:18;;;;;;;3419:125::o;973:161:16:-;1049:46;1065:7;1074:12;:10;:12::i;:::-;1088:6;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;2248:169:19:-;2298:34;1216:24;2319:12;:10;:12::i;2298:34::-;2290:102;;;;-1:-1:-1;;;2290:102:19;;;;;;;:::i;:::-;2402:8;:6;:8::i;1431:151:1:-;1521:7;1547:18;;;:12;:18;;;;;:28;;1569:5;1547:21;:28::i;:::-;1540:35;1431:151;-1:-1:-1;;;1431:151:1:o;3021:145:0:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;;;;3021:145::o;2369:102:14:-;2425:13;2457:7;2450:14;;;;;:::i;2153:49:0:-;2198:4;2153:49;:::o;6575:427:14:-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:14;;;;;;;:::i;:::-;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;1750:140:1:-;1830:7;1856:18;;;:12;:18;;;;;:27;;:25;:27::i;1110:62:19:-;1148:24;1110:62;:::o;5354:147:0:-;5438:18;5451:4;5438:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;3987:149:14:-:0;-1:-1:-1;;;;;4102:18:14;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;1178:62:19:-;1216:24;1178:62;:::o;7587:233:0:-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;7740:4;7708:36;;;7790:12;:10;:12::i;:::-;-1:-1:-1;;;;;7763:40:0;7781:7;-1:-1:-1;;;;;7763:40:0;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;8305:150:28:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:28;;8398:4;:50::i;2732:202:0:-;2817:4;-1:-1:-1;;;;;;2840:47:0;;2855:32;2840:47;;:87;;;2891:36;2915:11;2891:23;:36::i;640:96:21:-;719:10;640:96;:::o;10457:340:14:-;-1:-1:-1;;;;;10558:19:14;;10550:68;;;;-1:-1:-1;;;10550:68:14;;;;;;;:::i;:::-;-1:-1:-1;;;;;10636:21:14;;10628:68;;;;-1:-1:-1;;;10628:68:14;;;;;;;:::i;:::-;-1:-1:-1;;;;;10707:18:14;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10758:32;;;;;10737:6;;10758:32;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:14;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:14;;;;;;;:::i;:::-;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11078:411;;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:14;;7544:68;;;;-1:-1:-1;;;7544:68:14;;;;;;;:::i;:::-;-1:-1:-1;;;;;7630:16:14;;7622:64;;;;-1:-1:-1;;;7622:64:14;;;;;;;:::i;:::-;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;-1:-1:-1;;;;;7768:15:14;;7746:19;7768:15;;;:9;:15;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:14;;;;;;;:::i;:::-;-1:-1:-1;;;;;7899:15:14;;;;;;;:9;:15;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;;;;;7931:6;;8163:26;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;3460:103:0:-;3526:30;3537:4;3543:12;:10;:12::i;:::-;3526:10;:30::i;1978:166:1:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106:18;;;;:12;:18;;;;;:31;;2129:7;2106:22;:31::i;2233:171::-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:18;;;;:12;:18;;;;;:34;;2389:7;2363:25;:34::i;2433:117:5:-;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:5::1;::::0;;2521:22:::1;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;8520:535:14:-;-1:-1:-1;;;;;8603:21:14;;8595:65;;;;-1:-1:-1;;;8595:65:14;;;;;;;:::i;:::-;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:14;;;;;;:9;:18;;;;;;:28;;;;;;8952:37;;;;;8921:6;;8952:37;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;:48::i;9375:659::-;-1:-1:-1;;;;;9458:21:14;;9450:67;;;;-1:-1:-1;;;9450:67:14;;;;;;;:::i;:::-;9528:49;9549:7;9566:1;9570:6;9528:20;:49::i;:::-;-1:-1:-1;;;;;9613:18:14;;9588:22;9613:18;;;:9;:18;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:14;;;;;;;:::i;:::-;-1:-1:-1;;;;;9746:18:14;;;;;;:9;:18;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;9746:18;;;9931:37;;;;9784:6;;9931:37;:::i;:::-;;;;;;;;9979:48;9999:7;10016:1;10020:6;9979:19;:48::i;2186:115:5:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:5::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;:10;:12::i;9563:156:28:-:0;9637:7;9687:22;9691:3;9703:5;9687:3;:22::i;9106:115::-;9169:7;9195:19;9203:3;9195:7;:19::i;2214:404::-;2277:4;2298:21;2308:3;2313:5;2298:9;:21::i;:::-;2293:319;;-1:-1:-1;2335:23:28;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:28;2589:12;;829:155:23;-1:-1:-1;;;;;;937:40:23;;952:25;937:40;829:155;;;:::o;2805:211:19:-;2965:44;2992:4;2998:2;3002:6;2965:26;:44::i;3844:479:0:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:0;;;;;;;;;;-1:-1:-1;;;3970:336:0;;;;;;;:::i;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:0;;;;;;;;;:37;;-1:-1:-1;;8112:37:0;;;8195:12;:10;:12::i;:::-;-1:-1:-1;;;;;8168:40:0;8186:7;-1:-1:-1;;;;;8168:40:0;8180:4;8168:40;;;;;;;;;;7991:234;;:::o;8623:156:28:-;8696:4;8719:53;8727:3;-1:-1:-1;;;;;8747:23:28;;8719:7;:53::i;1945:106:5:-;2011:8;:6;:8::i;:::-;2003:41;;;;-1:-1:-1;;;2003:41:5;;;;;;;:::i;1767:106::-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:5;;;;;;;:::i;4912:118:28:-;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;-1:-1:-1;;;5005:18:28;;;;;;;;;;;;;;;;;4998:25;;4912:118;;;;:::o;4463:107::-;4545:18;;4463:107::o;4255:127::-;4328:4;4351:19;;;:12;;;;;:19;;;;;;:24;;;4255:127::o;1046:234:17:-;1154:44;1181:4;1187:2;1191:6;1154:26;:44::i;:::-;1218:8;:6;:8::i;:::-;1217:9;1209:64;;;;-1:-1:-1;;;1209:64:17;;;;;;;:::i;2407:149:22:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:22;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;-1:-1:-1;;;1940:25:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:22;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;-1:-1:-1;;;1975:9:22;;;;;;;;;;;;:15;-1:-1:-1;;;;;1975:15:22;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;-1:-1:-1;;;2000:9:22;;;;;;;;;;;;:15;-1:-1:-1;;;;;2000:15:22;;;;;;;;-1:-1:-1;2030:9:22;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2105:5;2113:3;2105:11;2096:21;;;;;-1:-1:-1;;;2096:21:22;;;;;;;;;;;;2084:6;2091:1;2084:9;;;;;;-1:-1:-1;;;2084:9:22;;;;;;;;;;;;:33;-1:-1:-1;;;;;2084:33:22;;;;;;;;-1:-1:-1;2141:1:22;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:22;;2162:55;;;;-1:-1:-1;;;2162:55:22;;;;;;;:::i;2786:1388:28:-;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:28;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;-1:-1:-1;;;3571:22:28;;;;;;;;;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;-1:-1:-1;;;3693:26:28;;;;;;;;;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;-1:-1:-1;;;3977:17:28;;;;;;;;;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;14:198:30;84:20;;-1:-1:-1;;;;;133:54:30;;123:65;;113:2;;202:1;199;192:12;217:198;;329:2;317:9;308:7;304:23;300:32;297:2;;;350:6;342;335:22;297:2;378:31;399:9;378:31;:::i;420:274::-;;;549:2;537:9;528:7;524:23;520:32;517:2;;;570:6;562;555:22;517:2;598:31;619:9;598:31;:::i;:::-;588:41;;648:40;684:2;673:9;669:18;648:40;:::i;:::-;638:50;;507:187;;;;;:::o;699:342::-;;;;845:2;833:9;824:7;820:23;816:32;813:2;;;866:6;858;851:22;813:2;894:31;915:9;894:31;:::i;:::-;884:41;;944:40;980:2;969:9;965:18;944:40;:::i;:::-;934:50;;1031:2;1020:9;1016:18;1003:32;993:42;;803:238;;;;;:::o;1046:266::-;;;1175:2;1163:9;1154:7;1150:23;1146:32;1143:2;;;1196:6;1188;1181:22;1143:2;1224:31;1245:9;1224:31;:::i;:::-;1214:41;1302:2;1287:18;;;;1274:32;;-1:-1:-1;;;1133:179:30:o;1317:190::-;;1429:2;1417:9;1408:7;1404:23;1400:32;1397:2;;;1450:6;1442;1435:22;1397:2;-1:-1:-1;1478:23:30;;1387:120;-1:-1:-1;1387:120:30:o;1512:266::-;;;1641:2;1629:9;1620:7;1616:23;1612:32;1609:2;;;1662:6;1654;1647:22;1609:2;1703:9;1690:23;1680:33;;1732:40;1768:2;1757:9;1753:18;1732:40;:::i;1783:258::-;;;1912:2;1900:9;1891:7;1887:23;1883:32;1880:2;;;1933:6;1925;1918:22;1880:2;-1:-1:-1;;1961:23:30;;;2031:2;2016:18;;;2003:32;;-1:-1:-1;1870:171:30:o;2046:352::-;;2157:2;2145:9;2136:7;2132:23;2128:32;2125:2;;;2178:6;2170;2163:22;2125:2;2222:9;2209:23;-1:-1:-1;;;;;;2265:5:30;2261:78;2254:5;2251:89;2241:2;;2359:6;2351;2344:22;2598:786;;3009:25;3004:3;2997:38;3064:6;3058:13;3080:62;3135:6;3130:2;3125:3;3121:12;3114:4;3106:6;3102:17;3080:62;:::i;:::-;3206:19;3201:2;3161:16;;;3193:11;;;3186:40;3251:13;;3273:63;3251:13;3322:2;3314:11;;3307:4;3295:17;;3273:63;:::i;:::-;3356:17;3375:2;3352:26;;2987:397;-1:-1:-1;;;;2987:397:30:o;3389:226::-;-1:-1:-1;;;;;3553:55:30;;;;3535:74;;3523:2;3508:18;;3490:125::o;3620:187::-;3785:14;;3778:22;3760:41;;3748:2;3733:18;;3715:92::o;3812:177::-;3958:25;;;3946:2;3931:18;;3913:76::o;3994:383::-;;4143:2;4132:9;4125:21;4175:6;4169:13;4218:6;4213:2;4202:9;4198:18;4191:34;4234:66;4293:6;4288:2;4277:9;4273:18;4268:2;4260:6;4256:15;4234:66;:::i;:::-;4361:2;4340:15;-1:-1:-1;;4336:29:30;4321:45;;;;4368:2;4317:54;;4115:262;-1:-1:-1;;4115:262:30:o;4382:356::-;4584:2;4566:21;;;4603:18;;;4596:30;4662:34;4657:2;4642:18;;4635:62;4729:2;4714:18;;4556:182::o;4743:399::-;4945:2;4927:21;;;4984:2;4964:18;;;4957:30;5023:34;5018:2;5003:18;;4996:62;5094:5;5089:2;5074:18;;5067:33;5132:3;5117:19;;4917:225::o;5147:344::-;5349:2;5331:21;;;5388:2;5368:18;;;5361:30;5427:22;5422:2;5407:18;;5400:50;5482:2;5467:18;;5321:170::o;5496:398::-;5698:2;5680:21;;;5737:2;5717:18;;;5710:30;5776:34;5771:2;5756:18;;5749:62;5847:4;5842:2;5827:18;;5820:32;5884:3;5869:19;;5670:224::o;5899:421::-;6101:2;6083:21;;;6140:2;6120:18;;;6113:30;6179:34;6174:2;6159:18;;6152:62;6250:27;6245:2;6230:18;;6223:55;6310:3;6295:19;;6073:247::o;6325:398::-;6527:2;6509:21;;;6566:2;6546:18;;;6539:30;6605:34;6600:2;6585:18;;6578:62;6676:4;6671:2;6656:18;;6649:32;6713:3;6698:19;;6499:224::o;6728:353::-;6930:2;6912:21;;;6969:2;6949:18;;;6942:30;7008:31;7003:2;6988:18;;6981:59;7072:2;7057:18;;6902:179::o;7086:402::-;7288:2;7270:21;;;7327:2;7307:18;;;7300:30;7366:34;7361:2;7346:18;;7339:62;7437:8;7432:2;7417:18;;7410:36;7478:3;7463:19;;7260:228::o;7493:340::-;7695:2;7677:21;;;7734:2;7714:18;;;7707:30;7773:18;7768:2;7753:18;;7746:46;7824:2;7809:18;;7667:166::o;7838:418::-;8040:2;8022:21;;;8079:2;8059:18;;;8052:30;8118:34;8113:2;8098:18;;8091:62;8189:24;8184:2;8169:18;;8162:52;8246:3;8231:19;;8012:244::o;8261:397::-;8463:2;8445:21;;;8502:2;8482:18;;;8475:30;8541:34;8536:2;8521:18;;8514:62;8612:3;8607:2;8592:18;;8585:31;8648:3;8633:19;;8435:223::o;8663:401::-;8865:2;8847:21;;;8904:2;8884:18;;;8877:30;8943:34;8938:2;8923:18;;8916:62;9014:7;9009:2;8994:18;;8987:35;9054:3;9039:19;;8837:227::o;9069:400::-;9271:2;9253:21;;;9310:2;9290:18;;;9283:30;9349:34;9344:2;9329:18;;9322:62;9420:6;9415:2;9400:18;;9393:34;9459:3;9444:19;;9243:226::o;9474:419::-;9676:2;9658:21;;;9715:2;9695:18;;;9688:30;9754:34;9749:2;9734:18;;9727:62;9825:25;9820:2;9805:18;;9798:53;9883:3;9868:19;;9648:245::o;9898:401::-;10100:2;10082:21;;;10139:2;10119:18;;;10112:30;10178:34;10173:2;10158:18;;10151:62;10249:7;10244:2;10229:18;;10222:35;10289:3;10274:19;;10072:227::o;10304:411::-;10506:2;10488:21;;;10545:2;10525:18;;;10518:30;10584:34;10579:2;10564:18;;10557:62;10655:17;10650:2;10635:18;;10628:45;10705:3;10690:19;;10478:237::o;10720:355::-;10922:2;10904:21;;;10961:2;10941:18;;;10934:30;11000:33;10995:2;10980:18;;10973:61;11066:2;11051:18;;10894:181::o;11080:406::-;11282:2;11264:21;;;11321:2;11301:18;;;11294:30;11360:34;11355:2;11340:18;;11333:62;11431:12;11426:2;11411:18;;11404:40;11476:3;11461:19;;11254:232::o;11673:184::-;11845:4;11833:17;;;;11815:36;;11803:2;11788:18;;11770:87::o;11862:128::-;;11933:1;11929:6;11926:1;11923:13;11920:2;;;11939:18;;:::i;:::-;-1:-1:-1;11975:9:30;;11910:80::o;11995:168::-;;12101:1;12097;12093:6;12089:14;12086:1;12083:21;12078:1;12071:9;12064:17;12060:45;12057:2;;;12108:18;;:::i;:::-;-1:-1:-1;12148:9:30;;12047:116::o;12168:125::-;;12236:1;12233;12230:8;12227:2;;;12241:18;;:::i;:::-;-1:-1:-1;12278:9:30;;12217:76::o;12298:258::-;12370:1;12380:113;12394:6;12391:1;12388:13;12380:113;;;12470:11;;;12464:18;12451:11;;;12444:39;12416:2;12409:10;12380:113;;;12511:6;12508:1;12505:13;12502:2;;;-1:-1:-1;;12546:1:30;12528:16;;12521:27;12351:205::o;12561:136::-;;12628:5;12618:2;;12637:18;;:::i;:::-;-1:-1:-1;;;12673:18:30;;12608:89::o;12702:437::-;12787:1;12777:12;;12834:1;12824:12;;;12845:2;;12899:4;12891:6;12887:17;12877:27;;12845:2;12952;12944:6;12941:14;12921:18;12918:38;12915:2;;;-1:-1:-1;;;12986:1:30;12979:88;13090:4;13087:1;13080:15;13118:4;13115:1;13108:15;12915:2;;12757:382;;;:::o;13144:184::-;-1:-1:-1;;;13193:1:30;13186:88;13293:4;13290:1;13283:15;13317:4;13314:1;13307:15"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","PAUSER_ROLE()":"e63ab1e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","pause()":"8456cb59","paused()":"5c975abb","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC20} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts. _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"constructor\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. See {ERC20-constructor}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":\"ERC20PresetMinterPauser\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b\",\"dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220befc82c3fc4c4a3ae38187c1558a7dff425b3e6d9b1e66357821ea7d4212780c64736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xFC DUP3 0xC3 0xFC 0x4C 0x4A GASPRICE 0xE3 DUP2 DUP8 0xC1 SSTORE DUP11 PUSH30 0xFF425B3E6D9B1E66357821EA7D4212780C64736F6C634300080100330000 ","sourceMap":"194:9169:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220befc82c3fc4c4a3ae38187c1558a7dff425b3e6d9b1e66357821ea7d4212780c64736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xFC DUP3 0xC3 0xFC 0x4C 0x4A GASPRICE 0xE3 DUP2 DUP8 0xC1 SSTORE DUP11 PUSH30 0xFF425B3E6D9B1E66357821EA7D4212780C64736F6C634300080100330000 ","sourceMap":"194:9169:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x86e0ebad1483881d5efde55e4e9ef96aae772bc20448289e9a9f566519abd42d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76bd2c6eed6ea1d3a4c433c8174503ee1f5148424d04127fab0691a8fccc4432\",\"dweb:/ipfs/QmXepji41LDhKRSQS9gC8tSpgpomAeM6gyStTEXMdwecyW\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa5e5bec59397eb9f8c444b4dbb5c8fad614cb0efc1d6e46bbc1bd5351922a0564736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0x5E JUMPDEST 0xEC MSIZE CODECOPY PUSH31 0xB9F8C444B4DBB5C8FAD614CB0EFC1D6E46BBC1BD5351922A0564736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"220:2559:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa5e5bec59397eb9f8c444b4dbb5c8fad614cb0efc1d6e46bbc1bd5351922a0564736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0x5E JUMPDEST 0xEC MSIZE CODECOPY PUSH31 0xB9F8C444B4DBB5C8FAD614CB0EFC1D6E46BBC1BD5351922A0564736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"220:2559:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099dfba742ac85b31e6be006f9e488ff5db245fd8e95a0b966d5618f22cd4b58d64736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xDF 0xBA PUSH21 0x2AC85B31E6BE006F9E488FF5DB245FD8E95A0B966D JUMP XOR CALLCODE 0x2C 0xD4 0xB5 DUP14 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"202:12582:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099dfba742ac85b31e6be006f9e488ff5db245fd8e95a0b966d5618f22cd4b58d64736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xDF 0xBA PUSH21 0x2AC85B31E6BE006F9E488FF5DB245FD8E95A0B966D JUMP XOR CALLCODE 0x2C 0xD4 0xB5 DUP14 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"202:12582:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122081a87397c8562e02572b6fa97c64743638615a8913d12d28475d37ff4a62a24d64736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xA8 PUSH20 0x97C8562E02572B6FA97C64743638615A8913D12D 0x28 SELFBALANCE 0x5D CALLDATACOPY SELFDESTRUCT 0x4A PUSH3 0xA24D64 PUSH20 0x6F6C634300080100330000000000000000000000 ","sourceMap":"482:6210:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:26;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122081a87397c8562e02572b6fa97c64743638615a8913d12d28475d37ff4a62a24d64736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xA8 PUSH20 0x97C8562E02572B6FA97C64743638615A8913D12D 0x28 SELFBALANCE 0x5D CALLDATACOPY SELFDESTRUCT 0x4A PUSH3 0xA24D64 PUSH20 0x6F6C634300080100330000000000000000000000 ","sourceMap":"482:6210:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208bbdd3c8de41698c07951d668932082d6d6d69e270ca8d1e85159792669fe07264736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xBD 0xD3 0xC8 0xDE COINBASE PUSH10 0x8C07951D668932082D6D PUSH14 0x69E270CA8D1E85159792669FE072 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"215:1047:27:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:27;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208bbdd3c8de41698c07951d668932082d6d6d69e270ca8d1e85159792669fe07264736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xBD 0xD3 0xC8 0xDE COINBASE PUSH10 0x8C07951D668932082D6D PUSH14 0x69E270CA8D1E85159792669FE072 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"215:1047:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ec6e9ab71da648d9796a92030aab98045596794c2cd89646c4e200b18bf53a0764736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC PUSH15 0x9AB71DA648D9796A92030AAB980455 SWAP7 PUSH26 0x4C2CD89646C4E200B18BF53A0764736F6C634300080100330000 ","sourceMap":"1329:11630:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1329:11630:28;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ec6e9ab71da648d9796a92030aab98045596794c2cd89646c4e200b18bf53a0764736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC PUSH15 0x9AB71DA648D9796A92030AAB980455 SWAP7 PUSH26 0x4C2CD89646C4E200B18BF53A0764736F6C634300080100330000 ","sourceMap":"1329:11630:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"solidity-bytes-utils/contracts/BytesLib.sol":{"BytesLib":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122005e27ccf61a7783413b0d38ed7194e46047eaa5123f1ef09725bc7d69407054464736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0xE2 PUSH29 0xCF61A7783413B0D38ED7194E46047EAA5123F1EF09725BC7D694070544 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"370:18904:29:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;370:18904:29;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122005e27ccf61a7783413b0d38ed7194e46047eaa5123f1ef09725bc7d69407054464736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0xE2 PUSH29 0xCF61A7783413B0D38ED7194E46047EAA5123F1EF09725BC7D694070544 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"370:18904:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity-bytes-utils/contracts/BytesLib.sol\":\"BytesLib\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}"}}}}}