{"id":"e6147a71da47420191789ec6980c816b","_format":"hh-sol-build-info-1","solcVersion":"0.8.0","solcLongVersion":"0.8.0+commit.c7dfd78e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerable.sol\";\nimport \"./AccessControl.sol\";\nimport \"../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/community-token/Point.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\n/**\n * @dev {ERC20} token, including:\n *\n *  - Preminted initial supply\n *  - Ability for holders to burn (destroy) their tokens\n *  - No access control mechanism (for minting/pausing) and hence no governance\n *\n * This contract uses {ERC20Burnable} to include burn capabilities - head to\n * its documentation for details.\n *\n * _Available since v3.4._\n */\ncontract Point is Context, AccessControlEnumerable, ERC20Burnable {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant TRANSFER_ROLE = keccak256(\"TRANSFER_ROLE\");\n    bytes32 public constant TRANSFER_ROLE_ADMIN = keccak256(\"TRANSFER_ROLE_ADMIN\");\n\n    uint256 public startTradableTime;\n\n    /**\n     * @dev Grants `DEFAULT_ADMIN_ROLE` to the\n     * community factory contract,\n     * then community factory will grant mint role to the community.\n     *\n     * See {ERC20-constructor}.\n     */\n    constructor(string memory name, \n    string memory symbol, \n    uint256 _startTradableTime,\n    uint256 initialSupply,\n    address owner,\n    address communityFactory) ERC20(name, symbol) {\n        startTradableTime = _startTradableTime;\n        _setRoleAdmin(TRANSFER_ROLE, TRANSFER_ROLE_ADMIN);\n        _setupRole(DEFAULT_ADMIN_ROLE, communityFactory);\n        _setupRole(TRANSFER_ROLE_ADMIN, owner);\n        _mint(owner, initialSupply);\n    }\n    /**\n     * @dev Creates `amount` new tokens for `to`.\n     *\n     * See {ERC20-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MINTER_ROLE`.\n     */\n    function mint(address to, uint256 amount) external virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have minter role to mint\");\n        _mint(to, amount);\n    }\n\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == bytes4(keccak256('DelayTransactionPoint'))\n                || super.supportsInterface(interfaceId);\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override(ERC20) {\n        if (from != address(0) && to != address(0) && !hasRole(TRANSFER_ROLE, from) && !hasRole(TRANSFER_ROLE, to)) {\n            // can mint or burn point\n            require(block.timestamp > startTradableTime, \"Token can't tradable right now\");\n        }\n        super._beforeTokenTransfer(from, to, amount);\n    }\n}"},"contracts/community-token/PointFactory.sol":{"content":"// SPDX-License-Identifier: MIT\n\n// This is a factory contract to create a new token\n// token's mint right will totally transfer to community contract and can't be changed in the future\n\npragma solidity 0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"./Point.sol\";\nimport \"solidity-bytes-utils/contracts/BytesLib.sol\";\nimport \"../interfaces/ICommunityTokenFactory.sol\";\n\ncontract PointFactory is ICommunityTokenFactory {\n\n    using BytesLib for bytes;\n\n    constructor () {\n    }\n\n    function createCommunityToken(bytes calldata meta) external override returns (address) {\n        uint8 nameLength = meta.toUint8(0);\n        string memory name = string(meta.slice(1, nameLength));\n        uint8 symbolLength = meta.toUint8(nameLength + 1);\n        string memory symbol = string(meta.slice(nameLength + 2, symbolLength));\n        uint256 startTradeTime = meta.toUint256(nameLength + symbolLength + 2);\n        uint256 supply = meta.toUint256(nameLength + symbolLength + 34);\n        address owner = meta.toAddress(nameLength + symbolLength + 66);\n        Point token = new Point(name, symbol, startTradeTime, supply, owner, msg.sender);\n        return address(token);\n    }\n}"},"contracts/interfaces/ICommunityTokenFactory.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.0;\npragma experimental ABIEncoderV2;\n\n/**\n * @dev Interface of the community token factory.\n */\ninterface ICommunityTokenFactory {\n\n    function createCommunityToken(bytes calldata meta)\n        external\n        returns (address);\n}"},"solidity-bytes-utils/contracts/BytesLib.sol":{"content":"// SPDX-License-Identifier: Unlicense\n/*\n * @title Solidity Bytes Arrays Utils\n * @author Gonçalo Sá <goncalo.sa@consensys.net>\n *\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\n */\npragma solidity >=0.8.0 <0.9.0;\n\n\nlibrary BytesLib {\n    function concat(\n        bytes memory _preBytes,\n        bytes memory _postBytes\n    )\n        internal\n        pure\n        returns (bytes memory)\n    {\n        bytes memory tempBytes;\n\n        assembly {\n            // Get a location of some free memory and store it in tempBytes as\n            // Solidity does for memory variables.\n            tempBytes := mload(0x40)\n\n            // Store the length of the first bytes array at the beginning of\n            // the memory for tempBytes.\n            let length := mload(_preBytes)\n            mstore(tempBytes, length)\n\n            // Maintain a memory counter for the current write location in the\n            // temp bytes array by adding the 32 bytes for the array length to\n            // the starting location.\n            let mc := add(tempBytes, 0x20)\n            // Stop copying when the memory counter reaches the length of the\n            // first bytes array.\n            let end := add(mc, length)\n\n            for {\n                // Initialize a copy counter to the start of the _preBytes data,\n                // 32 bytes into its memory.\n                let cc := add(_preBytes, 0x20)\n            } lt(mc, end) {\n                // Increase both counters by 32 bytes each iteration.\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                // Write the _preBytes data into the tempBytes memory 32 bytes\n                // at a time.\n                mstore(mc, mload(cc))\n            }\n\n            // Add the length of _postBytes to the current length of tempBytes\n            // and store it as the new length in the first 32 bytes of the\n            // tempBytes memory.\n            length := mload(_postBytes)\n            mstore(tempBytes, add(length, mload(tempBytes)))\n\n            // Move the memory counter back from a multiple of 0x20 to the\n            // actual end of the _preBytes data.\n            mc := end\n            // Stop copying when the memory counter reaches the new combined\n            // length of the arrays.\n            end := add(mc, length)\n\n            for {\n                let cc := add(_postBytes, 0x20)\n            } lt(mc, end) {\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                mstore(mc, mload(cc))\n            }\n\n            // Update the free-memory pointer by padding our last write location\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\n            // next 32 byte block, then round down to the nearest multiple of\n            // 32. If the sum of the length of the two arrays is zero then add\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\n            mstore(0x40, and(\n              add(add(end, iszero(add(length, mload(_preBytes)))), 31),\n              not(31) // Round down to the nearest 32 bytes.\n            ))\n        }\n\n        return tempBytes;\n    }\n\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\n        assembly {\n            // Read the first 32 bytes of _preBytes storage, which is the length\n            // of the array. (We don't need to use the offset into the slot\n            // because arrays use the entire slot.)\n            let fslot := sload(_preBytes.slot)\n            // Arrays of 31 bytes or less have an even value in their slot,\n            // while longer arrays have an odd value. The actual length is\n            // the slot divided by two for odd values, and the lowest order\n            // byte divided by two for even values.\n            // If the slot is even, bitwise and the slot with 255 and divide by\n            // two to get the length. If the slot is odd, bitwise and the slot\n            // with -1 and divide by two.\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n            let newlength := add(slength, mlength)\n            // slength can contain both the length and contents of the array\n            // if length < 32 bytes so let's prepare for that\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n            switch add(lt(slength, 32), lt(newlength, 32))\n            case 2 {\n                // Since the new array still fits in the slot, we just need to\n                // update the contents of the slot.\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\n                sstore(\n                    _preBytes.slot,\n                    // all the modifications to the slot are inside this\n                    // next block\n                    add(\n                        // we can just add to the slot contents because the\n                        // bytes we want to change are the LSBs\n                        fslot,\n                        add(\n                            mul(\n                                div(\n                                    // load the bytes from memory\n                                    mload(add(_postBytes, 0x20)),\n                                    // zero all bytes to the right\n                                    exp(0x100, sub(32, mlength))\n                                ),\n                                // and now shift left the number of bytes to\n                                // leave space for the length in the slot\n                                exp(0x100, sub(32, newlength))\n                            ),\n                            // increase length by the double of the memory\n                            // bytes length\n                            mul(mlength, 2)\n                        )\n                    )\n                )\n            }\n            case 1 {\n                // The stored value fits in the slot, but the combined value\n                // will exceed it.\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // The contents of the _postBytes array start 32 bytes into\n                // the structure. Our first read should obtain the `submod`\n                // bytes that can fit into the unused space in the last word\n                // of the stored array. To get this, we read 32 bytes starting\n                // from `submod`, so the data we read overlaps with the array\n                // contents by `submod` bytes. Masking the lowest-order\n                // `submod` bytes allows us to add that value directly to the\n                // stored value.\n\n                let submod := sub(32, slength)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(\n                    sc,\n                    add(\n                        and(\n                            fslot,\n                            0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n                        ),\n                        and(mload(mc), mask)\n                    )\n                )\n\n                for {\n                    mc := add(mc, 0x20)\n                    sc := add(sc, 1)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n            default {\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                // Start copying to the last used word of the stored array.\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // Copy over the first `submod` bytes of the new data as in\n                // case 1 above.\n                let slengthmod := mod(slength, 32)\n                let mlengthmod := mod(mlength, 32)\n                let submod := sub(32, slengthmod)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\n\n                for {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n        }\n    }\n\n    function slice(\n        bytes memory _bytes,\n        uint256 _start,\n        uint256 _length\n    )\n        internal\n        pure\n        returns (bytes memory)\n    {\n        require(_length + 31 >= _length, \"slice_overflow\");\n        require(_bytes.length >= _start + _length, \"slice_outOfBounds\");\n\n        bytes memory tempBytes;\n\n        assembly {\n            switch iszero(_length)\n            case 0 {\n                // Get a location of some free memory and store it in tempBytes as\n                // Solidity does for memory variables.\n                tempBytes := mload(0x40)\n\n                // The first word of the slice result is potentially a partial\n                // word read from the original array. To read it, we calculate\n                // the length of that partial word and start copying that many\n                // bytes into the array. The first word we copy will start with\n                // data we don't care about, but the last `lengthmod` bytes will\n                // land at the beginning of the contents of the new array. When\n                // we're done copying, we overwrite the full first word with\n                // the actual length of the slice.\n                let lengthmod := and(_length, 31)\n\n                // The multiplication in the next line is necessary\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\n                // the following copy loop was copying the origin's length\n                // and then ending prematurely not copying everything it should.\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\n                let end := add(mc, _length)\n\n                for {\n                    // The multiplication in the next line has the same exact purpose\n                    // as the one above.\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\n                } lt(mc, end) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    mstore(mc, mload(cc))\n                }\n\n                mstore(tempBytes, _length)\n\n                //update free-memory pointer\n                //allocating the array padded to 32 bytes like the compiler does now\n                mstore(0x40, and(add(mc, 31), not(31)))\n            }\n            //if we want a zero-length slice let's just return a zero-length array\n            default {\n                tempBytes := mload(0x40)\n                //zero out the 32 bytes slice we are about to return\n                //we need to do it because Solidity does not garbage collect\n                mstore(tempBytes, 0)\n\n                mstore(0x40, add(tempBytes, 0x20))\n            }\n        }\n\n        return tempBytes;\n    }\n\n    function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {\n        require(_bytes.length >= _start + 20, \"toAddress_outOfBounds\");\n        address tempAddress;\n\n        assembly {\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\n        }\n\n        return tempAddress;\n    }\n\n    function toUint8(bytes memory _bytes, uint256 _start) internal pure returns (uint8) {\n        require(_bytes.length >= _start + 1 , \"toUint8_outOfBounds\");\n        uint8 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x1), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint16(bytes memory _bytes, uint256 _start) internal pure returns (uint16) {\n        require(_bytes.length >= _start + 2, \"toUint16_outOfBounds\");\n        uint16 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x2), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint32(bytes memory _bytes, uint256 _start) internal pure returns (uint32) {\n        require(_bytes.length >= _start + 4, \"toUint32_outOfBounds\");\n        uint32 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x4), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint64(bytes memory _bytes, uint256 _start) internal pure returns (uint64) {\n        require(_bytes.length >= _start + 8, \"toUint64_outOfBounds\");\n        uint64 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x8), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint96(bytes memory _bytes, uint256 _start) internal pure returns (uint96) {\n        require(_bytes.length >= _start + 12, \"toUint96_outOfBounds\");\n        uint96 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0xc), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint128(bytes memory _bytes, uint256 _start) internal pure returns (uint128) {\n        require(_bytes.length >= _start + 16, \"toUint128_outOfBounds\");\n        uint128 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x10), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint256(bytes memory _bytes, uint256 _start) internal pure returns (uint256) {\n        require(_bytes.length >= _start + 32, \"toUint256_outOfBounds\");\n        uint256 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toBytes32(bytes memory _bytes, uint256 _start) internal pure returns (bytes32) {\n        require(_bytes.length >= _start + 32, \"toBytes32_outOfBounds\");\n        bytes32 tempBytes32;\n\n        assembly {\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempBytes32;\n    }\n\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\n        bool success = true;\n\n        assembly {\n            let length := mload(_preBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(length, mload(_postBytes))\n            case 1 {\n                // cb is a circuit breaker in the for loop since there's\n                //  no said feature for inline assembly loops\n                // cb = 1 - don't breaker\n                // cb = 0 - break\n                let cb := 1\n\n                let mc := add(_preBytes, 0x20)\n                let end := add(mc, length)\n\n                for {\n                    let cc := add(_postBytes, 0x20)\n                // the next line is the loop condition:\n                // while(uint256(mc < end) + cb == 2)\n                } eq(add(lt(mc, end), cb), 2) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    // if any of these checks fails then arrays are not equal\n                    if iszero(eq(mload(mc), mload(cc))) {\n                        // unsuccess:\n                        success := 0\n                        cb := 0\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n\n    function equalStorage(\n        bytes storage _preBytes,\n        bytes memory _postBytes\n    )\n        internal\n        view\n        returns (bool)\n    {\n        bool success = true;\n\n        assembly {\n            // we know _preBytes_offset is 0\n            let fslot := sload(_preBytes.slot)\n            // Decode the length of the stored array like in concatStorage().\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(slength, mlength)\n            case 1 {\n                // slength can contain both the length and contents of the array\n                // if length < 32 bytes so let's prepare for that\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n                if iszero(iszero(slength)) {\n                    switch lt(slength, 32)\n                    case 1 {\n                        // blank the last byte which is the length\n                        fslot := mul(div(fslot, 0x100), 0x100)\n\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\n                            // unsuccess:\n                            success := 0\n                        }\n                    }\n                    default {\n                        // cb is a circuit breaker in the for loop since there's\n                        //  no said feature for inline assembly loops\n                        // cb = 1 - don't breaker\n                        // cb = 0 - break\n                        let cb := 1\n\n                        // get the keccak hash to get the contents of the array\n                        mstore(0x0, _preBytes.slot)\n                        let sc := keccak256(0x0, 0x20)\n\n                        let mc := add(_postBytes, 0x20)\n                        let end := add(mc, mlength)\n\n                        // the next line is the loop condition:\n                        // while(uint256(mc < end) + cb == 2)\n                        for {} eq(add(lt(mc, end), cb), 2) {\n                            sc := add(sc, 1)\n                            mc := add(mc, 0x20)\n                        } {\n                            if iszero(eq(sload(sc), mload(mc))) {\n                                // unsuccess:\n                                success := 0\n                                cb := 0\n                            }\n                        }\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":1},"evmVersion":"constantinople","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:199:5:\n    |\n199 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9616,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":8633},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:241:5:\n    |\n241 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10014,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":9769},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:199:5:\n    |\n199 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9616,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":8633},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:241:5:\n    |\n241 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10014,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":9769},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:199:5:\n    |\n199 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9616,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":8633},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:241:5:\n    |\n241 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10014,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":9769},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:169:5:\n    |\n169 |     function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":6042,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":5919},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:243:5:\n    |\n243 |     function add(AddressSet storage set, address value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":8455,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":8305},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:317:5:\n    |\n317 |     function add(UintSet storage set, uint256 value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10922,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":10793},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:169:5:\n    |\n169 |     function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":6042,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":5919},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:243:5:\n    |\n243 |     function add(AddressSet storage set, address value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":8455,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":8305},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:317:5:\n    |\n317 |     function add(UintSet storage set, uint256 value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10922,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":10793},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:169:5:\n    |\n169 |     function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":6042,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":5919},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:243:5:\n    |\n243 |     function add(AddressSet storage set, address value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":8455,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":8305},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/structs/EnumerableSet.sol:317:5:\n    |\n317 |     function add(UintSet storage set, uint256 value) internal returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10922,"file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","start":10793},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[1294],"ERC165":[1547],"IAccessControl":[513],"IERC165":[1559],"Math":[2425],"SignedMath":[2530],"Strings":[1523]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nodeType":"ImportDirective","scope":316,"sourceUnit":514,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nodeType":"ImportDirective","scope":316,"sourceUnit":1295,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nodeType":"ImportDirective","scope":316,"sourceUnit":1524,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nodeType":"ImportDirective","scope":316,"sourceUnit":1548,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1294,"src":"1967:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1967:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":513,"src":"1976:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1976:14:0"},{"baseName":{"id":11,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":1547,"src":"1992:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1992:6:0"}],"contractDependencies":[513,1294,1547,1559],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,1547,1559,513,1294],"name":"AccessControl","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nodeType":"VariableDeclaration","scope":19,"src":"2031:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2031:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"2050:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nodeType":"VariableDeclaration","scope":19,"src":"2073:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2073:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nodeType":"StructDefinition","scope":315,"src":"2005:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nodeType":"VariableDeclaration","scope":315,"src":"2103:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2103:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nodeType":"IdentifierPath","referencedDeclaration":19,"src":"2122:8:0"},"referencedDeclaration":19,"src":"2122:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nodeType":"VariableDeclaration","scope":315,"src":"2153:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2621:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2642:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2631:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2631:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2631:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2657:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2209:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":38,"src":"2607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2606:14:0"},"src":"2589:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[1546],"body":{"id":59,"nodeType":"Block","src":"2823:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2840:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"2860:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$513_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$513_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2855:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2855:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$513","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2855:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2840:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2915:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2891:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1546,"src":"2891:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2891:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2840:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2833:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2671:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2799:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":60,"src":"2759:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2759:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2758:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":60,"src":"2817:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2816:6:0"},"scope":315,"src":"2732:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[480],"body":{"id":78,"nodeType":"Block","src":"3113:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3130:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3137:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3130:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3151:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"3123:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2940:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3089:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":79,"src":"3038:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":79,"src":"3052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3037:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":79,"src":"3107:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"3107:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3106:6:0"},"scope":315,"src":"3021:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3516:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3537:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"3543:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3543:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3526:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3526:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3526:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3172:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":92,"src":"3480:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3479:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3516:0:0"},"scope":315,"src":"3460:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3917:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3931:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3940:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3932:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3932:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3927:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3956:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4064:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4135:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"4115:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1523_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1497,"src":"4115:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4115:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4242:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4234:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4234:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"4214:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1523_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1477,"src":"4214:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4214:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4022:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"4022:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4022:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3994:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3994:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3970:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3970:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3970:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3569:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":131,"src":"3864:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":131,"src":"3878:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3863:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3917:0:0"},"scope":315,"src":"3844:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[488],"body":{"id":145,"nodeType":"Block","src":"4587:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4611:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4604:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4604:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4597:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4329:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4560:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":146,"src":"4526:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4525:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":146,"src":"4578:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4578:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4577:9:0"},"scope":315,"src":"4504:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[496],"body":{"id":165,"nodeType":"Block","src":"5032:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5053:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"5059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5042:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5042:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"5042:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4639:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5025:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5012:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5012:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"modifierName":{"id":154,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5003:8:0"},"nodeType":"ModifierInvocation","src":"5003:28:0"}],"name":"grantRole","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4994:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":166,"src":"4948:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":166,"src":"4962:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4947:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"5032:0:0"},"scope":315,"src":"4929:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[504],"body":{"id":185,"nodeType":"Block","src":"5458:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5480:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5486:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5468:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5468:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5468:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"5080:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5451:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5438:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5438:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"modifierName":{"id":174,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5429:8:0"},"nodeType":"ModifierInvocation","src":"5429:28:0"}],"name":"revokeRole","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5420:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":186,"src":"5374:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5374:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":186,"src":"5388:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5373:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5458:0:0"},"scope":315,"src":"5354:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[512],"body":{"id":208,"nodeType":"Block","src":"6115:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"6144:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6144:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6133:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6125:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6125:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"6125:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6231:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6237:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6219:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6219:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6219:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5507:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"6106:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":209,"src":"6060:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6060:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":209,"src":"6074:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"6074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6059:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"6115:0:0"},"scope":315,"src":"6038:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"7005:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"7026:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7015:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7015:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"7015:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6258:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":223,"src":"6957:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6957:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":223,"src":"6971:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6956:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"7005:0:0"},"scope":315,"src":"6937:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7245:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nodeType":"VariableDeclaration","scope":250,"src":"7255:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7255:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7296:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7283:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7255:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7311:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7318:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7311:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7311:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7336:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7311:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7311:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7377:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7383:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7402:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"7360:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7360:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7355:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"7053:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":251,"src":"7195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nodeType":"VariableDeclaration","scope":251,"src":"7209:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7194:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7245:0:0"},"scope":315,"src":"7172:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7655:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7669:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7678:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7670:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7670:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7665:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7694:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7708:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7715:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7708:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7708:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7729:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7708:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7740:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7708:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7708:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7775:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7781:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"7790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7763:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7758:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7425:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":283,"src":"7607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":283,"src":"7621:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7606:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7655:0:0"},"scope":315,"src":"7587:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"8060:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8082:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8088:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"8074:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8074:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"8070:149:0","trueBody":{"id":311,"nodeType":"Block","src":"8098:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"8112:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8119:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8112:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"8112:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8112:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8144:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8112:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"8112:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8180:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8186:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"8195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"8168:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8168:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8163:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7826:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":314,"src":"8012:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8012:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":314,"src":"8026:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"8026:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8011:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"8060:0:0"},"scope":315,"src":"7991:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1932:6295:0"}],"src":"108:8120:0"},"id":0},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","exportedSymbols":{"AccessControl":[315],"AccessControlEnumerable":[440],"Context":[1294],"ERC165":[1547],"EnumerableSet":[3143],"IAccessControl":[513],"IAccessControlEnumerable":[538],"IERC165":[1559],"Math":[2425],"SignedMath":[2530],"Strings":[1523]},"id":441,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:1"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControlEnumerable.sol","file":"./IAccessControlEnumerable.sol","id":318,"nodeType":"ImportDirective","scope":441,"sourceUnit":539,"src":"143:40:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"./AccessControl.sol","id":319,"nodeType":"ImportDirective","scope":441,"sourceUnit":316,"src":"184:29:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"../utils/structs/EnumerableSet.sol","id":320,"nodeType":"ImportDirective","scope":441,"sourceUnit":3144,"src":"214:44:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":322,"name":"IAccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":538,"src":"400:24:1"},"id":323,"nodeType":"InheritanceSpecifier","src":"400:24:1"},{"baseName":{"id":324,"name":"AccessControl","nodeType":"IdentifierPath","referencedDeclaration":315,"src":"426:13:1"},"id":325,"nodeType":"InheritanceSpecifier","src":"426:13:1"}],"contractDependencies":[315,513,538,1294,1547,1559],"contractKind":"contract","documentation":{"id":321,"nodeType":"StructuredDocumentation","src":"260:94:1","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":440,"linearizedBaseContracts":[440,315,1547,1559,538,513,1294],"name":"AccessControlEnumerable","nodeType":"ContractDefinition","nodes":[{"id":329,"libraryName":{"id":326,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":3143,"src":"452:13:1"},"nodeType":"UsingForDirective","src":"446:49:1","typeName":{"id":328,"nodeType":"UserDefinedTypeName","pathNode":{"id":327,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"470:24:1"},"referencedDeclaration":2856,"src":"470:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":334,"mutability":"mutable","name":"_roleMembers","nodeType":"VariableDeclaration","scope":440,"src":"501:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2856_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":333,"keyType":{"id":330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"509:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"501:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2856_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueType":{"id":332,"nodeType":"UserDefinedTypeName","pathNode":{"id":331,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"520:24:1"},"referencedDeclaration":2856,"src":"520:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"baseFunctions":[60],"body":{"id":355,"nodeType":"Block","src":"725:121:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":343,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"742:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":345,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"762:24:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$538_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$538_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":344,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"757:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"757:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$538","typeString":"type(contract IAccessControlEnumerable)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"757:42:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"742:57:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":351,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"827:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":349,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"803:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$440_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":60,"src":"803:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"803:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"742:97:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":342,"id":354,"nodeType":"Return","src":"735:104:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"573:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":356,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":339,"nodeType":"OverrideSpecifier","overrides":[],"src":"701:8:1"},"parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":356,"src":"661:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":336,"name":"bytes4","nodeType":"ElementaryTypeName","src":"661:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"660:20:1"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":356,"src":"719:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":340,"name":"bool","nodeType":"ElementaryTypeName","src":"719:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"718:6:1"},"scope":440,"src":"634:212:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[529],"body":{"id":374,"nodeType":"Block","src":"1530:52:1","statements":[{"expression":{"arguments":[{"id":371,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"1569:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":367,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"1547:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2856_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":369,"indexExpression":{"id":368,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"1560:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1547:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2979,"src":"1547:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2856_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$2856_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1547:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":366,"id":373,"nodeType":"Return","src":"1540:35:1"}]},"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"852:574:1","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":375,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nodeType":"FunctionDefinition","overrides":{"id":363,"nodeType":"OverrideSpecifier","overrides":[],"src":"1503:8:1"},"parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":375,"src":"1454:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1454:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":375,"src":"1468:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1453:29:1"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":375,"src":"1521:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1520:9:1"},"scope":440,"src":"1431:151:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[537],"body":{"id":390,"nodeType":"Block","src":"1839:51:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":384,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"1856:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2856_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":386,"indexExpression":{"id":385,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"1869:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1856:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2952,"src":"1856:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2856_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$2856_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1856:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":383,"id":389,"nodeType":"Return","src":"1849:34:1"}]},"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"1588:157:1","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":391,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nodeType":"FunctionDefinition","overrides":{"id":380,"nodeType":"OverrideSpecifier","overrides":[],"src":"1812:8:1"},"parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":391,"src":"1778:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1778:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1777:14:1"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":391,"src":"1830:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1830:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1829:9:1"},"scope":440,"src":"1750:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[283],"body":{"id":414,"nodeType":"Block","src":"2055:89:1","statements":[{"expression":{"arguments":[{"id":403,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2082:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":404,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2088:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":400,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2065:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$440_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":283,"src":"2065:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2065:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":406,"nodeType":"ExpressionStatement","src":"2065:31:1"},{"expression":{"arguments":[{"id":411,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2129:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":407,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2106:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2856_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":409,"indexExpression":{"id":408,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2119:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2106:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2883,"src":"2106:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2856_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2856_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2106:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":413,"nodeType":"ExpressionStatement","src":"2106:31:1"}]},"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"1896:77:1","text":" @dev Overload {_grantRole} to track enumerable memberships"},"id":415,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nodeType":"FunctionDefinition","overrides":{"id":398,"nodeType":"OverrideSpecifier","overrides":[],"src":"2046:8:1"},"parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":415,"src":"1998:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1998:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":415,"src":"2012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"2012:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1997:31:1"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[],"src":"2055:0:1"},"scope":440,"src":"1978:166:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[314],"body":{"id":438,"nodeType":"Block","src":"2311:93:1","statements":[{"expression":{"arguments":[{"id":427,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2339:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":428,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2345:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":424,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2321:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$440_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":314,"src":"2321:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"2321:32:1"},{"expression":{"arguments":[{"id":435,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2389:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":431,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2363:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2856_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":433,"indexExpression":{"id":432,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2376:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2363:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":2910,"src":"2363:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2856_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2856_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2363:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":437,"nodeType":"ExpressionStatement","src":"2363:34:1"}]},"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"2150:78:1","text":" @dev Overload {_revokeRole} to track enumerable memberships"},"id":439,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nodeType":"FunctionDefinition","overrides":{"id":422,"nodeType":"OverrideSpecifier","overrides":[],"src":"2302:8:1"},"parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":439,"src":"2254:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2254:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":439,"src":"2268:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2253:31:1"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"2311:0:1"},"scope":440,"src":"2233:171:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":441,"src":"355:2051:1"}],"src":"118:2289:1"},"id":1},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[513]},"id":514,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":442,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"119:89:2","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":513,"linearizedBaseContracts":[513],"name":"IAccessControl","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"240:292:2","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"id":452,"name":"RoleAdminChanged","nodeType":"EventDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"indexed":true,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":452,"src":"560:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":448,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nodeType":"VariableDeclaration","scope":452,"src":"582:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":450,"indexed":true,"mutability":"mutable","name":"newAdminRole","nodeType":"VariableDeclaration","scope":452,"src":"617:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:2"},"src":"537:110:2"},{"anonymous":false,"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"653:212:2","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"id":461,"name":"RoleGranted","nodeType":"EventDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"indexed":true,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":461,"src":"888:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":457,"indexed":true,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":461,"src":"910:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":459,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":461,"src":"935:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:2"},"src":"870:89:2"},{"anonymous":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"965:275:2","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"id":470,"name":"RoleRevoked","nodeType":"EventDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"indexed":true,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":470,"src":"1263:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":466,"indexed":true,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":470,"src":"1285:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":468,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":470,"src":"1310:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:2"},"src":"1245:89:2"},{"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"1340:76:2","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":480,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":480,"src":"1438:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":475,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":480,"src":"1452:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:2"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":480,"src":"1492:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":477,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:2"},"scope":513,"src":"1421:77:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"1504:184:2","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":488,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":488,"src":"1715:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:2"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":488,"src":"1752:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:2"},"scope":513,"src":"1693:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"1767:239:2","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":496,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":496,"src":"2030:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":496,"src":"2044:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:2"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[],"src":"2069:0:2"},"scope":513,"src":"2011:59:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"2076:223:2","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":504,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":504,"src":"2324:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":504,"src":"2338:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:2"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"2363:0:2"},"scope":513,"src":"2304:60:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"2370:480:2","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":512,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":512,"src":"2877:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":512,"src":"2891:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:2"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"2916:0:2"},"scope":513,"src":"2855:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":514,"src":"209:2710:2"}],"src":"94:2826:2"},"id":2},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[513],"IAccessControlEnumerable":[538]},"id":539,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":515,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:3"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":516,"nodeType":"ImportDirective","scope":539,"sourceUnit":514,"src":"129:30:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":518,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":513,"src":"299:14:3"},"id":519,"nodeType":"InheritanceSpecifier","src":"299:14:3"}],"contractDependencies":[513],"contractKind":"interface","documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"161:99:3","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":538,"linearizedBaseContracts":[538,513],"name":"IAccessControlEnumerable","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"320:574:3","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":529,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":529,"src":"922:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"922:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":529,"src":"936:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"921:29:3"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":529,"src":"974:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"973:9:3"},"scope":538,"src":"899:84:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"989:157:3","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":537,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nodeType":"FunctionDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":537,"src":"1179:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1179:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1178:14:3"},"returnParameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":537,"src":"1216:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1215:9:3"},"scope":538,"src":"1151:74:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":539,"src":"261:966:3"}],"src":"104:1124:3"},"id":3},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1294],"ERC20":[1125],"IERC20":[1203],"IERC20Metadata":[1272]},"id":1126,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":540,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":541,"nodeType":"ImportDirective","scope":1126,"sourceUnit":1204,"src":"130:22:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":542,"nodeType":"ImportDirective","scope":1126,"sourceUnit":1273,"src":"153:41:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":543,"nodeType":"ImportDirective","scope":1126,"sourceUnit":1295,"src":"195:33:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":545,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1294,"src":"1550:7:4"},"id":546,"nodeType":"InheritanceSpecifier","src":"1550:7:4"},{"baseName":{"id":547,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1203,"src":"1559:6:4"},"id":548,"nodeType":"InheritanceSpecifier","src":"1559:6:4"},{"baseName":{"id":549,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":1272,"src":"1567:14:4"},"id":550,"nodeType":"InheritanceSpecifier","src":"1567:14:4"}],"contractDependencies":[1203,1272,1294],"contractKind":"contract","documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"230:1301:4","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1125,"linearizedBaseContracts":[1125,1272,1203,1294],"name":"ERC20","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":554,"mutability":"mutable","name":"_balances","nodeType":"VariableDeclaration","scope":1125,"src":"1588:45:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":553,"keyType":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":560,"mutability":"mutable","name":"_allowances","nodeType":"VariableDeclaration","scope":1125,"src":"1640:67:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":559,"keyType":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":558,"keyType":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":562,"mutability":"mutable","name":"_totalSupply","nodeType":"VariableDeclaration","scope":1125,"src":"1714:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":564,"mutability":"mutable","name":"_name","nodeType":"VariableDeclaration","scope":1125,"src":"1749:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":563,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":566,"mutability":"mutable","name":"_symbol","nodeType":"VariableDeclaration","scope":1125,"src":"1775:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":565,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":582,"nodeType":"Block","src":"2036:57:4","statements":[{"expression":{"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":574,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"2046:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":575,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"2054:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":577,"nodeType":"ExpressionStatement","src":"2046:13:4"},{"expression":{"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":578,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"2069:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":579,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"2079:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":581,"nodeType":"ExpressionStatement","src":"2069:17:4"}]},"documentation":{"id":567,"nodeType":"StructuredDocumentation","src":"1804:171:4","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":583,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"mutability":"mutable","name":"name_","nodeType":"VariableDeclaration","scope":583,"src":"1992:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":568,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"symbol_","nodeType":"VariableDeclaration","scope":583,"src":"2013:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":570,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:4"},"returnParameters":{"id":573,"nodeType":"ParameterList","parameters":[],"src":"2036:0:4"},"scope":1125,"src":"1980:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1259],"body":{"id":592,"nodeType":"Block","src":"2227:29:4","statements":[{"expression":{"id":590,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"2244:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":589,"id":591,"nodeType":"Return","src":"2237:12:4"}]},"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"2099:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":593,"implemented":true,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","overrides":{"id":586,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:4"},"parameters":{"id":585,"nodeType":"ParameterList","parameters":[],"src":"2171:2:4"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":593,"src":"2212:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":587,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:4"},"scope":1125,"src":"2158:98:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1265],"body":{"id":602,"nodeType":"Block","src":"2440:31:4","statements":[{"expression":{"id":600,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"2457:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":599,"id":601,"nodeType":"Return","src":"2450:14:4"}]},"documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"2262:102:4","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":603,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","overrides":{"id":596,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:4"},"parameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"2384:2:4"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":603,"src":"2425:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":597,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:4"},"scope":1125,"src":"2369:102:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1271],"body":{"id":612,"nodeType":"Block","src":"3169:26:4","statements":[{"expression":{"hexValue":"3138","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":609,"id":611,"nodeType":"Return","src":"3179:9:4"}]},"documentation":{"id":604,"nodeType":"StructuredDocumentation","src":"2477:622:4","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":613,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","overrides":{"id":606,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:4"},"parameters":{"id":605,"nodeType":"ParameterList","parameters":[],"src":"3121:2:4"},"returnParameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":613,"src":"3162:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":607,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:4"},"scope":1125,"src":"3104:91:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1152],"body":{"id":622,"nodeType":"Block","src":"3325:36:4","statements":[{"expression":{"id":620,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"3342:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":619,"id":621,"nodeType":"Return","src":"3335:19:4"}]},"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"3201:49:4","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":623,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","overrides":{"id":616,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:4"},"parameters":{"id":615,"nodeType":"ParameterList","parameters":[],"src":"3275:2:4"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":623,"src":"3316:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":617,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:4"},"scope":1125,"src":"3255:106:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1160],"body":{"id":636,"nodeType":"Block","src":"3502:42:4","statements":[{"expression":{"baseExpression":{"id":632,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3519:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":634,"indexExpression":{"id":633,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"3529:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":631,"id":635,"nodeType":"Return","src":"3512:25:4"}]},"documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"3367:47:4","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":637,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","overrides":{"id":628,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:4"},"parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":637,"src":"3438:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:4"},"returnParameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":637,"src":"3493:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:4"},"scope":1125,"src":"3419:125:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1170],"body":{"id":661,"nodeType":"Block","src":"3825:104:4","statements":[{"assignments":[649],"declarations":[{"constant":false,"id":649,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":661,"src":"3835:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":652,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":650,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"3851:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3851:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:4"},{"expression":{"arguments":[{"id":654,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"3883:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":655,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"3890:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":656,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"3894:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":653,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"3873:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3873:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":658,"nodeType":"ExpressionStatement","src":"3873:28:4"},{"expression":{"hexValue":"74727565","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":647,"id":660,"nodeType":"Return","src":"3911:11:4"}]},"documentation":{"id":638,"nodeType":"StructuredDocumentation","src":"3550:185:4","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":662,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","overrides":{"id":644,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:4"},"parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":662,"src":"3758:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":662,"src":"3770:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:4"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":662,"src":"3819:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":645,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:4"},"scope":1125,"src":"3740:189:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1180],"body":{"id":679,"nodeType":"Block","src":"4085:51:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":673,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4102:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":675,"indexExpression":{"id":674,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"4114:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":677,"indexExpression":{"id":676,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"4121:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":672,"id":678,"nodeType":"Return","src":"4095:34:4"}]},"documentation":{"id":663,"nodeType":"StructuredDocumentation","src":"3935:47:4","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":680,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","overrides":{"id":669,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:4"},"parameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":680,"src":"4006:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":667,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":680,"src":"4021:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:4"},"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":680,"src":"4076:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":670,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:4"},"scope":1125,"src":"3987:149:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1190],"body":{"id":704,"nodeType":"Block","src":"4533:108:4","statements":[{"assignments":[692],"declarations":[{"constant":false,"id":692,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":704,"src":"4543:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":695,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":693,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"4559:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4559:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:4"},{"expression":{"arguments":[{"id":697,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"4590:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":698,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"4597:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":699,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"4606:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":696,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"4581:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4581:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"ExpressionStatement","src":"4581:32:4"},{"expression":{"hexValue":"74727565","id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":690,"id":703,"nodeType":"Return","src":"4623:11:4"}]},"documentation":{"id":681,"nodeType":"StructuredDocumentation","src":"4142:297:4","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":705,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","overrides":{"id":687,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:4"},"parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":705,"src":"4461:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":705,"src":"4478:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:4"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":705,"src":"4527:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":688,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:4"},"scope":1125,"src":"4444:197:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1202],"body":{"id":737,"nodeType":"Block","src":"5306:153:4","statements":[{"assignments":[719],"declarations":[{"constant":false,"id":719,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":737,"src":"5316:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":722,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":720,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"5334:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5334:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:4"},{"expression":{"arguments":[{"id":724,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"5372:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":725,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"5378:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":726,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"5387:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":723,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"5356:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5356:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":728,"nodeType":"ExpressionStatement","src":"5356:38:4"},{"expression":{"arguments":[{"id":730,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"5414:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":731,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"5420:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"5424:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":729,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"5404:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5404:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"ExpressionStatement","src":"5404:27:4"},{"expression":{"hexValue":"74727565","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":717,"id":736,"nodeType":"Return","src":"5441:11:4"}]},"documentation":{"id":706,"nodeType":"StructuredDocumentation","src":"4647:551:4","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":738,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","overrides":{"id":714,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:4"},"parameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":738,"src":"5225:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":738,"src":"5239:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":738,"src":"5251:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":711,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:4"},"returnParameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":738,"src":"5300:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":715,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:4"},"scope":1125,"src":"5203:256:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":766,"nodeType":"Block","src":"5948:140:4","statements":[{"assignments":[749],"declarations":[{"constant":false,"id":749,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":766,"src":"5958:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":752,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":750,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"5974:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5974:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:4"},{"expression":{"arguments":[{"id":754,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"6005:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"6012:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":757,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"6031:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":758,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"6038:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":756,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6021:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6021:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":760,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"6049:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":753,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"5996:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5996:64:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":763,"nodeType":"ExpressionStatement","src":"5996:64:4"},{"expression":{"hexValue":"74727565","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":747,"id":765,"nodeType":"Return","src":"6070:11:4"}]},"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"5465:384:4","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":767,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":767,"src":"5881:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"addedValue","nodeType":"VariableDeclaration","scope":767,"src":"5898:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":742,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:4"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":767,"src":"5942:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":745,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:4"},"scope":1125,"src":"5854:234:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":807,"nodeType":"Block","src":"6674:328:4","statements":[{"assignments":[778],"declarations":[{"constant":false,"id":778,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":807,"src":"6684:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":781,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":779,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"6700:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6700:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:4"},{"assignments":[783],"declarations":[{"constant":false,"id":783,"mutability":"mutable","name":"currentAllowance","nodeType":"VariableDeclaration","scope":807,"src":"6722:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":788,"initialValue":{"arguments":[{"id":785,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"6759:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":786,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"6766:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":784,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6749:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6749:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":790,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"6792:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":791,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"6812:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":789,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6784:85:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":795,"nodeType":"ExpressionStatement","src":"6784:85:4"},{"id":804,"nodeType":"UncheckedBlock","src":"6879:95:4","statements":[{"expression":{"arguments":[{"id":797,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"6912:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":798,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"6919:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":799,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"6928:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":800,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"6947:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":796,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"6903:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6903:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":803,"nodeType":"ExpressionStatement","src":"6903:60:4"}]},{"expression":{"hexValue":"74727565","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":776,"id":806,"nodeType":"Return","src":"6984:11:4"}]},"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"6094:476:4","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":808,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nodeType":"FunctionDefinition","parameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":808,"src":"6602:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"subtractedValue","nodeType":"VariableDeclaration","scope":808,"src":"6619:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:4"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":808,"src":"6668:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":774,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:4"},"scope":1125,"src":"6575:427:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":884,"nodeType":"Block","src":"7534:710:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":819,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"7552:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":820,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:4","typeDescriptions":{}}},"id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7560:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":818,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7544:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":827,"nodeType":"ExpressionStatement","src":"7544:68:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":829,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"7630:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:4","typeDescriptions":{}}},"id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7636:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":828,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7622:64:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":837,"nodeType":"ExpressionStatement","src":"7622:64:4"},{"expression":{"arguments":[{"id":839,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"7718:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":840,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"7724:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":841,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"7728:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":838,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"7697:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7697:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":843,"nodeType":"ExpressionStatement","src":"7697:38:4"},{"assignments":[845],"declarations":[{"constant":false,"id":845,"mutability":"mutable","name":"fromBalance","nodeType":"VariableDeclaration","scope":884,"src":"7746:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":849,"initialValue":{"baseExpression":{"id":846,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"7768:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":848,"indexExpression":{"id":847,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"7778:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":851,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"7801:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":852,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"7816:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":850,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7793:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":856,"nodeType":"ExpressionStatement","src":"7793:72:4"},{"id":871,"nodeType":"UncheckedBlock","src":"7875:273:4","statements":[{"expression":{"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":857,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"7899:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":859,"indexExpression":{"id":858,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"7909:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":860,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"7917:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":861,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"7931:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":864,"nodeType":"ExpressionStatement","src":"7899:38:4"},{"expression":{"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":865,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"8114:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":867,"indexExpression":{"id":866,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"8124:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":868,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"8131:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":870,"nodeType":"ExpressionStatement","src":"8114:23:4"}]},{"eventCall":{"arguments":[{"id":873,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"8172:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":874,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"8178:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":875,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"8182:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":872,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"8163:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8163:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":877,"nodeType":"EmitStatement","src":"8158:31:4"},{"expression":{"arguments":[{"id":879,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"8220:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":880,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"8226:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"8230:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":878,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"8200:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8200:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"8200:37:4"}]},"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"7008:443:4","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":885,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nodeType":"FunctionDefinition","parameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":885,"src":"7475:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":885,"src":"7489:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":885,"src":"7501:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:4"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[],"src":"7534:0:4"},"scope":1125,"src":"7456:788:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":941,"nodeType":"Block","src":"8585:470:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":894,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"8603:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:4","typeDescriptions":{}}},"id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8614:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":893,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8595:65:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"ExpressionStatement","src":"8595:65:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:4","typeDescriptions":{}}},"id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8692:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":908,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"8704:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":909,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"8713:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":903,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"8671:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8671:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":911,"nodeType":"ExpressionStatement","src":"8671:49:4"},{"expression":{"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":912,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"8731:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":913,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"8747:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":915,"nodeType":"ExpressionStatement","src":"8731:22:4"},{"id":922,"nodeType":"UncheckedBlock","src":"8763:175:4","statements":[{"expression":{"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":916,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"8899:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":918,"indexExpression":{"id":917,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"8909:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":919,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"8921:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":921,"nodeType":"ExpressionStatement","src":"8899:28:4"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:4","typeDescriptions":{}}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8961:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":928,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"8973:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":929,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"8982:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":923,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"8952:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8952:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":931,"nodeType":"EmitStatement","src":"8947:42:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:4","typeDescriptions":{}}},"id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9020:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":937,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"9032:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":938,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"9041:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":932,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"9000:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9000:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"ExpressionStatement","src":"9000:48:4"}]},"documentation":{"id":886,"nodeType":"StructuredDocumentation","src":"8250:265:4","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":942,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nodeType":"FunctionDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":942,"src":"8535:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":942,"src":"8552:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":889,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:4"},"returnParameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"8585:0:4"},"scope":1125,"src":"8520:535:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"9440:594:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":951,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"9458:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:4","typeDescriptions":{}}},"id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9469:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":950,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9450:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":959,"nodeType":"ExpressionStatement","src":"9450:67:4"},{"expression":{"arguments":[{"id":961,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"9549:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:4","typeDescriptions":{}}},"id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9558:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":966,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"9570:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":960,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"9528:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9528:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":968,"nodeType":"ExpressionStatement","src":"9528:49:4"},{"assignments":[970],"declarations":[{"constant":false,"id":970,"mutability":"mutable","name":"accountBalance","nodeType":"VariableDeclaration","scope":1013,"src":"9588:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":974,"initialValue":{"baseExpression":{"id":971,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"9613:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":973,"indexExpression":{"id":972,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"9623:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":976,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"9649:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":977,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"9667:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":975,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9641:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":981,"nodeType":"ExpressionStatement","src":"9641:71:4"},{"id":994,"nodeType":"UncheckedBlock","src":"9722:194:4","statements":[{"expression":{"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":982,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"9746:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":984,"indexExpression":{"id":983,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"9756:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":985,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"9767:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":986,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"9784:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":989,"nodeType":"ExpressionStatement","src":"9746:44:4"},{"expression":{"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":990,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"9883:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":991,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"9899:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":993,"nodeType":"ExpressionStatement","src":"9883:22:4"}]},{"eventCall":{"arguments":[{"id":996,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"9940:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:4","typeDescriptions":{}}},"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9949:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1001,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"9961:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":995,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"9931:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9931:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1003,"nodeType":"EmitStatement","src":"9926:42:4"},{"expression":{"arguments":[{"id":1005,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"9999:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:4","typeDescriptions":{}}},"id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10008:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1010,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"10020:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1004,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"9979:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9979:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1012,"nodeType":"ExpressionStatement","src":"9979:48:4"}]},"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"9061:309:4","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":1014,"src":"9390:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1014,"src":"9407:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:4"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"9440:0:4"},"scope":1125,"src":"9375:659:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1058,"nodeType":"Block","src":"10540:257:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1025,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"10558:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:4","typeDescriptions":{}}},"id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10567:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1024,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10550:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1033,"nodeType":"ExpressionStatement","src":"10550:68:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1035,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"10636:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:4","typeDescriptions":{}}},"id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10647:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1034,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10628:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1043,"nodeType":"ExpressionStatement","src":"10628:68:4"},{"expression":{"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1044,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"10707:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1047,"indexExpression":{"id":1045,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"10719:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1048,"indexExpression":{"id":1046,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"10726:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1049,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"10737:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1051,"nodeType":"ExpressionStatement","src":"10707:36:4"},{"eventCall":{"arguments":[{"id":1053,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"10767:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1054,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"10774:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1055,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"10783:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1052,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"10758:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10758:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1057,"nodeType":"EmitStatement","src":"10753:37:4"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"10040:412:4","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1059,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1059,"src":"10475:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":1059,"src":"10490:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1059,"src":"10507:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:4"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[],"src":"10540:0:4"},"scope":1125,"src":"10457:340:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1101,"nodeType":"Block","src":"11168:321:4","statements":[{"assignments":[1070],"declarations":[{"constant":false,"id":1070,"mutability":"mutable","name":"currentAllowance","nodeType":"VariableDeclaration","scope":1101,"src":"11178:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1075,"initialValue":{"arguments":[{"id":1072,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"11215:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1073,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"11222:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1071,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"11205:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11205:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1076,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"11244:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1077,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11264:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11264:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1100,"nodeType":"IfStatement","src":"11240:243:4","trueBody":{"id":1099,"nodeType":"Block","src":"11283:200:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1084,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"11305:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1085,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"11325:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1083,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11297:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1089,"nodeType":"ExpressionStatement","src":"11297:68:4"},{"id":1098,"nodeType":"UncheckedBlock","src":"11379:94:4","statements":[{"expression":{"arguments":[{"id":1091,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"11416:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1092,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"11423:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1093,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"11432:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1094,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"11451:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1090,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"11407:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11407:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1097,"nodeType":"ExpressionStatement","src":"11407:51:4"}]}]}}]},"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"10803:270:4","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1102,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nodeType":"FunctionDefinition","parameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1102,"src":"11103:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":1102,"src":"11118:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1102,"src":"11135:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:4"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[],"src":"11168:0:4"},"scope":1125,"src":"11078:411:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1112,"nodeType":"Block","src":"12162:2:4","statements":[]},"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"11495:573:4","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1113,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nodeType":"FunctionDefinition","parameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1113,"src":"12103:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1113,"src":"12117:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1113,"src":"12129:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:4"},"returnParameters":{"id":1111,"nodeType":"ParameterList","parameters":[],"src":"12162:0:4"},"scope":1125,"src":"12073:91:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1123,"nodeType":"Block","src":"12840:2:4","statements":[]},"documentation":{"id":1114,"nodeType":"StructuredDocumentation","src":"12170:577:4","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1124,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nodeType":"FunctionDefinition","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1124,"src":"12781:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1118,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1124,"src":"12795:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1117,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1124,"src":"12807:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1119,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:4"},"returnParameters":{"id":1122,"nodeType":"ParameterList","parameters":[],"src":"12840:0:4"},"scope":1125,"src":"12752:90:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1126,"src":"1532:11312:4"}],"src":"105:12740:4"},"id":4},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1203]},"id":1204,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1127,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1128,"nodeType":"StructuredDocumentation","src":"131:70:5","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1203,"linearizedBaseContracts":[1203],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"225:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":1137,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1137,"src":"403:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1133,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1137,"src":"425:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1135,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1137,"src":"445:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1134,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:5"},"src":"388:72:5"},{"anonymous":false,"documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"466:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":1146,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1146,"src":"634:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1142,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":1146,"src":"657:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1144,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1146,"src":"682:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:5"},"src":"619:78:5"},{"documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"703:66:5","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1152,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[],"src":"794:2:5"},"returnParameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1152,"src":"820:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1149,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:5"},"scope":1203,"src":"774:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1153,"nodeType":"StructuredDocumentation","src":"835:72:5","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1160,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":1156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":1160,"src":"931:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:5"},"returnParameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1160,"src":"971:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:5"},"scope":1203,"src":"912:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1161,"nodeType":"StructuredDocumentation","src":"986:202:5","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1170,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1170,"src":"1211:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1170,"src":"1223:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:5"},"returnParameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1170,"src":"1257:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1167,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:5"},"scope":1203,"src":"1193:70:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"1269:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1180,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1180,"src":"1557:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1172,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":1180,"src":"1572:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:5"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1180,"src":"1612:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:5"},"scope":1203,"src":"1538:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1181,"nodeType":"StructuredDocumentation","src":"1627:642:5","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1190,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":1190,"src":"2291:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1185,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1190,"src":"2308:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1184,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:5"},"returnParameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1190,"src":"2342:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1187,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:5"},"scope":1203,"src":"2274:74:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"2354:287:5","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1202,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1202,"src":"2668:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1202,"src":"2682:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1202,"src":"2694:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:5"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1202,"src":"2728:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1199,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:5"},"scope":1203,"src":"2646:88:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1204,"src":"202:2534:5"}],"src":"106:2631:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[1294],"ERC20":[1125],"ERC20Burnable":[1247],"IERC20":[1203],"IERC20Metadata":[1272]},"id":1248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1205,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1206,"nodeType":"ImportDirective","scope":1248,"sourceUnit":1126,"src":"149:22:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1207,"nodeType":"ImportDirective","scope":1248,"sourceUnit":1295,"src":"172:36:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1209,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1294,"src":"454:7:6"},"id":1210,"nodeType":"InheritanceSpecifier","src":"454:7:6"},{"baseName":{"id":1211,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1125,"src":"463:5:6"},"id":1212,"nodeType":"InheritanceSpecifier","src":"463:5:6"}],"contractDependencies":[1125,1203,1272,1294],"contractKind":"contract","documentation":{"id":1208,"nodeType":"StructuredDocumentation","src":"210:208:6","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":false,"id":1247,"linearizedBaseContracts":[1247,1125,1272,1203,1294],"name":"ERC20Burnable","nodeType":"ContractDefinition","nodes":[{"body":{"id":1224,"nodeType":"Block","src":"623:44:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1219,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"639:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"639:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1221,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"653:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1218,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"633:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"633:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1223,"nodeType":"ExpressionStatement","src":"633:27:6"}]},"documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"475:98:6","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1225,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nodeType":"FunctionDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1225,"src":"592:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"591:16:6"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[],"src":"623:0:6"},"scope":1247,"src":"578:89:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1245,"nodeType":"Block","src":"1039:95:6","statements":[{"expression":{"arguments":[{"id":1234,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"1065:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1235,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"1074:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1074:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1237,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"1088:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1233,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"1049:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1049:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1239,"nodeType":"ExpressionStatement","src":"1049:46:6"},{"expression":{"arguments":[{"id":1241,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"1111:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1242,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"1120:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1240,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"1105:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1105:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1244,"nodeType":"ExpressionStatement","src":"1105:22:6"}]},"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"673:295:6","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nodeType":"FunctionDefinition","parameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":1246,"src":"991:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"991:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1246,"src":"1008:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"990:33:6"},"returnParameters":{"id":1232,"nodeType":"ParameterList","parameters":[],"src":"1039:0:6"},"scope":1247,"src":"973:161:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1248,"src":"419:717:6"}],"src":"124:1013:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1203],"IERC20Metadata":[1272]},"id":1273,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1249,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1250,"nodeType":"ImportDirective","scope":1273,"sourceUnit":1204,"src":"135:23:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1252,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1203,"src":"305:6:7"},"id":1253,"nodeType":"InheritanceSpecifier","src":"305:6:7"}],"contractDependencies":[1203],"contractKind":"interface","documentation":{"id":1251,"nodeType":"StructuredDocumentation","src":"160:116:7","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1272,"linearizedBaseContracts":[1272,1203],"name":"IERC20Metadata","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1254,"nodeType":"StructuredDocumentation","src":"318:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1259,"implemented":false,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[],"src":"390:2:7"},"returnParameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1259,"src":"416:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1256,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:7"},"scope":1272,"src":"377:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"437:56:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1265,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[],"src":"513:2:7"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1265,"src":"539:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1262,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:7"},"scope":1272,"src":"498:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"560:65:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1271,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[],"src":"647:2:7"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1271,"src":"673:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1268,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:7"},"scope":1272,"src":"630:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1273,"src":"277:405:7"}],"src":"110:573:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1294]},"id":1295,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1274,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:8"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"111:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1294,"linearizedBaseContracts":[1294],"name":"Context","nodeType":"ContractDefinition","nodes":[{"body":{"id":1283,"nodeType":"Block","src":"702:34:8","statements":[{"expression":{"expression":{"id":1280,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1279,"id":1282,"nodeType":"Return","src":"712:17:8"}]},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[],"src":"659:2:8"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1284,"src":"693:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:8"},"scope":1294,"src":"640:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1292,"nodeType":"Block","src":"809:32:8","statements":[{"expression":{"expression":{"id":1289,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1288,"id":1291,"nodeType":"Return","src":"819:15:8"}]},"id":1293,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[],"src":"759:2:8"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1293,"src":"793:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1286,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:8"},"scope":1294,"src":"742:99:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1295,"src":"608:235:8"}],"src":"86:758:8"},"id":8},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2425],"SignedMath":[2530],"Strings":[1523]},"id":1524,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1296,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:9"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1297,"nodeType":"ImportDirective","scope":1524,"sourceUnit":2426,"src":"126:25:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1298,"nodeType":"ImportDirective","scope":1524,"sourceUnit":2531,"src":"152:31:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"185:34:9","text":" @dev String operations."},"fullyImplemented":true,"id":1523,"linearizedBaseContracts":[1523],"name":"Strings","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1302,"mutability":"constant","name":"_SYMBOLS","nodeType":"VariableDeclaration","scope":1523,"src":"242:54:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1300,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:9","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1305,"mutability":"constant","name":"_ADDRESS_LENGTH","nodeType":"VariableDeclaration","scope":1523,"src":"302:43:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1303,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:9","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1352,"nodeType":"Block","src":"518:625:9","statements":[{"id":1351,"nodeType":"UncheckedBlock","src":"528:609:9","statements":[{"assignments":[1314],"declarations":[{"constant":false,"id":1314,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","scope":1351,"src":"552:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1321,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"580:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1315,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"569:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2425_$","typeString":"type(library Math)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2262,"src":"569:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"569:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:9"},{"assignments":[1323],"declarations":[{"constant":false,"id":1323,"mutability":"mutable","name":"buffer","nodeType":"VariableDeclaration","scope":1351,"src":"604:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1322,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1328,"initialValue":{"arguments":[{"id":1326,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"638:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1324,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"627:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:9"},{"assignments":[1330],"declarations":[{"constant":false,"id":1330,"mutability":"mutable","name":"ptr","nodeType":"VariableDeclaration","scope":1351,"src":"659:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1331,"nodeType":"VariableDeclarationStatement","src":"659:11:9"},{"AST":{"nodeType":"YulBlock","src":"740:67:9","statements":[{"nodeType":"YulAssignment","src":"758:35:9","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:9","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:9"},"nodeType":"YulFunctionCall","src":"777:15:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:9"},"nodeType":"YulFunctionCall","src":"765:28:9"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:9"}]}]},"evmVersion":"constantinople","externalReferences":[{"declaration":1323,"isOffset":false,"isSlot":false,"src":"769:6:9","valueSize":1},{"declaration":1314,"isOffset":false,"isSlot":false,"src":"785:6:9","valueSize":1},{"declaration":1330,"isOffset":false,"isSlot":false,"src":"758:3:9","valueSize":1}],"id":1332,"nodeType":"InlineAssembly","src":"731:76:9"},{"body":{"id":1347,"nodeType":"Block","src":"833:267:9","statements":[{"expression":{"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:9","subExpression":{"id":1334,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"851:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1336,"nodeType":"ExpressionStatement","src":"851:5:9"},{"AST":{"nodeType":"YulBlock","src":"934:84:9","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:9"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:9","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:9"},"nodeType":"YulFunctionCall","src":"974:14:9"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:9"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:9"},"nodeType":"YulFunctionCall","src":"969:30:9"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:9"},"nodeType":"YulFunctionCall","src":"956:44:9"},"nodeType":"YulExpressionStatement","src":"956:44:9"}]},"evmVersion":"constantinople","externalReferences":[{"declaration":1302,"isOffset":false,"isSlot":false,"src":"990:8:9","valueSize":1},{"declaration":1330,"isOffset":false,"isSlot":false,"src":"964:3:9","valueSize":1},{"declaration":1308,"isOffset":false,"isSlot":false,"src":"978:5:9","valueSize":1}],"id":1337,"nodeType":"InlineAssembly","src":"925:93:9"},{"expression":{"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"1035:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1341,"nodeType":"ExpressionStatement","src":"1035:11:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"1068:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1346,"nodeType":"IfStatement","src":"1064:21:9","trueBody":{"id":1345,"nodeType":"Break","src":"1080:5:9"}}]},"condition":{"hexValue":"74727565","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1348,"nodeType":"WhileStatement","src":"820:280:9"},{"expression":{"id":1349,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"1120:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1312,"id":1350,"nodeType":"Return","src":"1113:13:9"}]}]},"documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"352:90:9","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1353,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1353,"src":"465:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:9"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1353,"src":"503:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1310,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:9"},"scope":1523,"src":"447:696:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1380,"nodeType":"Block","src":"1313:103:9","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"1354:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:9","trueExpression":{"hexValue":"2d","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"1400:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1372,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"1385:10:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$2530_$","typeString":"type(library SignedMath)"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2529,"src":"1385:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1385:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1371,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1353,1381],"referencedDeclaration":1353,"src":"1376:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1363,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1337:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1361,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:9","typeDescriptions":{}}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1330:79:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1360,"id":1379,"nodeType":"Return","src":"1323:86:9"}]},"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"1149:89:9","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nodeType":"FunctionDefinition","parameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1381,"src":"1261:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1355,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:9"},"returnParameters":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1381,"src":"1298:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1358,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:9"},"scope":1523,"src":"1243:173:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1400,"nodeType":"Block","src":"1595:100:9","statements":[{"id":1399,"nodeType":"UncheckedBlock","src":"1605:84:9","statements":[{"expression":{"arguments":[{"id":1390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"1648:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"1667:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1391,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"1655:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2425_$","typeString":"type(library Math)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"1655:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1389,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1401,1477,1497],"referencedDeclaration":1477,"src":"1636:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1636:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1388,"id":1398,"nodeType":"Return","src":"1629:49:9"}]}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"1422:94:9","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1401,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1401,"src":"1542:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:9"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1401,"src":"1580:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1386,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:9"},"scope":1523,"src":"1521:174:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1476,"nodeType":"Block","src":"1908:347:9","statements":[{"assignments":[1412],"declarations":[{"constant":false,"id":1412,"mutability":"mutable","name":"buffer","nodeType":"VariableDeclaration","scope":1476,"src":"1918:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1411,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1421,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1416,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"1954:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1413,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1940:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:9"},{"expression":{"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1422,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"1975:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1424,"indexExpression":{"hexValue":"30","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1427,"nodeType":"ExpressionStatement","src":"1975:15:9"},{"expression":{"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1428,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"2000:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1430,"indexExpression":{"hexValue":"31","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1433,"nodeType":"ExpressionStatement","src":"2000:15:9"},{"body":{"id":1462,"nodeType":"Block","src":"2070:83:9","statements":[{"expression":{"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1448,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"2084:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1450,"indexExpression":{"id":1449,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"2091:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1451,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"2096:8:9","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1455,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"2105:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1457,"nodeType":"ExpressionStatement","src":"2084:33:9"},{"expression":{"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"2131:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1461,"nodeType":"ExpressionStatement","src":"2131:11:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1442,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"2058:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1463,"initializationExpression":{"assignments":[1435],"declarations":[{"constant":false,"id":1435,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":1463,"src":"2030:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1441,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1437,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"2046:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:9"},"loopExpression":{"expression":{"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:9","subExpression":{"id":1445,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"2067:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1447,"nodeType":"ExpressionStatement","src":"2065:3:9"},"nodeType":"ForStatement","src":"2025:128:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"2170:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1464,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2162:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"ExpressionStatement","src":"2162:55:9"},{"expression":{"arguments":[{"id":1473,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"2241:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1471,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:9","typeDescriptions":{}}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2234:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1410,"id":1475,"nodeType":"Return","src":"2227:21:9"}]},"documentation":{"id":1402,"nodeType":"StructuredDocumentation","src":"1701:112:9","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1477,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nodeType":"FunctionDefinition","parameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1477,"src":"1839:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1406,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","scope":1477,"src":"1854:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:9"},"returnParameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1477,"src":"1893:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1408,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:9"},"scope":1523,"src":"1818:437:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1496,"nodeType":"Block","src":"2480:76:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1490,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"2525:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1488,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:9","typeDescriptions":{}}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1486,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:9","typeDescriptions":{}}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1493,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"2533:15:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1485,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1401,1477,1497],"referencedDeclaration":1477,"src":"2497:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1484,"id":1495,"nodeType":"Return","src":"2490:59:9"}]},"documentation":{"id":1478,"nodeType":"StructuredDocumentation","src":"2261:141:9","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1497,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nodeType":"FunctionDefinition","parameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1480,"mutability":"mutable","name":"addr","nodeType":"VariableDeclaration","scope":1497,"src":"2428:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1479,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:9"},"returnParameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1497,"src":"2465:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1482,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:9"},"scope":1523,"src":"2407:149:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1521,"nodeType":"Block","src":"2711:66:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1510,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"2744:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1508,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:9","typeDescriptions":{}}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2738:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1507,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1516,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"2767:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1514,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:9","typeDescriptions":{}}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2761:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1513,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2751:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1506,"id":1520,"nodeType":"Return","src":"2721:49:9"}]},"documentation":{"id":1498,"nodeType":"StructuredDocumentation","src":"2562:66:9","text":" @dev Returns true if the two strings are equal."},"id":1522,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nodeType":"FunctionDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1500,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1522,"src":"2648:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1499,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1502,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1522,"src":"2665:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1501,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:9"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1522,"src":"2705:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1504,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:9"},"scope":1523,"src":"2633:144:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1524,"src":"220:2559:9"}],"src":"101:2679:9"},"id":9},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1547],"IERC165":[1559]},"id":1548,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1525,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1526,"nodeType":"ImportDirective","scope":1548,"sourceUnit":1560,"src":"124:23:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1528,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1559,"src":"754:7:10"},"id":1529,"nodeType":"InheritanceSpecifier","src":"754:7:10"}],"contractDependencies":[1559],"contractKind":"contract","documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"149:576:10","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1547,"linearizedBaseContracts":[1547,1559],"name":"ERC165","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1558],"body":{"id":1545,"nodeType":"Block","src":"920:64:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1538,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"937:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1540,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"957:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1559_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1559_$","typeString":"type(contract IERC165)"}],"id":1539,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1559","typeString":"type(contract IERC165)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1537,"id":1544,"nodeType":"Return","src":"930:47:10"}]},"documentation":{"id":1530,"nodeType":"StructuredDocumentation","src":"768:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1546,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":1534,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:10"},"parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1532,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":1546,"src":"856:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1531,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:10"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1546,"src":"914:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1535,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:10"},"scope":1547,"src":"829:155:10","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1548,"src":"726:260:10"}],"src":"99:888:10"},"id":10},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1559]},"id":1560,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1549,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"125:279:11","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1559,"linearizedBaseContracts":[1559],"name":"IERC165","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"429:340:11","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1558,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","parameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":1558,"src":"801:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1552,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:11"},"returnParameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1558,"src":"844:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1555,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:11"},"scope":1559,"src":"774:76:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1560,"src":"405:447:11"}],"src":"100:753:11"},"id":11},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2425]},"id":2426,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1561,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1562,"nodeType":"StructuredDocumentation","src":"128:73:12","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2425,"linearizedBaseContracts":[2425],"name":"Math","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1566,"members":[{"id":1563,"name":"Down","nodeType":"EnumValue","src":"245:4:12"},{"id":1564,"name":"Up","nodeType":"EnumValue","src":"287:2:12"},{"id":1565,"name":"Zero","nodeType":"EnumValue","src":"318:4:12"}],"name":"Rounding","nodeType":"EnumDefinition","src":"221:122:12"},{"body":{"id":1583,"nodeType":"Block","src":"480:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1576,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"497:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1577,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"501:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1580,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"509:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:12","trueExpression":{"id":1579,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"505:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1575,"id":1582,"nodeType":"Return","src":"490:20:12"}]},"documentation":{"id":1567,"nodeType":"StructuredDocumentation","src":"349:59:12","text":" @dev Returns the largest of two numbers."},"id":1584,"implemented":true,"kind":"function","modifiers":[],"name":"max","nodeType":"FunctionDefinition","parameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1584,"src":"426:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1571,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1584,"src":"437:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:12"},"returnParameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1584,"src":"471:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:12"},"scope":2425,"src":"413:104:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1601,"nodeType":"Block","src":"655:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1594,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"672:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1595,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"676:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1598,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"684:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:12","trueExpression":{"id":1597,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"680:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1593,"id":1600,"nodeType":"Return","src":"665:20:12"}]},"documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"523:60:12","text":" @dev Returns the smallest of two numbers."},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"min","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1602,"src":"601:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1602,"src":"612:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:12"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1602,"src":"646:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:12"},"scope":2425,"src":"588:104:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1624,"nodeType":"Block","src":"876:82:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1612,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"931:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1613,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"935:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1616,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"941:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1617,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"945:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1611,"id":1623,"nodeType":"Return","src":"923:28:12"}]},"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"698:102:12","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1625,"implemented":true,"kind":"function","modifiers":[],"name":"average","nodeType":"FunctionDefinition","parameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1625,"src":"822:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1604,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1625,"src":"833:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1606,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:12"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1625,"src":"867:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:12"},"scope":2425,"src":"805:153:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1649,"nodeType":"Block","src":"1228:123:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1635,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"1316:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1639,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"1330:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1642,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1643,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"1339:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:12","trueExpression":{"hexValue":"30","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1634,"id":1648,"nodeType":"Return","src":"1309:35:12"}]},"documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"964:188:12","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1650,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nodeType":"FunctionDefinition","parameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1650,"src":"1174:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1627,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1630,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":1650,"src":"1185:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:12"},"returnParameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1650,"src":"1219:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:12"},"scope":2425,"src":"1157:194:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1772,"nodeType":"Block","src":"1765:4115:12","statements":[{"id":1771,"nodeType":"UncheckedBlock","src":"1775:4099:12","statements":[{"assignments":[1663],"declarations":[{"constant":false,"id":1663,"mutability":"mutable","name":"prod0","nodeType":"VariableDeclaration","scope":1771,"src":"2096:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1664,"nodeType":"VariableDeclarationStatement","src":"2096:13:12"},{"assignments":[1666],"declarations":[{"constant":false,"id":1666,"mutability":"mutable","name":"prod1","nodeType":"VariableDeclaration","scope":1771,"src":"2168:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1665,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1667,"nodeType":"VariableDeclarationStatement","src":"2168:13:12"},{"AST":{"nodeType":"YulBlock","src":"2248:157:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:12"},"nodeType":"YulFunctionCall","src":"2289:6:12"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:12"},"nodeType":"YulFunctionCall","src":"2276:20:12"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:12","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:12"},"nodeType":"YulFunctionCall","src":"2322:9:12"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:12"}]},{"nodeType":"YulAssignment","src":"2348:43:12","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:12"},"nodeType":"YulFunctionCall","src":"2361:14:12"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:12"},"nodeType":"YulFunctionCall","src":"2377:13:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:12"},"nodeType":"YulFunctionCall","src":"2357:34:12"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:12"}]}]},"evmVersion":"constantinople","externalReferences":[{"declaration":1663,"isOffset":false,"isSlot":false,"src":"2313:5:12","valueSize":1},{"declaration":1663,"isOffset":false,"isSlot":false,"src":"2369:5:12","valueSize":1},{"declaration":1663,"isOffset":false,"isSlot":false,"src":"2384:5:12","valueSize":1},{"declaration":1666,"isOffset":false,"isSlot":false,"src":"2348:5:12","valueSize":1},{"declaration":1653,"isOffset":false,"isSlot":false,"src":"2283:1:12","valueSize":1},{"declaration":1653,"isOffset":false,"isSlot":false,"src":"2326:1:12","valueSize":1},{"declaration":1655,"isOffset":false,"isSlot":false,"src":"2286:1:12","valueSize":1},{"declaration":1655,"isOffset":false,"isSlot":false,"src":"2329:1:12","valueSize":1}],"id":1668,"nodeType":"InlineAssembly","src":"2239:166:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1669,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2486:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1677,"nodeType":"IfStatement","src":"2482:368:12","trueBody":{"id":1676,"nodeType":"Block","src":"2498:352:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1672,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"2816:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1673,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"2824:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1661,"id":1675,"nodeType":"Return","src":"2809:26:12"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1679,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"2960:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1680,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2974:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1678,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2952:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1684,"nodeType":"ExpressionStatement","src":"2952:53:12"},{"assignments":[1686],"declarations":[{"constant":false,"id":1686,"mutability":"mutable","name":"remainder","nodeType":"VariableDeclaration","scope":1771,"src":"3261:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1685,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1687,"nodeType":"VariableDeclarationStatement","src":"3261:17:12"},{"AST":{"nodeType":"YulBlock","src":"3301:291:12","statements":[{"nodeType":"YulAssignment","src":"3370:38:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:12"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:12"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:12"},"nodeType":"YulFunctionCall","src":"3383:25:12"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:12"}]},{"nodeType":"YulAssignment","src":"3490:41:12","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:12"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:12"},"nodeType":"YulFunctionCall","src":"3510:20:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:12"},"nodeType":"YulFunctionCall","src":"3499:32:12"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:12"}]},{"nodeType":"YulAssignment","src":"3548:30:12","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:12"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:12"},"nodeType":"YulFunctionCall","src":"3557:21:12"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:12"}]}]},"evmVersion":"constantinople","externalReferences":[{"declaration":1657,"isOffset":false,"isSlot":false,"src":"3396:11:12","valueSize":1},{"declaration":1663,"isOffset":false,"isSlot":false,"src":"3524:5:12","valueSize":1},{"declaration":1663,"isOffset":false,"isSlot":false,"src":"3548:5:12","valueSize":1},{"declaration":1663,"isOffset":false,"isSlot":false,"src":"3561:5:12","valueSize":1},{"declaration":1666,"isOffset":false,"isSlot":false,"src":"3490:5:12","valueSize":1},{"declaration":1666,"isOffset":false,"isSlot":false,"src":"3503:5:12","valueSize":1},{"declaration":1686,"isOffset":false,"isSlot":false,"src":"3370:9:12","valueSize":1},{"declaration":1686,"isOffset":false,"isSlot":false,"src":"3513:9:12","valueSize":1},{"declaration":1686,"isOffset":false,"isSlot":false,"src":"3568:9:12","valueSize":1},{"declaration":1653,"isOffset":false,"isSlot":false,"src":"3390:1:12","valueSize":1},{"declaration":1655,"isOffset":false,"isSlot":false,"src":"3393:1:12","valueSize":1}],"id":1688,"nodeType":"InlineAssembly","src":"3292:300:12"},{"assignments":[1690],"declarations":[{"constant":false,"id":1690,"mutability":"mutable","name":"twos","nodeType":"VariableDeclaration","scope":1771,"src":"3899:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1698,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1691,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"3914:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:12","subExpression":{"id":1692,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"3930:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1696,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:12"},{"AST":{"nodeType":"YulBlock","src":"3969:362:12","statements":[{"nodeType":"YulAssignment","src":"4034:37:12","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:12"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:12"},"nodeType":"YulFunctionCall","src":"4049:22:12"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:12"}]},{"nodeType":"YulAssignment","src":"4138:25:12","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:12"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:12"},"nodeType":"YulFunctionCall","src":"4147:16:12"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:12"}]},{"nodeType":"YulAssignment","src":"4278:39:12","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:12","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:12"},"nodeType":"YulFunctionCall","src":"4294:12:12"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:12"},"nodeType":"YulFunctionCall","src":"4290:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:12"},"nodeType":"YulFunctionCall","src":"4286:31:12"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:12"}]}]},"evmVersion":"constantinople","externalReferences":[{"declaration":1657,"isOffset":false,"isSlot":false,"src":"4034:11:12","valueSize":1},{"declaration":1657,"isOffset":false,"isSlot":false,"src":"4053:11:12","valueSize":1},{"declaration":1663,"isOffset":false,"isSlot":false,"src":"4138:5:12","valueSize":1},{"declaration":1663,"isOffset":false,"isSlot":false,"src":"4151:5:12","valueSize":1},{"declaration":1690,"isOffset":false,"isSlot":false,"src":"4066:4:12","valueSize":1},{"declaration":1690,"isOffset":false,"isSlot":false,"src":"4158:4:12","valueSize":1},{"declaration":1690,"isOffset":false,"isSlot":false,"src":"4278:4:12","valueSize":1},{"declaration":1690,"isOffset":false,"isSlot":false,"src":"4301:4:12","valueSize":1},{"declaration":1690,"isOffset":false,"isSlot":false,"src":"4308:4:12","valueSize":1}],"id":1699,"nodeType":"InlineAssembly","src":"3960:371:12"},{"expression":{"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1700,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"4397:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1701,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"4406:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1702,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"4414:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1705,"nodeType":"ExpressionStatement","src":"4397:21:12"},{"assignments":[1707],"declarations":[{"constant":false,"id":1707,"mutability":"mutable","name":"inverse","nodeType":"VariableDeclaration","scope":1771,"src":"4736:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1706,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1714,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1709,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"4759:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1711,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:12"},{"expression":{"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1715,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"4992:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1717,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"5007:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1718,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5021:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1722,"nodeType":"ExpressionStatement","src":"4992:36:12"},{"expression":{"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1723,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5061:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1725,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"5076:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1726,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5090:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1730,"nodeType":"ExpressionStatement","src":"5061:36:12"},{"expression":{"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1731,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5131:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1733,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"5146:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1734,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5160:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1738,"nodeType":"ExpressionStatement","src":"5131:36:12"},{"expression":{"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1739,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5201:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1741,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"5216:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1742,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5230:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1746,"nodeType":"ExpressionStatement","src":"5201:36:12"},{"expression":{"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1747,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5271:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1749,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"5286:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1750,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5300:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1754,"nodeType":"ExpressionStatement","src":"5271:36:12"},{"expression":{"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1755,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5342:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1757,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"5357:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1758,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5371:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1762,"nodeType":"ExpressionStatement","src":"5342:36:12"},{"expression":{"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1763,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"5812:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1764,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"5821:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1765,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5829:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1768,"nodeType":"ExpressionStatement","src":"5812:24:12"},{"expression":{"id":1769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"5857:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1661,"id":1770,"nodeType":"Return","src":"5850:13:12"}]}]},"documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"1357:305:12","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1773,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nodeType":"FunctionDefinition","parameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":1773,"src":"1683:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1655,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":1773,"src":"1694:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":1773,"src":"1705:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:12"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":1773,"src":"1749:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:12"},"scope":2425,"src":"1667:4213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1816,"nodeType":"Block","src":"6122:189:12","statements":[{"assignments":[1789],"declarations":[{"constant":false,"id":1789,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":1816,"src":"6132:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1795,"initialValue":{"arguments":[{"id":1791,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"6156:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1792,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"6159:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1793,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"6162:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1790,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1773,1817],"referencedDeclaration":1773,"src":"6149:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6149:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1796,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"6188:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1797,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"6200:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1566_$","typeString":"type(enum Math.Rounding)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"6200:11:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"}},"src":"6188:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1801,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"6222:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1802,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"6225:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1803,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"6228:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1800,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:12","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6215:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1813,"nodeType":"IfStatement","src":"6184:98:12","trueBody":{"id":1812,"nodeType":"Block","src":"6246:36:12","statements":[{"expression":{"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1808,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"6260:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1811,"nodeType":"ExpressionStatement","src":"6260:11:12"}]}},{"expression":{"id":1814,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"6298:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1787,"id":1815,"nodeType":"Return","src":"6291:13:12"}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"5886:121:12","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1817,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":1817,"src":"6028:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":1817,"src":"6039:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":1817,"src":"6050:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":1817,"src":"6071:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"},"typeName":{"id":1782,"nodeType":"UserDefinedTypeName","pathNode":{"id":1781,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1566,"src":"6071:8:12"},"referencedDeclaration":1566,"src":"6071:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:12"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1817,"src":"6113:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:12"},"scope":2425,"src":"6012:299:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1928,"nodeType":"Block","src":"6587:1585:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1825,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"6601:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1831,"nodeType":"IfStatement","src":"6597:45:12","trueBody":{"id":1830,"nodeType":"Block","src":"6609:33:12","statements":[{"expression":{"hexValue":"30","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1824,"id":1829,"nodeType":"Return","src":"6623:8:12"}]}},{"assignments":[1833],"declarations":[{"constant":false,"id":1833,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":1928,"src":"7321:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1832,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1842,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1836,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"7349:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1835,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2097,2133],"referencedDeclaration":2097,"src":"7344:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1840,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:12"},{"id":1927,"nodeType":"UncheckedBlock","src":"7758:408:12","statements":[{"expression":{"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1843,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7782:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1844,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7792:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1845,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"7801:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1846,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7805:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1849,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1853,"nodeType":"ExpressionStatement","src":"7782:35:12"},{"expression":{"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1854,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7831:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7841:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1856,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"7850:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1857,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7854:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1864,"nodeType":"ExpressionStatement","src":"7831:35:12"},{"expression":{"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7880:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1866,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7890:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1867,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"7899:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1868,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7903:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1875,"nodeType":"ExpressionStatement","src":"7880:35:12"},{"expression":{"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7929:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1877,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7939:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"7948:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1879,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7952:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1882,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1886,"nodeType":"ExpressionStatement","src":"7929:35:12"},{"expression":{"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7978:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1888,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7988:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1889,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"7997:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1890,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"8001:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1897,"nodeType":"ExpressionStatement","src":"7978:35:12"},{"expression":{"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1898,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"8027:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1899,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"8037:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1900,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"8046:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1901,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"8050:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1908,"nodeType":"ExpressionStatement","src":"8027:35:12"},{"expression":{"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"8076:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"8086:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1911,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"8095:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1912,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"8099:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1919,"nodeType":"ExpressionStatement","src":"8076:35:12"},{"expression":{"arguments":[{"id":1921,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"8136:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1922,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"8144:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1923,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"8148:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1920,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"8132:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1824,"id":1926,"nodeType":"Return","src":"8125:30:12"}]}]},"documentation":{"id":1818,"nodeType":"StructuredDocumentation","src":"6317:208:12","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1929,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nodeType":"FunctionDefinition","parameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1929,"src":"6544:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:12"},"returnParameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1929,"src":"6578:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1822,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:12"},"scope":2425,"src":"6530:1642:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1964,"nodeType":"Block","src":"8348:161:12","statements":[{"id":1963,"nodeType":"UncheckedBlock","src":"8358:145:12","statements":[{"assignments":[1941],"declarations":[{"constant":false,"id":1941,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":1963,"src":"8382:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1945,"initialValue":{"arguments":[{"id":1943,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"8404:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1942,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1929,1965],"referencedDeclaration":1929,"src":"8399:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8399:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1946,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"8427:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1947,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"8437:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1948,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"8449:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1566_$","typeString":"type(enum Math.Rounding)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"8449:11:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"}},"src":"8437:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"8464:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1952,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"8473:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1954,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"8482:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:12","trueExpression":{"hexValue":"31","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1960,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1939,"id":1962,"nodeType":"Return","src":"8420:72:12"}]}]},"documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"8178:89:12","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1965,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":1965,"src":"8286:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1931,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1935,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":1965,"src":"8297:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"},"typeName":{"id":1934,"nodeType":"UserDefinedTypeName","pathNode":{"id":1933,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1566,"src":"8297:8:12"},"referencedDeclaration":1566,"src":"8297:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:12"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1965,"src":"8339:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:12"},"scope":2425,"src":"8272:237:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2096,"nodeType":"Block","src":"8694:922:12","statements":[{"assignments":[1974],"declarations":[{"constant":false,"id":1974,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2096,"src":"8704:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1976,"initialValue":{"hexValue":"30","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:12"},{"id":2093,"nodeType":"UncheckedBlock","src":"8732:855:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"8760:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1991,"nodeType":"IfStatement","src":"8756:99:12","trueBody":{"id":1990,"nodeType":"Block","src":"8778:77:12","statements":[{"expression":{"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"8796:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1985,"nodeType":"ExpressionStatement","src":"8796:13:12"},{"expression":{"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1986,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"8827:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1989,"nodeType":"ExpressionStatement","src":"8827:13:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"8872:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2006,"nodeType":"IfStatement","src":"8868:96:12","trueBody":{"id":2005,"nodeType":"Block","src":"8889:75:12","statements":[{"expression":{"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"8907:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2000,"nodeType":"ExpressionStatement","src":"8907:12:12"},{"expression":{"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2001,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"8937:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2004,"nodeType":"ExpressionStatement","src":"8937:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"8981:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2021,"nodeType":"IfStatement","src":"8977:96:12","trueBody":{"id":2020,"nodeType":"Block","src":"8998:75:12","statements":[{"expression":{"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"9016:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2015,"nodeType":"ExpressionStatement","src":"9016:12:12"},{"expression":{"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"9046:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2019,"nodeType":"ExpressionStatement","src":"9046:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"9090:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2036,"nodeType":"IfStatement","src":"9086:96:12","trueBody":{"id":2035,"nodeType":"Block","src":"9107:75:12","statements":[{"expression":{"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"9125:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2030,"nodeType":"ExpressionStatement","src":"9125:12:12"},{"expression":{"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2031,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"9155:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2034,"nodeType":"ExpressionStatement","src":"9155:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"9199:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2051,"nodeType":"IfStatement","src":"9195:93:12","trueBody":{"id":2050,"nodeType":"Block","src":"9215:73:12","statements":[{"expression":{"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"9233:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2045,"nodeType":"ExpressionStatement","src":"9233:11:12"},{"expression":{"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2046,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"9262:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2049,"nodeType":"ExpressionStatement","src":"9262:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"9305:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2066,"nodeType":"IfStatement","src":"9301:93:12","trueBody":{"id":2065,"nodeType":"Block","src":"9321:73:12","statements":[{"expression":{"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"9339:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2060,"nodeType":"ExpressionStatement","src":"9339:11:12"},{"expression":{"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2061,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"9368:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2064,"nodeType":"ExpressionStatement","src":"9368:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"9411:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2081,"nodeType":"IfStatement","src":"9407:93:12","trueBody":{"id":2080,"nodeType":"Block","src":"9427:73:12","statements":[{"expression":{"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"9445:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2075,"nodeType":"ExpressionStatement","src":"9445:11:12"},{"expression":{"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2076,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"9474:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2079,"nodeType":"ExpressionStatement","src":"9474:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"9517:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2092,"nodeType":"IfStatement","src":"9513:64:12","trueBody":{"id":2091,"nodeType":"Block","src":"9533:44:12","statements":[{"expression":{"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2087,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"9551:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2090,"nodeType":"ExpressionStatement","src":"9551:11:12"}]}}]},{"expression":{"id":2094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"9603:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1972,"id":2095,"nodeType":"Return","src":"9596:13:12"}]},"documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"8515:113:12","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2097,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nodeType":"FunctionDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1968,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2097,"src":"8647:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:12"},"returnParameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2097,"src":"8685:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1970,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:12"},"scope":2425,"src":"8633:983:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2132,"nodeType":"Block","src":"9849:165:12","statements":[{"id":2131,"nodeType":"UncheckedBlock","src":"9859:149:12","statements":[{"assignments":[2109],"declarations":[{"constant":false,"id":2109,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2131,"src":"9883:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2108,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2113,"initialValue":{"arguments":[{"id":2111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"9905:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2110,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2097,2133],"referencedDeclaration":2097,"src":"9900:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9900:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2114,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"9932:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2115,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"9942:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2116,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"9954:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1566_$","typeString":"type(enum Math.Rounding)"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"9954:11:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"}},"src":"9942:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2120,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"9974:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"9983:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:12","trueExpression":{"hexValue":"31","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2107,"id":2130,"nodeType":"Return","src":"9925:72:12"}]}]},"documentation":{"id":2098,"nodeType":"StructuredDocumentation","src":"9622:142:12","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2133,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nodeType":"FunctionDefinition","parameters":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2133,"src":"9783:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2103,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":2133,"src":"9798:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"},"typeName":{"id":2102,"nodeType":"UserDefinedTypeName","pathNode":{"id":2101,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1566,"src":"9798:8:12"},"referencedDeclaration":1566,"src":"9798:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:12"},"returnParameters":{"id":2107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2106,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2133,"src":"9840:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2105,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:12"},"scope":2425,"src":"9769:245:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2261,"nodeType":"Block","src":"10201:854:12","statements":[{"assignments":[2142],"declarations":[{"constant":false,"id":2142,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2261,"src":"10211:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2141,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2144,"initialValue":{"hexValue":"30","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:12"},{"id":2258,"nodeType":"UncheckedBlock","src":"10239:787:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"10267:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2161,"nodeType":"IfStatement","src":"10263:103:12","trueBody":{"id":2160,"nodeType":"Block","src":"10286:80:12","statements":[{"expression":{"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"10304:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2155,"nodeType":"ExpressionStatement","src":"10304:17:12"},{"expression":{"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2156,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"10339:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2159,"nodeType":"ExpressionStatement","src":"10339:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"10383:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2178,"nodeType":"IfStatement","src":"10379:103:12","trueBody":{"id":2177,"nodeType":"Block","src":"10402:80:12","statements":[{"expression":{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"10420:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2172,"nodeType":"ExpressionStatement","src":"10420:17:12"},{"expression":{"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2173,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"10455:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2176,"nodeType":"ExpressionStatement","src":"10455:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"10499:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2195,"nodeType":"IfStatement","src":"10495:103:12","trueBody":{"id":2194,"nodeType":"Block","src":"10518:80:12","statements":[{"expression":{"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"10536:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2189,"nodeType":"ExpressionStatement","src":"10536:17:12"},{"expression":{"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2190,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"10571:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2193,"nodeType":"ExpressionStatement","src":"10571:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"10615:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2212,"nodeType":"IfStatement","src":"10611:100:12","trueBody":{"id":2211,"nodeType":"Block","src":"10633:78:12","statements":[{"expression":{"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"10651:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2206,"nodeType":"ExpressionStatement","src":"10651:16:12"},{"expression":{"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2207,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"10685:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2210,"nodeType":"ExpressionStatement","src":"10685:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"10728:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2229,"nodeType":"IfStatement","src":"10724:100:12","trueBody":{"id":2228,"nodeType":"Block","src":"10746:78:12","statements":[{"expression":{"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"10764:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2223,"nodeType":"ExpressionStatement","src":"10764:16:12"},{"expression":{"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2224,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"10798:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2227,"nodeType":"ExpressionStatement","src":"10798:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"10841:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2246,"nodeType":"IfStatement","src":"10837:100:12","trueBody":{"id":2245,"nodeType":"Block","src":"10859:78:12","statements":[{"expression":{"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"10877:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2240,"nodeType":"ExpressionStatement","src":"10877:16:12"},{"expression":{"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"10911:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2244,"nodeType":"ExpressionStatement","src":"10911:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"10954:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2257,"nodeType":"IfStatement","src":"10950:66:12","trueBody":{"id":2256,"nodeType":"Block","src":"10972:44:12","statements":[{"expression":{"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2252,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"10990:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2255,"nodeType":"ExpressionStatement","src":"10990:11:12"}]}}]},{"expression":{"id":2259,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"11042:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2140,"id":2260,"nodeType":"Return","src":"11035:13:12"}]},"documentation":{"id":2134,"nodeType":"StructuredDocumentation","src":"10020:114:12","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2262,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nodeType":"FunctionDefinition","parameters":{"id":2137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2136,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2262,"src":"10154:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2135,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:12"},"returnParameters":{"id":2140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2262,"src":"10192:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2138,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:12"},"scope":2425,"src":"10139:916:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2297,"nodeType":"Block","src":"11290:167:12","statements":[{"id":2296,"nodeType":"UncheckedBlock","src":"11300:151:12","statements":[{"assignments":[2274],"declarations":[{"constant":false,"id":2274,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2296,"src":"11324:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2278,"initialValue":{"arguments":[{"id":2276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"11347:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2275,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2262,2298],"referencedDeclaration":2262,"src":"11341:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11341:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2279,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"11374:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2280,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"11384:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2281,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"11396:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1566_$","typeString":"type(enum Math.Rounding)"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"11396:11:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"}},"src":"11384:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"11417:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"11426:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:12","trueExpression":{"hexValue":"31","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2272,"id":2295,"nodeType":"Return","src":"11367:73:12"}]}]},"documentation":{"id":2263,"nodeType":"StructuredDocumentation","src":"11061:143:12","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2298,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nodeType":"FunctionDefinition","parameters":{"id":2269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2298,"src":"11224:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2264,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2268,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":2298,"src":"11239:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"},"typeName":{"id":2267,"nodeType":"UserDefinedTypeName","pathNode":{"id":2266,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1566,"src":"11239:8:12"},"referencedDeclaration":1566,"src":"11239:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:12"},"returnParameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2298,"src":"11281:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:12"},"scope":2425,"src":"11209:248:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2384,"nodeType":"Block","src":"11771:600:12","statements":[{"assignments":[2307],"declarations":[{"constant":false,"id":2307,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2384,"src":"11781:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2306,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2309,"initialValue":{"hexValue":"30","id":2308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:12"},{"id":2381,"nodeType":"UncheckedBlock","src":"11809:533:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"11837:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2324,"nodeType":"IfStatement","src":"11833:98:12","trueBody":{"id":2323,"nodeType":"Block","src":"11855:76:12","statements":[{"expression":{"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"11873:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2318,"nodeType":"ExpressionStatement","src":"11873:13:12"},{"expression":{"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2319,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"11904:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2322,"nodeType":"ExpressionStatement","src":"11904:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"11948:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2339,"nodeType":"IfStatement","src":"11944:95:12","trueBody":{"id":2338,"nodeType":"Block","src":"11965:74:12","statements":[{"expression":{"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"11983:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2333,"nodeType":"ExpressionStatement","src":"11983:12:12"},{"expression":{"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2334,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"12013:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2337,"nodeType":"ExpressionStatement","src":"12013:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"12056:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2354,"nodeType":"IfStatement","src":"12052:95:12","trueBody":{"id":2353,"nodeType":"Block","src":"12073:74:12","statements":[{"expression":{"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"12091:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2348,"nodeType":"ExpressionStatement","src":"12091:12:12"},{"expression":{"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2349,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"12121:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2352,"nodeType":"ExpressionStatement","src":"12121:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"12164:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2369,"nodeType":"IfStatement","src":"12160:95:12","trueBody":{"id":2368,"nodeType":"Block","src":"12181:74:12","statements":[{"expression":{"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"12199:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2363,"nodeType":"ExpressionStatement","src":"12199:12:12"},{"expression":{"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2364,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"12229:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2367,"nodeType":"ExpressionStatement","src":"12229:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"12272:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2380,"nodeType":"IfStatement","src":"12268:64:12","trueBody":{"id":2379,"nodeType":"Block","src":"12288:44:12","statements":[{"expression":{"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2375,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"12306:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2378,"nodeType":"ExpressionStatement","src":"12306:11:12"}]}}]},{"expression":{"id":2382,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"12358:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2305,"id":2383,"nodeType":"Return","src":"12351:13:12"}]},"documentation":{"id":2299,"nodeType":"StructuredDocumentation","src":"11463:240:12","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2385,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nodeType":"FunctionDefinition","parameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2301,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2385,"src":"11724:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2300,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:12"},"returnParameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2385,"src":"11762:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:12"},"scope":2425,"src":"11708:663:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2423,"nodeType":"Block","src":"12608:174:12","statements":[{"id":2422,"nodeType":"UncheckedBlock","src":"12618:158:12","statements":[{"assignments":[2397],"declarations":[{"constant":false,"id":2397,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2422,"src":"12642:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2401,"initialValue":{"arguments":[{"id":2399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"12666:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2398,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2385,2424],"referencedDeclaration":2385,"src":"12659:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12659:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2402,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"12693:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2403,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"12703:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2404,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"12715:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1566_$","typeString":"type(enum Math.Rounding)"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"12715:11:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"}},"src":"12703:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2408,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"12736:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"12751:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:12","trueExpression":{"hexValue":"31","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2395,"id":2421,"nodeType":"Return","src":"12686:79:12"}]}]},"documentation":{"id":2386,"nodeType":"StructuredDocumentation","src":"12377:144:12","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2424,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nodeType":"FunctionDefinition","parameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2424,"src":"12542:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2391,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":2424,"src":"12557:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"},"typeName":{"id":2390,"nodeType":"UserDefinedTypeName","pathNode":{"id":2389,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1566,"src":"12557:8:12"},"referencedDeclaration":1566,"src":"12557:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1566","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:12"},"returnParameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2424,"src":"12599:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:12"},"scope":2425,"src":"12526:256:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2426,"src":"202:12582:12"}],"src":"103:12682:12"},"id":12},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[2530]},"id":2531,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2427,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:13"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2428,"nodeType":"StructuredDocumentation","src":"134:80:13","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2530,"linearizedBaseContracts":[2530],"name":"SignedMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":2445,"nodeType":"Block","src":"375:37:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2438,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"392:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2439,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"396:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"404:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:13","trueExpression":{"id":2441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"400:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2437,"id":2444,"nodeType":"Return","src":"385:20:13"}]},"documentation":{"id":2429,"nodeType":"StructuredDocumentation","src":"240:66:13","text":" @dev Returns the largest of two signed numbers."},"id":2446,"implemented":true,"kind":"function","modifiers":[],"name":"max","nodeType":"FunctionDefinition","parameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2446,"src":"324:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2430,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2446,"src":"334:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2432,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:13"},"returnParameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2446,"src":"367:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2435,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:13"},"scope":2530,"src":"311:101:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2463,"nodeType":"Block","src":"554:37:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2456,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"571:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2457,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"575:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2460,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"583:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:13","trueExpression":{"id":2459,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"579:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2455,"id":2462,"nodeType":"Return","src":"564:20:13"}]},"documentation":{"id":2447,"nodeType":"StructuredDocumentation","src":"418:67:13","text":" @dev Returns the smallest of two signed numbers."},"id":2464,"implemented":true,"kind":"function","modifiers":[],"name":"min","nodeType":"FunctionDefinition","parameters":{"id":2452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2449,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2464,"src":"503:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2448,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2451,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2464,"src":"513:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2450,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:13"},"returnParameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2464,"src":"546:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2453,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:13"},"scope":2530,"src":"490:101:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2507,"nodeType":"Block","src":"796:162:13","statements":[{"assignments":[2475],"declarations":[{"constant":false,"id":2475,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2507,"src":"858:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2474,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2488,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2476,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"870:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2477,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"874:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2479,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2480,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"881:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2481,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"885:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2483,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:13"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2489,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"910:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2494,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"930:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2492,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:13","typeDescriptions":{}}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"922:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2490,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:13","typeDescriptions":{}}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"915:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2499,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"944:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2500,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"948:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2502,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2473,"id":2506,"nodeType":"Return","src":"903:48:13"}]},"documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"597:126:13","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":2508,"implemented":true,"kind":"function","modifiers":[],"name":"average","nodeType":"FunctionDefinition","parameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2508,"src":"745:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2466,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2508,"src":"755:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2468,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:13"},"returnParameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2508,"src":"788:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2471,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:13"},"scope":2530,"src":"728:230:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2528,"nodeType":"Block","src":"1102:158:13","statements":[{"id":2527,"nodeType":"UncheckedBlock","src":"1112:142:13","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2518,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"1227:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:13","subExpression":{"id":2522,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"1241:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:13","trueExpression":{"id":2521,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"1236:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2516,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:13","typeDescriptions":{}}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1219:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2515,"id":2526,"nodeType":"Return","src":"1212:31:13"}]}]},"documentation":{"id":2509,"nodeType":"StructuredDocumentation","src":"964:78:13","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2529,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nodeType":"FunctionDefinition","parameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2511,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":2529,"src":"1060:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2510,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:13"},"returnParameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2514,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2529,"src":"1093:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:13"},"scope":2530,"src":"1047:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2531,"src":"215:1047:13"}],"src":"109:1154:13"},"id":13},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[3143]},"id":3144,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2532,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:14"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2533,"nodeType":"StructuredDocumentation","src":"230:1098:14","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":3143,"linearizedBaseContracts":[3143],"name":"EnumerableSet","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":2541,"members":[{"constant":false,"id":2536,"mutability":"mutable","name":"_values","nodeType":"VariableDeclaration","scope":2541,"src":"1851:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1851:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2535,"nodeType":"ArrayTypeName","src":"1851:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2540,"mutability":"mutable","name":"_indexes","nodeType":"VariableDeclaration","scope":2541,"src":"2001:36:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":2539,"keyType":{"id":2537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2009:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2001:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":2538,"name":"uint256","nodeType":"ElementaryTypeName","src":"2020:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nodeType":"StructDefinition","scope":3143,"src":"1797:247:14","visibility":"public"},{"body":{"id":2582,"nodeType":"Block","src":"2283:335:14","statements":[{"condition":{"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2297:22:14","subExpression":{"arguments":[{"id":2553,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"2308:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":2554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"2313:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2552,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"2298:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2298:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2580,"nodeType":"Block","src":"2575:37:14","statements":[{"expression":{"hexValue":"66616c7365","id":2578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2596:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2551,"id":2579,"nodeType":"Return","src":"2589:12:14"}]},"id":2581,"nodeType":"IfStatement","src":"2293:319:14","trueBody":{"id":2577,"nodeType":"Block","src":"2321:248:14","statements":[{"expression":{"arguments":[{"id":2562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"2352:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2557,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"2335:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2560,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2536,"src":"2335:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2335:16:14","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2564,"nodeType":"ExpressionStatement","src":"2335:23:14"},{"expression":{"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2565,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"2493:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2540,"src":"2493:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2569,"indexExpression":{"id":2567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"2506:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2493:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":2570,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"2515:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2536,"src":"2515:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2515:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2493:40:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2574,"nodeType":"ExpressionStatement","src":"2493:40:14"},{"expression":{"hexValue":"74727565","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2554:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2551,"id":2576,"nodeType":"Return","src":"2547:11:14"}]}}]},"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"2050:159:14","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2583,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nodeType":"FunctionDefinition","parameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":2583,"src":"2228:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2544,"nodeType":"UserDefinedTypeName","pathNode":{"id":2543,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2541,"src":"2228:3:14"},"referencedDeclaration":2541,"src":"2228:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2547,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2583,"src":"2245:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2245:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2227:32:14"},"returnParameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2583,"src":"2277:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2549,"name":"bool","nodeType":"ElementaryTypeName","src":"2277:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2276:6:14"},"scope":3143,"src":"2214:404:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2666,"nodeType":"Block","src":"2858:1316:14","statements":[{"assignments":[2595],"declarations":[{"constant":false,"id":2595,"mutability":"mutable","name":"valueIndex","nodeType":"VariableDeclaration","scope":2666,"src":"2968:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2600,"initialValue":{"baseExpression":{"expression":{"id":2596,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"2989:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2540,"src":"2989:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2599,"indexExpression":{"id":2598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"3002:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2968:40:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2601,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"3023:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3023:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2664,"nodeType":"Block","src":"4131:37:14","statements":[{"expression":{"hexValue":"66616c7365","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4152:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2593,"id":2663,"nodeType":"Return","src":"4145:12:14"}]},"id":2665,"nodeType":"IfStatement","src":"3019:1149:14","trueBody":{"id":2661,"nodeType":"Block","src":"3040:1085:14","statements":[{"assignments":[2605],"declarations":[{"constant":false,"id":2605,"mutability":"mutable","name":"toDeleteIndex","nodeType":"VariableDeclaration","scope":2661,"src":"3392:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"3392:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2609,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2606,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"3416:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3429:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3416:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3392:38:14"},{"assignments":[2611],"declarations":[{"constant":false,"id":2611,"mutability":"mutable","name":"lastIndex","nodeType":"VariableDeclaration","scope":2661,"src":"3444:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2617,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2612,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"3464:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2536,"src":"3464:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3464:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3485:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3464:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3444:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2618,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"3505:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2619,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"3518:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3505:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2645,"nodeType":"IfStatement","src":"3501:398:14","trueBody":{"id":2644,"nodeType":"Block","src":"3533:366:14","statements":[{"assignments":[2622],"declarations":[{"constant":false,"id":2622,"mutability":"mutable","name":"lastValue","nodeType":"VariableDeclaration","scope":2644,"src":"3551:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3551:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2627,"initialValue":{"baseExpression":{"expression":{"id":2623,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"3571:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2536,"src":"3571:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2626,"indexExpression":{"id":2625,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"3583:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3571:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3551:42:14"},{"expression":{"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2628,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"3693:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2536,"src":"3693:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2632,"indexExpression":{"id":2630,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"3705:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3693:26:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2633,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"3722:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3693:38:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2635,"nodeType":"ExpressionStatement","src":"3693:38:14"},{"expression":{"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2636,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"3805:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2540,"src":"3805:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2640,"indexExpression":{"id":2638,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"3818:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3805:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2641,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"3831:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3805:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2643,"nodeType":"ExpressionStatement","src":"3805:36:14"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2646,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"3977:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2536,"src":"3977:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3977:15:14","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3977:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2652,"nodeType":"ExpressionStatement","src":"3977:17:14"},{"expression":{"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4062:26:14","subExpression":{"baseExpression":{"expression":{"id":2653,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"4069:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2654,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2540,"src":"4069:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2656,"indexExpression":{"id":2655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"4082:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4069:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2658,"nodeType":"ExpressionStatement","src":"4062:26:14"},{"expression":{"hexValue":"74727565","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4110:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2593,"id":2660,"nodeType":"Return","src":"4103:11:14"}]}}]},"documentation":{"id":2584,"nodeType":"StructuredDocumentation","src":"2624:157:14","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2667,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nodeType":"FunctionDefinition","parameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":2667,"src":"2803:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2586,"nodeType":"UserDefinedTypeName","pathNode":{"id":2585,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2541,"src":"2803:3:14"},"referencedDeclaration":2541,"src":"2803:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2667,"src":"2820:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2820:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2802:32:14"},"returnParameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2592,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2667,"src":"2852:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2591,"name":"bool","nodeType":"ElementaryTypeName","src":"2852:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2851:6:14"},"scope":3143,"src":"2786:1388:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2685,"nodeType":"Block","src":"4334:48:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2678,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"4351:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2540,"src":"4351:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2681,"indexExpression":{"id":2680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"4364:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4351:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4351:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2677,"id":2684,"nodeType":"Return","src":"4344:31:14"}]},"documentation":{"id":2668,"nodeType":"StructuredDocumentation","src":"4180:70:14","text":" @dev Returns true if the value is in the set. O(1)."},"id":2686,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nodeType":"FunctionDefinition","parameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":2686,"src":"4274:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2670,"nodeType":"UserDefinedTypeName","pathNode":{"id":2669,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2541,"src":"4274:3:14"},"referencedDeclaration":2541,"src":"4274:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2686,"src":"4291:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4273:32:14"},"returnParameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2686,"src":"4328:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2675,"name":"bool","nodeType":"ElementaryTypeName","src":"4328:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4327:6:14"},"scope":3143,"src":"4255:127:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2699,"nodeType":"Block","src":"4528:42:14","statements":[{"expression":{"expression":{"expression":{"id":2695,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"4545:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2536,"src":"4545:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4545:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2694,"id":2698,"nodeType":"Return","src":"4538:25:14"}]},"documentation":{"id":2687,"nodeType":"StructuredDocumentation","src":"4388:70:14","text":" @dev Returns the number of values on the set. O(1)."},"id":2700,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nodeType":"FunctionDefinition","parameters":{"id":2691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":2700,"src":"4480:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2689,"nodeType":"UserDefinedTypeName","pathNode":{"id":2688,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2541,"src":"4480:3:14"},"referencedDeclaration":2541,"src":"4480:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4479:17:14"},"returnParameters":{"id":2694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2693,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2700,"src":"4519:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2692,"name":"uint256","nodeType":"ElementaryTypeName","src":"4519:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4518:9:14"},"scope":3143,"src":"4463:107:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2716,"nodeType":"Block","src":"4988:42:14","statements":[{"expression":{"baseExpression":{"expression":{"id":2711,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"5005:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2536,"src":"5005:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2714,"indexExpression":{"id":2713,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"5017:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5005:18:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2710,"id":2715,"nodeType":"Return","src":"4998:25:14"}]},"documentation":{"id":2701,"nodeType":"StructuredDocumentation","src":"4576:331:14","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2717,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nodeType":"FunctionDefinition","parameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":2717,"src":"4925:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2703,"nodeType":"UserDefinedTypeName","pathNode":{"id":2702,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2541,"src":"4925:3:14"},"referencedDeclaration":2541,"src":"4925:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":2717,"src":"4942:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2705,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4924:32:14"},"returnParameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2717,"src":"4979:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4979:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4978:9:14"},"scope":3143,"src":"4912:118:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2730,"nodeType":"Block","src":"5644:35:14","statements":[{"expression":{"expression":{"id":2727,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"5661:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2536,"src":"5661:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":2726,"id":2729,"nodeType":"Return","src":"5654:18:14"}]},"documentation":{"id":2718,"nodeType":"StructuredDocumentation","src":"5036:529:14","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2731,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nodeType":"FunctionDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":2731,"src":"5587:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2720,"nodeType":"UserDefinedTypeName","pathNode":{"id":2719,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2541,"src":"5587:3:14"},"referencedDeclaration":2541,"src":"5587:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5586:17:14"},"returnParameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2731,"src":"5626:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5626:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2724,"nodeType":"ArrayTypeName","src":"5626:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5625:18:14"},"scope":3143,"src":"5570:109:14","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":2735,"members":[{"constant":false,"id":2734,"mutability":"mutable","name":"_inner","nodeType":"VariableDeclaration","scope":2735,"src":"5732:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2733,"nodeType":"UserDefinedTypeName","pathNode":{"id":2732,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2541,"src":"5732:3:14"},"referencedDeclaration":2541,"src":"5732:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nodeType":"StructDefinition","scope":3143,"src":"5704:45:14","visibility":"public"},{"body":{"id":2752,"nodeType":"Block","src":"5995:47:14","statements":[{"expression":{"arguments":[{"expression":{"id":2747,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"6017:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2748,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2734,"src":"6017:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"6029:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2746,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"6012:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6012:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2745,"id":2751,"nodeType":"Return","src":"6005:30:14"}]},"documentation":{"id":2736,"nodeType":"StructuredDocumentation","src":"5755:159:14","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2753,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":2753,"src":"5932:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2738,"nodeType":"UserDefinedTypeName","pathNode":{"id":2737,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"5932:10:14"},"referencedDeclaration":2735,"src":"5932:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2741,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2753,"src":"5956:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5956:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5931:39:14"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2753,"src":"5989:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2743,"name":"bool","nodeType":"ElementaryTypeName","src":"5989:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5988:6:14"},"scope":3143,"src":"5919:123:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2770,"nodeType":"Block","src":"6289:50:14","statements":[{"expression":{"arguments":[{"expression":{"id":2765,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"6314:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2734,"src":"6314:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"6326:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2764,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"6306:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6306:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2763,"id":2769,"nodeType":"Return","src":"6299:33:14"}]},"documentation":{"id":2754,"nodeType":"StructuredDocumentation","src":"6048:157:14","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2771,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nodeType":"FunctionDefinition","parameters":{"id":2760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2757,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":2771,"src":"6226:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2756,"nodeType":"UserDefinedTypeName","pathNode":{"id":2755,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"6226:10:14"},"referencedDeclaration":2735,"src":"6226:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2771,"src":"6250:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6225:39:14"},"returnParameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2771,"src":"6283:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2761,"name":"bool","nodeType":"ElementaryTypeName","src":"6283:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6282:6:14"},"scope":3143,"src":"6210:129:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2788,"nodeType":"Block","src":"6506:52:14","statements":[{"expression":{"arguments":[{"expression":{"id":2783,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"6533:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2734,"src":"6533:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"6545:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2782,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"6523:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6523:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2781,"id":2787,"nodeType":"Return","src":"6516:35:14"}]},"documentation":{"id":2772,"nodeType":"StructuredDocumentation","src":"6345:70:14","text":" @dev Returns true if the value is in the set. O(1)."},"id":2789,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nodeType":"FunctionDefinition","parameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2775,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":2789,"src":"6438:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2774,"nodeType":"UserDefinedTypeName","pathNode":{"id":2773,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"6438:10:14"},"referencedDeclaration":2735,"src":"6438:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2777,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2789,"src":"6462:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6462:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6437:39:14"},"returnParameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2780,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2789,"src":"6500:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2779,"name":"bool","nodeType":"ElementaryTypeName","src":"6500:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6499:6:14"},"scope":3143,"src":"6420:138:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2803,"nodeType":"Block","src":"6711:43:14","statements":[{"expression":{"arguments":[{"expression":{"id":2799,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"6736:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2734,"src":"6736:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2798,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"6728:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2541_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6728:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2797,"id":2802,"nodeType":"Return","src":"6721:26:14"}]},"documentation":{"id":2790,"nodeType":"StructuredDocumentation","src":"6564:70:14","text":" @dev Returns the number of values in the set. O(1)."},"id":2804,"implemented":true,"kind":"function","modifiers":[],"name":"length","nodeType":"FunctionDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":2804,"src":"6655:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2792,"nodeType":"UserDefinedTypeName","pathNode":{"id":2791,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"6655:10:14"},"referencedDeclaration":2735,"src":"6655:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6654:24:14"},"returnParameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2804,"src":"6702:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"6702:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6701:9:14"},"scope":3143,"src":"6639:115:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2821,"nodeType":"Block","src":"7179:46:14","statements":[{"expression":{"arguments":[{"expression":{"id":2816,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"7200:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2734,"src":"7200:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2818,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"7212:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2815,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"7196:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2541_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7196:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2814,"id":2820,"nodeType":"Return","src":"7189:29:14"}]},"documentation":{"id":2805,"nodeType":"StructuredDocumentation","src":"6760:331:14","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2822,"implemented":true,"kind":"function","modifiers":[],"name":"at","nodeType":"FunctionDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":2822,"src":"7108:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2807,"nodeType":"UserDefinedTypeName","pathNode":{"id":2806,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"7108:10:14"},"referencedDeclaration":2735,"src":"7108:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2810,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":2822,"src":"7132:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:39:14"},"returnParameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2822,"src":"7170:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7170:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7169:9:14"},"scope":3143,"src":"7096:129:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2851,"nodeType":"Block","src":"7846:219:14","statements":[{"assignments":[2836],"declarations":[{"constant":false,"id":2836,"mutability":"mutable","name":"store","nodeType":"VariableDeclaration","scope":2851,"src":"7856:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7856:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2835,"nodeType":"ArrayTypeName","src":"7856:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2841,"initialValue":{"arguments":[{"expression":{"id":2838,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"7889:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2734,"src":"7889:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2837,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"7881:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2541_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7881:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7856:44:14"},{"assignments":[2846],"declarations":[{"constant":false,"id":2846,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2851,"src":"7910:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7910:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2845,"nodeType":"ArrayTypeName","src":"7910:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2847,"nodeType":"VariableDeclarationStatement","src":"7910:23:14"},{"AST":{"nodeType":"YulBlock","src":"7996:39:14","statements":[{"nodeType":"YulAssignment","src":"8010:15:14","value":{"name":"store","nodeType":"YulIdentifier","src":"8020:5:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8010:6:14"}]}]},"evmVersion":"constantinople","externalReferences":[{"declaration":2846,"isOffset":false,"isSlot":false,"src":"8010:6:14","valueSize":1},{"declaration":2836,"isOffset":false,"isSlot":false,"src":"8020:5:14","valueSize":1}],"id":2848,"nodeType":"InlineAssembly","src":"7987:48:14"},{"expression":{"id":2849,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"8052:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2831,"id":2850,"nodeType":"Return","src":"8045:13:14"}]},"documentation":{"id":2823,"nodeType":"StructuredDocumentation","src":"7231:529:14","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2852,"implemented":true,"kind":"function","modifiers":[],"name":"values","nodeType":"FunctionDefinition","parameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2826,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":2852,"src":"7781:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2825,"nodeType":"UserDefinedTypeName","pathNode":{"id":2824,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"7781:10:14"},"referencedDeclaration":2735,"src":"7781:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7780:24:14"},"returnParameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2852,"src":"7828:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2828,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7828:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2829,"nodeType":"ArrayTypeName","src":"7828:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7827:18:14"},"scope":3143,"src":"7765:300:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":2856,"members":[{"constant":false,"id":2855,"mutability":"mutable","name":"_inner","nodeType":"VariableDeclaration","scope":2856,"src":"8118:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2854,"nodeType":"UserDefinedTypeName","pathNode":{"id":2853,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2541,"src":"8118:3:14"},"referencedDeclaration":2541,"src":"8118:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nodeType":"StructDefinition","scope":3143,"src":"8090:45:14","visibility":"public"},{"body":{"id":2882,"nodeType":"Block","src":"8381:74:14","statements":[{"expression":{"arguments":[{"expression":{"id":2868,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"8403:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2855,"src":"8403:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"8439:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8431:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2874,"name":"uint160","nodeType":"ElementaryTypeName","src":"8431:7:14","typeDescriptions":{}}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8431:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"8423:7:14","typeDescriptions":{}}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8423:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8415:7:14","typeDescriptions":{}}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8415:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2867,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"8398:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8398:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2866,"id":2881,"nodeType":"Return","src":"8391:57:14"}]},"documentation":{"id":2857,"nodeType":"StructuredDocumentation","src":"8141:159:14","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2883,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2860,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":2883,"src":"8318:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2859,"nodeType":"UserDefinedTypeName","pathNode":{"id":2858,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"8318:10:14"},"referencedDeclaration":2856,"src":"8318:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2862,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2883,"src":"8342:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2861,"name":"address","nodeType":"ElementaryTypeName","src":"8342:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8317:39:14"},"returnParameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2865,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2883,"src":"8375:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2864,"name":"bool","nodeType":"ElementaryTypeName","src":"8375:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8374:6:14"},"scope":3143,"src":"8305:150:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2909,"nodeType":"Block","src":"8702:77:14","statements":[{"expression":{"arguments":[{"expression":{"id":2895,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"8727:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2855,"src":"8727:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"8763:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8755:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2901,"name":"uint160","nodeType":"ElementaryTypeName","src":"8755:7:14","typeDescriptions":{}}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8755:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"8747:7:14","typeDescriptions":{}}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8747:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8739:7:14","typeDescriptions":{}}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8739:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2894,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"8719:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8719:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2893,"id":2908,"nodeType":"Return","src":"8712:60:14"}]},"documentation":{"id":2884,"nodeType":"StructuredDocumentation","src":"8461:157:14","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2910,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":2910,"src":"8639:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2886,"nodeType":"UserDefinedTypeName","pathNode":{"id":2885,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"8639:10:14"},"referencedDeclaration":2856,"src":"8639:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2889,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2910,"src":"8663:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2888,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8638:39:14"},"returnParameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2892,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2910,"src":"8696:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2891,"name":"bool","nodeType":"ElementaryTypeName","src":"8696:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8695:6:14"},"scope":3143,"src":"8623:156:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2936,"nodeType":"Block","src":"8946:79:14","statements":[{"expression":{"arguments":[{"expression":{"id":2922,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"8973:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2855,"src":"8973:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"9009:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2928,"name":"uint160","nodeType":"ElementaryTypeName","src":"9001:7:14","typeDescriptions":{}}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9001:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2926,"name":"uint256","nodeType":"ElementaryTypeName","src":"8993:7:14","typeDescriptions":{}}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8993:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8985:7:14","typeDescriptions":{}}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8985:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2921,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"8963:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8963:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2920,"id":2935,"nodeType":"Return","src":"8956:62:14"}]},"documentation":{"id":2911,"nodeType":"StructuredDocumentation","src":"8785:70:14","text":" @dev Returns true if the value is in the set. O(1)."},"id":2937,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nodeType":"FunctionDefinition","parameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2914,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":2937,"src":"8878:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2913,"nodeType":"UserDefinedTypeName","pathNode":{"id":2912,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"8878:10:14"},"referencedDeclaration":2856,"src":"8878:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2916,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2937,"src":"8902:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2915,"name":"address","nodeType":"ElementaryTypeName","src":"8902:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:39:14"},"returnParameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2937,"src":"8940:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2918,"name":"bool","nodeType":"ElementaryTypeName","src":"8940:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8939:6:14"},"scope":3143,"src":"8860:165:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2951,"nodeType":"Block","src":"9178:43:14","statements":[{"expression":{"arguments":[{"expression":{"id":2947,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"9203:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2855,"src":"9203:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2946,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"9195:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2541_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9195:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2945,"id":2950,"nodeType":"Return","src":"9188:26:14"}]},"documentation":{"id":2938,"nodeType":"StructuredDocumentation","src":"9031:70:14","text":" @dev Returns the number of values in the set. O(1)."},"id":2952,"implemented":true,"kind":"function","modifiers":[],"name":"length","nodeType":"FunctionDefinition","parameters":{"id":2942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2941,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":2952,"src":"9122:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2940,"nodeType":"UserDefinedTypeName","pathNode":{"id":2939,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"9122:10:14"},"referencedDeclaration":2856,"src":"9122:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9121:24:14"},"returnParameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2944,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2952,"src":"9169:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2943,"name":"uint256","nodeType":"ElementaryTypeName","src":"9169:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9168:9:14"},"scope":3143,"src":"9106:115:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2978,"nodeType":"Block","src":"9646:73:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2970,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"9691:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2855,"src":"9691:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2972,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"9703:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2969,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"9687:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2541_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9687:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9679:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:14","typeDescriptions":{}}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9679:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2965,"name":"uint160","nodeType":"ElementaryTypeName","src":"9671:7:14","typeDescriptions":{}}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9671:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2963,"name":"address","nodeType":"ElementaryTypeName","src":"9663:7:14","typeDescriptions":{}}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9663:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2962,"id":2977,"nodeType":"Return","src":"9656:56:14"}]},"documentation":{"id":2953,"nodeType":"StructuredDocumentation","src":"9227:331:14","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2979,"implemented":true,"kind":"function","modifiers":[],"name":"at","nodeType":"FunctionDefinition","parameters":{"id":2959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2956,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":2979,"src":"9575:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2955,"nodeType":"UserDefinedTypeName","pathNode":{"id":2954,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"9575:10:14"},"referencedDeclaration":2856,"src":"9575:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2958,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":2979,"src":"9599:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"9599:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9574:39:14"},"returnParameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2961,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2979,"src":"9637:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2960,"name":"address","nodeType":"ElementaryTypeName","src":"9637:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9636:9:14"},"scope":3143,"src":"9563:156:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3008,"nodeType":"Block","src":"10340:219:14","statements":[{"assignments":[2993],"declarations":[{"constant":false,"id":2993,"mutability":"mutable","name":"store","nodeType":"VariableDeclaration","scope":3008,"src":"10350:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10350:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2992,"nodeType":"ArrayTypeName","src":"10350:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2998,"initialValue":{"arguments":[{"expression":{"id":2995,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"10383:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2855,"src":"10383:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2994,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"10375:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2541_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10375:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10350:44:14"},{"assignments":[3003],"declarations":[{"constant":false,"id":3003,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3008,"src":"10404:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3001,"name":"address","nodeType":"ElementaryTypeName","src":"10404:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3002,"nodeType":"ArrayTypeName","src":"10404:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3004,"nodeType":"VariableDeclarationStatement","src":"10404:23:14"},{"AST":{"nodeType":"YulBlock","src":"10490:39:14","statements":[{"nodeType":"YulAssignment","src":"10504:15:14","value":{"name":"store","nodeType":"YulIdentifier","src":"10514:5:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10504:6:14"}]}]},"evmVersion":"constantinople","externalReferences":[{"declaration":3003,"isOffset":false,"isSlot":false,"src":"10504:6:14","valueSize":1},{"declaration":2993,"isOffset":false,"isSlot":false,"src":"10514:5:14","valueSize":1}],"id":3005,"nodeType":"InlineAssembly","src":"10481:48:14"},{"expression":{"id":3006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"10546:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2988,"id":3007,"nodeType":"Return","src":"10539:13:14"}]},"documentation":{"id":2980,"nodeType":"StructuredDocumentation","src":"9725:529:14","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3009,"implemented":true,"kind":"function","modifiers":[],"name":"values","nodeType":"FunctionDefinition","parameters":{"id":2984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2983,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":3009,"src":"10275:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2982,"nodeType":"UserDefinedTypeName","pathNode":{"id":2981,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"10275:10:14"},"referencedDeclaration":2856,"src":"10275:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2856_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10274:24:14"},"returnParameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3009,"src":"10322:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2985,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2986,"nodeType":"ArrayTypeName","src":"10322:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10321:18:14"},"scope":3143,"src":"10259:300:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":3013,"members":[{"constant":false,"id":3012,"mutability":"mutable","name":"_inner","nodeType":"VariableDeclaration","scope":3013,"src":"10606:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3011,"nodeType":"UserDefinedTypeName","pathNode":{"id":3010,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2541,"src":"10606:3:14"},"referencedDeclaration":2541,"src":"10606:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nodeType":"StructDefinition","scope":3143,"src":"10581:42:14","visibility":"public"},{"body":{"id":3033,"nodeType":"Block","src":"10866:56:14","statements":[{"expression":{"arguments":[{"expression":{"id":3025,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"10888:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3012,"src":"10888:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"10908:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10900:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10900:7:14","typeDescriptions":{}}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10900:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3024,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"10883:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10883:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3023,"id":3032,"nodeType":"Return","src":"10876:39:14"}]},"documentation":{"id":3014,"nodeType":"StructuredDocumentation","src":"10629:159:14","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3034,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":3020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":3034,"src":"10806:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3016,"nodeType":"UserDefinedTypeName","pathNode":{"id":3015,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":3013,"src":"10806:7:14"},"referencedDeclaration":3013,"src":"10806:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3034,"src":"10827:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10805:36:14"},"returnParameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3034,"src":"10860:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3021,"name":"bool","nodeType":"ElementaryTypeName","src":"10860:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10859:6:14"},"scope":3143,"src":"10793:129:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3054,"nodeType":"Block","src":"11166:59:14","statements":[{"expression":{"arguments":[{"expression":{"id":3046,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"11191:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3012,"src":"11191:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"11211:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11203:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11203:7:14","typeDescriptions":{}}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11203:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3045,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"11183:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11183:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3044,"id":3053,"nodeType":"Return","src":"11176:42:14"}]},"documentation":{"id":3035,"nodeType":"StructuredDocumentation","src":"10928:157:14","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3055,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nodeType":"FunctionDefinition","parameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3038,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":3055,"src":"11106:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3037,"nodeType":"UserDefinedTypeName","pathNode":{"id":3036,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":3013,"src":"11106:7:14"},"referencedDeclaration":3013,"src":"11106:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3040,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3055,"src":"11127:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"11127:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11105:36:14"},"returnParameters":{"id":3044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3043,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3055,"src":"11160:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3042,"name":"bool","nodeType":"ElementaryTypeName","src":"11160:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11159:6:14"},"scope":3143,"src":"11090:135:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3075,"nodeType":"Block","src":"11389:61:14","statements":[{"expression":{"arguments":[{"expression":{"id":3067,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"11416:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3012,"src":"11416:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"11436:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11428:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11428:7:14","typeDescriptions":{}}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11428:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3066,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"11406:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11406:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3065,"id":3074,"nodeType":"Return","src":"11399:44:14"}]},"documentation":{"id":3056,"nodeType":"StructuredDocumentation","src":"11231:70:14","text":" @dev Returns true if the value is in the set. O(1)."},"id":3076,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nodeType":"FunctionDefinition","parameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3059,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":3076,"src":"11324:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3058,"nodeType":"UserDefinedTypeName","pathNode":{"id":3057,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":3013,"src":"11324:7:14"},"referencedDeclaration":3013,"src":"11324:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3061,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3076,"src":"11345:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11323:36:14"},"returnParameters":{"id":3065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3064,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3076,"src":"11383:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3063,"name":"bool","nodeType":"ElementaryTypeName","src":"11383:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11382:6:14"},"scope":3143,"src":"11306:144:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3090,"nodeType":"Block","src":"11600:43:14","statements":[{"expression":{"arguments":[{"expression":{"id":3086,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"11625:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3012,"src":"11625:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3085,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"11617:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2541_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11617:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3084,"id":3089,"nodeType":"Return","src":"11610:26:14"}]},"documentation":{"id":3077,"nodeType":"StructuredDocumentation","src":"11456:70:14","text":" @dev Returns the number of values in the set. O(1)."},"id":3091,"implemented":true,"kind":"function","modifiers":[],"name":"length","nodeType":"FunctionDefinition","parameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":3091,"src":"11547:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3079,"nodeType":"UserDefinedTypeName","pathNode":{"id":3078,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":3013,"src":"11547:7:14"},"referencedDeclaration":3013,"src":"11547:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11546:21:14"},"returnParameters":{"id":3084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3083,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3091,"src":"11591:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3082,"name":"uint256","nodeType":"ElementaryTypeName","src":"11591:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11590:9:14"},"scope":3143,"src":"11531:112:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3111,"nodeType":"Block","src":"12065:55:14","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3105,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"12094:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3012,"src":"12094:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3107,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"12106:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3104,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"12090:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2541_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12090:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12082:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3102,"name":"uint256","nodeType":"ElementaryTypeName","src":"12082:7:14","typeDescriptions":{}}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12082:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3101,"id":3110,"nodeType":"Return","src":"12075:38:14"}]},"documentation":{"id":3092,"nodeType":"StructuredDocumentation","src":"11649:331:14","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3112,"implemented":true,"kind":"function","modifiers":[],"name":"at","nodeType":"FunctionDefinition","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3095,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":3112,"src":"11997:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3094,"nodeType":"UserDefinedTypeName","pathNode":{"id":3093,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":3013,"src":"11997:7:14"},"referencedDeclaration":3013,"src":"11997:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3097,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":3112,"src":"12018:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"12018:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11996:36:14"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3112,"src":"12056:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3099,"name":"uint256","nodeType":"ElementaryTypeName","src":"12056:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12055:9:14"},"scope":3143,"src":"11985:135:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3141,"nodeType":"Block","src":"12738:219:14","statements":[{"assignments":[3126],"declarations":[{"constant":false,"id":3126,"mutability":"mutable","name":"store","nodeType":"VariableDeclaration","scope":3141,"src":"12748:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12748:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3125,"nodeType":"ArrayTypeName","src":"12748:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3131,"initialValue":{"arguments":[{"expression":{"id":3128,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"12781:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3012,"src":"12781:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2541_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3127,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"12773:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2541_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12773:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12748:44:14"},{"assignments":[3136],"declarations":[{"constant":false,"id":3136,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3141,"src":"12802:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3134,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3135,"nodeType":"ArrayTypeName","src":"12802:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3137,"nodeType":"VariableDeclarationStatement","src":"12802:23:14"},{"AST":{"nodeType":"YulBlock","src":"12888:39:14","statements":[{"nodeType":"YulAssignment","src":"12902:15:14","value":{"name":"store","nodeType":"YulIdentifier","src":"12912:5:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12902:6:14"}]}]},"evmVersion":"constantinople","externalReferences":[{"declaration":3136,"isOffset":false,"isSlot":false,"src":"12902:6:14","valueSize":1},{"declaration":3126,"isOffset":false,"isSlot":false,"src":"12912:5:14","valueSize":1}],"id":3138,"nodeType":"InlineAssembly","src":"12879:48:14"},{"expression":{"id":3139,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"12944:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3121,"id":3140,"nodeType":"Return","src":"12937:13:14"}]},"documentation":{"id":3113,"nodeType":"StructuredDocumentation","src":"12126:529:14","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3142,"implemented":true,"kind":"function","modifiers":[],"name":"values","nodeType":"FunctionDefinition","parameters":{"id":3117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3116,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":3142,"src":"12676:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3115,"nodeType":"UserDefinedTypeName","pathNode":{"id":3114,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":3013,"src":"12676:7:14"},"referencedDeclaration":3013,"src":"12676:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3013_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12675:21:14"},"returnParameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3142,"src":"12720:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3118,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3119,"nodeType":"ArrayTypeName","src":"12720:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12719:18:14"},"scope":3143,"src":"12660:297:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3144,"src":"1329:11630:14"}],"src":"205:12755:14"},"id":14},"contracts/community-token/Point.sol":{"ast":{"absolutePath":"contracts/community-token/Point.sol","exportedSymbols":{"AccessControl":[315],"AccessControlEnumerable":[440],"Context":[1294],"ERC165":[1547],"ERC20":[1125],"ERC20Burnable":[1247],"EnumerableSet":[3143],"IAccessControl":[513],"IAccessControlEnumerable":[538],"IERC165":[1559],"IERC20":[1203],"IERC20Metadata":[1272],"Math":[2425],"Point":[3320],"SignedMath":[2530],"Strings":[1523]},"id":3321,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3145,"literals":["solidity","0.8",".0"],"nodeType":"PragmaDirective","src":"32:22:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":3146,"nodeType":"ImportDirective","scope":3321,"sourceUnit":1248,"src":"56:74:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":3147,"nodeType":"ImportDirective","scope":3321,"sourceUnit":1126,"src":"131:55:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","id":3148,"nodeType":"ImportDirective","scope":3321,"sourceUnit":441,"src":"187:68:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":3149,"nodeType":"ImportDirective","scope":3321,"sourceUnit":1295,"src":"256:51:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3151,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1294,"src":"684:7:15"},"id":3152,"nodeType":"InheritanceSpecifier","src":"684:7:15"},{"baseName":{"id":3153,"name":"AccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":440,"src":"693:23:15"},"id":3154,"nodeType":"InheritanceSpecifier","src":"693:23:15"},{"baseName":{"id":3155,"name":"ERC20Burnable","nodeType":"IdentifierPath","referencedDeclaration":1247,"src":"718:13:15"},"id":3156,"nodeType":"InheritanceSpecifier","src":"718:13:15"}],"contractDependencies":[315,440,513,538,1125,1203,1247,1272,1294,1547,1559],"contractKind":"contract","documentation":{"id":3150,"nodeType":"StructuredDocumentation","src":"309:356:15","text":" @dev {ERC20} token, including:\n  - Preminted initial supply\n  - Ability for holders to burn (destroy) their tokens\n  - No access control mechanism (for minting/pausing) and hence no governance\n This contract uses {ERC20Burnable} to include burn capabilities - head to\n its documentation for details.\n _Available since v3.4._"},"fullyImplemented":true,"id":3320,"linearizedBaseContracts":[3320,1247,1125,1272,1203,440,315,1547,1559,538,513,1294],"name":"Point","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":3161,"mutability":"constant","name":"MINTER_ROLE","nodeType":"VariableDeclaration","scope":3320,"src":"738:62:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"738:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"786:13:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":3158,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"776:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"776:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"206b60f9","id":3166,"mutability":"constant","name":"TRANSFER_ROLE","nodeType":"VariableDeclaration","scope":3320,"src":"806:66:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"806:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5452414e534645525f524f4c45","id":3164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"856:15:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c","typeString":"literal_string \"TRANSFER_ROLE\""},"value":"TRANSFER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c","typeString":"literal_string \"TRANSFER_ROLE\""}],"id":3163,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"846:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"846:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"d68fc93c","id":3171,"mutability":"constant","name":"TRANSFER_ROLE_ADMIN","nodeType":"VariableDeclaration","scope":3320,"src":"878:78:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5452414e534645525f524f4c455f41444d494e","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"934:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1179bec0ccbe6d15ea750b5422555e189e0fa411a2104da6763fedb6c73c1470","typeString":"literal_string \"TRANSFER_ROLE_ADMIN\""},"value":"TRANSFER_ROLE_ADMIN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1179bec0ccbe6d15ea750b5422555e189e0fa411a2104da6763fedb6c73c1470","typeString":"literal_string \"TRANSFER_ROLE_ADMIN\""}],"id":3168,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"924:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"924:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"e88b24ba","id":3173,"mutability":"mutable","name":"startTradableTime","nodeType":"VariableDeclaration","scope":3320,"src":"963:32:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3172,"name":"uint256","nodeType":"ElementaryTypeName","src":"963:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":3217,"nodeType":"Block","src":"1396:257:15","statements":[{"expression":{"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3193,"name":"startTradableTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"1406:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3194,"name":"_startTradableTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"1426:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1406:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3196,"nodeType":"ExpressionStatement","src":"1406:38:15"},{"expression":{"arguments":[{"id":3198,"name":"TRANSFER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"1468:13:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3199,"name":"TRANSFER_ROLE_ADMIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"1483:19:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3197,"name":"_setRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"1454:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1454:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3201,"nodeType":"ExpressionStatement","src":"1454:49:15"},{"expression":{"arguments":[{"id":3203,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1524:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3204,"name":"communityFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"1544:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3202,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1513:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1513:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3206,"nodeType":"ExpressionStatement","src":"1513:48:15"},{"expression":{"arguments":[{"id":3208,"name":"TRANSFER_ROLE_ADMIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"1582:19:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3209,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"1603:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3207,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1571:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1571:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3211,"nodeType":"ExpressionStatement","src":"1571:38:15"},{"expression":{"arguments":[{"id":3213,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"1625:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3214,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"1632:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3212,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"1619:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1619:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3216,"nodeType":"ExpressionStatement","src":"1619:27:15"}]},"documentation":{"id":3174,"nodeType":"StructuredDocumentation","src":"1002:201:15","text":" @dev Grants `DEFAULT_ADMIN_ROLE` to the\n community factory contract,\n then community factory will grant mint role to the community.\n See {ERC20-constructor}."},"id":3218,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3189,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"1382:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3190,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"1388:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":3191,"modifierName":{"id":3188,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1125,"src":"1376:5:15"},"nodeType":"ModifierInvocation","src":"1376:19:15"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3176,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":3218,"src":"1220:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3175,"name":"string","nodeType":"ElementaryTypeName","src":"1220:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3178,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":3218,"src":"1245:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3177,"name":"string","nodeType":"ElementaryTypeName","src":"1245:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3180,"mutability":"mutable","name":"_startTradableTime","nodeType":"VariableDeclaration","scope":3218,"src":"1272:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1272:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3182,"mutability":"mutable","name":"initialSupply","nodeType":"VariableDeclaration","scope":3218,"src":"1304:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1304:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3184,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":3218,"src":"1331:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3183,"name":"address","nodeType":"ElementaryTypeName","src":"1331:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3186,"mutability":"mutable","name":"communityFactory","nodeType":"VariableDeclaration","scope":3218,"src":"1350:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3185,"name":"address","nodeType":"ElementaryTypeName","src":"1350:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1219:156:15"},"returnParameters":{"id":3192,"nodeType":"ParameterList","parameters":[],"src":"1396:0:15"},"scope":3320,"src":"1208:445:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3240,"nodeType":"Block","src":"1900:145:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3228,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"1926:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3229,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"1939:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1939:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"1918:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1918:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1954:56:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342","typeString":"literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""},"value":"ERC20PresetMinterPauser: must have minter role to mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342","typeString":"literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""}],"id":3226,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1910:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1910:101:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3234,"nodeType":"ExpressionStatement","src":"1910:101:15"},{"expression":{"arguments":[{"id":3236,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"2027:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3237,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"2031:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3235,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"2021:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2021:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3239,"nodeType":"ExpressionStatement","src":"2021:17:15"}]},"documentation":{"id":3219,"nodeType":"StructuredDocumentation","src":"1658:178:15","text":" @dev Creates `amount` new tokens for `to`.\n See {ERC20-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."},"functionSelector":"40c10f19","id":3241,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nodeType":"FunctionDefinition","parameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3221,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":3241,"src":"1855:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3220,"name":"address","nodeType":"ElementaryTypeName","src":"1855:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3241,"src":"1867:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1867:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1854:28:15"},"returnParameters":{"id":3225,"nodeType":"ParameterList","parameters":[],"src":"1900:0:15"},"scope":3320,"src":"1841:204:15","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"baseFunctions":[356],"body":{"id":3263,"nodeType":"Block","src":"2142:137:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3249,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"2159:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"44656c61795472616e73616374696f6e506f696e74","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2191:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ade52216e923ff7003c323d1a3f097b485e3978526545b08b3d71fd583e82b7","typeString":"literal_string \"DelayTransactionPoint\""},"value":"DelayTransactionPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0ade52216e923ff7003c323d1a3f097b485e3978526545b08b3d71fd583e82b7","typeString":"literal_string \"DelayTransactionPoint\""}],"id":3252,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2181:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":3250,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2174:6:15","typeDescriptions":{}}},"id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2159:57:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3259,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"2260:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3257,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2236:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Point_$3320_$","typeString":"type(contract super Point)"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":356,"src":"2236:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2236:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2159:113:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3248,"id":3262,"nodeType":"Return","src":"2152:120:15"}]},"functionSelector":"01ffc9a7","id":3264,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":3245,"nodeType":"OverrideSpecifier","overrides":[],"src":"2118:8:15"},"parameters":{"id":3244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3243,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":3264,"src":"2078:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3242,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2078:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2077:20:15"},"returnParameters":{"id":3248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3247,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3264,"src":"2136:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3246,"name":"bool","nodeType":"ElementaryTypeName","src":"2136:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2135:6:15"},"scope":3320,"src":"2051:228:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1113],"body":{"id":3318,"nodeType":"Block","src":"2420:319:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3275,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"2434:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2450:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2442:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3276,"name":"address","nodeType":"ElementaryTypeName","src":"2442:7:15","typeDescriptions":{}}},"id":3279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2442:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2434:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3281,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"2456:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2462:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3282,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:15","typeDescriptions":{}}},"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2462:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2456:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2434:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2476:29:15","subExpression":{"arguments":[{"id":3289,"name":"TRANSFER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"2485:13:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3290,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"2500:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3288,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"2477:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2477:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2434:71:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2509:27:15","subExpression":{"arguments":[{"id":3295,"name":"TRANSFER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"2518:13:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3296,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"2533:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3294,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"2510:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2510:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2434:102:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3309,"nodeType":"IfStatement","src":"2430:249:15","trueBody":{"id":3308,"nodeType":"Block","src":"2538:141:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3301,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2598:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2598:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3303,"name":"startTradableTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"2616:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e2063616e2774207472616461626c65207269676874206e6f77","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2635:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7f8280ee5bc0ce19de983d53d21d8eb08d84b6288c0d629ced3e043b1f61a7f2","typeString":"literal_string \"Token can't tradable right now\""},"value":"Token can't tradable right now"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f8280ee5bc0ce19de983d53d21d8eb08d84b6288c0d629ced3e043b1f61a7f2","typeString":"literal_string \"Token can't tradable right now\""}],"id":3300,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2590:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2590:78:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3307,"nodeType":"ExpressionStatement","src":"2590:78:15"}]}},{"expression":{"arguments":[{"id":3313,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"2715:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3314,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"2721:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3315,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"2725:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3310,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2688:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Point_$3320_$","typeString":"type(contract super Point)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1113,"src":"2688:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2688:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3317,"nodeType":"ExpressionStatement","src":"2688:44:15"}]},"id":3319,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nodeType":"FunctionDefinition","overrides":{"id":3273,"nodeType":"OverrideSpecifier","overrides":[{"id":3272,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1125,"src":"2413:5:15"}],"src":"2404:15:15"},"parameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3266,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":3319,"src":"2324:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3265,"name":"address","nodeType":"ElementaryTypeName","src":"2324:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":3319,"src":"2346:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3267,"name":"address","nodeType":"ElementaryTypeName","src":"2346:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3270,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3319,"src":"2366:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3269,"name":"uint256","nodeType":"ElementaryTypeName","src":"2366:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2314:72:15"},"returnParameters":{"id":3274,"nodeType":"ParameterList","parameters":[],"src":"2420:0:15"},"scope":3320,"src":"2285:454:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3321,"src":"666:2075:15"}],"src":"32:2709:15"},"id":15},"contracts/community-token/PointFactory.sol":{"ast":{"absolutePath":"contracts/community-token/PointFactory.sol","exportedSymbols":{"AccessControl":[315],"AccessControlEnumerable":[440],"BytesLib":[3783],"Context":[1294],"ERC165":[1547],"ERC20":[1125],"ERC20Burnable":[1247],"EnumerableSet":[3143],"IAccessControl":[513],"IAccessControlEnumerable":[538],"ICommunityTokenFactory":[3450],"IERC165":[1559],"IERC20":[1203],"IERC20Metadata":[1272],"Math":[2425],"Point":[3320],"PointFactory":[3438],"SignedMath":[2530],"Strings":[1523]},"id":3439,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3322,"literals":["solidity","0.8",".0"],"nodeType":"PragmaDirective","src":"187:22:16"},{"id":3323,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"210:33:16"},{"absolutePath":"contracts/community-token/Point.sol","file":"./Point.sol","id":3324,"nodeType":"ImportDirective","scope":3439,"sourceUnit":3321,"src":"245:21:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"solidity-bytes-utils/contracts/BytesLib.sol","file":"solidity-bytes-utils/contracts/BytesLib.sol","id":3325,"nodeType":"ImportDirective","scope":3439,"sourceUnit":3784,"src":"267:53:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ICommunityTokenFactory.sol","file":"../interfaces/ICommunityTokenFactory.sol","id":3326,"nodeType":"ImportDirective","scope":3439,"sourceUnit":3451,"src":"321:50:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3327,"name":"ICommunityTokenFactory","nodeType":"IdentifierPath","referencedDeclaration":3450,"src":"398:22:16"},"id":3328,"nodeType":"InheritanceSpecifier","src":"398:22:16"}],"contractDependencies":[3320,3450],"contractKind":"contract","fullyImplemented":true,"id":3438,"linearizedBaseContracts":[3438,3450],"name":"PointFactory","nodeType":"ContractDefinition","nodes":[{"id":3331,"libraryName":{"id":3329,"name":"BytesLib","nodeType":"IdentifierPath","referencedDeclaration":3783,"src":"434:8:16"},"nodeType":"UsingForDirective","src":"428:25:16","typeName":{"id":3330,"name":"bytes","nodeType":"ElementaryTypeName","src":"447:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"body":{"id":3334,"nodeType":"Block","src":"474:7:16","statements":[]},"id":3335,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":3332,"nodeType":"ParameterList","parameters":[],"src":"471:2:16"},"returnParameters":{"id":3333,"nodeType":"ParameterList","parameters":[],"src":"474:0:16"},"scope":3438,"src":"459:22:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3449],"body":{"id":3436,"nodeType":"Block","src":"574:601:16","statements":[{"assignments":[3344],"declarations":[{"constant":false,"id":3344,"mutability":"mutable","name":"nameLength","nodeType":"VariableDeclaration","scope":3436,"src":"584:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3343,"name":"uint8","nodeType":"ElementaryTypeName","src":"584:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3349,"initialValue":{"arguments":[{"hexValue":"30","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"616:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":3345,"name":"meta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"603:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint8","nodeType":"MemberAccess","referencedDeclaration":3566,"src":"603:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256) pure returns (uint8)"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"603:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"584:34:16"},{"assignments":[3351],"declarations":[{"constant":false,"id":3351,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":3436,"src":"628:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3350,"name":"string","nodeType":"ElementaryTypeName","src":"628:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3360,"initialValue":{"arguments":[{"arguments":[{"hexValue":"31","id":3356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"667:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":3357,"name":"nameLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"670:10:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":3354,"name":"meta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"656:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"slice","nodeType":"MemberAccess","referencedDeclaration":3514,"src":"656:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"656:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"649:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3352,"name":"string","nodeType":"ElementaryTypeName","src":"649:6:16","typeDescriptions":{}}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"649:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"628:54:16"},{"assignments":[3362],"declarations":[{"constant":false,"id":3362,"mutability":"mutable","name":"symbolLength","nodeType":"VariableDeclaration","scope":3436,"src":"692:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3361,"name":"uint8","nodeType":"ElementaryTypeName","src":"692:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3369,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3365,"name":"nameLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"726:10:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"739:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"726:14:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":3363,"name":"meta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"713:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint8","nodeType":"MemberAccess","referencedDeclaration":3566,"src":"713:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256) pure returns (uint8)"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"713:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"692:49:16"},{"assignments":[3371],"declarations":[{"constant":false,"id":3371,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":3436,"src":"751:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3370,"name":"string","nodeType":"ElementaryTypeName","src":"751:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3382,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3376,"name":"nameLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"792:10:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"805:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"792:14:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3379,"name":"symbolLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"808:12:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":3374,"name":"meta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"781:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"slice","nodeType":"MemberAccess","referencedDeclaration":3514,"src":"781:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"781:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"774:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3372,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:16","typeDescriptions":{}}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"774:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"751:71:16"},{"assignments":[3384],"declarations":[{"constant":false,"id":3384,"mutability":"mutable","name":"startTradeTime","nodeType":"VariableDeclaration","scope":3436,"src":"832:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3383,"name":"uint256","nodeType":"ElementaryTypeName","src":"832:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3393,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3387,"name":"nameLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"872:10:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3388,"name":"symbolLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"885:12:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"872:25:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"900:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"872:29:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":3385,"name":"meta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"857:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint256","nodeType":"MemberAccess","referencedDeclaration":3722,"src":"857:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256) pure returns (uint256)"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"857:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"832:70:16"},{"assignments":[3395],"declarations":[{"constant":false,"id":3395,"mutability":"mutable","name":"supply","nodeType":"VariableDeclaration","scope":3436,"src":"912:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3394,"name":"uint256","nodeType":"ElementaryTypeName","src":"912:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3404,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3398,"name":"nameLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"944:10:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3399,"name":"symbolLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"957:12:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"944:25:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3334","id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"972:2:16","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"34"},"src":"944:30:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":3396,"name":"meta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"929:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint256","nodeType":"MemberAccess","referencedDeclaration":3722,"src":"929:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256) pure returns (uint256)"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"929:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"912:63:16"},{"assignments":[3406],"declarations":[{"constant":false,"id":3406,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":3436,"src":"985:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3405,"name":"address","nodeType":"ElementaryTypeName","src":"985:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3415,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3409,"name":"nameLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"1016:10:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3410,"name":"symbolLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"1029:12:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1016:25:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3636","id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:16","typeDescriptions":{"typeIdentifier":"t_rational_66_by_1","typeString":"int_const 66"},"value":"66"},"src":"1016:30:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":3407,"name":"meta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"1001:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toAddress","nodeType":"MemberAccess","referencedDeclaration":3540,"src":"1001:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256) pure returns (address)"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1001:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"985:62:16"},{"assignments":[3418],"declarations":[{"constant":false,"id":3418,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":3436,"src":"1057:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Point_$3320","typeString":"contract Point"},"typeName":{"id":3417,"nodeType":"UserDefinedTypeName","pathNode":{"id":3416,"name":"Point","nodeType":"IdentifierPath","referencedDeclaration":3320,"src":"1057:5:16"},"referencedDeclaration":3320,"src":"1057:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_Point_$3320","typeString":"contract Point"}},"visibility":"internal"}],"id":3430,"initialValue":{"arguments":[{"id":3422,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"1081:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3423,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"1087:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3424,"name":"startTradeTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"1095:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3425,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"1111:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3426,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1119:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3427,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1126:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1126:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1071:9:16","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$_t_contract$_Point_$3320_$","typeString":"function (string memory,string memory,uint256,uint256,address,address) returns (contract Point)"},"typeName":{"id":3420,"nodeType":"UserDefinedTypeName","pathNode":{"id":3419,"name":"Point","nodeType":"IdentifierPath","referencedDeclaration":3320,"src":"1075:5:16"},"referencedDeclaration":3320,"src":"1075:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_Point_$3320","typeString":"contract Point"}}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1071:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Point_$3320","typeString":"contract Point"}},"nodeType":"VariableDeclarationStatement","src":"1057:80:16"},{"expression":{"arguments":[{"id":3433,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"1162:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_Point_$3320","typeString":"contract Point"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Point_$3320","typeString":"contract Point"}],"id":3432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1154:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3431,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:16","typeDescriptions":{}}},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1154:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3342,"id":3435,"nodeType":"Return","src":"1147:21:16"}]},"functionSelector":"3120db1b","id":3437,"implemented":true,"kind":"function","modifiers":[],"name":"createCommunityToken","nodeType":"FunctionDefinition","overrides":{"id":3339,"nodeType":"OverrideSpecifier","overrides":[],"src":"547:8:16"},"parameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"meta","nodeType":"VariableDeclaration","scope":3437,"src":"517:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3336,"name":"bytes","nodeType":"ElementaryTypeName","src":"517:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"516:21:16"},"returnParameters":{"id":3342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3341,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3437,"src":"565:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3340,"name":"address","nodeType":"ElementaryTypeName","src":"565:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"564:9:16"},"scope":3438,"src":"487:688:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3439,"src":"373:804:16"}],"src":"187:990:16"},"id":16},"contracts/interfaces/ICommunityTokenFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/ICommunityTokenFactory.sol","exportedSymbols":{"ICommunityTokenFactory":[3450]},"id":3451,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3440,"literals":["solidity","0.8",".0"],"nodeType":"PragmaDirective","src":"33:22:17"},{"id":3441,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"56:33:17"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3442,"nodeType":"StructuredDocumentation","src":"91:57:17","text":" @dev Interface of the community token factory."},"fullyImplemented":false,"id":3450,"linearizedBaseContracts":[3450],"name":"ICommunityTokenFactory","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3120db1b","id":3449,"implemented":false,"kind":"function","modifiers":[],"name":"createCommunityToken","nodeType":"FunctionDefinition","parameters":{"id":3445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3444,"mutability":"mutable","name":"meta","nodeType":"VariableDeclaration","scope":3449,"src":"219:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3443,"name":"bytes","nodeType":"ElementaryTypeName","src":"219:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"218:21:17"},"returnParameters":{"id":3448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3447,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3449,"src":"274:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3446,"name":"address","nodeType":"ElementaryTypeName","src":"274:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"273:9:17"},"scope":3450,"src":"189:94:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3451,"src":"149:136:17"}],"src":"33:252:17"},"id":17},"solidity-bytes-utils/contracts/BytesLib.sol":{"ast":{"absolutePath":"solidity-bytes-utils/contracts/BytesLib.sol","exportedSymbols":{"BytesLib":[3783]},"id":3784,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":3452,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"336:31:18"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":3783,"linearizedBaseContracts":[3783],"name":"BytesLib","nodeType":"ContractDefinition","nodes":[{"body":{"id":3467,"nodeType":"Block","src":"545:2803:18","statements":[{"assignments":[3462],"declarations":[{"constant":false,"id":3462,"mutability":"mutable","name":"tempBytes","nodeType":"VariableDeclaration","scope":3467,"src":"555:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3461,"name":"bytes","nodeType":"ElementaryTypeName","src":"555:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3463,"nodeType":"VariableDeclarationStatement","src":"555:22:18"},{"AST":{"nodeType":"YulBlock","src":"597:2718:18","statements":[{"nodeType":"YulAssignment","src":"741:24:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"760:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"754:5:18"},"nodeType":"YulFunctionCall","src":"754:11:18"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"741:9:18"}]},{"nodeType":"YulVariableDeclaration","src":"897:30:18","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"917:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"911:5:18"},"nodeType":"YulFunctionCall","src":"911:16:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"901:6:18","type":""}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"947:9:18"},{"name":"length","nodeType":"YulIdentifier","src":"958:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"940:6:18"},"nodeType":"YulFunctionCall","src":"940:25:18"},"nodeType":"YulExpressionStatement","src":"940:25:18"},{"nodeType":"YulVariableDeclaration","src":"1175:30:18","value":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"1189:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1200:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1185:3:18"},"nodeType":"YulFunctionCall","src":"1185:20:18"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"1179:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1330:26:18","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1345:2:18"},{"name":"length","nodeType":"YulIdentifier","src":"1349:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1341:3:18"},"nodeType":"YulFunctionCall","src":"1341:15:18"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"1334:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1733:162:18","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1867:2:18"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1877:2:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1871:5:18"},"nodeType":"YulFunctionCall","src":"1871:9:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1860:6:18"},"nodeType":"YulFunctionCall","src":"1860:21:18"},"nodeType":"YulExpressionStatement","src":"1860:21:18"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1566:2:18"},{"name":"end","nodeType":"YulIdentifier","src":"1570:3:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1563:2:18"},"nodeType":"YulFunctionCall","src":"1563:11:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1575:157:18","statements":[{"nodeType":"YulAssignment","src":"1663:19:18","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1673:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"1677:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1669:3:18"},"nodeType":"YulFunctionCall","src":"1669:13:18"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"1663:2:18"}]},{"nodeType":"YulAssignment","src":"1699:19:18","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1709:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"1713:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1705:3:18"},"nodeType":"YulFunctionCall","src":"1705:13:18"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"1699:2:18"}]}]},"pre":{"nodeType":"YulBlock","src":"1374:188:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1518:30:18","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"1532:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1543:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1528:3:18"},"nodeType":"YulFunctionCall","src":"1528:20:18"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"1522:2:18","type":""}]}]},"src":"1370:525:18"},{"nodeType":"YulAssignment","src":"2096:27:18","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2112:10:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2106:5:18"},"nodeType":"YulFunctionCall","src":"2106:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2096:6:18"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2143:9:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2158:6:18"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2172:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2166:5:18"},"nodeType":"YulFunctionCall","src":"2166:16:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2154:3:18"},"nodeType":"YulFunctionCall","src":"2154:29:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2136:6:18"},"nodeType":"YulFunctionCall","src":"2136:48:18"},"nodeType":"YulExpressionStatement","src":"2136:48:18"},{"nodeType":"YulAssignment","src":"2322:9:18","value":{"name":"end","nodeType":"YulIdentifier","src":"2328:3:18"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2322:2:18"}]},{"nodeType":"YulAssignment","src":"2458:22:18","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2469:2:18"},{"name":"length","nodeType":"YulIdentifier","src":"2473:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2465:3:18"},"nodeType":"YulFunctionCall","src":"2465:15:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2458:3:18"}]},{"body":{"nodeType":"YulBlock","src":"2662:53:18","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2687:2:18"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2697:2:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2691:5:18"},"nodeType":"YulFunctionCall","src":"2691:9:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2680:6:18"},"nodeType":"YulFunctionCall","src":"2680:21:18"},"nodeType":"YulExpressionStatement","src":"2680:21:18"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2565:2:18"},{"name":"end","nodeType":"YulIdentifier","src":"2569:3:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:18"},"nodeType":"YulFunctionCall","src":"2562:11:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2574:87:18","statements":[{"nodeType":"YulAssignment","src":"2592:19:18","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2602:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"2606:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2598:3:18"},"nodeType":"YulFunctionCall","src":"2598:13:18"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2592:2:18"}]},{"nodeType":"YulAssignment","src":"2628:19:18","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2638:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"2642:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:18"},"nodeType":"YulFunctionCall","src":"2634:13:18"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"2628:2:18"}]}]},"pre":{"nodeType":"YulBlock","src":"2498:63:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2516:31:18","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2530:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"2542:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2526:3:18"},"nodeType":"YulFunctionCall","src":"2526:21:18"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"2520:2:18","type":""}]}]},"src":"2494:221:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3147:4:18","type":"","value":"0x40"},{"arguments":[{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3180:3:18"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3196:6:18"},{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"3210:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3204:5:18"},"nodeType":"YulFunctionCall","src":"3204:16:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3192:3:18"},"nodeType":"YulFunctionCall","src":"3192:29:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3185:6:18"},"nodeType":"YulFunctionCall","src":"3185:37:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3176:3:18"},"nodeType":"YulFunctionCall","src":"3176:47:18"},{"kind":"number","nodeType":"YulLiteral","src":"3225:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3172:3:18"},"nodeType":"YulFunctionCall","src":"3172:56:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3248:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3244:3:18"},"nodeType":"YulFunctionCall","src":"3244:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3153:3:18"},"nodeType":"YulFunctionCall","src":"3153:151:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3140:6:18"},"nodeType":"YulFunctionCall","src":"3140:165:18"},"nodeType":"YulExpressionStatement","src":"3140:165:18"}]},"evmVersion":"constantinople","externalReferences":[{"declaration":3456,"isOffset":false,"isSlot":false,"src":"2112:10:18","valueSize":1},{"declaration":3456,"isOffset":false,"isSlot":false,"src":"2530:10:18","valueSize":1},{"declaration":3454,"isOffset":false,"isSlot":false,"src":"1532:9:18","valueSize":1},{"declaration":3454,"isOffset":false,"isSlot":false,"src":"3210:9:18","valueSize":1},{"declaration":3454,"isOffset":false,"isSlot":false,"src":"917:9:18","valueSize":1},{"declaration":3462,"isOffset":false,"isSlot":false,"src":"1189:9:18","valueSize":1},{"declaration":3462,"isOffset":false,"isSlot":false,"src":"2143:9:18","valueSize":1},{"declaration":3462,"isOffset":false,"isSlot":false,"src":"2172:9:18","valueSize":1},{"declaration":3462,"isOffset":false,"isSlot":false,"src":"741:9:18","valueSize":1},{"declaration":3462,"isOffset":false,"isSlot":false,"src":"947:9:18","valueSize":1}],"id":3464,"nodeType":"InlineAssembly","src":"588:2727:18"},{"expression":{"id":3465,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"3332:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3460,"id":3466,"nodeType":"Return","src":"3325:16:18"}]},"id":3468,"implemented":true,"kind":"function","modifiers":[],"name":"concat","nodeType":"FunctionDefinition","parameters":{"id":3457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3454,"mutability":"mutable","name":"_preBytes","nodeType":"VariableDeclaration","scope":3468,"src":"418:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3453,"name":"bytes","nodeType":"ElementaryTypeName","src":"418:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3456,"mutability":"mutable","name":"_postBytes","nodeType":"VariableDeclaration","scope":3468,"src":"450:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3455,"name":"bytes","nodeType":"ElementaryTypeName","src":"450:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"408:71:18"},"returnParameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3468,"src":"527:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3458,"name":"bytes","nodeType":"ElementaryTypeName","src":"527:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"526:14:18"},"scope":3783,"src":"393:2955:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3476,"nodeType":"Block","src":"3436:6015:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3455:5990:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:34:18","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"3697:14:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3691:5:18"},"nodeType":"YulFunctionCall","src":"3691:21:18"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"3682:5:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4205:76:18","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4228:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4243:5:18","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4261:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"4268:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4257:3:18"},"nodeType":"YulFunctionCall","src":"4257:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4250:6:18"},"nodeType":"YulFunctionCall","src":"4250:21:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4239:3:18"},"nodeType":"YulFunctionCall","src":"4239:33:18"},{"kind":"number","nodeType":"YulLiteral","src":"4274:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4235:3:18"},"nodeType":"YulFunctionCall","src":"4235:41:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4224:3:18"},"nodeType":"YulFunctionCall","src":"4224:53:18"},{"kind":"number","nodeType":"YulLiteral","src":"4279:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4220:3:18"},"nodeType":"YulFunctionCall","src":"4220:61:18"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"4209:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4294:32:18","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"4315:10:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4309:5:18"},"nodeType":"YulFunctionCall","src":"4309:17:18"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"4298:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4339:38:18","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4360:7:18"},{"name":"mlength","nodeType":"YulIdentifier","src":"4369:7:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4356:3:18"},"nodeType":"YulFunctionCall","src":"4356:21:18"},"variables":[{"name":"newlength","nodeType":"YulTypedName","src":"4343:9:18","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4710:1485:18","statements":[{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"4991:14:18"},{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"5303:5:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"5521:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"5533:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5517:3:18"},"nodeType":"YulFunctionCall","src":"5517:21:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5511:5:18"},"nodeType":"YulFunctionCall","src":"5511:28:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5648:5:18","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5659:2:18","type":"","value":"32"},{"name":"mlength","nodeType":"YulIdentifier","src":"5663:7:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5655:3:18"},"nodeType":"YulFunctionCall","src":"5655:16:18"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5644:3:18"},"nodeType":"YulFunctionCall","src":"5644:28:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5404:3:18"},"nodeType":"YulFunctionCall","src":"5404:302:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5895:5:18","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5906:2:18","type":"","value":"32"},{"name":"newlength","nodeType":"YulIdentifier","src":"5910:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5902:3:18"},"nodeType":"YulFunctionCall","src":"5902:18:18"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5891:3:18"},"nodeType":"YulFunctionCall","src":"5891:30:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5367:3:18"},"nodeType":"YulFunctionCall","src":"5367:584:18"},{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"6104:7:18"},{"kind":"number","nodeType":"YulLiteral","src":"6113:1:18","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6100:3:18"},"nodeType":"YulFunctionCall","src":"6100:15:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5334:3:18"},"nodeType":"YulFunctionCall","src":"5334:807:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5134:3:18"},"nodeType":"YulFunctionCall","src":"5134:1029:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4963:6:18"},"nodeType":"YulFunctionCall","src":"4963:1218:18"},"nodeType":"YulExpressionStatement","src":"4963:1218:18"}]},"nodeType":"YulCase","src":"4703:1492:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4708:1:18","type":"","value":"2"}},{"body":{"nodeType":"YulBlock","src":"6215:1935:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6424:3:18","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6429:14:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6417:6:18"},"nodeType":"YulFunctionCall","src":"6417:27:18"},"nodeType":"YulExpressionStatement","src":"6417:27:18"},{"nodeType":"YulVariableDeclaration","src":"6461:53:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6485:3:18","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"6490:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"6475:9:18"},"nodeType":"YulFunctionCall","src":"6475:20:18"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"6501:7:18"},{"kind":"number","nodeType":"YulLiteral","src":"6510:2:18","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6497:3:18"},"nodeType":"YulFunctionCall","src":"6497:16:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6471:3:18"},"nodeType":"YulFunctionCall","src":"6471:43:18"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"6465:2:18","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6574:14:18"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"6598:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6609:1:18","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6594:3:18"},"nodeType":"YulFunctionCall","src":"6594:17:18"},{"kind":"number","nodeType":"YulLiteral","src":"6613:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6590:3:18"},"nodeType":"YulFunctionCall","src":"6590:25:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6567:6:18"},"nodeType":"YulFunctionCall","src":"6567:49:18"},"nodeType":"YulExpressionStatement","src":"6567:49:18"},{"nodeType":"YulVariableDeclaration","src":"7204:30:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7222:2:18","type":"","value":"32"},{"name":"slength","nodeType":"YulIdentifier","src":"7226:7:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7218:3:18"},"nodeType":"YulFunctionCall","src":"7218:16:18"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"7208:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7251:33:18","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7265:10:18"},{"name":"submod","nodeType":"YulIdentifier","src":"7277:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7261:3:18"},"nodeType":"YulFunctionCall","src":"7261:23:18"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"7255:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7301:35:18","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7316:10:18"},{"name":"mlength","nodeType":"YulIdentifier","src":"7328:7:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7312:3:18"},"nodeType":"YulFunctionCall","src":"7312:24:18"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"7305:3:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7353:38:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:5:18","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"7380:6:18"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7369:3:18"},"nodeType":"YulFunctionCall","src":"7369:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"7389:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7365:3:18"},"nodeType":"YulFunctionCall","src":"7365:26:18"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7357:4:18","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7437:2:18"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"7523:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"7558:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7490:3:18"},"nodeType":"YulFunctionCall","src":"7490:160:18"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7686:2:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7680:5:18"},"nodeType":"YulFunctionCall","src":"7680:9:18"},{"name":"mask","nodeType":"YulIdentifier","src":"7691:4:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7676:3:18"},"nodeType":"YulFunctionCall","src":"7676:20:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7461:3:18"},"nodeType":"YulFunctionCall","src":"7461:257:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7409:6:18"},"nodeType":"YulFunctionCall","src":"7409:327:18"},"nodeType":"YulExpressionStatement","src":"7409:327:18"},{"body":{"nodeType":"YulBlock","src":"7964:61:18","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7993:2:18"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8003:2:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7997:5:18"},"nodeType":"YulFunctionCall","src":"7997:9:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7986:6:18"},"nodeType":"YulFunctionCall","src":"7986:21:18"},"nodeType":"YulExpressionStatement","src":"7986:21:18"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7858:2:18"},{"name":"end","nodeType":"YulIdentifier","src":"7862:3:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7855:2:18"},"nodeType":"YulFunctionCall","src":"7855:11:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7867:96:18","statements":[{"nodeType":"YulAssignment","src":"7889:16:18","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7899:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"7903:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7895:3:18"},"nodeType":"YulFunctionCall","src":"7895:10:18"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7889:2:18"}]},{"nodeType":"YulAssignment","src":"7926:19:18","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7936:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"7940:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7932:3:18"},"nodeType":"YulFunctionCall","src":"7932:13:18"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7926:2:18"}]}]},"pre":{"nodeType":"YulBlock","src":"7758:96:18","statements":[{"nodeType":"YulAssignment","src":"7780:19:18","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7790:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"7794:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7786:3:18"},"nodeType":"YulFunctionCall","src":"7786:13:18"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7780:2:18"}]},{"nodeType":"YulAssignment","src":"7820:16:18","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7830:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"7834:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7826:3:18"},"nodeType":"YulFunctionCall","src":"7826:10:18"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7820:2:18"}]}]},"src":"7754:271:18"},{"nodeType":"YulAssignment","src":"8043:32:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8055:5:18","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8066:2:18"},{"name":"end","nodeType":"YulIdentifier","src":"8070:3:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8062:3:18"},"nodeType":"YulFunctionCall","src":"8062:12:18"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8051:3:18"},"nodeType":"YulFunctionCall","src":"8051:24:18"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"8043:4:18"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8100:2:18"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8118:2:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8112:5:18"},"nodeType":"YulFunctionCall","src":"8112:9:18"},{"name":"mask","nodeType":"YulIdentifier","src":"8123:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8108:3:18"},"nodeType":"YulFunctionCall","src":"8108:20:18"},{"name":"mask","nodeType":"YulIdentifier","src":"8130:4:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8104:3:18"},"nodeType":"YulFunctionCall","src":"8104:31:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8093:6:18"},"nodeType":"YulFunctionCall","src":"8093:43:18"},"nodeType":"YulExpressionStatement","src":"8093:43:18"}]},"nodeType":"YulCase","src":"6208:1942:18","value":{"kind":"number","nodeType":"YulLiteral","src":"6213:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8171:1264:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8268:3:18","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8273:14:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8261:6:18"},"nodeType":"YulFunctionCall","src":"8261:27:18"},"nodeType":"YulExpressionStatement","src":"8261:27:18"},{"nodeType":"YulVariableDeclaration","src":"8381:53:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8405:3:18","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"8410:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8395:9:18"},"nodeType":"YulFunctionCall","src":"8395:20:18"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8421:7:18"},{"kind":"number","nodeType":"YulLiteral","src":"8430:2:18","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8417:3:18"},"nodeType":"YulFunctionCall","src":"8417:16:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8391:3:18"},"nodeType":"YulFunctionCall","src":"8391:43:18"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"8385:2:18","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8494:14:18"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"8518:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8529:1:18","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8514:3:18"},"nodeType":"YulFunctionCall","src":"8514:17:18"},{"kind":"number","nodeType":"YulLiteral","src":"8533:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8510:3:18"},"nodeType":"YulFunctionCall","src":"8510:25:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8487:6:18"},"nodeType":"YulFunctionCall","src":"8487:49:18"},"nodeType":"YulExpressionStatement","src":"8487:49:18"},{"nodeType":"YulVariableDeclaration","src":"8663:34:18","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8685:7:18"},{"kind":"number","nodeType":"YulLiteral","src":"8694:2:18","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8681:3:18"},"nodeType":"YulFunctionCall","src":"8681:16:18"},"variables":[{"name":"slengthmod","nodeType":"YulTypedName","src":"8667:10:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8714:34:18","value":{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"8736:7:18"},{"kind":"number","nodeType":"YulLiteral","src":"8745:2:18","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8732:3:18"},"nodeType":"YulFunctionCall","src":"8732:16:18"},"variables":[{"name":"mlengthmod","nodeType":"YulTypedName","src":"8718:10:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8765:33:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8783:2:18","type":"","value":"32"},{"name":"slengthmod","nodeType":"YulIdentifier","src":"8787:10:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8779:3:18"},"nodeType":"YulFunctionCall","src":"8779:19:18"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"8769:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8815:33:18","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8829:10:18"},{"name":"submod","nodeType":"YulIdentifier","src":"8841:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8825:3:18"},"nodeType":"YulFunctionCall","src":"8825:23:18"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"8819:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8865:35:18","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8880:10:18"},{"name":"mlength","nodeType":"YulIdentifier","src":"8892:7:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8876:3:18"},"nodeType":"YulFunctionCall","src":"8876:24:18"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"8869:3:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8917:38:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8937:5:18","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"8944:6:18"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8933:3:18"},"nodeType":"YulFunctionCall","src":"8933:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"8953:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8929:3:18"},"nodeType":"YulFunctionCall","src":"8929:26:18"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"8921:4:18","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8980:2:18"},{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8994:2:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8988:5:18"},"nodeType":"YulFunctionCall","src":"8988:9:18"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9009:2:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9003:5:18"},"nodeType":"YulFunctionCall","src":"9003:9:18"},{"name":"mask","nodeType":"YulIdentifier","src":"9014:4:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8999:3:18"},"nodeType":"YulFunctionCall","src":"8999:20:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8984:3:18"},"nodeType":"YulFunctionCall","src":"8984:36:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8973:6:18"},"nodeType":"YulFunctionCall","src":"8973:48:18"},"nodeType":"YulExpressionStatement","src":"8973:48:18"},{"body":{"nodeType":"YulBlock","src":"9249:61:18","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9278:2:18"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9288:2:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9282:5:18"},"nodeType":"YulFunctionCall","src":"9282:9:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9271:6:18"},"nodeType":"YulFunctionCall","src":"9271:21:18"},"nodeType":"YulExpressionStatement","src":"9271:21:18"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9143:2:18"},{"name":"end","nodeType":"YulIdentifier","src":"9147:3:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9140:2:18"},"nodeType":"YulFunctionCall","src":"9140:11:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9152:96:18","statements":[{"nodeType":"YulAssignment","src":"9174:16:18","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9184:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"9188:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9180:3:18"},"nodeType":"YulFunctionCall","src":"9180:10:18"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"9174:2:18"}]},{"nodeType":"YulAssignment","src":"9211:19:18","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9221:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"9225:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9217:3:18"},"nodeType":"YulFunctionCall","src":"9217:13:18"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"9211:2:18"}]}]},"pre":{"nodeType":"YulBlock","src":"9043:96:18","statements":[{"nodeType":"YulAssignment","src":"9065:16:18","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9075:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"9079:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9071:3:18"},"nodeType":"YulFunctionCall","src":"9071:10:18"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"9065:2:18"}]},{"nodeType":"YulAssignment","src":"9102:19:18","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9112:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"9116:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9108:3:18"},"nodeType":"YulFunctionCall","src":"9108:13:18"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"9102:2:18"}]}]},"src":"9039:271:18"},{"nodeType":"YulAssignment","src":"9328:32:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9340:5:18","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9351:2:18"},{"name":"end","nodeType":"YulIdentifier","src":"9355:3:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9347:3:18"},"nodeType":"YulFunctionCall","src":"9347:12:18"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"9336:3:18"},"nodeType":"YulFunctionCall","src":"9336:24:18"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"9328:4:18"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9385:2:18"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9403:2:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9397:5:18"},"nodeType":"YulFunctionCall","src":"9397:9:18"},{"name":"mask","nodeType":"YulIdentifier","src":"9408:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9393:3:18"},"nodeType":"YulFunctionCall","src":"9393:20:18"},{"name":"mask","nodeType":"YulIdentifier","src":"9415:4:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9389:3:18"},"nodeType":"YulFunctionCall","src":"9389:31:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9378:6:18"},"nodeType":"YulFunctionCall","src":"9378:43:18"},"nodeType":"YulExpressionStatement","src":"9378:43:18"}]},"nodeType":"YulCase","src":"8163:1272:18","value":"default"}],"expression":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4658:7:18"},{"kind":"number","nodeType":"YulLiteral","src":"4667:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4655:2:18"},"nodeType":"YulFunctionCall","src":"4655:15:18"},{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"4675:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4686:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4672:2:18"},"nodeType":"YulFunctionCall","src":"4672:17:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4651:3:18"},"nodeType":"YulFunctionCall","src":"4651:39:18"},"nodeType":"YulSwitch","src":"4644:4791:18"}]},"evmVersion":"constantinople","externalReferences":[{"declaration":3472,"isOffset":false,"isSlot":false,"src":"4315:10:18","valueSize":1},{"declaration":3472,"isOffset":false,"isSlot":false,"src":"5521:10:18","valueSize":1},{"declaration":3472,"isOffset":false,"isSlot":false,"src":"7265:10:18","valueSize":1},{"declaration":3472,"isOffset":false,"isSlot":false,"src":"7316:10:18","valueSize":1},{"declaration":3472,"isOffset":false,"isSlot":false,"src":"8829:10:18","valueSize":1},{"declaration":3472,"isOffset":false,"isSlot":false,"src":"8880:10:18","valueSize":1},{"declaration":3470,"isOffset":false,"isSlot":true,"src":"3697:14:18","suffix":"slot","valueSize":1},{"declaration":3470,"isOffset":false,"isSlot":true,"src":"4991:14:18","suffix":"slot","valueSize":1},{"declaration":3470,"isOffset":false,"isSlot":true,"src":"6429:14:18","suffix":"slot","valueSize":1},{"declaration":3470,"isOffset":false,"isSlot":true,"src":"6574:14:18","suffix":"slot","valueSize":1},{"declaration":3470,"isOffset":false,"isSlot":true,"src":"8273:14:18","suffix":"slot","valueSize":1},{"declaration":3470,"isOffset":false,"isSlot":true,"src":"8494:14:18","suffix":"slot","valueSize":1}],"id":3475,"nodeType":"InlineAssembly","src":"3446:5999:18"}]},"id":3477,"implemented":true,"kind":"function","modifiers":[],"name":"concatStorage","nodeType":"FunctionDefinition","parameters":{"id":3473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3470,"mutability":"mutable","name":"_preBytes","nodeType":"VariableDeclaration","scope":3477,"src":"3377:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3469,"name":"bytes","nodeType":"ElementaryTypeName","src":"3377:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3472,"mutability":"mutable","name":"_postBytes","nodeType":"VariableDeclaration","scope":3477,"src":"3402:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3471,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3376:50:18"},"returnParameters":{"id":3474,"nodeType":"ParameterList","parameters":[],"src":"3436:0:18"},"scope":3783,"src":"3354:6097:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3513,"nodeType":"Block","src":"9621:2640:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3489,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"9639:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3331","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9649:2:18","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"9639:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3492,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"9655:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9639:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f766572666c6f77","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9664:16:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""},"value":"slice_overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""}],"id":3488,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9631:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9631:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3496,"nodeType":"ExpressionStatement","src":"9631:50:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3498,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"9699:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9699:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3500,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"9716:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3501,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"9725:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9716:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9699:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f75744f66426f756e6473","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9734:19:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""},"value":"slice_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""}],"id":3497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9691:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9691:63:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3506,"nodeType":"ExpressionStatement","src":"9691:63:18"},{"assignments":[3508],"declarations":[{"constant":false,"id":3508,"mutability":"mutable","name":"tempBytes","nodeType":"VariableDeclaration","scope":3513,"src":"9765:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3507,"name":"bytes","nodeType":"ElementaryTypeName","src":"9765:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3509,"nodeType":"VariableDeclarationStatement","src":"9765:22:18"},{"AST":{"nodeType":"YulBlock","src":"9807:2421:18","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"9863:1960:18","statements":[{"nodeType":"YulAssignment","src":"10019:24:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10038:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10032:5:18"},"nodeType":"YulFunctionCall","src":"10032:11:18"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"10019:9:18"}]},{"nodeType":"YulVariableDeclaration","src":"10667:33:18","value":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"10688:7:18"},{"kind":"number","nodeType":"YulLiteral","src":"10697:2:18","type":"","value":"31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10684:3:18"},"nodeType":"YulFunctionCall","src":"10684:16:18"},"variables":[{"name":"lengthmod","nodeType":"YulTypedName","src":"10671:9:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11021:70:18","value":{"arguments":[{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11039:9:18"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"11050:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11035:3:18"},"nodeType":"YulFunctionCall","src":"11035:25:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11066:4:18","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"11079:9:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11072:6:18"},"nodeType":"YulFunctionCall","src":"11072:17:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11062:3:18"},"nodeType":"YulFunctionCall","src":"11062:28:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11031:3:18"},"nodeType":"YulFunctionCall","src":"11031:60:18"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"11025:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11108:27:18","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11123:2:18"},{"name":"_length","nodeType":"YulIdentifier","src":"11127:7:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11119:3:18"},"nodeType":"YulFunctionCall","src":"11119:16:18"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"11112:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"11517:61:18","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11546:2:18"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11556:2:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11550:5:18"},"nodeType":"YulFunctionCall","src":"11550:9:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11539:6:18"},"nodeType":"YulFunctionCall","src":"11539:21:18"},"nodeType":"YulExpressionStatement","src":"11539:21:18"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11408:2:18"},{"name":"end","nodeType":"YulIdentifier","src":"11412:3:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11405:2:18"},"nodeType":"YulFunctionCall","src":"11405:11:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11417:99:18","statements":[{"nodeType":"YulAssignment","src":"11439:19:18","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11449:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"11453:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11445:3:18"},"nodeType":"YulFunctionCall","src":"11445:13:18"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"11439:2:18"}]},{"nodeType":"YulAssignment","src":"11479:19:18","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11489:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"11493:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11485:3:18"},"nodeType":"YulFunctionCall","src":"11485:13:18"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"11479:2:18"}]}]},"pre":{"nodeType":"YulBlock","src":"11157:247:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11306:80:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"11328:6:18"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"11336:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11324:3:18"},"nodeType":"YulFunctionCall","src":"11324:22:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11352:4:18","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"11365:9:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11358:6:18"},"nodeType":"YulFunctionCall","src":"11358:17:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11348:3:18"},"nodeType":"YulFunctionCall","src":"11348:28:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11320:3:18"},"nodeType":"YulFunctionCall","src":"11320:57:18"},{"name":"_start","nodeType":"YulIdentifier","src":"11379:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11316:3:18"},"nodeType":"YulFunctionCall","src":"11316:70:18"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"11310:2:18","type":""}]}]},"src":"11153:425:18"},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11603:9:18"},{"name":"_length","nodeType":"YulIdentifier","src":"11614:7:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11596:6:18"},"nodeType":"YulFunctionCall","src":"11596:26:18"},"nodeType":"YulExpressionStatement","src":"11596:26:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11777:4:18","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11791:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"11795:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11787:3:18"},"nodeType":"YulFunctionCall","src":"11787:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11804:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11800:3:18"},"nodeType":"YulFunctionCall","src":"11800:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11783:3:18"},"nodeType":"YulFunctionCall","src":"11783:25:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11770:6:18"},"nodeType":"YulFunctionCall","src":"11770:39:18"},"nodeType":"YulExpressionStatement","src":"11770:39:18"}]},"nodeType":"YulCase","src":"9856:1967:18","value":{"kind":"number","nodeType":"YulLiteral","src":"9861:1:18","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"11927:291:18","statements":[{"nodeType":"YulAssignment","src":"11945:24:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11964:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11958:5:18"},"nodeType":"YulFunctionCall","src":"11958:11:18"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11945:9:18"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"12139:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12150:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12132:6:18"},"nodeType":"YulFunctionCall","src":"12132:20:18"},"nodeType":"YulExpressionStatement","src":"12132:20:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12177:4:18","type":"","value":"0x40"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"12187:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12198:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12183:3:18"},"nodeType":"YulFunctionCall","src":"12183:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12170:6:18"},"nodeType":"YulFunctionCall","src":"12170:34:18"},"nodeType":"YulExpressionStatement","src":"12170:34:18"}]},"nodeType":"YulCase","src":"11919:299:18","value":"default"}],"expression":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"9835:7:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9828:6:18"},"nodeType":"YulFunctionCall","src":"9828:15:18"},"nodeType":"YulSwitch","src":"9821:2397:18"}]},"evmVersion":"constantinople","externalReferences":[{"declaration":3479,"isOffset":false,"isSlot":false,"src":"11328:6:18","valueSize":1},{"declaration":3483,"isOffset":false,"isSlot":false,"src":"10688:7:18","valueSize":1},{"declaration":3483,"isOffset":false,"isSlot":false,"src":"11127:7:18","valueSize":1},{"declaration":3483,"isOffset":false,"isSlot":false,"src":"11614:7:18","valueSize":1},{"declaration":3483,"isOffset":false,"isSlot":false,"src":"9835:7:18","valueSize":1},{"declaration":3481,"isOffset":false,"isSlot":false,"src":"11379:6:18","valueSize":1},{"declaration":3508,"isOffset":false,"isSlot":false,"src":"10019:9:18","valueSize":1},{"declaration":3508,"isOffset":false,"isSlot":false,"src":"11039:9:18","valueSize":1},{"declaration":3508,"isOffset":false,"isSlot":false,"src":"11603:9:18","valueSize":1},{"declaration":3508,"isOffset":false,"isSlot":false,"src":"11945:9:18","valueSize":1},{"declaration":3508,"isOffset":false,"isSlot":false,"src":"12139:9:18","valueSize":1},{"declaration":3508,"isOffset":false,"isSlot":false,"src":"12187:9:18","valueSize":1}],"id":3510,"nodeType":"InlineAssembly","src":"9798:2430:18"},{"expression":{"id":3511,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"12245:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3487,"id":3512,"nodeType":"Return","src":"12238:16:18"}]},"id":3514,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nodeType":"FunctionDefinition","parameters":{"id":3484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":3514,"src":"9481:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3478,"name":"bytes","nodeType":"ElementaryTypeName","src":"9481:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3481,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":3514,"src":"9510:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3480,"name":"uint256","nodeType":"ElementaryTypeName","src":"9510:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3483,"mutability":"mutable","name":"_length","nodeType":"VariableDeclaration","scope":3514,"src":"9534:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"9534:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9471:84:18"},"returnParameters":{"id":3487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3486,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3514,"src":"9603:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3485,"name":"bytes","nodeType":"ElementaryTypeName","src":"9603:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9602:14:18"},"scope":3783,"src":"9457:2804:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3539,"nodeType":"Block","src":"12355:266:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3524,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"12373:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12373:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3526,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"12390:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3230","id":3527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12399:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"12390:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12373:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f416464726573735f6f75744f66426f756e6473","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12403:23:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""},"value":"toAddress_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""}],"id":3523,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12365:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12365:62:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3532,"nodeType":"ExpressionStatement","src":"12365:62:18"},{"assignments":[3534],"declarations":[{"constant":false,"id":3534,"mutability":"mutable","name":"tempAddress","nodeType":"VariableDeclaration","scope":3539,"src":"12437:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3533,"name":"address","nodeType":"ElementaryTypeName","src":"12437:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3535,"nodeType":"VariableDeclarationStatement","src":"12437:19:18"},{"AST":{"nodeType":"YulBlock","src":"12476:110:18","statements":[{"nodeType":"YulAssignment","src":"12490:86:18","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12523:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"12531:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12519:3:18"},"nodeType":"YulFunctionCall","src":"12519:17:18"},{"name":"_start","nodeType":"YulIdentifier","src":"12538:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12515:3:18"},"nodeType":"YulFunctionCall","src":"12515:30:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12509:5:18"},"nodeType":"YulFunctionCall","src":"12509:37:18"},{"kind":"number","nodeType":"YulLiteral","src":"12548:27:18","type":"","value":"0x1000000000000000000000000"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12505:3:18"},"nodeType":"YulFunctionCall","src":"12505:71:18"},"variableNames":[{"name":"tempAddress","nodeType":"YulIdentifier","src":"12490:11:18"}]}]},"evmVersion":"constantinople","externalReferences":[{"declaration":3516,"isOffset":false,"isSlot":false,"src":"12523:6:18","valueSize":1},{"declaration":3518,"isOffset":false,"isSlot":false,"src":"12538:6:18","valueSize":1},{"declaration":3534,"isOffset":false,"isSlot":false,"src":"12490:11:18","valueSize":1}],"id":3536,"nodeType":"InlineAssembly","src":"12467:119:18"},{"expression":{"id":3537,"name":"tempAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"12603:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3522,"id":3538,"nodeType":"Return","src":"12596:18:18"}]},"id":3540,"implemented":true,"kind":"function","modifiers":[],"name":"toAddress","nodeType":"FunctionDefinition","parameters":{"id":3519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3516,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":3540,"src":"12286:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3515,"name":"bytes","nodeType":"ElementaryTypeName","src":"12286:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3518,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":3540,"src":"12307:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3517,"name":"uint256","nodeType":"ElementaryTypeName","src":"12307:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12285:37:18"},"returnParameters":{"id":3522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3521,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3540,"src":"12346:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3520,"name":"address","nodeType":"ElementaryTypeName","src":"12346:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12345:9:18"},"scope":3783,"src":"12267:354:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3565,"nodeType":"Block","src":"12711:218:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3550,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"12729:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12729:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3552,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"12746:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12755:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12746:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12729:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e74385f6f75744f66426f756e6473","id":3556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12759:21:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""},"value":"toUint8_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""}],"id":3549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12721:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12721:60:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3558,"nodeType":"ExpressionStatement","src":"12721:60:18"},{"assignments":[3560],"declarations":[{"constant":false,"id":3560,"mutability":"mutable","name":"tempUint","nodeType":"VariableDeclaration","scope":3565,"src":"12791:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3559,"name":"uint8","nodeType":"ElementaryTypeName","src":"12791:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3561,"nodeType":"VariableDeclarationStatement","src":"12791:14:18"},{"AST":{"nodeType":"YulBlock","src":"12825:72:18","statements":[{"nodeType":"YulAssignment","src":"12839:48:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12865:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"12873:3:18","type":"","value":"0x1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12861:3:18"},"nodeType":"YulFunctionCall","src":"12861:16:18"},{"name":"_start","nodeType":"YulIdentifier","src":"12879:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12857:3:18"},"nodeType":"YulFunctionCall","src":"12857:29:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12851:5:18"},"nodeType":"YulFunctionCall","src":"12851:36:18"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"12839:8:18"}]}]},"evmVersion":"constantinople","externalReferences":[{"declaration":3542,"isOffset":false,"isSlot":false,"src":"12865:6:18","valueSize":1},{"declaration":3544,"isOffset":false,"isSlot":false,"src":"12879:6:18","valueSize":1},{"declaration":3560,"isOffset":false,"isSlot":false,"src":"12839:8:18","valueSize":1}],"id":3562,"nodeType":"InlineAssembly","src":"12816:81:18"},{"expression":{"id":3563,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"12914:8:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3548,"id":3564,"nodeType":"Return","src":"12907:15:18"}]},"id":3566,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nodeType":"FunctionDefinition","parameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":3566,"src":"12644:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3541,"name":"bytes","nodeType":"ElementaryTypeName","src":"12644:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3544,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":3566,"src":"12665:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"12665:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12643:37:18"},"returnParameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3566,"src":"12704:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3546,"name":"uint8","nodeType":"ElementaryTypeName","src":"12704:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"12703:7:18"},"scope":3783,"src":"12627:302:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3591,"nodeType":"Block","src":"13021:219:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3576,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"13039:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13039:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3578,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"13056:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13065:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13056:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13039:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7431365f6f75744f66426f756e6473","id":3582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13068:22:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""},"value":"toUint16_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""}],"id":3575,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13031:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13031:60:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3584,"nodeType":"ExpressionStatement","src":"13031:60:18"},{"assignments":[3586],"declarations":[{"constant":false,"id":3586,"mutability":"mutable","name":"tempUint","nodeType":"VariableDeclaration","scope":3591,"src":"13101:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3585,"name":"uint16","nodeType":"ElementaryTypeName","src":"13101:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":3587,"nodeType":"VariableDeclarationStatement","src":"13101:15:18"},{"AST":{"nodeType":"YulBlock","src":"13136:72:18","statements":[{"nodeType":"YulAssignment","src":"13150:48:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13176:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"13184:3:18","type":"","value":"0x2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13172:3:18"},"nodeType":"YulFunctionCall","src":"13172:16:18"},{"name":"_start","nodeType":"YulIdentifier","src":"13190:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13168:3:18"},"nodeType":"YulFunctionCall","src":"13168:29:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13162:5:18"},"nodeType":"YulFunctionCall","src":"13162:36:18"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13150:8:18"}]}]},"evmVersion":"constantinople","externalReferences":[{"declaration":3568,"isOffset":false,"isSlot":false,"src":"13176:6:18","valueSize":1},{"declaration":3570,"isOffset":false,"isSlot":false,"src":"13190:6:18","valueSize":1},{"declaration":3586,"isOffset":false,"isSlot":false,"src":"13150:8:18","valueSize":1}],"id":3588,"nodeType":"InlineAssembly","src":"13127:81:18"},{"expression":{"id":3589,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"13225:8:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":3574,"id":3590,"nodeType":"Return","src":"13218:15:18"}]},"id":3592,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nodeType":"FunctionDefinition","parameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":3592,"src":"12953:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3567,"name":"bytes","nodeType":"ElementaryTypeName","src":"12953:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":3592,"src":"12974:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"12974:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12952:37:18"},"returnParameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3592,"src":"13013:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3572,"name":"uint16","nodeType":"ElementaryTypeName","src":"13013:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"13012:8:18"},"scope":3783,"src":"12935:305:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3617,"nodeType":"Block","src":"13332:219:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3602,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"13350:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13350:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3604,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"13367:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"34","id":3605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13376:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"13367:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13350:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7433325f6f75744f66426f756e6473","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13379:22:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""},"value":"toUint32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""}],"id":3601,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13342:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13342:60:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3610,"nodeType":"ExpressionStatement","src":"13342:60:18"},{"assignments":[3612],"declarations":[{"constant":false,"id":3612,"mutability":"mutable","name":"tempUint","nodeType":"VariableDeclaration","scope":3617,"src":"13412:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3611,"name":"uint32","nodeType":"ElementaryTypeName","src":"13412:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":3613,"nodeType":"VariableDeclarationStatement","src":"13412:15:18"},{"AST":{"nodeType":"YulBlock","src":"13447:72:18","statements":[{"nodeType":"YulAssignment","src":"13461:48:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13487:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"13495:3:18","type":"","value":"0x4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13483:3:18"},"nodeType":"YulFunctionCall","src":"13483:16:18"},{"name":"_start","nodeType":"YulIdentifier","src":"13501:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13479:3:18"},"nodeType":"YulFunctionCall","src":"13479:29:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13473:5:18"},"nodeType":"YulFunctionCall","src":"13473:36:18"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13461:8:18"}]}]},"evmVersion":"constantinople","externalReferences":[{"declaration":3594,"isOffset":false,"isSlot":false,"src":"13487:6:18","valueSize":1},{"declaration":3596,"isOffset":false,"isSlot":false,"src":"13501:6:18","valueSize":1},{"declaration":3612,"isOffset":false,"isSlot":false,"src":"13461:8:18","valueSize":1}],"id":3614,"nodeType":"InlineAssembly","src":"13438:81:18"},{"expression":{"id":3615,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"13536:8:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3600,"id":3616,"nodeType":"Return","src":"13529:15:18"}]},"id":3618,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nodeType":"FunctionDefinition","parameters":{"id":3597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3594,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":3618,"src":"13264:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3593,"name":"bytes","nodeType":"ElementaryTypeName","src":"13264:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3596,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":3618,"src":"13285:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3595,"name":"uint256","nodeType":"ElementaryTypeName","src":"13285:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13263:37:18"},"returnParameters":{"id":3600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3599,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3618,"src":"13324:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3598,"name":"uint32","nodeType":"ElementaryTypeName","src":"13324:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13323:8:18"},"scope":3783,"src":"13246:305:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3643,"nodeType":"Block","src":"13643:219:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3628,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"13661:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13661:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3630,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"13678:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"38","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13687:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"13678:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13661:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7436345f6f75744f66426f756e6473","id":3634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13690:22:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""},"value":"toUint64_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""}],"id":3627,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13653:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13653:60:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3636,"nodeType":"ExpressionStatement","src":"13653:60:18"},{"assignments":[3638],"declarations":[{"constant":false,"id":3638,"mutability":"mutable","name":"tempUint","nodeType":"VariableDeclaration","scope":3643,"src":"13723:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3637,"name":"uint64","nodeType":"ElementaryTypeName","src":"13723:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3639,"nodeType":"VariableDeclarationStatement","src":"13723:15:18"},{"AST":{"nodeType":"YulBlock","src":"13758:72:18","statements":[{"nodeType":"YulAssignment","src":"13772:48:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13798:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"13806:3:18","type":"","value":"0x8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13794:3:18"},"nodeType":"YulFunctionCall","src":"13794:16:18"},{"name":"_start","nodeType":"YulIdentifier","src":"13812:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13790:3:18"},"nodeType":"YulFunctionCall","src":"13790:29:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13784:5:18"},"nodeType":"YulFunctionCall","src":"13784:36:18"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13772:8:18"}]}]},"evmVersion":"constantinople","externalReferences":[{"declaration":3620,"isOffset":false,"isSlot":false,"src":"13798:6:18","valueSize":1},{"declaration":3622,"isOffset":false,"isSlot":false,"src":"13812:6:18","valueSize":1},{"declaration":3638,"isOffset":false,"isSlot":false,"src":"13772:8:18","valueSize":1}],"id":3640,"nodeType":"InlineAssembly","src":"13749:81:18"},{"expression":{"id":3641,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"13847:8:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3626,"id":3642,"nodeType":"Return","src":"13840:15:18"}]},"id":3644,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nodeType":"FunctionDefinition","parameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3620,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":3644,"src":"13575:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3619,"name":"bytes","nodeType":"ElementaryTypeName","src":"13575:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3622,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":3644,"src":"13596:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3621,"name":"uint256","nodeType":"ElementaryTypeName","src":"13596:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13574:37:18"},"returnParameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3644,"src":"13635:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3624,"name":"uint64","nodeType":"ElementaryTypeName","src":"13635:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13634:8:18"},"scope":3783,"src":"13557:305:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3669,"nodeType":"Block","src":"13954:220:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3654,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"13972:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13972:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3656,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"13989:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:18","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"13989:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13972:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7439365f6f75744f66426f756e6473","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14002:22:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""},"value":"toUint96_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""}],"id":3653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13964:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13964:61:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3662,"nodeType":"ExpressionStatement","src":"13964:61:18"},{"assignments":[3664],"declarations":[{"constant":false,"id":3664,"mutability":"mutable","name":"tempUint","nodeType":"VariableDeclaration","scope":3669,"src":"14035:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3663,"name":"uint96","nodeType":"ElementaryTypeName","src":"14035:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":3665,"nodeType":"VariableDeclarationStatement","src":"14035:15:18"},{"AST":{"nodeType":"YulBlock","src":"14070:72:18","statements":[{"nodeType":"YulAssignment","src":"14084:48:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14110:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"14118:3:18","type":"","value":"0xc"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14106:3:18"},"nodeType":"YulFunctionCall","src":"14106:16:18"},{"name":"_start","nodeType":"YulIdentifier","src":"14124:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14102:3:18"},"nodeType":"YulFunctionCall","src":"14102:29:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14096:5:18"},"nodeType":"YulFunctionCall","src":"14096:36:18"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14084:8:18"}]}]},"evmVersion":"constantinople","externalReferences":[{"declaration":3646,"isOffset":false,"isSlot":false,"src":"14110:6:18","valueSize":1},{"declaration":3648,"isOffset":false,"isSlot":false,"src":"14124:6:18","valueSize":1},{"declaration":3664,"isOffset":false,"isSlot":false,"src":"14084:8:18","valueSize":1}],"id":3666,"nodeType":"InlineAssembly","src":"14061:81:18"},{"expression":{"id":3667,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"14159:8:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3652,"id":3668,"nodeType":"Return","src":"14152:15:18"}]},"id":3670,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nodeType":"FunctionDefinition","parameters":{"id":3649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3646,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":3670,"src":"13886:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3645,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3648,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":3670,"src":"13907:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"13907:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13885:37:18"},"returnParameters":{"id":3652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3651,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3670,"src":"13946:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3650,"name":"uint96","nodeType":"ElementaryTypeName","src":"13946:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"13945:8:18"},"scope":3783,"src":"13868:306:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3695,"nodeType":"Block","src":"14268:223:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3680,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"14286:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14286:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3682,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"14303:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3136","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14312:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14303:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14286:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743132385f6f75744f66426f756e6473","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14316:23:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""},"value":"toUint128_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""}],"id":3679,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14278:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14278:62:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3688,"nodeType":"ExpressionStatement","src":"14278:62:18"},{"assignments":[3690],"declarations":[{"constant":false,"id":3690,"mutability":"mutable","name":"tempUint","nodeType":"VariableDeclaration","scope":3695,"src":"14350:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3689,"name":"uint128","nodeType":"ElementaryTypeName","src":"14350:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":3691,"nodeType":"VariableDeclarationStatement","src":"14350:16:18"},{"AST":{"nodeType":"YulBlock","src":"14386:73:18","statements":[{"nodeType":"YulAssignment","src":"14400:49:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14426:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"14434:4:18","type":"","value":"0x10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14422:3:18"},"nodeType":"YulFunctionCall","src":"14422:17:18"},{"name":"_start","nodeType":"YulIdentifier","src":"14441:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14418:3:18"},"nodeType":"YulFunctionCall","src":"14418:30:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14412:5:18"},"nodeType":"YulFunctionCall","src":"14412:37:18"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14400:8:18"}]}]},"evmVersion":"constantinople","externalReferences":[{"declaration":3672,"isOffset":false,"isSlot":false,"src":"14426:6:18","valueSize":1},{"declaration":3674,"isOffset":false,"isSlot":false,"src":"14441:6:18","valueSize":1},{"declaration":3690,"isOffset":false,"isSlot":false,"src":"14400:8:18","valueSize":1}],"id":3692,"nodeType":"InlineAssembly","src":"14377:82:18"},{"expression":{"id":3693,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"14476:8:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3678,"id":3694,"nodeType":"Return","src":"14469:15:18"}]},"id":3696,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nodeType":"FunctionDefinition","parameters":{"id":3675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":3696,"src":"14199:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3671,"name":"bytes","nodeType":"ElementaryTypeName","src":"14199:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3674,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":3696,"src":"14220:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"14220:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14198:37:18"},"returnParameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3696,"src":"14259:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3676,"name":"uint128","nodeType":"ElementaryTypeName","src":"14259:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"14258:9:18"},"scope":3783,"src":"14180:311:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3721,"nodeType":"Block","src":"14585:223:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3706,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"14603:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14603:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3708,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"14620:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14620:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14603:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743235365f6f75744f66426f756e6473","id":3712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14633:23:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""},"value":"toUint256_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""}],"id":3705,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14595:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14595:62:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3714,"nodeType":"ExpressionStatement","src":"14595:62:18"},{"assignments":[3716],"declarations":[{"constant":false,"id":3716,"mutability":"mutable","name":"tempUint","nodeType":"VariableDeclaration","scope":3721,"src":"14667:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3715,"name":"uint256","nodeType":"ElementaryTypeName","src":"14667:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3717,"nodeType":"VariableDeclarationStatement","src":"14667:16:18"},{"AST":{"nodeType":"YulBlock","src":"14703:73:18","statements":[{"nodeType":"YulAssignment","src":"14717:49:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14743:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"14751:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14739:3:18"},"nodeType":"YulFunctionCall","src":"14739:17:18"},{"name":"_start","nodeType":"YulIdentifier","src":"14758:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14735:3:18"},"nodeType":"YulFunctionCall","src":"14735:30:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14729:5:18"},"nodeType":"YulFunctionCall","src":"14729:37:18"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14717:8:18"}]}]},"evmVersion":"constantinople","externalReferences":[{"declaration":3698,"isOffset":false,"isSlot":false,"src":"14743:6:18","valueSize":1},{"declaration":3700,"isOffset":false,"isSlot":false,"src":"14758:6:18","valueSize":1},{"declaration":3716,"isOffset":false,"isSlot":false,"src":"14717:8:18","valueSize":1}],"id":3718,"nodeType":"InlineAssembly","src":"14694:82:18"},{"expression":{"id":3719,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"14793:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3704,"id":3720,"nodeType":"Return","src":"14786:15:18"}]},"id":3722,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nodeType":"FunctionDefinition","parameters":{"id":3701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":3722,"src":"14516:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3697,"name":"bytes","nodeType":"ElementaryTypeName","src":"14516:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3700,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":3722,"src":"14537:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3699,"name":"uint256","nodeType":"ElementaryTypeName","src":"14537:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14515:37:18"},"returnParameters":{"id":3704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3703,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3722,"src":"14576:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3702,"name":"uint256","nodeType":"ElementaryTypeName","src":"14576:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14575:9:18"},"scope":3783,"src":"14497:311:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3747,"nodeType":"Block","src":"14902:232:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3732,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"14920:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14920:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3734,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"14937:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14946:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14937:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14920:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f427974657333325f6f75744f66426f756e6473","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14950:23:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""},"value":"toBytes32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""}],"id":3731,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14912:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14912:62:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3740,"nodeType":"ExpressionStatement","src":"14912:62:18"},{"assignments":[3742],"declarations":[{"constant":false,"id":3742,"mutability":"mutable","name":"tempBytes32","nodeType":"VariableDeclaration","scope":3747,"src":"14984:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14984:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3743,"nodeType":"VariableDeclarationStatement","src":"14984:19:18"},{"AST":{"nodeType":"YulBlock","src":"15023:76:18","statements":[{"nodeType":"YulAssignment","src":"15037:52:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"15066:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"15074:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15062:3:18"},"nodeType":"YulFunctionCall","src":"15062:17:18"},{"name":"_start","nodeType":"YulIdentifier","src":"15081:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15058:3:18"},"nodeType":"YulFunctionCall","src":"15058:30:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15052:5:18"},"nodeType":"YulFunctionCall","src":"15052:37:18"},"variableNames":[{"name":"tempBytes32","nodeType":"YulIdentifier","src":"15037:11:18"}]}]},"evmVersion":"constantinople","externalReferences":[{"declaration":3724,"isOffset":false,"isSlot":false,"src":"15066:6:18","valueSize":1},{"declaration":3726,"isOffset":false,"isSlot":false,"src":"15081:6:18","valueSize":1},{"declaration":3742,"isOffset":false,"isSlot":false,"src":"15037:11:18","valueSize":1}],"id":3744,"nodeType":"InlineAssembly","src":"15014:85:18"},{"expression":{"id":3745,"name":"tempBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"15116:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3730,"id":3746,"nodeType":"Return","src":"15109:18:18"}]},"id":3748,"implemented":true,"kind":"function","modifiers":[],"name":"toBytes32","nodeType":"FunctionDefinition","parameters":{"id":3727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3724,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":3748,"src":"14833:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3723,"name":"bytes","nodeType":"ElementaryTypeName","src":"14833:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3726,"mutability":"mutable","name":"_start","nodeType":"VariableDeclaration","scope":3748,"src":"14854:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3725,"name":"uint256","nodeType":"ElementaryTypeName","src":"14854:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14832:37:18"},"returnParameters":{"id":3730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3748,"src":"14893:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14893:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14892:9:18"},"scope":3783,"src":"14814:320:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3764,"nodeType":"Block","src":"15233:1323:18","statements":[{"assignments":[3758],"declarations":[{"constant":false,"id":3758,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":3764,"src":"15243:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3757,"name":"bool","nodeType":"ElementaryTypeName","src":"15243:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3760,"initialValue":{"hexValue":"74727565","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15258:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"15243:19:18"},{"AST":{"nodeType":"YulBlock","src":"15282:1243:18","statements":[{"nodeType":"YulVariableDeclaration","src":"15296:30:18","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15316:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15310:5:18"},"nodeType":"YulFunctionCall","src":"15310:16:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15300:6:18","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"15459:961:18","statements":[{"nodeType":"YulVariableDeclaration","src":"15688:11:18","value":{"kind":"number","nodeType":"YulLiteral","src":"15698:1:18","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"15692:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15717:30:18","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15731:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15742:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15727:3:18"},"nodeType":"YulFunctionCall","src":"15727:20:18"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"15721:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15764:26:18","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15779:2:18"},{"name":"length","nodeType":"YulIdentifier","src":"15783:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15775:3:18"},"nodeType":"YulFunctionCall","src":"15775:15:18"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"15768:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"16122:284:18","statements":[{"body":{"nodeType":"YulBlock","src":"16258:130:18","statements":[{"nodeType":"YulAssignment","src":"16322:12:18","value":{"kind":"number","nodeType":"YulLiteral","src":"16333:1:18","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16322:7:18"}]},{"nodeType":"YulAssignment","src":"16359:7:18","value":{"kind":"number","nodeType":"YulLiteral","src":"16365:1:18","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"16359:2:18"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"16241:2:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16235:5:18"},"nodeType":"YulFunctionCall","src":"16235:9:18"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"16252:2:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16246:5:18"},"nodeType":"YulFunctionCall","src":"16246:9:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16232:2:18"},"nodeType":"YulFunctionCall","src":"16232:24:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16225:6:18"},"nodeType":"YulFunctionCall","src":"16225:32:18"},"nodeType":"YulIf","src":"16222:2:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"16004:2:18"},{"name":"end","nodeType":"YulIdentifier","src":"16008:3:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16001:2:18"},"nodeType":"YulFunctionCall","src":"16001:11:18"},{"name":"cb","nodeType":"YulIdentifier","src":"16014:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15997:3:18"},"nodeType":"YulFunctionCall","src":"15997:20:18"},{"kind":"number","nodeType":"YulLiteral","src":"16019:1:18","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15994:2:18"},"nodeType":"YulFunctionCall","src":"15994:27:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16022:99:18","statements":[{"nodeType":"YulAssignment","src":"16044:19:18","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"16054:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"16058:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16050:3:18"},"nodeType":"YulFunctionCall","src":"16050:13:18"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"16044:2:18"}]},{"nodeType":"YulAssignment","src":"16084:19:18","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"16094:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"16098:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16090:3:18"},"nodeType":"YulFunctionCall","src":"16090:13:18"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"16084:2:18"}]}]},"pre":{"nodeType":"YulBlock","src":"15812:181:18","statements":[{"nodeType":"YulVariableDeclaration","src":"15834:31:18","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15848:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"15860:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15844:3:18"},"nodeType":"YulFunctionCall","src":"15844:21:18"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"15838:2:18","type":""}]}]},"src":"15808:598:18"}]},"nodeType":"YulCase","src":"15452:968:18","value":{"kind":"number","nodeType":"YulLiteral","src":"15457:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"16441:74:18","statements":[{"nodeType":"YulAssignment","src":"16489:12:18","value":{"kind":"number","nodeType":"YulLiteral","src":"16500:1:18","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16489:7:18"}]}]},"nodeType":"YulCase","src":"16433:82:18","value":"default"}],"expression":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15413:6:18"},{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15427:10:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15421:5:18"},"nodeType":"YulFunctionCall","src":"15421:17:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15410:2:18"},"nodeType":"YulFunctionCall","src":"15410:29:18"},"nodeType":"YulSwitch","src":"15403:1112:18"}]},"evmVersion":"constantinople","externalReferences":[{"declaration":3752,"isOffset":false,"isSlot":false,"src":"15427:10:18","valueSize":1},{"declaration":3752,"isOffset":false,"isSlot":false,"src":"15848:10:18","valueSize":1},{"declaration":3750,"isOffset":false,"isSlot":false,"src":"15316:9:18","valueSize":1},{"declaration":3750,"isOffset":false,"isSlot":false,"src":"15731:9:18","valueSize":1},{"declaration":3758,"isOffset":false,"isSlot":false,"src":"16322:7:18","valueSize":1},{"declaration":3758,"isOffset":false,"isSlot":false,"src":"16489:7:18","valueSize":1}],"id":3761,"nodeType":"InlineAssembly","src":"15273:1252:18"},{"expression":{"id":3762,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"16542:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3756,"id":3763,"nodeType":"Return","src":"16535:14:18"}]},"id":3765,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nodeType":"FunctionDefinition","parameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3750,"mutability":"mutable","name":"_preBytes","nodeType":"VariableDeclaration","scope":3765,"src":"15155:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3749,"name":"bytes","nodeType":"ElementaryTypeName","src":"15155:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3752,"mutability":"mutable","name":"_postBytes","nodeType":"VariableDeclaration","scope":3765,"src":"15179:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3751,"name":"bytes","nodeType":"ElementaryTypeName","src":"15179:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15154:49:18"},"returnParameters":{"id":3756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3755,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3765,"src":"15227:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3754,"name":"bool","nodeType":"ElementaryTypeName","src":"15227:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15226:6:18"},"scope":3783,"src":"15140:1416:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3781,"nodeType":"Block","src":"16713:2559:18","statements":[{"assignments":[3775],"declarations":[{"constant":false,"id":3775,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":3781,"src":"16723:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3774,"name":"bool","nodeType":"ElementaryTypeName","src":"16723:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3777,"initialValue":{"hexValue":"74727565","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16738:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"16723:19:18"},{"AST":{"nodeType":"YulBlock","src":"16762:2479:18","statements":[{"nodeType":"YulVariableDeclaration","src":"16821:34:18","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"16840:14:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"16834:5:18"},"nodeType":"YulFunctionCall","src":"16834:21:18"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"16825:5:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16946:76:18","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"16969:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16984:5:18","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17002:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"17009:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16998:3:18"},"nodeType":"YulFunctionCall","src":"16998:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16991:6:18"},"nodeType":"YulFunctionCall","src":"16991:21:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16980:3:18"},"nodeType":"YulFunctionCall","src":"16980:33:18"},{"kind":"number","nodeType":"YulLiteral","src":"17015:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16976:3:18"},"nodeType":"YulFunctionCall","src":"16976:41:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16965:3:18"},"nodeType":"YulFunctionCall","src":"16965:53:18"},{"kind":"number","nodeType":"YulLiteral","src":"17020:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16961:3:18"},"nodeType":"YulFunctionCall","src":"16961:61:18"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"16950:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17035:32:18","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"17056:10:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17050:5:18"},"nodeType":"YulFunctionCall","src":"17050:17:18"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"17039:7:18","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"17191:1945:18","statements":[{"body":{"nodeType":"YulBlock","src":"17502:1620:18","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"17574:340:18","statements":[{"nodeType":"YulAssignment","src":"17667:38:18","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17684:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"17691:5:18","type":"","value":"0x100"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17680:3:18"},"nodeType":"YulFunctionCall","src":"17680:17:18"},{"kind":"number","nodeType":"YulLiteral","src":"17699:5:18","type":"","value":"0x100"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17676:3:18"},"nodeType":"YulFunctionCall","src":"17676:29:18"},"variableNames":[{"name":"fslot","nodeType":"YulIdentifier","src":"17667:5:18"}]},{"body":{"nodeType":"YulBlock","src":"17782:110:18","statements":[{"nodeType":"YulAssignment","src":"17854:12:18","value":{"kind":"number","nodeType":"YulLiteral","src":"17865:1:18","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17854:7:18"}]}]},"condition":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17744:5:18"},{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"17761:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"17773:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17757:3:18"},"nodeType":"YulFunctionCall","src":"17757:21:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17751:5:18"},"nodeType":"YulFunctionCall","src":"17751:28:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17741:2:18"},"nodeType":"YulFunctionCall","src":"17741:39:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17734:6:18"},"nodeType":"YulFunctionCall","src":"17734:47:18"},"nodeType":"YulIf","src":"17731:2:18"}]},"nodeType":"YulCase","src":"17567:347:18","value":{"kind":"number","nodeType":"YulLiteral","src":"17572:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17943:1161:18","statements":[{"nodeType":"YulVariableDeclaration","src":"18212:11:18","value":{"kind":"number","nodeType":"YulLiteral","src":"18222:1:18","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"18216:2:18","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18336:3:18","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"18341:14:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18329:6:18"},"nodeType":"YulFunctionCall","src":"18329:27:18"},"nodeType":"YulExpressionStatement","src":"18329:27:18"},{"nodeType":"YulVariableDeclaration","src":"18381:30:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18401:3:18","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"18406:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18391:9:18"},"nodeType":"YulFunctionCall","src":"18391:20:18"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"18385:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18437:31:18","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"18451:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"18463:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18447:3:18"},"nodeType":"YulFunctionCall","src":"18447:21:18"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"18441:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18493:27:18","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18508:2:18"},{"name":"mlength","nodeType":"YulIdentifier","src":"18512:7:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18504:3:18"},"nodeType":"YulFunctionCall","src":"18504:16:18"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"18497:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"18828:254:18","statements":[{"body":{"nodeType":"YulBlock","src":"18894:162:18","statements":[{"nodeType":"YulAssignment","src":"18974:12:18","value":{"kind":"number","nodeType":"YulLiteral","src":"18985:1:18","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18974:7:18"}]},{"nodeType":"YulAssignment","src":"19019:7:18","value":{"kind":"number","nodeType":"YulLiteral","src":"19025:1:18","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"19019:2:18"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18877:2:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18871:5:18"},"nodeType":"YulFunctionCall","src":"18871:9:18"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18888:2:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18882:5:18"},"nodeType":"YulFunctionCall","src":"18882:9:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18868:2:18"},"nodeType":"YulFunctionCall","src":"18868:24:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18861:6:18"},"nodeType":"YulFunctionCall","src":"18861:32:18"},"nodeType":"YulIf","src":"18858:2:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18689:2:18"},{"name":"end","nodeType":"YulIdentifier","src":"18693:3:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18686:2:18"},"nodeType":"YulFunctionCall","src":"18686:11:18"},{"name":"cb","nodeType":"YulIdentifier","src":"18699:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18682:3:18"},"nodeType":"YulFunctionCall","src":"18682:20:18"},{"kind":"number","nodeType":"YulLiteral","src":"18704:1:18","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18679:2:18"},"nodeType":"YulFunctionCall","src":"18679:27:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18707:120:18","statements":[{"nodeType":"YulAssignment","src":"18737:16:18","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18747:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"18751:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18743:3:18"},"nodeType":"YulFunctionCall","src":"18743:10:18"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"18737:2:18"}]},{"nodeType":"YulAssignment","src":"18782:19:18","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18792:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"18796:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18788:3:18"},"nodeType":"YulFunctionCall","src":"18788:13:18"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"18782:2:18"}]}]},"pre":{"nodeType":"YulBlock","src":"18676:2:18","statements":[]},"src":"18672:410:18"}]},"nodeType":"YulCase","src":"17935:1169:18","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17534:7:18"},{"kind":"number","nodeType":"YulLiteral","src":"17543:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17531:2:18"},"nodeType":"YulFunctionCall","src":"17531:15:18"},"nodeType":"YulSwitch","src":"17524:1580:18"}]},"condition":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17492:7:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17485:6:18"},"nodeType":"YulFunctionCall","src":"17485:15:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17478:6:18"},"nodeType":"YulFunctionCall","src":"17478:23:18"},"nodeType":"YulIf","src":"17475:2:18"}]},"nodeType":"YulCase","src":"17184:1952:18","value":{"kind":"number","nodeType":"YulLiteral","src":"17189:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"19157:74:18","statements":[{"nodeType":"YulAssignment","src":"19205:12:18","value":{"kind":"number","nodeType":"YulLiteral","src":"19216:1:18","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19205:7:18"}]}]},"nodeType":"YulCase","src":"19149:82:18","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17154:7:18"},{"name":"mlength","nodeType":"YulIdentifier","src":"17163:7:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17151:2:18"},"nodeType":"YulFunctionCall","src":"17151:20:18"},"nodeType":"YulSwitch","src":"17144:2087:18"}]},"evmVersion":"constantinople","externalReferences":[{"declaration":3769,"isOffset":false,"isSlot":false,"src":"17056:10:18","valueSize":1},{"declaration":3769,"isOffset":false,"isSlot":false,"src":"17761:10:18","valueSize":1},{"declaration":3769,"isOffset":false,"isSlot":false,"src":"18451:10:18","valueSize":1},{"declaration":3767,"isOffset":false,"isSlot":true,"src":"16840:14:18","suffix":"slot","valueSize":1},{"declaration":3767,"isOffset":false,"isSlot":true,"src":"18341:14:18","suffix":"slot","valueSize":1},{"declaration":3775,"isOffset":false,"isSlot":false,"src":"17854:7:18","valueSize":1},{"declaration":3775,"isOffset":false,"isSlot":false,"src":"18974:7:18","valueSize":1},{"declaration":3775,"isOffset":false,"isSlot":false,"src":"19205:7:18","valueSize":1}],"id":3778,"nodeType":"InlineAssembly","src":"16753:2488:18"},{"expression":{"id":3779,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"19258:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3773,"id":3780,"nodeType":"Return","src":"19251:14:18"}]},"id":3782,"implemented":true,"kind":"function","modifiers":[],"name":"equalStorage","nodeType":"FunctionDefinition","parameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3767,"mutability":"mutable","name":"_preBytes","nodeType":"VariableDeclaration","scope":3782,"src":"16593:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3766,"name":"bytes","nodeType":"ElementaryTypeName","src":"16593:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3769,"mutability":"mutable","name":"_postBytes","nodeType":"VariableDeclaration","scope":3782,"src":"16626:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3768,"name":"bytes","nodeType":"ElementaryTypeName","src":"16626:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16583:72:18"},"returnParameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3782,"src":"16703:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3771,"name":"bool","nodeType":"ElementaryTypeName","src":"16703:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16702:6:18"},"scope":3783,"src":"16562:2710:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3784,"src":"370:18904:18"}],"src":"336:18939:18"},"id":18}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"AccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2129:19","statements":[{"nodeType":"YulBlock","src":"6:3:19","statements":[]},{"body":{"nodeType":"YulBlock","src":"80:815:19","statements":[{"body":{"nodeType":"YulBlock","src":"129:24:19","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"138:5:19"},{"name":"array","nodeType":"YulIdentifier","src":"145:5:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:19"},"nodeType":"YulFunctionCall","src":"131:20:19"},"nodeType":"YulExpressionStatement","src":"131:20:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"108:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"116:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"104:3:19"},"nodeType":"YulFunctionCall","src":"104:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"123:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"100:3:19"},"nodeType":"YulFunctionCall","src":"100:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"93:6:19"},"nodeType":"YulFunctionCall","src":"93:35:19"},"nodeType":"YulIf","src":"90:2:19"},{"nodeType":"YulVariableDeclaration","src":"162:23:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"178:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"172:5:19"},"nodeType":"YulFunctionCall","src":"172:13:19"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"166:2:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"194:28:19","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"212:2:19","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"216:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"208:3:19"},"nodeType":"YulFunctionCall","src":"208:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"220:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"204:3:19"},"nodeType":"YulFunctionCall","src":"204:18:19"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"198:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"245:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"247:16:19"},"nodeType":"YulFunctionCall","src":"247:18:19"},"nodeType":"YulExpressionStatement","src":"247:18:19"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"237:2:19"},{"name":"_2","nodeType":"YulIdentifier","src":"241:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"234:2:19"},"nodeType":"YulFunctionCall","src":"234:10:19"},"nodeType":"YulIf","src":"231:2:19"},{"nodeType":"YulVariableDeclaration","src":"276:23:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"296:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"290:5:19"},"nodeType":"YulFunctionCall","src":"290:9:19"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"280:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"308:14:19","value":{"kind":"number","nodeType":"YulLiteral","src":"318:4:19","type":"","value":"0x20"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"312:2:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"331:67:19","value":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"357:6:19"},{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"373:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"377:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:19"},"nodeType":"YulFunctionCall","src":"369:13:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"388:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"384:3:19"},"nodeType":"YulFunctionCall","src":"384:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"365:3:19"},"nodeType":"YulFunctionCall","src":"365:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"353:3:19"},"nodeType":"YulFunctionCall","src":"353:40:19"},{"name":"_3","nodeType":"YulIdentifier","src":"395:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"349:3:19"},"nodeType":"YulFunctionCall","src":"349:49:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"335:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"457:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"459:16:19"},"nodeType":"YulFunctionCall","src":"459:18:19"},"nodeType":"YulExpressionStatement","src":"459:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"416:10:19"},{"name":"_2","nodeType":"YulIdentifier","src":"428:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"413:2:19"},"nodeType":"YulFunctionCall","src":"413:18:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"436:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"448:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"433:2:19"},"nodeType":"YulFunctionCall","src":"433:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"410:2:19"},"nodeType":"YulFunctionCall","src":"410:46:19"},"nodeType":"YulIf","src":"407:2:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"495:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"499:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"488:6:19"},"nodeType":"YulFunctionCall","src":"488:22:19"},"nodeType":"YulExpressionStatement","src":"488:22:19"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"526:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"534:2:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"519:6:19"},"nodeType":"YulFunctionCall","src":"519:18:19"},"nodeType":"YulExpressionStatement","src":"519:18:19"},{"body":{"nodeType":"YulBlock","src":"583:24:19","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"592:5:19"},{"name":"array","nodeType":"YulIdentifier","src":"599:5:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"585:6:19"},"nodeType":"YulFunctionCall","src":"585:20:19"},"nodeType":"YulExpressionStatement","src":"585:20:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"560:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"568:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"556:3:19"},"nodeType":"YulFunctionCall","src":"556:15:19"},{"name":"_3","nodeType":"YulIdentifier","src":"573:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"552:3:19"},"nodeType":"YulFunctionCall","src":"552:24:19"},{"name":"end","nodeType":"YulIdentifier","src":"578:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"549:2:19"},"nodeType":"YulFunctionCall","src":"549:33:19"},"nodeType":"YulIf","src":"546:2:19"},{"nodeType":"YulVariableDeclaration","src":"616:14:19","value":{"name":"array","nodeType":"YulIdentifier","src":"625:5:19"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"620:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"685:87:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"714:6:19"},{"name":"i","nodeType":"YulIdentifier","src":"722:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"710:3:19"},"nodeType":"YulFunctionCall","src":"710:14:19"},{"name":"_3","nodeType":"YulIdentifier","src":"726:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"706:3:19"},"nodeType":"YulFunctionCall","src":"706:23:19"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"745:6:19"},{"name":"i","nodeType":"YulIdentifier","src":"753:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"741:3:19"},"nodeType":"YulFunctionCall","src":"741:14:19"},{"name":"_3","nodeType":"YulIdentifier","src":"757:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"737:3:19"},"nodeType":"YulFunctionCall","src":"737:23:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"731:5:19"},"nodeType":"YulFunctionCall","src":"731:30:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"699:6:19"},"nodeType":"YulFunctionCall","src":"699:63:19"},"nodeType":"YulExpressionStatement","src":"699:63:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"650:1:19"},{"name":"_1","nodeType":"YulIdentifier","src":"653:2:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"647:2:19"},"nodeType":"YulFunctionCall","src":"647:9:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"657:19:19","statements":[{"nodeType":"YulAssignment","src":"659:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"668:1:19"},{"name":"_3","nodeType":"YulIdentifier","src":"671:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"664:3:19"},"nodeType":"YulFunctionCall","src":"664:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"659:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"643:3:19","statements":[]},"src":"639:133:19"},{"body":{"nodeType":"YulBlock","src":"802:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"831:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"839:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"827:3:19"},"nodeType":"YulFunctionCall","src":"827:15:19"},{"name":"_3","nodeType":"YulIdentifier","src":"844:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"823:3:19"},"nodeType":"YulFunctionCall","src":"823:24:19"},{"name":"array","nodeType":"YulIdentifier","src":"849:5:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"816:6:19"},"nodeType":"YulFunctionCall","src":"816:39:19"},"nodeType":"YulExpressionStatement","src":"816:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"787:1:19"},{"name":"_1","nodeType":"YulIdentifier","src":"790:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"784:2:19"},"nodeType":"YulFunctionCall","src":"784:9:19"},"nodeType":"YulIf","src":"781:2:19"},{"nodeType":"YulAssignment","src":"874:15:19","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"883:6:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"874:5:19"}]}]},"name":"abi_decode_t_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"54:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"62:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"70:5:19","type":""}],"src":"14:881:19"},{"body":{"nodeType":"YulBlock","src":"1018:478:19","statements":[{"body":{"nodeType":"YulBlock","src":"1064:26:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1073:6:19"},{"name":"value0","nodeType":"YulIdentifier","src":"1081:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1066:6:19"},"nodeType":"YulFunctionCall","src":"1066:22:19"},"nodeType":"YulExpressionStatement","src":"1066:22:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1039:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1048:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1035:3:19"},"nodeType":"YulFunctionCall","src":"1035:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1060:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1031:3:19"},"nodeType":"YulFunctionCall","src":"1031:32:19"},"nodeType":"YulIf","src":"1028:2:19"},{"nodeType":"YulVariableDeclaration","src":"1099:30:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1119:9:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1113:5:19"},"nodeType":"YulFunctionCall","src":"1113:16:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1103:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1138:28:19","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1156:2:19","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1160:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1152:3:19"},"nodeType":"YulFunctionCall","src":"1152:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"1164:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1148:3:19"},"nodeType":"YulFunctionCall","src":"1148:18:19"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1142:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1193:26:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1202:6:19"},{"name":"value0","nodeType":"YulIdentifier","src":"1210:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1195:6:19"},"nodeType":"YulFunctionCall","src":"1195:22:19"},"nodeType":"YulExpressionStatement","src":"1195:22:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1181:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"1189:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1178:2:19"},"nodeType":"YulFunctionCall","src":"1178:14:19"},"nodeType":"YulIf","src":"1175:2:19"},{"nodeType":"YulAssignment","src":"1228:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1273:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1284:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1269:3:19"},"nodeType":"YulFunctionCall","src":"1269:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1293:7:19"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"1238:30:19"},"nodeType":"YulFunctionCall","src":"1238:63:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1228:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"1310:41:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1336:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1347:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1332:3:19"},"nodeType":"YulFunctionCall","src":"1332:18:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1326:5:19"},"nodeType":"YulFunctionCall","src":"1326:25:19"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1314:8:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1380:26:19","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1389:6:19"},{"name":"value1","nodeType":"YulIdentifier","src":"1397:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1382:6:19"},"nodeType":"YulFunctionCall","src":"1382:22:19"},"nodeType":"YulExpressionStatement","src":"1382:22:19"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1366:8:19"},{"name":"_1","nodeType":"YulIdentifier","src":"1376:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1363:2:19"},"nodeType":"YulFunctionCall","src":"1363:16:19"},"nodeType":"YulIf","src":"1360:2:19"},{"nodeType":"YulAssignment","src":"1415:75:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1460:9:19"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1471:8:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1456:3:19"},"nodeType":"YulFunctionCall","src":"1456:24:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1482:7:19"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"1425:30:19"},"nodeType":"YulFunctionCall","src":"1425:65:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1415:6:19"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"976:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"987:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"999:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1007:6:19","type":""}],"src":"900:596:19"},{"body":{"nodeType":"YulBlock","src":"1556:382:19","statements":[{"nodeType":"YulAssignment","src":"1566:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1580:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"1586:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1576:3:19"},"nodeType":"YulFunctionCall","src":"1576:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1566:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"1597:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1627:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"1633:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1623:3:19"},"nodeType":"YulFunctionCall","src":"1623:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1601:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1674:31:19","statements":[{"nodeType":"YulAssignment","src":"1676:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1690:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1698:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1686:3:19"},"nodeType":"YulFunctionCall","src":"1686:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1676:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1654:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1647:6:19"},"nodeType":"YulFunctionCall","src":"1647:26:19"},"nodeType":"YulIf","src":"1644:2:19"},{"body":{"nodeType":"YulBlock","src":"1764:168:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1785:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1788:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1778:6:19"},"nodeType":"YulFunctionCall","src":"1778:88:19"},"nodeType":"YulExpressionStatement","src":"1778:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:19"},"nodeType":"YulFunctionCall","src":"1879:15:19"},"nodeType":"YulExpressionStatement","src":"1879:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:19"},"nodeType":"YulFunctionCall","src":"1907:15:19"},"nodeType":"YulExpressionStatement","src":"1907:15:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1720:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1743:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1751:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1740:2:19"},"nodeType":"YulFunctionCall","src":"1740:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1717:2:19"},"nodeType":"YulFunctionCall","src":"1717:38:19"},"nodeType":"YulIf","src":"1714:2:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1536:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1545:6:19","type":""}],"src":"1501:437:19"},{"body":{"nodeType":"YulBlock","src":"1975:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1992:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1995:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1985:6:19"},"nodeType":"YulFunctionCall","src":"1985:88:19"},"nodeType":"YulExpressionStatement","src":"1985:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2089:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2092:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2082:6:19"},"nodeType":"YulFunctionCall","src":"2082:15:19"},"nodeType":"YulExpressionStatement","src":"2082:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2113:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2116:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2106:6:19"},"nodeType":"YulFunctionCall","src":"2106:15:19"},"nodeType":"YulExpressionStatement","src":"2106:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1943:184:19"}]},"contents":"{\n    { }\n    function abi_decode_t_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let _3 := 0x20\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), _3)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), _3), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _3) }\n        {\n            mstore(add(add(memPtr, i), _3), mload(add(add(offset, i), _3)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _3), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_t_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000bbc38038062000bbc8339810160408190526200003491620001b9565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b505050620002a5565b828054620000769062000220565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000276565b6040516020601f8401601f191682018101838111838210171562000164576200016462000276565b60405283825285840181018710156200017b578485fd5b8492505b838310156200019e57858301810151828401820152918201916200017f565b83831115620001af57848185840101525b5095945050505050565b60008060408385031215620001cc578182fd5b82516001600160401b0380821115620001e3578384fd5b620001f1868387016200010e565b9350602085015191508082111562000207578283fd5b5062000216858286016200010e565b9150509250929050565b6002810460018216806200023557607f821691505b6020821081141562000270577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61090780620002b56000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c806306fdde031461009e578063095ea7b3146100bc57806318160ddd146100dc57806323b872dd146100f1578063313ce56714610104578063395093511461011957806370a082311461012c57806395d89b411461013f578063a457c2d714610147578063a9059cbb1461015a578063dd62ed3e1461016d575b600080fd5b6100a6610180565b6040516100b39190610638565b60405180910390f35b6100cf6100ca366004610604565b610212565b6040516100b3919061062d565b6100e4610234565b6040516100b3919061085b565b6100cf6100ff3660046105c9565b61023a565b61010c610268565b6040516100b39190610864565b6100cf610127366004610604565b61026d565b6100e461013a366004610576565b610299565b6100a66102b8565b6100cf610155366004610604565b6102c7565b6100cf610168366004610604565b610318565b6100e461017b366004610597565b610330565b60606003805461018f90610896565b80601f01602080910402602001604051908101604052809291908181526020018280546101bb90610896565b80156102085780601f106101dd57610100808354040283529160200191610208565b820191906000526020600020905b8154815290600101906020018083116101eb57829003601f168201915b5050505050905090565b60008061021d61035b565b905061022a81858561035f565b5060019392505050565b60025490565b60008061024561035b565b9050610252858285610413565b61025d85858561045d565b506001949350505050565b601290565b60008061027861035b565b905061022a81858561028a8589610330565b6102949190610872565b61035f565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461018f90610896565b6000806102d261035b565b905060006102e08286610330565b90508381101561030b5760405162461bcd60e51b815260040161030290610816565b60405180910390fd5b61025d828686840361035f565b60008061032361035b565b905061022a81858561045d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166103855760405162461bcd60e51b8152600401610302906107d2565b6001600160a01b0382166103ab5760405162461bcd60e51b8152600401610302906106ce565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061040690859061085b565b60405180910390a3505050565b600061041f8484610330565b90506000198114610457578181101561044a5760405162461bcd60e51b815260040161030290610710565b610457848484840361035f565b50505050565b6001600160a01b0383166104835760405162461bcd60e51b81526004016103029061078d565b6001600160a01b0382166104a95760405162461bcd60e51b81526004016103029061068b565b6104b483838361055a565b6001600160a01b038316600090815260208190526040902054818110156104ed5760405162461bcd60e51b815260040161030290610747565b6001600160a01b0380851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061054b90869061085b565b60405180910390a36104578484845b505050565b80356001600160a01b03811681146102b357600080fd5b600060208284031215610587578081fd5b6105908261055f565b9392505050565b600080604083850312156105a9578081fd5b6105b28361055f565b91506105c06020840161055f565b90509250929050565b6000806000606084860312156105dd578081fd5b6105e68461055f565b92506105f46020850161055f565b9150604084013590509250925092565b60008060408385031215610616578182fd5b61061f8361055f565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b8181101561066457858101830151858201604001528201610648565b818111156106755783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b6000821982111561089157634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806108aa57607f821691505b602082108114156108cb57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220529b01f14c0953519dd09931f72202376aafb8c31cdbd545ae8f09d9c167e0cc64736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xBBC CODESIZE SUB DUP1 PUSH3 0xBBC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1B9 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x2A5 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x220 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x11F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13C JUMPI PUSH3 0x13C PUSH3 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP3 ADD DUP2 ADD DUP4 DUP2 GT DUP4 DUP3 LT OR ISZERO PUSH3 0x164 JUMPI PUSH3 0x164 PUSH3 0x276 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 ADD DUP2 ADD DUP8 LT ISZERO PUSH3 0x17B JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH3 0x19E JUMPI DUP6 DUP4 ADD DUP2 ADD MLOAD DUP3 DUP5 ADD DUP3 ADD MSTORE SWAP2 DUP3 ADD SWAP2 PUSH3 0x17F JUMP JUMPDEST DUP4 DUP4 GT ISZERO PUSH3 0x1AF JUMPI DUP5 DUP2 DUP6 DUP5 ADD ADD MSTORE JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1CC JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1E3 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x1F1 DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x216 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x235 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x270 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x907 DUP1 PUSH3 0x2B5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x99 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH2 0x180 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH2 0xCA CALLDATASIZE PUSH1 0x4 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH2 0xCF PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x23A JUMP JUMPDEST PUSH2 0x10C PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x26D JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH2 0xA6 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x318 JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x18F SWAP1 PUSH2 0x896 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BB SWAP1 PUSH2 0x896 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x208 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x208 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x21D PUSH2 0x35B JUMP JUMPDEST SWAP1 POP PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x35F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x245 PUSH2 0x35B JUMP JUMPDEST SWAP1 POP PUSH2 0x252 DUP6 DUP3 DUP6 PUSH2 0x413 JUMP JUMPDEST PUSH2 0x25D DUP6 DUP6 DUP6 PUSH2 0x45D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x278 PUSH2 0x35B JUMP JUMPDEST SWAP1 POP PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x28A DUP6 DUP10 PUSH2 0x330 JUMP JUMPDEST PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x18F SWAP1 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D2 PUSH2 0x35B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2E0 DUP3 DUP7 PUSH2 0x330 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x30B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x302 SWAP1 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25D DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x323 PUSH2 0x35B JUMP JUMPDEST SWAP1 POP PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x302 SWAP1 PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x302 SWAP1 PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x406 SWAP1 DUP6 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41F DUP5 DUP5 PUSH2 0x330 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x457 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x302 SWAP1 PUSH2 0x710 JUMP JUMPDEST PUSH2 0x457 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x302 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x302 SWAP1 PUSH2 0x68B JUMP JUMPDEST PUSH2 0x4B4 DUP4 DUP4 DUP4 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x302 SWAP1 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x54B SWAP1 DUP7 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x457 DUP5 DUP5 DUP5 JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x587 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x590 DUP3 PUSH2 0x55F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5A9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5B2 DUP4 PUSH2 0x55F JUMP JUMPDEST SWAP2 POP PUSH2 0x5C0 PUSH1 0x20 DUP5 ADD PUSH2 0x55F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5DD JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5E6 DUP5 PUSH2 0x55F JUMP JUMPDEST SWAP3 POP PUSH2 0x5F4 PUSH1 0x20 DUP6 ADD PUSH2 0x55F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x616 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x61F DUP4 PUSH2 0x55F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x664 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x648 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x675 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x891 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x8AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x8CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE SWAP12 ADD CALL 0x4C MULMOD MSTORE8 MLOAD SWAP14 0xD0 SWAP10 BALANCE 0xF7 0x22 MUL CALLDATACOPY PUSH11 0xAFB8C31CDBD545AE8F09D9 0xC1 PUSH8 0xE0CC64736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"1532:11312:4:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2069:17:4;;;;:7;;:17;;;;;:::i;:::-;;1980:113;;1532:11312;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:4;;;-1:-1:-1;1532:11312:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:881:19;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:19;;;231:2;;;247:18;;:::i;:::-;296:2;290:9;318:4;388:2;369:13;;-1:-1:-1;;365:27:19;353:40;;349:49;;413:18;;;433:22;;;410:46;407:2;;;459:18;;:::i;:::-;495:2;488:22;519:18;;;556:15;;;552:24;;549:33;-1:-1:-1;546:2:19;;;599:5;592;585:20;546:2;625:5;616:14;;639:133;653:2;650:1;647:9;639:133;;;741:14;;;737:23;;731:30;710:14;;;706:23;;699:63;664:10;;;;639:133;;;790:2;787:1;784:9;781:2;;;849:5;844:2;839;831:6;827:15;823:24;816:39;781:2;-1:-1:-1;883:6:19;80:815;-1:-1:-1;;;;;80:815:19:o;900:596::-;;;1060:2;1048:9;1039:7;1035:23;1031:32;1028:2;;;1081:6;1073;1066:22;1028:2;1113:16;;-1:-1:-1;;;;;1178:14:19;;;1175:2;;;1210:6;1202;1195:22;1175:2;1238:63;1293:7;1284:6;1273:9;1269:22;1238:63;:::i;:::-;1228:73;;1347:2;1336:9;1332:18;1326:25;1310:41;;1376:2;1366:8;1363:16;1360:2;;;1397:6;1389;1382:22;1360:2;;1425:65;1482:7;1471:8;1460:9;1456:24;1425:65;:::i;:::-;1415:75;;;1018:478;;;;;:::o;1501:437::-;1586:1;1576:12;;1633:1;1623:12;;;1644:2;;1698:4;1690:6;1686:17;1676:27;;1644:2;1751;1743:6;1740:14;1720:18;1717:38;1714:2;;;1788:77;1785:1;1778:88;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1714:2;;1556:382;;;:::o;1943:184::-;1995:77;1992:1;1985:88;2092:4;2089:1;2082:15;2116:4;2113:1;2106:15;1975:152;1532:11312:4;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5870:19","statements":[{"nodeType":"YulBlock","src":"6:3:19","statements":[]},{"body":{"nodeType":"YulBlock","src":"65:124:19","statements":[{"nodeType":"YulAssignment","src":"75:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"84:12:19"},"nodeType":"YulFunctionCall","src":"84:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:19"}]},{"body":{"nodeType":"YulBlock","src":"167:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"176:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"179:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"169:6:19"},"nodeType":"YulFunctionCall","src":"169:12:19"},"nodeType":"YulExpressionStatement","src":"169:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"126:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"137:5:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"152:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"157:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"148:3:19"},"nodeType":"YulFunctionCall","src":"148:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"144:3:19"},"nodeType":"YulFunctionCall","src":"144:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"133:3:19"},"nodeType":"YulFunctionCall","src":"133:31:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"123:2:19"},"nodeType":"YulFunctionCall","src":"123:42:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"116:6:19"},"nodeType":"YulFunctionCall","src":"116:50:19"},"nodeType":"YulIf","src":"113:2:19"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44:6:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55:5:19","type":""}],"src":"14:175:19"},{"body":{"nodeType":"YulBlock","src":"264:128:19","statements":[{"body":{"nodeType":"YulBlock","src":"310:26:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"319:6:19"},{"name":"value0","nodeType":"YulIdentifier","src":"327:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"312:6:19"},"nodeType":"YulFunctionCall","src":"312:22:19"},"nodeType":"YulExpressionStatement","src":"312:22:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"285:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"294:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"281:3:19"},"nodeType":"YulFunctionCall","src":"281:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"306:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"277:3:19"},"nodeType":"YulFunctionCall","src":"277:32:19"},"nodeType":"YulIf","src":"274:2:19"},{"nodeType":"YulAssignment","src":"345:41:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"376:9:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"355:20:19"},"nodeType":"YulFunctionCall","src":"355:31:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"345:6:19"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"230:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"241:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"253:6:19","type":""}],"src":"194:198:19"},{"body":{"nodeType":"YulBlock","src":"484:187:19","statements":[{"body":{"nodeType":"YulBlock","src":"530:26:19","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"539:6:19"},{"name":"value1","nodeType":"YulIdentifier","src":"547:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"532:6:19"},"nodeType":"YulFunctionCall","src":"532:22:19"},"nodeType":"YulExpressionStatement","src":"532:22:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"505:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"514:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"501:3:19"},"nodeType":"YulFunctionCall","src":"501:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"526:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"497:3:19"},"nodeType":"YulFunctionCall","src":"497:32:19"},"nodeType":"YulIf","src":"494:2:19"},{"nodeType":"YulAssignment","src":"565:41:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"596:9:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"575:20:19"},"nodeType":"YulFunctionCall","src":"575:31:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"565:6:19"}]},{"nodeType":"YulAssignment","src":"615:50:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"650:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"661:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"646:3:19"},"nodeType":"YulFunctionCall","src":"646:18:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"625:20:19"},"nodeType":"YulFunctionCall","src":"625:40:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"615:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"442:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"453:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"465:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"473:6:19","type":""}],"src":"397:274:19"},{"body":{"nodeType":"YulBlock","src":"780:238:19","statements":[{"body":{"nodeType":"YulBlock","src":"826:26:19","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"835:6:19"},{"name":"value2","nodeType":"YulIdentifier","src":"843:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"828:6:19"},"nodeType":"YulFunctionCall","src":"828:22:19"},"nodeType":"YulExpressionStatement","src":"828:22:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"801:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"810:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"797:3:19"},"nodeType":"YulFunctionCall","src":"797:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"822:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"793:3:19"},"nodeType":"YulFunctionCall","src":"793:32:19"},"nodeType":"YulIf","src":"790:2:19"},{"nodeType":"YulAssignment","src":"861:41:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"892:9:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"871:20:19"},"nodeType":"YulFunctionCall","src":"871:31:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"861:6:19"}]},{"nodeType":"YulAssignment","src":"911:50:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"946:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"957:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"942:3:19"},"nodeType":"YulFunctionCall","src":"942:18:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"921:20:19"},"nodeType":"YulFunctionCall","src":"921:40:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"911:6:19"}]},{"nodeType":"YulAssignment","src":"970:42:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"997:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1008:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"993:3:19"},"nodeType":"YulFunctionCall","src":"993:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"980:12:19"},"nodeType":"YulFunctionCall","src":"980:32:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"970:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"730:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"741:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"753:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"761:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"769:6:19","type":""}],"src":"676:342:19"},{"body":{"nodeType":"YulBlock","src":"1110:179:19","statements":[{"body":{"nodeType":"YulBlock","src":"1156:26:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1165:6:19"},{"name":"value0","nodeType":"YulIdentifier","src":"1173:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1158:6:19"},"nodeType":"YulFunctionCall","src":"1158:22:19"},"nodeType":"YulExpressionStatement","src":"1158:22:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1131:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1140:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1127:3:19"},"nodeType":"YulFunctionCall","src":"1127:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1152:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1123:3:19"},"nodeType":"YulFunctionCall","src":"1123:32:19"},"nodeType":"YulIf","src":"1120:2:19"},{"nodeType":"YulAssignment","src":"1191:41:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1222:9:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1201:20:19"},"nodeType":"YulFunctionCall","src":"1201:31:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1191:6:19"}]},{"nodeType":"YulAssignment","src":"1241:42:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1268:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1279:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1264:3:19"},"nodeType":"YulFunctionCall","src":"1264:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1251:12:19"},"nodeType":"YulFunctionCall","src":"1251:32:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1241:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1079:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1091:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1099:6:19","type":""}],"src":"1023:266:19"},{"body":{"nodeType":"YulBlock","src":"1389:92:19","statements":[{"nodeType":"YulAssignment","src":"1399:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1411:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1422:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1407:3:19"},"nodeType":"YulFunctionCall","src":"1407:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1399:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1441:9:19"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1466:6:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1459:6:19"},"nodeType":"YulFunctionCall","src":"1459:14:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1452:6:19"},"nodeType":"YulFunctionCall","src":"1452:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1434:6:19"},"nodeType":"YulFunctionCall","src":"1434:41:19"},"nodeType":"YulExpressionStatement","src":"1434:41:19"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1358:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1369:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1380:4:19","type":""}],"src":"1294:187:19"},{"body":{"nodeType":"YulBlock","src":"1607:482:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1617:12:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1627:2:19","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1621:2:19","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1645:9:19"},{"name":"_1","nodeType":"YulIdentifier","src":"1656:2:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1638:6:19"},"nodeType":"YulFunctionCall","src":"1638:21:19"},"nodeType":"YulExpressionStatement","src":"1638:21:19"},{"nodeType":"YulVariableDeclaration","src":"1668:27:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1688:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1682:5:19"},"nodeType":"YulFunctionCall","src":"1682:13:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1672:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1715:9:19"},{"name":"_1","nodeType":"YulIdentifier","src":"1726:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1711:3:19"},"nodeType":"YulFunctionCall","src":"1711:18:19"},{"name":"length","nodeType":"YulIdentifier","src":"1731:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1704:6:19"},"nodeType":"YulFunctionCall","src":"1704:34:19"},"nodeType":"YulExpressionStatement","src":"1704:34:19"},{"nodeType":"YulVariableDeclaration","src":"1747:13:19","value":{"name":"tail","nodeType":"YulIdentifier","src":"1756:4:19"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1751:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1819:90:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1848:9:19"},{"name":"i","nodeType":"YulIdentifier","src":"1859:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1844:3:19"},"nodeType":"YulFunctionCall","src":"1844:17:19"},{"kind":"number","nodeType":"YulLiteral","src":"1863:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1840:3:19"},"nodeType":"YulFunctionCall","src":"1840:26:19"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1882:6:19"},{"name":"i","nodeType":"YulIdentifier","src":"1890:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1878:3:19"},"nodeType":"YulFunctionCall","src":"1878:14:19"},{"name":"_1","nodeType":"YulIdentifier","src":"1894:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1874:3:19"},"nodeType":"YulFunctionCall","src":"1874:23:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1868:5:19"},"nodeType":"YulFunctionCall","src":"1868:30:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1833:6:19"},"nodeType":"YulFunctionCall","src":"1833:66:19"},"nodeType":"YulExpressionStatement","src":"1833:66:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1780:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"1783:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1777:2:19"},"nodeType":"YulFunctionCall","src":"1777:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1791:19:19","statements":[{"nodeType":"YulAssignment","src":"1793:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1802:1:19"},{"name":"_1","nodeType":"YulIdentifier","src":"1805:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1798:3:19"},"nodeType":"YulFunctionCall","src":"1798:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1793:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"1773:3:19","statements":[]},"src":"1769:140:19"},{"body":{"nodeType":"YulBlock","src":"1943:69:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1972:9:19"},{"name":"length","nodeType":"YulIdentifier","src":"1983:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1968:3:19"},"nodeType":"YulFunctionCall","src":"1968:22:19"},{"kind":"number","nodeType":"YulLiteral","src":"1992:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1964:3:19"},"nodeType":"YulFunctionCall","src":"1964:31:19"},{"name":"tail","nodeType":"YulIdentifier","src":"1997:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1957:6:19"},"nodeType":"YulFunctionCall","src":"1957:45:19"},"nodeType":"YulExpressionStatement","src":"1957:45:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1924:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"1927:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1921:2:19"},"nodeType":"YulFunctionCall","src":"1921:13:19"},"nodeType":"YulIf","src":"1918:2:19"},{"nodeType":"YulAssignment","src":"2021:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2037:9:19"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2056:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2064:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2052:3:19"},"nodeType":"YulFunctionCall","src":"2052:15:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2073:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2069:3:19"},"nodeType":"YulFunctionCall","src":"2069:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2048:3:19"},"nodeType":"YulFunctionCall","src":"2048:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2033:3:19"},"nodeType":"YulFunctionCall","src":"2033:45:19"},{"kind":"number","nodeType":"YulLiteral","src":"2080:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2029:3:19"},"nodeType":"YulFunctionCall","src":"2029:54:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2021:4:19"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1576:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1587:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1598:4:19","type":""}],"src":"1486:603:19"},{"body":{"nodeType":"YulBlock","src":"2268:225:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2285:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2296:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2278:6:19"},"nodeType":"YulFunctionCall","src":"2278:21:19"},"nodeType":"YulExpressionStatement","src":"2278:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2319:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2330:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2315:3:19"},"nodeType":"YulFunctionCall","src":"2315:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"2335:2:19","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2308:6:19"},"nodeType":"YulFunctionCall","src":"2308:30:19"},"nodeType":"YulExpressionStatement","src":"2308:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2358:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2369:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2354:3:19"},"nodeType":"YulFunctionCall","src":"2354:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"2374:34:19","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2347:6:19"},"nodeType":"YulFunctionCall","src":"2347:62:19"},"nodeType":"YulExpressionStatement","src":"2347:62:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2429:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2440:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2425:3:19"},"nodeType":"YulFunctionCall","src":"2425:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"2445:5:19","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2418:6:19"},"nodeType":"YulFunctionCall","src":"2418:33:19"},"nodeType":"YulExpressionStatement","src":"2418:33:19"},{"nodeType":"YulAssignment","src":"2460:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2472:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2483:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2468:3:19"},"nodeType":"YulFunctionCall","src":"2468:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2460:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2245:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2259:4:19","type":""}],"src":"2094:399:19"},{"body":{"nodeType":"YulBlock","src":"2672:224:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2689:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2700:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2682:6:19"},"nodeType":"YulFunctionCall","src":"2682:21:19"},"nodeType":"YulExpressionStatement","src":"2682:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2723:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2734:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2719:3:19"},"nodeType":"YulFunctionCall","src":"2719:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"2739:2:19","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2712:6:19"},"nodeType":"YulFunctionCall","src":"2712:30:19"},"nodeType":"YulExpressionStatement","src":"2712:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2762:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2773:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2758:3:19"},"nodeType":"YulFunctionCall","src":"2758:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"2778:34:19","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2751:6:19"},"nodeType":"YulFunctionCall","src":"2751:62:19"},"nodeType":"YulExpressionStatement","src":"2751:62:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2833:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2844:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2829:3:19"},"nodeType":"YulFunctionCall","src":"2829:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"2849:4:19","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2822:6:19"},"nodeType":"YulFunctionCall","src":"2822:32:19"},"nodeType":"YulExpressionStatement","src":"2822:32:19"},{"nodeType":"YulAssignment","src":"2863:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2875:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2886:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2871:3:19"},"nodeType":"YulFunctionCall","src":"2871:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2863:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2649:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2663:4:19","type":""}],"src":"2498:398:19"},{"body":{"nodeType":"YulBlock","src":"3075:179:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3092:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3103:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3085:6:19"},"nodeType":"YulFunctionCall","src":"3085:21:19"},"nodeType":"YulExpressionStatement","src":"3085:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3126:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3137:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3122:3:19"},"nodeType":"YulFunctionCall","src":"3122:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"3142:2:19","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3115:6:19"},"nodeType":"YulFunctionCall","src":"3115:30:19"},"nodeType":"YulExpressionStatement","src":"3115:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3165:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3176:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3161:3:19"},"nodeType":"YulFunctionCall","src":"3161:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"3181:31:19","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3154:6:19"},"nodeType":"YulFunctionCall","src":"3154:59:19"},"nodeType":"YulExpressionStatement","src":"3154:59:19"},{"nodeType":"YulAssignment","src":"3222:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3234:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3245:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3230:3:19"},"nodeType":"YulFunctionCall","src":"3230:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3222:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3052:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3066:4:19","type":""}],"src":"2901:353:19"},{"body":{"nodeType":"YulBlock","src":"3433:228:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3450:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3461:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3443:6:19"},"nodeType":"YulFunctionCall","src":"3443:21:19"},"nodeType":"YulExpressionStatement","src":"3443:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3484:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3495:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3480:3:19"},"nodeType":"YulFunctionCall","src":"3480:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"3500:2:19","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3473:6:19"},"nodeType":"YulFunctionCall","src":"3473:30:19"},"nodeType":"YulExpressionStatement","src":"3473:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3523:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3534:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3519:3:19"},"nodeType":"YulFunctionCall","src":"3519:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"3539:34:19","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3512:6:19"},"nodeType":"YulFunctionCall","src":"3512:62:19"},"nodeType":"YulExpressionStatement","src":"3512:62:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3594:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3605:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3590:3:19"},"nodeType":"YulFunctionCall","src":"3590:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"3610:8:19","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3583:6:19"},"nodeType":"YulFunctionCall","src":"3583:36:19"},"nodeType":"YulExpressionStatement","src":"3583:36:19"},{"nodeType":"YulAssignment","src":"3628:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3640:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3651:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3636:3:19"},"nodeType":"YulFunctionCall","src":"3636:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3628:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3410:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3424:4:19","type":""}],"src":"3259:402:19"},{"body":{"nodeType":"YulBlock","src":"3840:227:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3857:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3868:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3850:6:19"},"nodeType":"YulFunctionCall","src":"3850:21:19"},"nodeType":"YulExpressionStatement","src":"3850:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3891:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3902:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3887:3:19"},"nodeType":"YulFunctionCall","src":"3887:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"3907:2:19","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3880:6:19"},"nodeType":"YulFunctionCall","src":"3880:30:19"},"nodeType":"YulExpressionStatement","src":"3880:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3930:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3941:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3926:3:19"},"nodeType":"YulFunctionCall","src":"3926:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"3946:34:19","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3919:6:19"},"nodeType":"YulFunctionCall","src":"3919:62:19"},"nodeType":"YulExpressionStatement","src":"3919:62:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4001:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4012:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3997:3:19"},"nodeType":"YulFunctionCall","src":"3997:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"4017:7:19","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3990:6:19"},"nodeType":"YulFunctionCall","src":"3990:35:19"},"nodeType":"YulExpressionStatement","src":"3990:35:19"},{"nodeType":"YulAssignment","src":"4034:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4046:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4057:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4042:3:19"},"nodeType":"YulFunctionCall","src":"4042:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4034:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3817:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3831:4:19","type":""}],"src":"3666:401:19"},{"body":{"nodeType":"YulBlock","src":"4246:226:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4263:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4274:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4256:6:19"},"nodeType":"YulFunctionCall","src":"4256:21:19"},"nodeType":"YulExpressionStatement","src":"4256:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4297:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4308:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4293:3:19"},"nodeType":"YulFunctionCall","src":"4293:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"4313:2:19","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4286:6:19"},"nodeType":"YulFunctionCall","src":"4286:30:19"},"nodeType":"YulExpressionStatement","src":"4286:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4336:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4347:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4332:3:19"},"nodeType":"YulFunctionCall","src":"4332:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"4352:34:19","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4325:6:19"},"nodeType":"YulFunctionCall","src":"4325:62:19"},"nodeType":"YulExpressionStatement","src":"4325:62:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4407:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4403:3:19"},"nodeType":"YulFunctionCall","src":"4403:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"4423:6:19","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4396:6:19"},"nodeType":"YulFunctionCall","src":"4396:34:19"},"nodeType":"YulExpressionStatement","src":"4396:34:19"},{"nodeType":"YulAssignment","src":"4439:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4451:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4462:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4447:3:19"},"nodeType":"YulFunctionCall","src":"4447:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4439:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4223:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4237:4:19","type":""}],"src":"4072:400:19"},{"body":{"nodeType":"YulBlock","src":"4651:227:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4668:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4679:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4661:6:19"},"nodeType":"YulFunctionCall","src":"4661:21:19"},"nodeType":"YulExpressionStatement","src":"4661:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4702:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4713:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4698:3:19"},"nodeType":"YulFunctionCall","src":"4698:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"4718:2:19","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4691:6:19"},"nodeType":"YulFunctionCall","src":"4691:30:19"},"nodeType":"YulExpressionStatement","src":"4691:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4741:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4752:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4737:3:19"},"nodeType":"YulFunctionCall","src":"4737:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"4757:34:19","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4730:6:19"},"nodeType":"YulFunctionCall","src":"4730:62:19"},"nodeType":"YulExpressionStatement","src":"4730:62:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4812:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4823:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4808:3:19"},"nodeType":"YulFunctionCall","src":"4808:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"4828:7:19","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4801:6:19"},"nodeType":"YulFunctionCall","src":"4801:35:19"},"nodeType":"YulExpressionStatement","src":"4801:35:19"},{"nodeType":"YulAssignment","src":"4845:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4857:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4868:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4853:3:19"},"nodeType":"YulFunctionCall","src":"4853:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4845:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4628:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4642:4:19","type":""}],"src":"4477:401:19"},{"body":{"nodeType":"YulBlock","src":"4984:76:19","statements":[{"nodeType":"YulAssignment","src":"4994:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5006:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5017:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5002:3:19"},"nodeType":"YulFunctionCall","src":"5002:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4994:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5036:9:19"},{"name":"value0","nodeType":"YulIdentifier","src":"5047:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5029:6:19"},"nodeType":"YulFunctionCall","src":"5029:25:19"},"nodeType":"YulExpressionStatement","src":"5029:25:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4953:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4964:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4975:4:19","type":""}],"src":"4883:177:19"},{"body":{"nodeType":"YulBlock","src":"5162:87:19","statements":[{"nodeType":"YulAssignment","src":"5172:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5184:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5195:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5180:3:19"},"nodeType":"YulFunctionCall","src":"5180:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5172:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5214:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5229:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"5237:4:19","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5225:3:19"},"nodeType":"YulFunctionCall","src":"5225:17:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5207:6:19"},"nodeType":"YulFunctionCall","src":"5207:36:19"},"nodeType":"YulExpressionStatement","src":"5207:36:19"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5131:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5142:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5153:4:19","type":""}],"src":"5065:184:19"},{"body":{"nodeType":"YulBlock","src":"5302:181:19","statements":[{"body":{"nodeType":"YulBlock","src":"5337:115:19","statements":[{"expression":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"5358:3:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5367:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5372:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5363:3:19"},"nodeType":"YulFunctionCall","src":"5363:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5351:6:19"},"nodeType":"YulFunctionCall","src":"5351:33:19"},"nodeType":"YulExpressionStatement","src":"5351:33:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5404:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5407:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5397:6:19"},"nodeType":"YulFunctionCall","src":"5397:15:19"},"nodeType":"YulExpressionStatement","src":"5397:15:19"},{"expression":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"5432:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"5437:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5425:6:19"},"nodeType":"YulFunctionCall","src":"5425:17:19"},"nodeType":"YulExpressionStatement","src":"5425:17:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5318:1:19"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5325:1:19"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5321:3:19"},"nodeType":"YulFunctionCall","src":"5321:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5315:2:19"},"nodeType":"YulFunctionCall","src":"5315:13:19"},"nodeType":"YulIf","src":"5312:2:19"},{"nodeType":"YulAssignment","src":"5461:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5472:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"5475:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5468:3:19"},"nodeType":"YulFunctionCall","src":"5468:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5461:3:19"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5285:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"5288:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5294:3:19","type":""}],"src":"5254:229:19"},{"body":{"nodeType":"YulBlock","src":"5543:325:19","statements":[{"nodeType":"YulAssignment","src":"5553:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5567:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"5573:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5563:3:19"},"nodeType":"YulFunctionCall","src":"5563:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5553:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"5584:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5614:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"5620:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5610:3:19"},"nodeType":"YulFunctionCall","src":"5610:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5588:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"5661:31:19","statements":[{"nodeType":"YulAssignment","src":"5663:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5677:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"5685:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5673:3:19"},"nodeType":"YulFunctionCall","src":"5673:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5663:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5641:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5634:6:19"},"nodeType":"YulFunctionCall","src":"5634:26:19"},"nodeType":"YulIf","src":"5631:2:19"},{"body":{"nodeType":"YulBlock","src":"5751:111:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5772:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5779:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5784:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5775:3:19"},"nodeType":"YulFunctionCall","src":"5775:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5765:6:19"},"nodeType":"YulFunctionCall","src":"5765:31:19"},"nodeType":"YulExpressionStatement","src":"5765:31:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5816:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5819:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5809:6:19"},"nodeType":"YulFunctionCall","src":"5809:15:19"},"nodeType":"YulExpressionStatement","src":"5809:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5844:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5847:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5837:6:19"},"nodeType":"YulFunctionCall","src":"5837:15:19"},"nodeType":"YulExpressionStatement","src":"5837:15:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5707:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5730:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"5738:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5727:2:19"},"nodeType":"YulFunctionCall","src":"5727:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5704:2:19"},"nodeType":"YulFunctionCall","src":"5704:38:19"},"nodeType":"YulIf","src":"5701:2:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5523:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5532:6:19","type":""}],"src":"5488:380:19"}]},"contents":"{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100995760003560e01c806306fdde031461009e578063095ea7b3146100bc57806318160ddd146100dc57806323b872dd146100f1578063313ce56714610104578063395093511461011957806370a082311461012c57806395d89b411461013f578063a457c2d714610147578063a9059cbb1461015a578063dd62ed3e1461016d575b600080fd5b6100a6610180565b6040516100b39190610638565b60405180910390f35b6100cf6100ca366004610604565b610212565b6040516100b3919061062d565b6100e4610234565b6040516100b3919061085b565b6100cf6100ff3660046105c9565b61023a565b61010c610268565b6040516100b39190610864565b6100cf610127366004610604565b61026d565b6100e461013a366004610576565b610299565b6100a66102b8565b6100cf610155366004610604565b6102c7565b6100cf610168366004610604565b610318565b6100e461017b366004610597565b610330565b60606003805461018f90610896565b80601f01602080910402602001604051908101604052809291908181526020018280546101bb90610896565b80156102085780601f106101dd57610100808354040283529160200191610208565b820191906000526020600020905b8154815290600101906020018083116101eb57829003601f168201915b5050505050905090565b60008061021d61035b565b905061022a81858561035f565b5060019392505050565b60025490565b60008061024561035b565b9050610252858285610413565b61025d85858561045d565b506001949350505050565b601290565b60008061027861035b565b905061022a81858561028a8589610330565b6102949190610872565b61035f565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461018f90610896565b6000806102d261035b565b905060006102e08286610330565b90508381101561030b5760405162461bcd60e51b815260040161030290610816565b60405180910390fd5b61025d828686840361035f565b60008061032361035b565b905061022a81858561045d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166103855760405162461bcd60e51b8152600401610302906107d2565b6001600160a01b0382166103ab5760405162461bcd60e51b8152600401610302906106ce565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061040690859061085b565b60405180910390a3505050565b600061041f8484610330565b90506000198114610457578181101561044a5760405162461bcd60e51b815260040161030290610710565b610457848484840361035f565b50505050565b6001600160a01b0383166104835760405162461bcd60e51b81526004016103029061078d565b6001600160a01b0382166104a95760405162461bcd60e51b81526004016103029061068b565b6104b483838361055a565b6001600160a01b038316600090815260208190526040902054818110156104ed5760405162461bcd60e51b815260040161030290610747565b6001600160a01b0380851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061054b90869061085b565b60405180910390a36104578484845b505050565b80356001600160a01b03811681146102b357600080fd5b600060208284031215610587578081fd5b6105908261055f565b9392505050565b600080604083850312156105a9578081fd5b6105b28361055f565b91506105c06020840161055f565b90509250929050565b6000806000606084860312156105dd578081fd5b6105e68461055f565b92506105f46020850161055f565b9150604084013590509250925092565b60008060408385031215610616578182fd5b61061f8361055f565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b8181101561066457858101830151858201604001528201610648565b818111156106755783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b6000821982111561089157634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806108aa57607f821691505b602082108114156108cb57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220529b01f14c0953519dd09931f72202376aafb8c31cdbd545ae8f09d9c167e0cc64736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x99 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH2 0x180 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH2 0xCA CALLDATASIZE PUSH1 0x4 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH2 0xCF PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x23A JUMP JUMPDEST PUSH2 0x10C PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x26D JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH2 0xA6 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x318 JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x18F SWAP1 PUSH2 0x896 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BB SWAP1 PUSH2 0x896 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x208 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x208 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x21D PUSH2 0x35B JUMP JUMPDEST SWAP1 POP PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x35F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x245 PUSH2 0x35B JUMP JUMPDEST SWAP1 POP PUSH2 0x252 DUP6 DUP3 DUP6 PUSH2 0x413 JUMP JUMPDEST PUSH2 0x25D DUP6 DUP6 DUP6 PUSH2 0x45D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x278 PUSH2 0x35B JUMP JUMPDEST SWAP1 POP PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x28A DUP6 DUP10 PUSH2 0x330 JUMP JUMPDEST PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x18F SWAP1 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D2 PUSH2 0x35B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2E0 DUP3 DUP7 PUSH2 0x330 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x30B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x302 SWAP1 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25D DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x323 PUSH2 0x35B JUMP JUMPDEST SWAP1 POP PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x302 SWAP1 PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x302 SWAP1 PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x406 SWAP1 DUP6 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41F DUP5 DUP5 PUSH2 0x330 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x457 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x302 SWAP1 PUSH2 0x710 JUMP JUMPDEST PUSH2 0x457 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x302 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x302 SWAP1 PUSH2 0x68B JUMP JUMPDEST PUSH2 0x4B4 DUP4 DUP4 DUP4 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x302 SWAP1 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x54B SWAP1 DUP7 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x457 DUP5 DUP5 DUP5 JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x587 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x590 DUP3 PUSH2 0x55F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5A9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5B2 DUP4 PUSH2 0x55F JUMP JUMPDEST SWAP2 POP PUSH2 0x5C0 PUSH1 0x20 DUP5 ADD PUSH2 0x55F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5DD JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5E6 DUP5 PUSH2 0x55F JUMP JUMPDEST SWAP3 POP PUSH2 0x5F4 PUSH1 0x20 DUP6 ADD PUSH2 0x55F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x616 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x61F DUP4 PUSH2 0x55F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x664 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x648 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x675 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x891 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x8AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x8CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE SWAP12 ADD CALL 0x4C MULMOD MSTORE8 MLOAD SWAP14 0xD0 SWAP10 BALANCE 0xF7 0x22 MUL CALLDATACOPY PUSH11 0xAFB8C31CDBD545AE8F09D9 0xC1 PUSH8 0xE0CC64736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"1532:11312:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3255:106::-;;;:::i;:::-;;;;;;;:::i;5203:256::-;;;;;;:::i;:::-;;:::i;3104:91::-;;;:::i;:::-;;;;;;;:::i;5854:234::-;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;;:::i;2369:102::-;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;-1:-1:-1;4630:4:4;;4444:197;-1:-1:-1;;;4444:197:4:o;3255:106::-;3342:12;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:4;;5203:256;-1:-1:-1;;;;5203:256:4:o;3104:91::-;3186:2;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;3419:125::-;-1:-1:-1;;;;;3519:18:4;;3493:7;3519:18;;;;;;;;;;;3419:125;;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:4;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:4;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;640:96:8:-;719:10;640:96;:::o;10457:340:4:-;-1:-1:-1;;;;;10558:19:4;;10550:68;;;;-1:-1:-1;;;10550:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;10636:21:4;;10628:68;;;;-1:-1:-1;;;10628:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;10707:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10758:32;;;;;10737:6;;10758:32;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:4;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:4;;;;;;;:::i;:::-;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11078:411;;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:4;;7544:68;;;;-1:-1:-1;;;7544:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;7630:16:4;;7622:64;;;;-1:-1:-1;;;7622:64:4;;;;;;;:::i;:::-;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;-1:-1:-1;;;;;7768:15:4;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;7899:15:4;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;;;;;7931:6;;8163:26;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;12073:91;;;;:::o;14:175:19:-;84:20;;-1:-1:-1;;;;;133:31:19;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:19:o;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:19:o;1294:187::-;1459:14;;1452:22;1434:41;;1422:2;1407:18;;1389:92::o;1486:603::-;;1627:2;1656;1645:9;1638:21;1688:6;1682:13;1731:6;1726:2;1715:9;1711:18;1704:34;1756:4;1769:140;1783:6;1780:1;1777:13;1769:140;;;1878:14;;;1874:23;;1868:30;1844:17;;;1863:2;1840:26;1833:66;1798:10;;1769:140;;;1927:6;1924:1;1921:13;1918:2;;;1997:4;1992:2;1983:6;1972:9;1968:22;1964:31;1957:45;1918:2;-1:-1:-1;2073:2:19;2052:15;-1:-1:-1;;2048:29:19;2033:45;;;;2080:2;2029:54;;1607:482;-1:-1:-1;;;1607:482:19:o;2094:399::-;2296:2;2278:21;;;2335:2;2315:18;;;2308:30;2374:34;2369:2;2354:18;;2347:62;-1:-1:-1;;;2440:2:19;2425:18;;2418:33;2483:3;2468:19;;2268:225::o;2498:398::-;2700:2;2682:21;;;2739:2;2719:18;;;2712:30;2778:34;2773:2;2758:18;;2751:62;-1:-1:-1;;;2844:2:19;2829:18;;2822:32;2886:3;2871:19;;2672:224::o;2901:353::-;3103:2;3085:21;;;3142:2;3122:18;;;3115:30;3181:31;3176:2;3161:18;;3154:59;3245:2;3230:18;;3075:179::o;3259:402::-;3461:2;3443:21;;;3500:2;3480:18;;;3473:30;3539:34;3534:2;3519:18;;3512:62;-1:-1:-1;;;3605:2:19;3590:18;;3583:36;3651:3;3636:19;;3433:228::o;3666:401::-;3868:2;3850:21;;;3907:2;3887:18;;;3880:30;3946:34;3941:2;3926:18;;3919:62;-1:-1:-1;;;4012:2:19;3997:18;;3990:35;4057:3;4042:19;;3840:227::o;4072:400::-;4274:2;4256:21;;;4313:2;4293:18;;;4286:30;4352:34;4347:2;4332:18;;4325:62;-1:-1:-1;;;4418:2:19;4403:18;;4396:34;4462:3;4447:19;;4246:226::o;4477:401::-;4679:2;4661:21;;;4718:2;4698:18;;;4691:30;4757:34;4752:2;4737:18;;4730:62;-1:-1:-1;;;4823:2:19;4808:18;;4801:35;4868:3;4853:19;;4651:227::o;4883:177::-;5029:25;;;5017:2;5002:18;;4984:76::o;5065:184::-;5237:4;5225:17;;;;5207:36;;5195:2;5180:18;;5162:87::o;5254:229::-;;5325:1;5321:6;5318:1;5315:13;5312:2;;;-1:-1:-1;;;5351:33:19;;5407:4;5404:1;5397:15;5437:4;5358:3;5425:17;5312:2;-1:-1:-1;5468:9:19;;5302:181::o;5488:380::-;5573:1;5563:12;;5620:1;5610:12;;;5631:2;;5685:4;5677:6;5673:17;5663:27;;5631:2;5738;5730:6;5727:14;5707:18;5704:38;5701:2;;;5784:10;5779:3;5775:20;5772:1;5765:31;5819:4;5816:1;5809:15;5847:4;5844:1;5837:15;5701:2;;5543:325;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c95b4673b2141ff0062cf85343cf12be2fc3ff02543fe264b075b8ab9ce81d664736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SWAP6 0xB4 PUSH8 0x3B2141FF0062CF85 CALLVALUE EXTCODECOPY CALL 0x2B 0xE2 0xFC EXTCODEHASH CREATE 0x25 NUMBER INVALID 0x26 0x4B SMOD JUMPDEST DUP11 0xB9 0xCE DUP2 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"220:2559:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c95b4673b2141ff0062cf85343cf12be2fc3ff02543fe264b075b8ab9ce81d664736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SWAP6 0xB4 PUSH8 0x3B2141FF0062CF85 CALLVALUE EXTCODECOPY CALL 0x2B 0xE2 0xFC EXTCODEHASH CREATE 0x25 NUMBER INVALID 0x26 0x4B SMOD JUMPDEST DUP11 0xB9 0xCE DUP2 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"220:2559:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dea580c8b3e3298f0a97aa3bf368242f4c1672def540fda0167bbcb83fdaa4eb64736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xA5 DUP1 0xC8 0xB3 0xE3 0x29 DUP16 EXP SWAP8 0xAA EXTCODESIZE RETURN PUSH9 0x242F4C1672DEF540FD LOG0 AND PUSH28 0xBCB83FDAA4EB64736F6C634300080000330000000000000000000000 ","sourceMap":"202:12582:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dea580c8b3e3298f0a97aa3bf368242f4c1672def540fda0167bbcb83fdaa4eb64736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xA5 DUP1 0xC8 0xB3 0xE3 0x29 DUP16 EXP SWAP8 0xAA EXTCODESIZE RETURN PUSH9 0x242F4C1672DEF540FD LOG0 AND PUSH28 0xBCB83FDAA4EB64736F6C634300080000330000000000000000000000 ","sourceMap":"202:12582:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220faa7ff096e83feb3aaa9290b082d78d365fbaac5fa07651d1799f7d62c172acf64736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xA7 SELFDESTRUCT MULMOD PUSH15 0x83FEB3AAA9290B082D78D365FBAAC5 STATICCALL SMOD PUSH6 0x1D1799F7D62C OR 0x2A 0xCF PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"215:1047:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220faa7ff096e83feb3aaa9290b082d78d365fbaac5fa07651d1799f7d62c172acf64736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xA7 SELFDESTRUCT MULMOD PUSH15 0x83FEB3AAA9290B082D78D365FBAAC5 STATICCALL SMOD PUSH6 0x1D1799F7D62C OR 0x2A 0xCF PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"215:1047:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49ba12b9d4ad14080c917f1e5b196d0c1a5a0df00dbe96058130555f8d7610b64736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP12 LOG1 0x2B SWAP14 0x4A 0xD1 BLOCKHASH DUP1 0xC9 OR CALL 0xE5 0xB1 SWAP7 0xD0 0xC1 0xA5 LOG0 0xDF STOP 0xDB 0xE9 PUSH1 0x58 SGT SDIV SSTORE 0xF8 0xD7 PUSH2 0xB64 PUSH20 0x6F6C634300080000330000000000000000000000 ","sourceMap":"1329:11630:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49ba12b9d4ad14080c917f1e5b196d0c1a5a0df00dbe96058130555f8d7610b64736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP12 LOG1 0x2B SWAP14 0x4A 0xD1 BLOCKHASH DUP1 0xC9 OR CALL 0xE5 0xB1 SWAP7 0xD0 0xC1 0xA5 LOG0 0xDF STOP 0xDB 0xE9 PUSH1 0x58 SGT SDIV SSTORE 0xF8 0xD7 PUSH2 0xB64 PUSH20 0x6F6C634300080000330000000000000000000000 ","sourceMap":"1329:11630:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"contracts/community-token/Point.sol":{"Point":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"_startTradableTime","type":"uint256"},{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"communityFactory","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TRANSFER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TRANSFER_ROLE_ADMIN","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startTradableTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3804:19","statements":[{"nodeType":"YulBlock","src":"6:3:19","statements":[]},{"body":{"nodeType":"YulBlock","src":"76:117:19","statements":[{"nodeType":"YulAssignment","src":"86:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"101:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"95:5:19"},"nodeType":"YulFunctionCall","src":"95:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"86:5:19"}]},{"body":{"nodeType":"YulBlock","src":"171:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"180:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"183:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"173:6:19"},"nodeType":"YulFunctionCall","src":"173:12:19"},"nodeType":"YulExpressionStatement","src":"173:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"130:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"141:5:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"156:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"152:3:19"},"nodeType":"YulFunctionCall","src":"152:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"165:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"148:3:19"},"nodeType":"YulFunctionCall","src":"148:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"137:3:19"},"nodeType":"YulFunctionCall","src":"137:31:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"127:2:19"},"nodeType":"YulFunctionCall","src":"127:42:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"120:6:19"},"nodeType":"YulFunctionCall","src":"120:50:19"},"nodeType":"YulIf","src":"117:2:19"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"55:6:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"66:5:19","type":""}],"src":"14:179:19"},{"body":{"nodeType":"YulBlock","src":"264:815:19","statements":[{"body":{"nodeType":"YulBlock","src":"313:24:19","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"322:5:19"},{"name":"array","nodeType":"YulIdentifier","src":"329:5:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"315:6:19"},"nodeType":"YulFunctionCall","src":"315:20:19"},"nodeType":"YulExpressionStatement","src":"315:20:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"292:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"300:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"288:3:19"},"nodeType":"YulFunctionCall","src":"288:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"307:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"284:3:19"},"nodeType":"YulFunctionCall","src":"284:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"277:6:19"},"nodeType":"YulFunctionCall","src":"277:35:19"},"nodeType":"YulIf","src":"274:2:19"},{"nodeType":"YulVariableDeclaration","src":"346:23:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"362:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"356:5:19"},"nodeType":"YulFunctionCall","src":"356:13:19"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"350:2:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"378:28:19","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"396:2:19","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"400:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"392:3:19"},"nodeType":"YulFunctionCall","src":"392:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"404:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"388:3:19"},"nodeType":"YulFunctionCall","src":"388:18:19"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"382:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"429:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"431:16:19"},"nodeType":"YulFunctionCall","src":"431:18:19"},"nodeType":"YulExpressionStatement","src":"431:18:19"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"421:2:19"},{"name":"_2","nodeType":"YulIdentifier","src":"425:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"418:2:19"},"nodeType":"YulFunctionCall","src":"418:10:19"},"nodeType":"YulIf","src":"415:2:19"},{"nodeType":"YulVariableDeclaration","src":"460:23:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"480:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"474:5:19"},"nodeType":"YulFunctionCall","src":"474:9:19"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"464:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"492:14:19","value":{"kind":"number","nodeType":"YulLiteral","src":"502:4:19","type":"","value":"0x20"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"496:2:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"515:67:19","value":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"541:6:19"},{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"557:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"561:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"553:3:19"},"nodeType":"YulFunctionCall","src":"553:13:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"572:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"568:3:19"},"nodeType":"YulFunctionCall","src":"568:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"549:3:19"},"nodeType":"YulFunctionCall","src":"549:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"537:3:19"},"nodeType":"YulFunctionCall","src":"537:40:19"},{"name":"_3","nodeType":"YulIdentifier","src":"579:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"533:3:19"},"nodeType":"YulFunctionCall","src":"533:49:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"519:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"641:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"643:16:19"},"nodeType":"YulFunctionCall","src":"643:18:19"},"nodeType":"YulExpressionStatement","src":"643:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"600:10:19"},{"name":"_2","nodeType":"YulIdentifier","src":"612:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"597:2:19"},"nodeType":"YulFunctionCall","src":"597:18:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"620:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"632:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"617:2:19"},"nodeType":"YulFunctionCall","src":"617:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"594:2:19"},"nodeType":"YulFunctionCall","src":"594:46:19"},"nodeType":"YulIf","src":"591:2:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"679:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"683:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"672:6:19"},"nodeType":"YulFunctionCall","src":"672:22:19"},"nodeType":"YulExpressionStatement","src":"672:22:19"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"710:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"718:2:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"703:6:19"},"nodeType":"YulFunctionCall","src":"703:18:19"},"nodeType":"YulExpressionStatement","src":"703:18:19"},{"body":{"nodeType":"YulBlock","src":"767:24:19","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"776:5:19"},{"name":"array","nodeType":"YulIdentifier","src":"783:5:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"769:6:19"},"nodeType":"YulFunctionCall","src":"769:20:19"},"nodeType":"YulExpressionStatement","src":"769:20:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"744:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"752:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"740:3:19"},"nodeType":"YulFunctionCall","src":"740:15:19"},{"name":"_3","nodeType":"YulIdentifier","src":"757:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"736:3:19"},"nodeType":"YulFunctionCall","src":"736:24:19"},{"name":"end","nodeType":"YulIdentifier","src":"762:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"733:2:19"},"nodeType":"YulFunctionCall","src":"733:33:19"},"nodeType":"YulIf","src":"730:2:19"},{"nodeType":"YulVariableDeclaration","src":"800:14:19","value":{"name":"array","nodeType":"YulIdentifier","src":"809:5:19"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"804:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"869:87:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"898:6:19"},{"name":"i","nodeType":"YulIdentifier","src":"906:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"894:3:19"},"nodeType":"YulFunctionCall","src":"894:14:19"},{"name":"_3","nodeType":"YulIdentifier","src":"910:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"890:3:19"},"nodeType":"YulFunctionCall","src":"890:23:19"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"929:6:19"},{"name":"i","nodeType":"YulIdentifier","src":"937:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"925:3:19"},"nodeType":"YulFunctionCall","src":"925:14:19"},{"name":"_3","nodeType":"YulIdentifier","src":"941:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"921:3:19"},"nodeType":"YulFunctionCall","src":"921:23:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"915:5:19"},"nodeType":"YulFunctionCall","src":"915:30:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"883:6:19"},"nodeType":"YulFunctionCall","src":"883:63:19"},"nodeType":"YulExpressionStatement","src":"883:63:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"834:1:19"},{"name":"_1","nodeType":"YulIdentifier","src":"837:2:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"831:2:19"},"nodeType":"YulFunctionCall","src":"831:9:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"841:19:19","statements":[{"nodeType":"YulAssignment","src":"843:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"852:1:19"},{"name":"_3","nodeType":"YulIdentifier","src":"855:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"848:3:19"},"nodeType":"YulFunctionCall","src":"848:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"843:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"827:3:19","statements":[]},"src":"823:133:19"},{"body":{"nodeType":"YulBlock","src":"986:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1015:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"1023:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1011:3:19"},"nodeType":"YulFunctionCall","src":"1011:15:19"},{"name":"_3","nodeType":"YulIdentifier","src":"1028:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1007:3:19"},"nodeType":"YulFunctionCall","src":"1007:24:19"},{"name":"array","nodeType":"YulIdentifier","src":"1033:5:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1000:6:19"},"nodeType":"YulFunctionCall","src":"1000:39:19"},"nodeType":"YulExpressionStatement","src":"1000:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"971:1:19"},{"name":"_1","nodeType":"YulIdentifier","src":"974:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"968:2:19"},"nodeType":"YulFunctionCall","src":"968:9:19"},"nodeType":"YulIf","src":"965:2:19"},{"nodeType":"YulAssignment","src":"1058:15:19","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1067:6:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1058:5:19"}]}]},"name":"abi_decode_t_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"238:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"246:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"254:5:19","type":""}],"src":"198:881:19"},{"body":{"nodeType":"YulBlock","src":"1270:709:19","statements":[{"body":{"nodeType":"YulBlock","src":"1317:26:19","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1326:6:19"},{"name":"value4","nodeType":"YulIdentifier","src":"1334:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1319:6:19"},"nodeType":"YulFunctionCall","src":"1319:22:19"},"nodeType":"YulExpressionStatement","src":"1319:22:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1291:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1300:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1287:3:19"},"nodeType":"YulFunctionCall","src":"1287:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1312:3:19","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1283:3:19"},"nodeType":"YulFunctionCall","src":"1283:33:19"},"nodeType":"YulIf","src":"1280:2:19"},{"nodeType":"YulVariableDeclaration","src":"1352:30:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1372:9:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1366:5:19"},"nodeType":"YulFunctionCall","src":"1366:16:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1356:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1391:28:19","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1409:2:19","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1413:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1405:3:19"},"nodeType":"YulFunctionCall","src":"1405:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"1417:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1401:3:19"},"nodeType":"YulFunctionCall","src":"1401:18:19"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1395:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1446:26:19","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1455:6:19"},{"name":"value4","nodeType":"YulIdentifier","src":"1463:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1448:6:19"},"nodeType":"YulFunctionCall","src":"1448:22:19"},"nodeType":"YulExpressionStatement","src":"1448:22:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1434:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"1442:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1431:2:19"},"nodeType":"YulFunctionCall","src":"1431:14:19"},"nodeType":"YulIf","src":"1428:2:19"},{"nodeType":"YulAssignment","src":"1481:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1526:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1537:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1522:3:19"},"nodeType":"YulFunctionCall","src":"1522:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1546:7:19"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"1491:30:19"},"nodeType":"YulFunctionCall","src":"1491:63:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1481:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"1563:41:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1589:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1600:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1585:3:19"},"nodeType":"YulFunctionCall","src":"1585:18:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1579:5:19"},"nodeType":"YulFunctionCall","src":"1579:25:19"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1567:8:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1633:26:19","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1642:6:19"},{"name":"value4","nodeType":"YulIdentifier","src":"1650:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1635:6:19"},"nodeType":"YulFunctionCall","src":"1635:22:19"},"nodeType":"YulExpressionStatement","src":"1635:22:19"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1619:8:19"},{"name":"_1","nodeType":"YulIdentifier","src":"1629:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1616:2:19"},"nodeType":"YulFunctionCall","src":"1616:16:19"},"nodeType":"YulIf","src":"1613:2:19"},{"nodeType":"YulAssignment","src":"1668:75:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1713:9:19"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1724:8:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1709:3:19"},"nodeType":"YulFunctionCall","src":"1709:24:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1735:7:19"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"1678:30:19"},"nodeType":"YulFunctionCall","src":"1678:65:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1668:6:19"}]},{"nodeType":"YulAssignment","src":"1752:35:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1772:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1783:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1768:3:19"},"nodeType":"YulFunctionCall","src":"1768:18:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1762:5:19"},"nodeType":"YulFunctionCall","src":"1762:25:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1752:6:19"}]},{"nodeType":"YulAssignment","src":"1796:35:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1816:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1827:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1812:3:19"},"nodeType":"YulFunctionCall","src":"1812:18:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1806:5:19"},"nodeType":"YulFunctionCall","src":"1806:25:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1796:6:19"}]},{"nodeType":"YulAssignment","src":"1840:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1886:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1897:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1882:3:19"},"nodeType":"YulFunctionCall","src":"1882:19:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1850:31:19"},"nodeType":"YulFunctionCall","src":"1850:52:19"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1840:6:19"}]},{"nodeType":"YulAssignment","src":"1911:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1957:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1968:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1953:3:19"},"nodeType":"YulFunctionCall","src":"1953:19:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1921:31:19"},"nodeType":"YulFunctionCall","src":"1921:52:19"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1911:6:19"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1196:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1207:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1219:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1227:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1235:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1243:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1251:6:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1259:6:19","type":""}],"src":"1084:895:19"},{"body":{"nodeType":"YulBlock","src":"2158:180:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2175:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2186:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2168:6:19"},"nodeType":"YulFunctionCall","src":"2168:21:19"},"nodeType":"YulExpressionStatement","src":"2168:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2209:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2205:3:19"},"nodeType":"YulFunctionCall","src":"2205:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"2225:2:19","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2198:6:19"},"nodeType":"YulFunctionCall","src":"2198:30:19"},"nodeType":"YulExpressionStatement","src":"2198:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2248:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2259:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2244:3:19"},"nodeType":"YulFunctionCall","src":"2244:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"2264:32:19","type":"","value":"Token can't tradable right now"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2237:6:19"},"nodeType":"YulFunctionCall","src":"2237:60:19"},"nodeType":"YulExpressionStatement","src":"2237:60:19"},{"nodeType":"YulAssignment","src":"2306:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2318:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2329:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:19"},"nodeType":"YulFunctionCall","src":"2314:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2306:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_7f8280ee5bc0ce19de983d53d21d8eb08d84b6288c0d629ced3e043b1f61a7f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2135:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2149:4:19","type":""}],"src":"1984:354:19"},{"body":{"nodeType":"YulBlock","src":"2517:181:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2534:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2545:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2527:6:19"},"nodeType":"YulFunctionCall","src":"2527:21:19"},"nodeType":"YulExpressionStatement","src":"2527:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2568:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2579:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2564:3:19"},"nodeType":"YulFunctionCall","src":"2564:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"2584:2:19","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2557:6:19"},"nodeType":"YulFunctionCall","src":"2557:30:19"},"nodeType":"YulExpressionStatement","src":"2557:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2607:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2618:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2603:3:19"},"nodeType":"YulFunctionCall","src":"2603:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"2623:33:19","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2596:6:19"},"nodeType":"YulFunctionCall","src":"2596:61:19"},"nodeType":"YulExpressionStatement","src":"2596:61:19"},{"nodeType":"YulAssignment","src":"2666:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2678:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2689:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2674:3:19"},"nodeType":"YulFunctionCall","src":"2674:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2666:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2494:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2508:4:19","type":""}],"src":"2343:355:19"},{"body":{"nodeType":"YulBlock","src":"2804:76:19","statements":[{"nodeType":"YulAssignment","src":"2814:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2826:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2837:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2822:3:19"},"nodeType":"YulFunctionCall","src":"2822:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2814:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2856:9:19"},{"name":"value0","nodeType":"YulIdentifier","src":"2867:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2849:6:19"},"nodeType":"YulFunctionCall","src":"2849:25:19"},"nodeType":"YulExpressionStatement","src":"2849:25:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2773:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2784:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2795:4:19","type":""}],"src":"2703:177:19"},{"body":{"nodeType":"YulBlock","src":"2933:238:19","statements":[{"body":{"nodeType":"YulBlock","src":"2968:172:19","statements":[{"expression":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"2989:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"2994:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2982:6:19"},"nodeType":"YulFunctionCall","src":"2982:90:19"},"nodeType":"YulExpressionStatement","src":"2982:90:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3092:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3095:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3085:6:19"},"nodeType":"YulFunctionCall","src":"3085:15:19"},"nodeType":"YulExpressionStatement","src":"3085:15:19"},{"expression":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"3120:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3125:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3113:6:19"},"nodeType":"YulFunctionCall","src":"3113:17:19"},"nodeType":"YulExpressionStatement","src":"3113:17:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2949:1:19"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2956:1:19"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2952:3:19"},"nodeType":"YulFunctionCall","src":"2952:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2946:2:19"},"nodeType":"YulFunctionCall","src":"2946:13:19"},"nodeType":"YulIf","src":"2943:2:19"},{"nodeType":"YulAssignment","src":"3149:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3160:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"3163:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3156:3:19"},"nodeType":"YulFunctionCall","src":"3156:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3149:3:19"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2916:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"2919:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2925:3:19","type":""}],"src":"2885:286:19"},{"body":{"nodeType":"YulBlock","src":"3231:382:19","statements":[{"nodeType":"YulAssignment","src":"3241:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3255:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"3261:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3251:3:19"},"nodeType":"YulFunctionCall","src":"3251:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3241:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"3272:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3302:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"3308:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3298:3:19"},"nodeType":"YulFunctionCall","src":"3298:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3276:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"3349:31:19","statements":[{"nodeType":"YulAssignment","src":"3351:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3365:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3373:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3361:3:19"},"nodeType":"YulFunctionCall","src":"3361:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3351:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3329:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3322:6:19"},"nodeType":"YulFunctionCall","src":"3322:26:19"},"nodeType":"YulIf","src":"3319:2:19"},{"body":{"nodeType":"YulBlock","src":"3439:168:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3460:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3463:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3453:6:19"},"nodeType":"YulFunctionCall","src":"3453:88:19"},"nodeType":"YulExpressionStatement","src":"3453:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3561:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3564:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3554:6:19"},"nodeType":"YulFunctionCall","src":"3554:15:19"},"nodeType":"YulExpressionStatement","src":"3554:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3589:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3592:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3582:6:19"},"nodeType":"YulFunctionCall","src":"3582:15:19"},"nodeType":"YulExpressionStatement","src":"3582:15:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3395:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3418:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3426:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3415:2:19"},"nodeType":"YulFunctionCall","src":"3415:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3392:2:19"},"nodeType":"YulFunctionCall","src":"3392:38:19"},"nodeType":"YulIf","src":"3389:2:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3211:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3220:6:19","type":""}],"src":"3176:437:19"},{"body":{"nodeType":"YulBlock","src":"3650:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3667:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3670:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3660:6:19"},"nodeType":"YulFunctionCall","src":"3660:88:19"},"nodeType":"YulExpressionStatement","src":"3660:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3764:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3767:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3757:6:19"},"nodeType":"YulFunctionCall","src":"3757:15:19"},"nodeType":"YulExpressionStatement","src":"3757:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3788:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3791:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3781:6:19"},"nodeType":"YulFunctionCall","src":"3781:15:19"},"nodeType":"YulExpressionStatement","src":"3781:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3618:184:19"}]},"contents":"{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let _3 := 0x20\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), _3)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), _3), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _3) }\n        {\n            mstore(add(add(memPtr, i), _3), mload(add(add(offset, i), _3)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _3), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value4, value4) }\n        value0 := abi_decode_t_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value1 := abi_decode_t_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_t_address_fromMemory(add(headStart, 128))\n        value5 := abi_decode_t_address_fromMemory(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_stringliteral_7f8280ee5bc0ce19de983d53d21d8eb08d84b6288c0d629ced3e043b1f61a7f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Token can't tradable right now\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001fe938038062001fe98339810160408190526200003491620005db565b8551869086906200004d90600590602085019062000472565b5080516200006390600690602084019062000472565b50505060078490556200009560008051602062001fa983398151915260008051602062001fc9833981519152620000d5565b620000a26000826200012a565b620000bd60008051602062001fc9833981519152836200012a565b620000c982846200013a565b505050505050620007b3565b6000620000e28362000212565b600084815260208190526040808220600101859055519192508391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6200013682826200022a565b5050565b6001600160a01b03821662000186576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200017d90620006b0565b60405180910390fd5b62000194600083836200026d565b8060046000828254620001a89190620006f0565b90915550506001600160a01b038216600081815260026020526040808220805485019055517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001fc908590620006e7565b60405180910390a3620001366000838362000268565b6000818152602081905260409020600101545b919050565b6200024182826200033460201b620006f81760201c565b6000828152600160209081526040909120620002689183906200077d620003be821b17901c565b505050565b6001600160a01b038316158015906200028e57506001600160a01b03821615155b8015620002b35750620002b160008051602062001fa983398151915284620003de565b155b8015620002d85750620002d660008051602062001fa983398151915283620003de565b155b156200031c5760075442116200031c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200017d9062000679565b620002688383836200026860201b620004921760201c565b620003408282620003de565b62000136576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200037a62000407565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620003d5836001600160a01b0384166200040b565b90505b92915050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b3390565b60006200041983836200045a565b6200045157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620003d8565b506000620003d8565b60009081526001919091016020526040902054151590565b82805462000480906200072e565b90600052602060002090601f016020900481019282620004a45760008555620004ef565b82601f10620004bf57805160ff1916838001178555620004ef565b82800160010185558215620004ef579182015b82811115620004ef578251825591602001919060010190620004d2565b50620004fd92915062000501565b5090565b5b80821115620004fd576000815560010162000502565b80516001600160a01b03811681146200022557600080fd5b600082601f83011262000541578081fd5b81516001600160401b03808211156200055e576200055e62000784565b6040516020601f8401601f191682018101838111838210171562000586576200058662000784565b60405283825285840181018710156200059d578485fd5b8492505b83831015620005c05785830181015182840182015291820191620005a1565b83831115620005d157848185840101525b5095945050505050565b60008060008060008060c08789031215620005f4578182fd5b86516001600160401b03808211156200060b578384fd5b620006198a838b0162000530565b975060208901519150808211156200062f578384fd5b506200063e89828a0162000530565b95505060408701519350606087015192506200065d6080880162000518565b91506200066d60a0880162000518565b90509295509295509295565b6020808252601e908201527f546f6b656e2063616e2774207472616461626c65207269676874206e6f770000604082015260600190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b6000821982111562000729577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b500190565b6002810460018216806200074357607f821691505b602082108114156200077e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6117e680620007c36000396000f3fe608060405234801561001057600080fd5b50600436106101495760003560e01c806301ffc9a71461014e57806306fdde0314610177578063095ea7b31461018c57806318160ddd1461019f578063206b60f9146101b457806323b872dd146101bc578063248a9ca3146101cf5780632f2ff15d146101e2578063313ce567146101f757806336568abe1461020c578063395093511461021f57806340c10f191461023257806342966c681461024557806370a082311461025857806379cc67901461026b5780639010d07c1461027e57806391d148541461029e57806395d89b41146102b1578063a217fddf146102b9578063a457c2d7146102c1578063a9059cbb146102d4578063ca15c873146102e7578063d5391393146102fa578063d547741f14610302578063d68fc93c14610315578063dd62ed3e1461031d578063e88b24ba14610330575b600080fd5b61016161015c3660046111d3565b610338565b60405161016e919061127e565b60405180910390f35b61017f610365565b60405161016e9190611292565b61016161019a36600461114f565b6103f7565b6101a761041b565b60405161016e9190611289565b6101a7610421565b6101616101ca366004611114565b610433565b6101a76101dd366004611178565b610461565b6101f56101f0366004611190565b610476565b005b6101ff610497565b60405161016e9190611660565b6101f561021a366004611190565b61049c565b61016161022d36600461114f565b6104eb565b6101f561024036600461114f565b610517565b6101f5610253366004611178565b610557565b6101a76102663660046110c8565b61056b565b6101f561027936600461114f565b610586565b61029161028c3660046111b2565b6105a2565b60405161016e919061126a565b6101616102ac366004611190565b6105c1565b61017f6105ea565b6101a76105f9565b6101616102cf36600461114f565b6105fe565b6101616102e236600461114f565b610646565b6101a76102f5366004611178565b61065e565b6101a7610675565b6101f5610310366004611190565b610687565b6101a76106a3565b6101a761032b3660046110e2565b6106c7565b6101a76106f2565b60006001600160e01b03198216630ade522160e01b148061035d575061035d82610792565b90505b919050565b606060058054610374906116ff565b80601f01602080910402602001604051908101604052809291908181526020018280546103a0906116ff565b80156103ed5780601f106103c2576101008083540402835291602001916103ed565b820191906000526020600020905b8154815290600101906020018083116103d057829003601f168201915b5050505050905090565b6000806104026107b7565b905061040f8185856107bb565b60019150505b92915050565b60045490565b60008051602061175183398151915281565b60008061043e6107b7565b905061044b85828561086f565b6104568585856108b9565b506001949350505050565b60009081526020819052604090206001015490565b61047f82610461565b610488816109a8565b61049283836109b9565b505050565b601290565b6104a46107b7565b6001600160a01b0316816001600160a01b0316146104dd5760405162461bcd60e51b81526004016104d4906115da565b60405180910390fd5b6104e782826109db565b5050565b6000806104f66107b7565b905061040f81858561050885896106c7565b610512919061166e565b6107bb565b6105316000805160206117718339815191526102ac6107b7565b61054d5760405162461bcd60e51b81526004016104d490611475565b6104e782826109fd565b6105686105626107b7565b82610a95565b50565b6001600160a01b031660009081526002602052604090205490565b610598826105926107b7565b8361086f565b6104e78282610a95565b60008281526001602052604081206105ba9083610b5a565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b606060068054610374906116ff565b600081565b6000806106096107b7565b9050600061061782866106c7565b9050838110156106395760405162461bcd60e51b81526004016104d490611595565b61045682868684036107bb565b6000806106516107b7565b905061040f8185856108b9565b600081815260016020526040812061035d90610b66565b60008051602061177183398151915281565b61069082610461565b610699816109a8565b61049283836109db565b7f1179bec0ccbe6d15ea750b5422555e189e0fa411a2104da6763fedb6c73c147081565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60075481565b61070282826105c1565b6104e7576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556107396107b7565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006105ba836001600160a01b038416610b71565b60006001600160e01b03198216635a05180f60e01b148061035d575061035d82610bbb565b3390565b6001600160a01b0383166107e15760405162461bcd60e51b81526004016104d490611551565b6001600160a01b0382166108075760405162461bcd60e51b81526004016104d49061137f565b6001600160a01b0380841660008181526003602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610862908590611289565b60405180910390a3505050565b600061087b84846106c7565b905060001981146108b357818110156108a65760405162461bcd60e51b81526004016104d4906113c1565b6108b384848484036107bb565b50505050565b6001600160a01b0383166108df5760405162461bcd60e51b81526004016104d49061150c565b6001600160a01b0382166109055760405162461bcd60e51b81526004016104d4906112fa565b610910838383610be0565b6001600160a01b038316600090815260026020526040902054818110156109495760405162461bcd60e51b81526004016104d4906113f8565b6001600160a01b03808516600081815260026020526040808220868603905592861680825290839020805486019055915160008051602061179183398151915290610995908690611289565b60405180910390a36108b3848484610492565b610568816109b46107b7565b610c73565b6109c382826106f8565b6000828152600160205260409020610492908261077d565b6109e58282610ccc565b60008281526001602052604090206104929082610d4f565b6001600160a01b038216610a235760405162461bcd60e51b81526004016104d490611629565b610a2f60008383610be0565b8060046000828254610a41919061166e565b90915550506001600160a01b0382166000818152600260205260408082208054850190555160008051602061179183398151915290610a81908590611289565b60405180910390a36104e760008383610492565b6001600160a01b038216610abb5760405162461bcd60e51b81526004016104d4906114cb565b610ac782600083610be0565b6001600160a01b03821660009081526002602052604090205481811015610b005760405162461bcd60e51b81526004016104d49061133d565b6001600160a01b03831660008181526002602052604080822085850390556004805486900390555190919060008051602061179183398151915290610b46908690611289565b60405180910390a361049283600084610492565b60006105ba8383610d64565b600061035d82610d9c565b6000610b7d8383610da0565b610bb357508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610415565b506000610415565b60006001600160e01b03198216637965db0b60e01b148061035d575061035d82610db8565b6001600160a01b03831615801590610c0057506001600160a01b03821615155b8015610c215750610c1f600080516020611751833981519152846105c1565b155b8015610c425750610c40600080516020611751833981519152836105c1565b155b15610c68576007544211610c685760405162461bcd60e51b81526004016104d49061143e565b610492838383610492565b610c7d82826105c1565b6104e757610c8a81610dd1565b610c95836020610de3565b604051602001610ca69291906111fb565b60408051601f198184030181529082905262461bcd60e51b82526104d491600401611292565b610cd682826105c1565b156104e7576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055610d0b6107b7565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006105ba836001600160a01b038416610f94565b6000826000018281548110610d8957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b5490565b60009081526001919091016020526040902054151590565b6001600160e01b031981166301ffc9a760e01b14919050565b606061035d6001600160a01b03831660145b60606000610df2836002611686565b610dfd90600261166e565b6001600160401b03811115610e2257634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610e4c576020820181803683370190505b509050600360fc1b81600081518110610e7557634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610eb257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610ed6846002611686565b610ee190600161166e565b90505b6001811115610f75576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610f2357634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110610f4757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93610f6e816116e8565b9050610ee4565b5083156105ba5760405162461bcd60e51b81526004016104d4906112c5565b600081815260018301602052604081205480156110a7576000610fb86001836116a5565b8554909150600090610fcc906001906116a5565b905081811461104d576000866000018281548110610ffa57634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508087600001848154811061102b57634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b855486908061106c57634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610415565b6000915050610415565b80356001600160a01b038116811461036057600080fd5b6000602082840312156110d9578081fd5b6105ba826110b1565b600080604083850312156110f4578081fd5b6110fd836110b1565b915061110b602084016110b1565b90509250929050565b600080600060608486031215611128578081fd5b611131846110b1565b925061113f602085016110b1565b9150604084013590509250925092565b60008060408385031215611161578182fd5b61116a836110b1565b946020939093013593505050565b600060208284031215611189578081fd5b5035919050565b600080604083850312156111a2578182fd5b8235915061110b602084016110b1565b600080604083850312156111c4578182fd5b50508035926020909101359150565b6000602082840312156111e4578081fd5b81356001600160e01b0319811681146105ba578182fd5b600076020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8252835161122d8160178501602088016116bc565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161125e8160288401602088016116bc565b01602801949350505050565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b60006020825282518060208401526112b18160408501602087016116bc565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252601e908201527f546f6b656e2063616e2774207472616461626c65207269676874206e6f770000604082015260600190565b60208082526036908201527f45524332305072657365744d696e7465725061757365723a206d7573742068616040820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b60ff91909116815260200190565b600082198211156116815761168161173a565b500190565b60008160001904831182151516156116a0576116a061173a565b500290565b6000828210156116b7576116b761173a565b500390565b60005b838110156116d75781810151838201526020016116bf565b838111156108b35750506000910152565b6000816116f7576116f761173a565b506000190190565b60028104600182168061171357607f821691505b6020821081141561173457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122043e490a8c0738d885dc8b046a53fcc729731d0d9e70a6de068d8a65d704c7f5464736f6c634300080000338502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c1179bec0ccbe6d15ea750b5422555e189e0fa411a2104da6763fedb6c73c1470","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1FE9 CODESIZE SUB DUP1 PUSH3 0x1FE9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x5DB JUMP JUMPDEST DUP6 MLOAD DUP7 SWAP1 DUP7 SWAP1 PUSH3 0x4D SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x472 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x63 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x472 JUMP JUMPDEST POP POP POP PUSH1 0x7 DUP5 SWAP1 SSTORE PUSH3 0x95 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1FA9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1FC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH3 0xD5 JUMP JUMPDEST PUSH3 0xA2 PUSH1 0x0 DUP3 PUSH3 0x12A JUMP JUMPDEST PUSH3 0xBD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1FC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH3 0x12A JUMP JUMPDEST PUSH3 0xC9 DUP3 DUP5 PUSH3 0x13A JUMP JUMPDEST POP POP POP POP POP POP PUSH3 0x7B3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE2 DUP4 PUSH3 0x212 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 POP DUP4 SWAP2 DUP4 SWAP2 DUP7 SWAP2 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF SWAP2 SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH3 0x136 DUP3 DUP3 PUSH3 0x22A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x186 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17D SWAP1 PUSH3 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x194 PUSH1 0x0 DUP4 DUP4 PUSH3 0x26D JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1A8 SWAP2 SWAP1 PUSH3 0x6F0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH3 0x1FC SWAP1 DUP6 SWAP1 PUSH3 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x136 PUSH1 0x0 DUP4 DUP4 PUSH3 0x268 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x241 DUP3 DUP3 PUSH3 0x334 PUSH1 0x20 SHL PUSH3 0x6F8 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH3 0x268 SWAP2 DUP4 SWAP1 PUSH3 0x77D PUSH3 0x3BE DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH3 0x28E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x2B3 JUMPI POP PUSH3 0x2B1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1FA9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH3 0x3DE JUMP JUMPDEST ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x2D8 JUMPI POP PUSH3 0x2D6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1FA9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH3 0x3DE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH3 0x31C JUMPI PUSH1 0x7 SLOAD TIMESTAMP GT PUSH3 0x31C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17D SWAP1 PUSH3 0x679 JUMP JUMPDEST PUSH3 0x268 DUP4 DUP4 DUP4 PUSH3 0x268 PUSH1 0x20 SHL PUSH3 0x492 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x340 DUP3 DUP3 PUSH3 0x3DE JUMP JUMPDEST PUSH3 0x136 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x37A PUSH3 0x407 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3D5 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x40B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x419 DUP4 DUP4 PUSH3 0x45A JUMP JUMPDEST PUSH3 0x451 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH3 0x3D8 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x3D8 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x480 SWAP1 PUSH3 0x72E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x4A4 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x4EF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x4BF JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x4EF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x4EF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x4EF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x4D2 JUMP JUMPDEST POP PUSH3 0x4FD SWAP3 SWAP2 POP PUSH3 0x501 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x4FD JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x502 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x541 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x55E JUMPI PUSH3 0x55E PUSH3 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP3 ADD DUP2 ADD DUP4 DUP2 GT DUP4 DUP3 LT OR ISZERO PUSH3 0x586 JUMPI PUSH3 0x586 PUSH3 0x784 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 ADD DUP2 ADD DUP8 LT ISZERO PUSH3 0x59D JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH3 0x5C0 JUMPI DUP6 DUP4 ADD DUP2 ADD MLOAD DUP3 DUP5 ADD DUP3 ADD MSTORE SWAP2 DUP3 ADD SWAP2 PUSH3 0x5A1 JUMP JUMPDEST DUP4 DUP4 GT ISZERO PUSH3 0x5D1 JUMPI DUP5 DUP2 DUP6 DUP5 ADD ADD MSTORE JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x5F4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x60B JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x619 DUP11 DUP4 DUP12 ADD PUSH3 0x530 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x62F JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH3 0x63E DUP10 DUP3 DUP11 ADD PUSH3 0x530 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD MLOAD SWAP4 POP PUSH1 0x60 DUP8 ADD MLOAD SWAP3 POP PUSH3 0x65D PUSH1 0x80 DUP9 ADD PUSH3 0x518 JUMP JUMPDEST SWAP2 POP PUSH3 0x66D PUSH1 0xA0 DUP9 ADD PUSH3 0x518 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E2063616E2774207472616461626C65207269676874206E6F770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x729 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x743 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x77E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x17E6 DUP1 PUSH3 0x7C3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x149 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x206B60F9 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xD68FC93C EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xE88B24BA EQ PUSH2 0x330 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x127E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x421 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1114 JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1660 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH2 0x161 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x517 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C8 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x586 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x11B2 JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x126A JUMP JUMPDEST PUSH2 0x161 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x161 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x2F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x675 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x310 CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xADE5221 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x35D JUMPI POP PUSH2 0x35D DUP3 PUSH2 0x792 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x374 SWAP1 PUSH2 0x16FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A0 SWAP1 PUSH2 0x16FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x402 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x40F DUP2 DUP6 DUP6 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1751 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x43E PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x44B DUP6 DUP3 DUP6 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x456 DUP6 DUP6 DUP6 PUSH2 0x8B9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x47F DUP3 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x488 DUP2 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 PUSH2 0x9B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH2 0x4A4 PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E7 DUP3 DUP3 PUSH2 0x9DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4F6 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x40F DUP2 DUP6 DUP6 PUSH2 0x508 DUP6 DUP10 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x166E JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x531 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1771 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2AC PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x4E7 DUP3 DUP3 PUSH2 0x9FD JUMP JUMPDEST PUSH2 0x568 PUSH2 0x562 PUSH2 0x7B7 JUMP JUMPDEST DUP3 PUSH2 0xA95 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x598 DUP3 PUSH2 0x592 PUSH2 0x7B7 JUMP JUMPDEST DUP4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x4E7 DUP3 DUP3 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x5BA SWAP1 DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x374 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x609 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x617 DUP3 DUP7 PUSH2 0x6C7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x456 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x651 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x40F DUP2 DUP6 DUP6 PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x35D SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1771 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x690 DUP3 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x699 DUP2 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 PUSH2 0x9DB JUMP JUMPDEST PUSH32 0x1179BEC0CCBE6D15EA750B5422555E189E0FA411A2104DA6763FEDB6C73C1470 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x702 DUP3 DUP3 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x739 PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x35D JUMPI POP PUSH2 0x35D DUP3 PUSH2 0xBBB JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x862 SWAP1 DUP6 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87B DUP5 DUP5 PUSH2 0x6C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x8B3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x13C1 JUMP JUMPDEST PUSH2 0x8B3 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x7BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x910 DUP4 DUP4 DUP4 PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1791 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x995 SWAP1 DUP7 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x8B3 DUP5 DUP5 DUP5 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x568 DUP2 PUSH2 0x9B4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x9C3 DUP3 DUP3 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x492 SWAP1 DUP3 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x9E5 DUP3 DUP3 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x492 SWAP1 DUP3 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1629 JUMP JUMPDEST PUSH2 0xA2F PUSH1 0x0 DUP4 DUP4 PUSH2 0xBE0 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA41 SWAP2 SWAP1 PUSH2 0x166E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1791 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xA81 SWAP1 DUP6 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0xAC7 DUP3 PUSH1 0x0 DUP4 PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x133D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP7 SWAP1 SUB SWAP1 SSTORE MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1791 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xB46 SWAP1 DUP7 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x492 DUP4 PUSH1 0x0 DUP5 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP4 DUP4 PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D DUP3 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7D DUP4 DUP4 PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0xBB3 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x415 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x35D JUMPI POP PUSH2 0x35D DUP3 PUSH2 0xDB8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC00 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC21 JUMPI POP PUSH2 0xC1F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1751 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x5C1 JUMP JUMPDEST ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC42 JUMPI POP PUSH2 0xC40 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1751 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x5C1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xC68 JUMPI PUSH1 0x7 SLOAD TIMESTAMP GT PUSH2 0xC68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 DUP4 PUSH2 0x492 JUMP JUMPDEST PUSH2 0xC7D DUP3 DUP3 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x4E7 JUMPI PUSH2 0xC8A DUP2 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xC95 DUP4 PUSH1 0x20 PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCA6 SWAP3 SWAP2 SWAP1 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x4D4 SWAP2 PUSH1 0x4 ADD PUSH2 0x1292 JUMP JUMPDEST PUSH2 0xCD6 DUP3 DUP3 PUSH2 0x5C1 JUMP JUMPDEST ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xD0B PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xF94 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD89 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x35D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xDF2 DUP4 PUSH1 0x2 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0xDFD SWAP1 PUSH1 0x2 PUSH2 0x166E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xE22 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE4C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE75 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xEB2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0xED6 DUP5 PUSH1 0x2 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0xEE1 SWAP1 PUSH1 0x1 PUSH2 0x166E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF75 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0xF23 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF47 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0xF6E DUP2 PUSH2 0x16E8 JUMP JUMPDEST SWAP1 POP PUSH2 0xEE4 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x10A7 JUMPI PUSH1 0x0 PUSH2 0xFB8 PUSH1 0x1 DUP4 PUSH2 0x16A5 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xFCC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x104D JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFFA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x102B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x106C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x415 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5BA DUP3 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10F4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x10FD DUP4 PUSH2 0x10B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x110B PUSH1 0x20 DUP5 ADD PUSH2 0x10B1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1128 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1131 DUP5 PUSH2 0x10B1 JUMP JUMPDEST SWAP3 POP PUSH2 0x113F PUSH1 0x20 DUP6 ADD PUSH2 0x10B1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1161 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x116A DUP4 PUSH2 0x10B1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1189 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x110B PUSH1 0x20 DUP5 ADD PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11C4 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5BA JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH23 0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1 PUSH1 0x4D SHL DUP3 MSTORE DUP4 MLOAD PUSH2 0x122D DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x16BC JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x125E DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x16BC JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x12B1 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E2063616E2774207472616461626C65207269676874206E6F770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305072657365744D696E7465725061757365723A206D757374206861 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x1D99481B5A5B9D195C881C9BDB19481D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1681 JUMPI PUSH2 0x1681 PUSH2 0x173A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x16A0 JUMPI PUSH2 0x16A0 PUSH2 0x173A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x16B7 JUMPI PUSH2 0x16B7 PUSH2 0x173A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16BF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x8B3 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x16F7 JUMPI PUSH2 0x16F7 PUSH2 0x173A JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1713 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1734 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID DUP6 MUL 0x23 ADDRESS SWAP7 0xD9 MULMOD 0xBE 0xFB 0xDA MULMOD SWAP10 0xBB DUP15 LOG2 RETURN 0xA6 0xBE EXTCODECOPY SGT DUP12 SWAP16 0xBF STOP CALLDATACOPY MSTORE LOG4 0xC8 0xBC 0xE8 PUSH16 0x6C9F2DF0FED2C77648DE5860A4CC508C 0xD0 DUP2 DUP13 DUP6 0xB8 0xB8 LOG1 0xAB 0x4C 0xEE 0xEF DUP14 SWAP9 SHR DUP10 JUMP 0xA6 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xE4 SWAP1 0xA8 0xC0 PUSH20 0x8D885DC8B046A53FCC729731D0D9E70A6DE068D8 0xA6 0x5D PUSH17 0x4C7F5464736F6C63430008000033850223 ADDRESS SWAP7 0xD9 MULMOD 0xBE 0xFB 0xDA MULMOD SWAP10 0xBB DUP15 LOG2 RETURN 0xA6 0xBE EXTCODECOPY SGT DUP12 SWAP16 0xBF STOP CALLDATACOPY MSTORE LOG4 0xC8 0xBC 0xE8 PUSH16 0x6C1179BEC0CCBE6D15EA750B5422555E XOR SWAP15 0xF LOG4 GT LOG2 LT 0x4D 0xA6 PUSH23 0x3FEDB6C73C147000000000000000000000000000000000 ","sourceMap":"666:2075:15:-:0;;;1208:445;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:13:4;;1382:4:15;;1388:6;;2046:13:4;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2069:17:4;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;;1406:17:15::1;:38:::0;;;1454:49:::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;1454:13:15::1;:49::i;:::-;1513:48;2198:4:0;1544:16:15::0;1513:10:::1;:48::i;:::-;1571:38;-1:-1:-1::0;;;;;;;;;;;1603:5:15;1571:10:::1;:38::i;:::-;1619:27;1625:5:::0;1632:13;1619:5:::1;:27::i;:::-;1208:445:::0;;;;;;666:2075;;7172:247:0;7255:25;7283:18;7296:4;7283:12;:18::i;:::-;7311:6;:12;;;;;;;;;;;:22;;:34;;;7360:52;7255:46;;-1:-1:-1;7336:9:0;;7255:46;;7318:4;;7360:52;;7311:6;7360:52;7172:247;;;:::o;6937:110::-;7015:25;7026:4;7032:7;7015:10;:25::i;:::-;6937:110;;:::o;8520:535:4:-;-1:-1:-1;;;;;8603:21:4;;8595:65;;;;-1:-1:-1;;;8595:65:4;;;;;;;:::i;:::-;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:4;;;;;;:9;:18;;;;;;:28;;;;;;8952:37;;;;;8899:28;;8952:37;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;:48::i;4504:129:0:-;4578:7;4604:12;;;;;;;;;;:22;;;4504:129;;;;:::o;1978:166:1:-;2065:31;2082:4;2088:7;2065:16;;;;;:31;;:::i;:::-;2106:18;;;;:12;:18;;;;;;;;:31;;2129:7;;2106:22;;;;;:31;;:::i;:::-;;1978:166;;:::o;2285:454:15:-;-1:-1:-1;;;;;2434:18:15;;;;;;:38;;-1:-1:-1;;;;;;2456:16:15;;;;2434:38;:71;;;;-1:-1:-1;2477:28:15;-1:-1:-1;;;;;;;;;;;2500:4:15;2477:7;:28::i;:::-;2476:29;2434:71;:102;;;;-1:-1:-1;2510:26:15;-1:-1:-1;;;;;;;;;;;2533:2:15;2510:7;:26::i;:::-;2509:27;2434:102;2430:249;;;2616:17;;2598:15;:35;2590:78;;;;-1:-1:-1;;;2590:78:15;;;;;;;:::i;:::-;2688:44;2715:4;2721:2;2725:6;2688:26;;;;;:44;;:::i;7587:233:0:-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;-1:-1:-1;7708:36:0;;;7790:12;:10;:12::i;:::-;7763:40;;-1:-1:-1;;;;;7763:40:0;;;;;;;7775:4;;7763:40;;;;;7587:233;;:::o;8305:150:14:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:14;;8398:4;:50::i;:::-;8391:57;;8305:150;;;;;:::o;3021:145:0:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;;;;3021:145::o;640:96:8:-;719:10;640:96;:::o;2214:404:14:-;2277:4;2298:21;2308:3;2313:5;2298:9;:21::i;:::-;2293:319;;-1:-1:-1;2335:23:14;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:14;2589:12;;4255:127;4328:4;4351:19;;;:12;;;;;:19;;;;;;:24;;;4255:127::o;666:2075:15:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;666:2075:15;;;-1:-1:-1;666:2075:15;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:19;95:13;;-1:-1:-1;;;;;137:31:19;;127:42;;117:2;;183:1;180;173:12;198:881;;307:3;300:4;292:6;288:17;284:27;274:2;;329:5;322;315:20;274:2;356:13;;-1:-1:-1;;;;;418:10:19;;;415:2;;;431:18;;:::i;:::-;480:2;474:9;502:4;-1:-1:-1;;572:2:19;553:13;;549:27;537:40;;533:49;;617:22;;;597:18;;;594:46;591:2;;;643:18;;:::i;:::-;679:2;672:22;703:18;;;740:15;;;736:24;;733:33;-1:-1:-1;730:2:19;;;783:5;776;769:20;730:2;809:5;800:14;;823:133;837:2;834:1;831:9;823:133;;;925:14;;;921:23;;915:30;894:14;;;890:23;;883:63;848:10;;;;823:133;;;974:2;971:1;968:9;965:2;;;1033:5;1028:2;1023;1015:6;1011:15;1007:24;1000:39;965:2;-1:-1:-1;1067:6:19;264:815;-1:-1:-1;;;;;264:815:19:o;1084:895::-;;;;;;;1312:3;1300:9;1291:7;1287:23;1283:33;1280:2;;;1334:6;1326;1319:22;1280:2;1366:16;;-1:-1:-1;;;;;1431:14:19;;;1428:2;;;1463:6;1455;1448:22;1428:2;1491:63;1546:7;1537:6;1526:9;1522:22;1491:63;:::i;:::-;1481:73;;1600:2;1589:9;1585:18;1579:25;1563:41;;1629:2;1619:8;1616:16;1613:2;;;1650:6;1642;1635:22;1613:2;;1678:65;1735:7;1724:8;1713:9;1709:24;1678:65;:::i;:::-;1668:75;;;1783:2;1772:9;1768:18;1762:25;1752:35;;1827:2;1816:9;1812:18;1806:25;1796:35;;1850:52;1897:3;1886:9;1882:19;1850:52;:::i;:::-;1840:62;;1921:52;1968:3;1957:9;1953:19;1921:52;:::i;:::-;1911:62;;1270:709;;;;;;;;:::o;1984:354::-;2186:2;2168:21;;;2225:2;2205:18;;;2198:30;2264:32;2259:2;2244:18;;2237:60;2329:2;2314:18;;2158:180::o;2343:355::-;2545:2;2527:21;;;2584:2;2564:18;;;2557:30;2623:33;2618:2;2603:18;;2596:61;2689:2;2674:18;;2517:181::o;2703:177::-;2849:25;;;2837:2;2822:18;;2804:76::o;2885:286::-;;2956:1;2952:6;2949:1;2946:13;2943:2;;;-1:-1:-1;;;2989:3:19;2982:90;3095:4;3092:1;3085:15;3125:4;3120:3;3113:17;2943:2;-1:-1:-1;3156:9:19;;2933:238::o;3176:437::-;3261:1;3251:12;;3308:1;3298:12;;;3319:2;;3373:4;3365:6;3361:17;3351:27;;3319:2;3426;3418:6;3415:14;3395:18;3392:38;3389:2;;;-1:-1:-1;;;3460:1:19;3453:88;3564:4;3561:1;3554:15;3592:4;3589:1;3582:15;3389:2;;3231:382;;;:::o;3618:184::-;-1:-1:-1;;;3667:1:19;3660:88;3767:4;3764:1;3757:15;3791:4;3788:1;3781:15;3650:152;666:2075:15;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11528:19","statements":[{"nodeType":"YulBlock","src":"6:3:19","statements":[]},{"body":{"nodeType":"YulBlock","src":"65:124:19","statements":[{"nodeType":"YulAssignment","src":"75:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"84:12:19"},"nodeType":"YulFunctionCall","src":"84:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:19"}]},{"body":{"nodeType":"YulBlock","src":"167:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"176:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"179:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"169:6:19"},"nodeType":"YulFunctionCall","src":"169:12:19"},"nodeType":"YulExpressionStatement","src":"169:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"126:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"137:5:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"152:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"157:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"148:3:19"},"nodeType":"YulFunctionCall","src":"148:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"144:3:19"},"nodeType":"YulFunctionCall","src":"144:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"133:3:19"},"nodeType":"YulFunctionCall","src":"133:31:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"123:2:19"},"nodeType":"YulFunctionCall","src":"123:42:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"116:6:19"},"nodeType":"YulFunctionCall","src":"116:50:19"},"nodeType":"YulIf","src":"113:2:19"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44:6:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55:5:19","type":""}],"src":"14:175:19"},{"body":{"nodeType":"YulBlock","src":"264:128:19","statements":[{"body":{"nodeType":"YulBlock","src":"310:26:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"319:6:19"},{"name":"value0","nodeType":"YulIdentifier","src":"327:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"312:6:19"},"nodeType":"YulFunctionCall","src":"312:22:19"},"nodeType":"YulExpressionStatement","src":"312:22:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"285:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"294:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"281:3:19"},"nodeType":"YulFunctionCall","src":"281:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"306:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"277:3:19"},"nodeType":"YulFunctionCall","src":"277:32:19"},"nodeType":"YulIf","src":"274:2:19"},{"nodeType":"YulAssignment","src":"345:41:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"376:9:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"355:20:19"},"nodeType":"YulFunctionCall","src":"355:31:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"345:6:19"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"230:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"241:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"253:6:19","type":""}],"src":"194:198:19"},{"body":{"nodeType":"YulBlock","src":"484:187:19","statements":[{"body":{"nodeType":"YulBlock","src":"530:26:19","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"539:6:19"},{"name":"value1","nodeType":"YulIdentifier","src":"547:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"532:6:19"},"nodeType":"YulFunctionCall","src":"532:22:19"},"nodeType":"YulExpressionStatement","src":"532:22:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"505:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"514:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"501:3:19"},"nodeType":"YulFunctionCall","src":"501:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"526:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"497:3:19"},"nodeType":"YulFunctionCall","src":"497:32:19"},"nodeType":"YulIf","src":"494:2:19"},{"nodeType":"YulAssignment","src":"565:41:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"596:9:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"575:20:19"},"nodeType":"YulFunctionCall","src":"575:31:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"565:6:19"}]},{"nodeType":"YulAssignment","src":"615:50:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"650:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"661:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"646:3:19"},"nodeType":"YulFunctionCall","src":"646:18:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"625:20:19"},"nodeType":"YulFunctionCall","src":"625:40:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"615:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"442:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"453:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"465:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"473:6:19","type":""}],"src":"397:274:19"},{"body":{"nodeType":"YulBlock","src":"780:238:19","statements":[{"body":{"nodeType":"YulBlock","src":"826:26:19","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"835:6:19"},{"name":"value2","nodeType":"YulIdentifier","src":"843:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"828:6:19"},"nodeType":"YulFunctionCall","src":"828:22:19"},"nodeType":"YulExpressionStatement","src":"828:22:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"801:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"810:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"797:3:19"},"nodeType":"YulFunctionCall","src":"797:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"822:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"793:3:19"},"nodeType":"YulFunctionCall","src":"793:32:19"},"nodeType":"YulIf","src":"790:2:19"},{"nodeType":"YulAssignment","src":"861:41:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"892:9:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"871:20:19"},"nodeType":"YulFunctionCall","src":"871:31:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"861:6:19"}]},{"nodeType":"YulAssignment","src":"911:50:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"946:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"957:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"942:3:19"},"nodeType":"YulFunctionCall","src":"942:18:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"921:20:19"},"nodeType":"YulFunctionCall","src":"921:40:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"911:6:19"}]},{"nodeType":"YulAssignment","src":"970:42:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"997:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1008:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"993:3:19"},"nodeType":"YulFunctionCall","src":"993:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"980:12:19"},"nodeType":"YulFunctionCall","src":"980:32:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"970:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"730:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"741:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"753:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"761:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"769:6:19","type":""}],"src":"676:342:19"},{"body":{"nodeType":"YulBlock","src":"1110:179:19","statements":[{"body":{"nodeType":"YulBlock","src":"1156:26:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1165:6:19"},{"name":"value0","nodeType":"YulIdentifier","src":"1173:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1158:6:19"},"nodeType":"YulFunctionCall","src":"1158:22:19"},"nodeType":"YulExpressionStatement","src":"1158:22:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1131:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1140:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1127:3:19"},"nodeType":"YulFunctionCall","src":"1127:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1152:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1123:3:19"},"nodeType":"YulFunctionCall","src":"1123:32:19"},"nodeType":"YulIf","src":"1120:2:19"},{"nodeType":"YulAssignment","src":"1191:41:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1222:9:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1201:20:19"},"nodeType":"YulFunctionCall","src":"1201:31:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1191:6:19"}]},{"nodeType":"YulAssignment","src":"1241:42:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1268:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1279:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1264:3:19"},"nodeType":"YulFunctionCall","src":"1264:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1251:12:19"},"nodeType":"YulFunctionCall","src":"1251:32:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1241:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1079:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1091:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1099:6:19","type":""}],"src":"1023:266:19"},{"body":{"nodeType":"YulBlock","src":"1364:120:19","statements":[{"body":{"nodeType":"YulBlock","src":"1410:26:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1419:6:19"},{"name":"value0","nodeType":"YulIdentifier","src":"1427:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1412:6:19"},"nodeType":"YulFunctionCall","src":"1412:22:19"},"nodeType":"YulExpressionStatement","src":"1412:22:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1385:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1394:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1381:3:19"},"nodeType":"YulFunctionCall","src":"1381:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1406:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1377:3:19"},"nodeType":"YulFunctionCall","src":"1377:32:19"},"nodeType":"YulIf","src":"1374:2:19"},{"nodeType":"YulAssignment","src":"1445:33:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1468:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1455:12:19"},"nodeType":"YulFunctionCall","src":"1455:23:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1445:6:19"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1330:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1341:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1353:6:19","type":""}],"src":"1294:190:19"},{"body":{"nodeType":"YulBlock","src":"1576:179:19","statements":[{"body":{"nodeType":"YulBlock","src":"1622:26:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1631:6:19"},{"name":"value0","nodeType":"YulIdentifier","src":"1639:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1624:6:19"},"nodeType":"YulFunctionCall","src":"1624:22:19"},"nodeType":"YulExpressionStatement","src":"1624:22:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1597:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1606:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1593:3:19"},"nodeType":"YulFunctionCall","src":"1593:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1618:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1589:3:19"},"nodeType":"YulFunctionCall","src":"1589:32:19"},"nodeType":"YulIf","src":"1586:2:19"},{"nodeType":"YulAssignment","src":"1657:33:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1680:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1667:12:19"},"nodeType":"YulFunctionCall","src":"1667:23:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1657:6:19"}]},{"nodeType":"YulAssignment","src":"1699:50:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1734:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1745:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:19"},"nodeType":"YulFunctionCall","src":"1730:18:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1709:20:19"},"nodeType":"YulFunctionCall","src":"1709:40:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1699:6:19"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1534:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1545:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1557:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1565:6:19","type":""}],"src":"1489:266:19"},{"body":{"nodeType":"YulBlock","src":"1847:171:19","statements":[{"body":{"nodeType":"YulBlock","src":"1893:26:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1902:6:19"},{"name":"value0","nodeType":"YulIdentifier","src":"1910:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1895:6:19"},"nodeType":"YulFunctionCall","src":"1895:22:19"},"nodeType":"YulExpressionStatement","src":"1895:22:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1868:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1877:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1864:3:19"},"nodeType":"YulFunctionCall","src":"1864:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1889:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1860:3:19"},"nodeType":"YulFunctionCall","src":"1860:32:19"},"nodeType":"YulIf","src":"1857:2:19"},{"nodeType":"YulAssignment","src":"1928:33:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1951:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1938:12:19"},"nodeType":"YulFunctionCall","src":"1938:23:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1928:6:19"}]},{"nodeType":"YulAssignment","src":"1970:42:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1997:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2008:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1993:3:19"},"nodeType":"YulFunctionCall","src":"1993:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1980:12:19"},"nodeType":"YulFunctionCall","src":"1980:32:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1970:6:19"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1805:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1816:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1828:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1836:6:19","type":""}],"src":"1760:258:19"},{"body":{"nodeType":"YulBlock","src":"2092:237:19","statements":[{"body":{"nodeType":"YulBlock","src":"2138:26:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2147:6:19"},{"name":"value0","nodeType":"YulIdentifier","src":"2155:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2140:6:19"},"nodeType":"YulFunctionCall","src":"2140:22:19"},"nodeType":"YulExpressionStatement","src":"2140:22:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2113:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2122:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2109:3:19"},"nodeType":"YulFunctionCall","src":"2109:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"2134:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2105:3:19"},"nodeType":"YulFunctionCall","src":"2105:32:19"},"nodeType":"YulIf","src":"2102:2:19"},{"nodeType":"YulVariableDeclaration","src":"2173:36:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2199:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2186:12:19"},"nodeType":"YulFunctionCall","src":"2186:23:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2177:5:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2273:26:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2282:6:19"},{"name":"value0","nodeType":"YulIdentifier","src":"2290:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2275:6:19"},"nodeType":"YulFunctionCall","src":"2275:22:19"},"nodeType":"YulExpressionStatement","src":"2275:22:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2231:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2242:5:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2253:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2258:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2249:3:19"},"nodeType":"YulFunctionCall","src":"2249:20:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2238:3:19"},"nodeType":"YulFunctionCall","src":"2238:32:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2228:2:19"},"nodeType":"YulFunctionCall","src":"2228:43:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2221:6:19"},"nodeType":"YulFunctionCall","src":"2221:51:19"},"nodeType":"YulIf","src":"2218:2:19"},{"nodeType":"YulAssignment","src":"2308:15:19","value":{"name":"value","nodeType":"YulIdentifier","src":"2318:5:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2308:6:19"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2058:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2069:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2081:6:19","type":""}],"src":"2023:306:19"},{"body":{"nodeType":"YulBlock","src":"2404:120:19","statements":[{"body":{"nodeType":"YulBlock","src":"2450:26:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2459:6:19"},{"name":"value0","nodeType":"YulIdentifier","src":"2467:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2452:6:19"},"nodeType":"YulFunctionCall","src":"2452:22:19"},"nodeType":"YulExpressionStatement","src":"2452:22:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2425:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2434:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2421:3:19"},"nodeType":"YulFunctionCall","src":"2421:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"2446:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2417:3:19"},"nodeType":"YulFunctionCall","src":"2417:32:19"},"nodeType":"YulIf","src":"2414:2:19"},{"nodeType":"YulAssignment","src":"2485:33:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2508:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2495:12:19"},"nodeType":"YulFunctionCall","src":"2495:23:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2485:6:19"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2370:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2381:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2393:6:19","type":""}],"src":"2334:190:19"},{"body":{"nodeType":"YulBlock","src":"2918:397:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2935:3:19"},{"kind":"string","nodeType":"YulLiteral","src":"2940:25:19","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2928:6:19"},"nodeType":"YulFunctionCall","src":"2928:38:19"},"nodeType":"YulExpressionStatement","src":"2928:38:19"},{"nodeType":"YulVariableDeclaration","src":"2975:27:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2995:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2989:5:19"},"nodeType":"YulFunctionCall","src":"2989:13:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2979:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3037:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3045:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3033:3:19"},"nodeType":"YulFunctionCall","src":"3033:17:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3056:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3061:2:19","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3052:3:19"},"nodeType":"YulFunctionCall","src":"3052:12:19"},{"name":"length","nodeType":"YulIdentifier","src":"3066:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3011:21:19"},"nodeType":"YulFunctionCall","src":"3011:62:19"},"nodeType":"YulExpressionStatement","src":"3011:62:19"},{"nodeType":"YulVariableDeclaration","src":"3082:26:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3096:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"3101:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3092:3:19"},"nodeType":"YulFunctionCall","src":"3092:16:19"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3086:2:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3128:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"3132:2:19","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3124:3:19"},"nodeType":"YulFunctionCall","src":"3124:11:19"},{"kind":"string","nodeType":"YulLiteral","src":"3137:19:19","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3117:6:19"},"nodeType":"YulFunctionCall","src":"3117:40:19"},"nodeType":"YulExpressionStatement","src":"3117:40:19"},{"nodeType":"YulVariableDeclaration","src":"3166:29:19","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3188:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3182:5:19"},"nodeType":"YulFunctionCall","src":"3182:13:19"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"3170:8:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3230:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3238:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3226:3:19"},"nodeType":"YulFunctionCall","src":"3226:17:19"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3249:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"3253:2:19","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3245:3:19"},"nodeType":"YulFunctionCall","src":"3245:11:19"},{"name":"length_1","nodeType":"YulIdentifier","src":"3258:8:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3204:21:19"},"nodeType":"YulFunctionCall","src":"3204:63:19"},"nodeType":"YulExpressionStatement","src":"3204:63:19"},{"nodeType":"YulAssignment","src":"3276:33:19","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3291:2:19"},{"name":"length_1","nodeType":"YulIdentifier","src":"3295:8:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3287:3:19"},"nodeType":"YulFunctionCall","src":"3287:17:19"},{"kind":"number","nodeType":"YulLiteral","src":"3306:2:19","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3283:3:19"},"nodeType":"YulFunctionCall","src":"3283:26:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3276:3:19"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2886:3:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2891:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2899:6:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2910:3:19","type":""}],"src":"2529:786:19"},{"body":{"nodeType":"YulBlock","src":"3421:102:19","statements":[{"nodeType":"YulAssignment","src":"3431:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3443:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3454:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3439:3:19"},"nodeType":"YulFunctionCall","src":"3439:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3431:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3473:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3488:6:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3504:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3509:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3500:3:19"},"nodeType":"YulFunctionCall","src":"3500:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"3513:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3496:3:19"},"nodeType":"YulFunctionCall","src":"3496:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3484:3:19"},"nodeType":"YulFunctionCall","src":"3484:32:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3466:6:19"},"nodeType":"YulFunctionCall","src":"3466:51:19"},"nodeType":"YulExpressionStatement","src":"3466:51:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3390:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3401:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3412:4:19","type":""}],"src":"3320:203:19"},{"body":{"nodeType":"YulBlock","src":"3623:92:19","statements":[{"nodeType":"YulAssignment","src":"3633:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3645:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3656:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3641:3:19"},"nodeType":"YulFunctionCall","src":"3641:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3633:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3675:9:19"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3700:6:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3693:6:19"},"nodeType":"YulFunctionCall","src":"3693:14:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3686:6:19"},"nodeType":"YulFunctionCall","src":"3686:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3668:6:19"},"nodeType":"YulFunctionCall","src":"3668:41:19"},"nodeType":"YulExpressionStatement","src":"3668:41:19"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3592:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3603:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3614:4:19","type":""}],"src":"3528:187:19"},{"body":{"nodeType":"YulBlock","src":"3821:76:19","statements":[{"nodeType":"YulAssignment","src":"3831:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3843:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3854:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3839:3:19"},"nodeType":"YulFunctionCall","src":"3839:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3831:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3873:9:19"},{"name":"value0","nodeType":"YulIdentifier","src":"3884:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3866:6:19"},"nodeType":"YulFunctionCall","src":"3866:25:19"},"nodeType":"YulExpressionStatement","src":"3866:25:19"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3790:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3801:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3812:4:19","type":""}],"src":"3720:177:19"},{"body":{"nodeType":"YulBlock","src":"4023:262:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4040:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4051:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4033:6:19"},"nodeType":"YulFunctionCall","src":"4033:21:19"},"nodeType":"YulExpressionStatement","src":"4033:21:19"},{"nodeType":"YulVariableDeclaration","src":"4063:27:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4083:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4077:5:19"},"nodeType":"YulFunctionCall","src":"4077:13:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4067:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4121:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:19"},"nodeType":"YulFunctionCall","src":"4106:18:19"},{"name":"length","nodeType":"YulIdentifier","src":"4126:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4099:6:19"},"nodeType":"YulFunctionCall","src":"4099:34:19"},"nodeType":"YulExpressionStatement","src":"4099:34:19"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4168:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4176:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4164:3:19"},"nodeType":"YulFunctionCall","src":"4164:15:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4185:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4196:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4181:3:19"},"nodeType":"YulFunctionCall","src":"4181:18:19"},{"name":"length","nodeType":"YulIdentifier","src":"4201:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4142:21:19"},"nodeType":"YulFunctionCall","src":"4142:66:19"},"nodeType":"YulExpressionStatement","src":"4142:66:19"},{"nodeType":"YulAssignment","src":"4217:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4233:9:19"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4252:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4260:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4248:3:19"},"nodeType":"YulFunctionCall","src":"4248:15:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4269:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4265:3:19"},"nodeType":"YulFunctionCall","src":"4265:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4244:3:19"},"nodeType":"YulFunctionCall","src":"4244:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4229:3:19"},"nodeType":"YulFunctionCall","src":"4229:45:19"},{"kind":"number","nodeType":"YulLiteral","src":"4276:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4225:3:19"},"nodeType":"YulFunctionCall","src":"4225:54:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4217:4:19"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3992:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4003:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4014:4:19","type":""}],"src":"3902:383:19"},{"body":{"nodeType":"YulBlock","src":"4464:182:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4481:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4492:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4474:6:19"},"nodeType":"YulFunctionCall","src":"4474:21:19"},"nodeType":"YulExpressionStatement","src":"4474:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4515:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4526:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4511:3:19"},"nodeType":"YulFunctionCall","src":"4511:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"4531:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4504:6:19"},"nodeType":"YulFunctionCall","src":"4504:30:19"},"nodeType":"YulExpressionStatement","src":"4504:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4554:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4565:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4550:3:19"},"nodeType":"YulFunctionCall","src":"4550:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"4570:34:19","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4543:6:19"},"nodeType":"YulFunctionCall","src":"4543:62:19"},"nodeType":"YulExpressionStatement","src":"4543:62:19"},{"nodeType":"YulAssignment","src":"4614:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4626:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4637:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4622:3:19"},"nodeType":"YulFunctionCall","src":"4622:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4614:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4441:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4455:4:19","type":""}],"src":"4290:356:19"},{"body":{"nodeType":"YulBlock","src":"4825:225:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4842:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4853:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4835:6:19"},"nodeType":"YulFunctionCall","src":"4835:21:19"},"nodeType":"YulExpressionStatement","src":"4835:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4876:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4887:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4872:3:19"},"nodeType":"YulFunctionCall","src":"4872:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"4892:2:19","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4865:6:19"},"nodeType":"YulFunctionCall","src":"4865:30:19"},"nodeType":"YulExpressionStatement","src":"4865:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4915:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4926:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4911:3:19"},"nodeType":"YulFunctionCall","src":"4911:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"4931:34:19","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4904:6:19"},"nodeType":"YulFunctionCall","src":"4904:62:19"},"nodeType":"YulExpressionStatement","src":"4904:62:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4986:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4997:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4982:3:19"},"nodeType":"YulFunctionCall","src":"4982:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"5002:5:19","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4975:6:19"},"nodeType":"YulFunctionCall","src":"4975:33:19"},"nodeType":"YulExpressionStatement","src":"4975:33:19"},{"nodeType":"YulAssignment","src":"5017:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5029:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5040:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5025:3:19"},"nodeType":"YulFunctionCall","src":"5025:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5017:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4802:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4816:4:19","type":""}],"src":"4651:399:19"},{"body":{"nodeType":"YulBlock","src":"5229:224:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5246:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5257:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5239:6:19"},"nodeType":"YulFunctionCall","src":"5239:21:19"},"nodeType":"YulExpressionStatement","src":"5239:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5280:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5291:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5276:3:19"},"nodeType":"YulFunctionCall","src":"5276:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"5296:2:19","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5269:6:19"},"nodeType":"YulFunctionCall","src":"5269:30:19"},"nodeType":"YulExpressionStatement","src":"5269:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5319:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5330:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5315:3:19"},"nodeType":"YulFunctionCall","src":"5315:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"5335:34:19","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5308:6:19"},"nodeType":"YulFunctionCall","src":"5308:62:19"},"nodeType":"YulExpressionStatement","src":"5308:62:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5390:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5401:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5386:3:19"},"nodeType":"YulFunctionCall","src":"5386:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"5406:4:19","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5379:6:19"},"nodeType":"YulFunctionCall","src":"5379:32:19"},"nodeType":"YulExpressionStatement","src":"5379:32:19"},{"nodeType":"YulAssignment","src":"5420:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5432:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5443:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5428:3:19"},"nodeType":"YulFunctionCall","src":"5428:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5420:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5206:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5220:4:19","type":""}],"src":"5055:398:19"},{"body":{"nodeType":"YulBlock","src":"5632:224:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5649:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5660:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5642:6:19"},"nodeType":"YulFunctionCall","src":"5642:21:19"},"nodeType":"YulExpressionStatement","src":"5642:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5683:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5694:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5679:3:19"},"nodeType":"YulFunctionCall","src":"5679:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"5699:2:19","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5672:6:19"},"nodeType":"YulFunctionCall","src":"5672:30:19"},"nodeType":"YulExpressionStatement","src":"5672:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5722:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5733:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5718:3:19"},"nodeType":"YulFunctionCall","src":"5718:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"5738:34:19","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5711:6:19"},"nodeType":"YulFunctionCall","src":"5711:62:19"},"nodeType":"YulExpressionStatement","src":"5711:62:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5793:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5804:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5789:3:19"},"nodeType":"YulFunctionCall","src":"5789:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"5809:4:19","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5782:6:19"},"nodeType":"YulFunctionCall","src":"5782:32:19"},"nodeType":"YulExpressionStatement","src":"5782:32:19"},{"nodeType":"YulAssignment","src":"5823:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5835:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5846:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5831:3:19"},"nodeType":"YulFunctionCall","src":"5831:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5823:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5609:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5623:4:19","type":""}],"src":"5458:398:19"},{"body":{"nodeType":"YulBlock","src":"6035:179:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6052:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6063:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6045:6:19"},"nodeType":"YulFunctionCall","src":"6045:21:19"},"nodeType":"YulExpressionStatement","src":"6045:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6086:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6097:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6082:3:19"},"nodeType":"YulFunctionCall","src":"6082:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"6102:2:19","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6075:6:19"},"nodeType":"YulFunctionCall","src":"6075:30:19"},"nodeType":"YulExpressionStatement","src":"6075:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6125:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6136:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6121:3:19"},"nodeType":"YulFunctionCall","src":"6121:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"6141:31:19","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6114:6:19"},"nodeType":"YulFunctionCall","src":"6114:59:19"},"nodeType":"YulExpressionStatement","src":"6114:59:19"},{"nodeType":"YulAssignment","src":"6182:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6194:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6205:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6190:3:19"},"nodeType":"YulFunctionCall","src":"6190:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6182:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6012:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6026:4:19","type":""}],"src":"5861:353:19"},{"body":{"nodeType":"YulBlock","src":"6393:228:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6410:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6421:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6403:6:19"},"nodeType":"YulFunctionCall","src":"6403:21:19"},"nodeType":"YulExpressionStatement","src":"6403:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6444:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6455:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6440:3:19"},"nodeType":"YulFunctionCall","src":"6440:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"6460:2:19","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6433:6:19"},"nodeType":"YulFunctionCall","src":"6433:30:19"},"nodeType":"YulExpressionStatement","src":"6433:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6483:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6494:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6479:3:19"},"nodeType":"YulFunctionCall","src":"6479:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"6499:34:19","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6472:6:19"},"nodeType":"YulFunctionCall","src":"6472:62:19"},"nodeType":"YulExpressionStatement","src":"6472:62:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6554:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6565:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6550:3:19"},"nodeType":"YulFunctionCall","src":"6550:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"6570:8:19","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6543:6:19"},"nodeType":"YulFunctionCall","src":"6543:36:19"},"nodeType":"YulExpressionStatement","src":"6543:36:19"},{"nodeType":"YulAssignment","src":"6588:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6600:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6611:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6596:3:19"},"nodeType":"YulFunctionCall","src":"6596:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6588:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6370:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6384:4:19","type":""}],"src":"6219:402:19"},{"body":{"nodeType":"YulBlock","src":"6800:180:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6817:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6828:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6810:6:19"},"nodeType":"YulFunctionCall","src":"6810:21:19"},"nodeType":"YulExpressionStatement","src":"6810:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6851:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6862:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6847:3:19"},"nodeType":"YulFunctionCall","src":"6847:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"6867:2:19","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6840:6:19"},"nodeType":"YulFunctionCall","src":"6840:30:19"},"nodeType":"YulExpressionStatement","src":"6840:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6890:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6901:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6886:3:19"},"nodeType":"YulFunctionCall","src":"6886:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"6906:32:19","type":"","value":"Token can't tradable right now"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6879:6:19"},"nodeType":"YulFunctionCall","src":"6879:60:19"},"nodeType":"YulExpressionStatement","src":"6879:60:19"},{"nodeType":"YulAssignment","src":"6948:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6960:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6971:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6956:3:19"},"nodeType":"YulFunctionCall","src":"6956:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6948:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_7f8280ee5bc0ce19de983d53d21d8eb08d84b6288c0d629ced3e043b1f61a7f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6777:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6791:4:19","type":""}],"src":"6626:354:19"},{"body":{"nodeType":"YulBlock","src":"7159:244:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7176:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7187:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7169:6:19"},"nodeType":"YulFunctionCall","src":"7169:21:19"},"nodeType":"YulExpressionStatement","src":"7169:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7210:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7221:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7206:3:19"},"nodeType":"YulFunctionCall","src":"7206:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"7226:2:19","type":"","value":"54"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7199:6:19"},"nodeType":"YulFunctionCall","src":"7199:30:19"},"nodeType":"YulExpressionStatement","src":"7199:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7249:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7260:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7245:3:19"},"nodeType":"YulFunctionCall","src":"7245:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"7265:34:19","type":"","value":"ERC20PresetMinterPauser: must ha"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7238:6:19"},"nodeType":"YulFunctionCall","src":"7238:62:19"},"nodeType":"YulExpressionStatement","src":"7238:62:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7320:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7331:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7316:3:19"},"nodeType":"YulFunctionCall","src":"7316:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"7336:24:19","type":"","value":"ve minter role to mint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7309:6:19"},"nodeType":"YulFunctionCall","src":"7309:52:19"},"nodeType":"YulExpressionStatement","src":"7309:52:19"},{"nodeType":"YulAssignment","src":"7370:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7382:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7393:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7378:3:19"},"nodeType":"YulFunctionCall","src":"7378:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7370:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7136:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7150:4:19","type":""}],"src":"6985:418:19"},{"body":{"nodeType":"YulBlock","src":"7582:223:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7599:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7610:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7592:6:19"},"nodeType":"YulFunctionCall","src":"7592:21:19"},"nodeType":"YulExpressionStatement","src":"7592:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7633:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7644:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7629:3:19"},"nodeType":"YulFunctionCall","src":"7629:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"7649:2:19","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7622:6:19"},"nodeType":"YulFunctionCall","src":"7622:30:19"},"nodeType":"YulExpressionStatement","src":"7622:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7672:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7683:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7668:3:19"},"nodeType":"YulFunctionCall","src":"7668:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"7688:34:19","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7661:6:19"},"nodeType":"YulFunctionCall","src":"7661:62:19"},"nodeType":"YulExpressionStatement","src":"7661:62:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7743:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7754:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7739:3:19"},"nodeType":"YulFunctionCall","src":"7739:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"7759:3:19","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7732:6:19"},"nodeType":"YulFunctionCall","src":"7732:31:19"},"nodeType":"YulExpressionStatement","src":"7732:31:19"},{"nodeType":"YulAssignment","src":"7772:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7784:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7795:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7780:3:19"},"nodeType":"YulFunctionCall","src":"7780:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7772:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7559:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7573:4:19","type":""}],"src":"7408:397:19"},{"body":{"nodeType":"YulBlock","src":"7984:227:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8001:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8012:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7994:6:19"},"nodeType":"YulFunctionCall","src":"7994:21:19"},"nodeType":"YulExpressionStatement","src":"7994:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8035:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8031:3:19"},"nodeType":"YulFunctionCall","src":"8031:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"8051:2:19","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8024:6:19"},"nodeType":"YulFunctionCall","src":"8024:30:19"},"nodeType":"YulExpressionStatement","src":"8024:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8074:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8085:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8070:3:19"},"nodeType":"YulFunctionCall","src":"8070:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"8090:34:19","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8063:6:19"},"nodeType":"YulFunctionCall","src":"8063:62:19"},"nodeType":"YulExpressionStatement","src":"8063:62:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8145:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8156:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8141:3:19"},"nodeType":"YulFunctionCall","src":"8141:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"8161:7:19","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8134:6:19"},"nodeType":"YulFunctionCall","src":"8134:35:19"},"nodeType":"YulExpressionStatement","src":"8134:35:19"},{"nodeType":"YulAssignment","src":"8178:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8190:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8201:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8186:3:19"},"nodeType":"YulFunctionCall","src":"8186:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8178:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7961:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7975:4:19","type":""}],"src":"7810:401:19"},{"body":{"nodeType":"YulBlock","src":"8390:226:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8407:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8418:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8400:6:19"},"nodeType":"YulFunctionCall","src":"8400:21:19"},"nodeType":"YulExpressionStatement","src":"8400:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8441:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8452:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8437:3:19"},"nodeType":"YulFunctionCall","src":"8437:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"8457:2:19","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8430:6:19"},"nodeType":"YulFunctionCall","src":"8430:30:19"},"nodeType":"YulExpressionStatement","src":"8430:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8480:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8491:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8476:3:19"},"nodeType":"YulFunctionCall","src":"8476:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"8496:34:19","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8469:6:19"},"nodeType":"YulFunctionCall","src":"8469:62:19"},"nodeType":"YulExpressionStatement","src":"8469:62:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8551:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8562:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8547:3:19"},"nodeType":"YulFunctionCall","src":"8547:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"8567:6:19","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8540:6:19"},"nodeType":"YulFunctionCall","src":"8540:34:19"},"nodeType":"YulExpressionStatement","src":"8540:34:19"},{"nodeType":"YulAssignment","src":"8583:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8595:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8606:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8591:3:19"},"nodeType":"YulFunctionCall","src":"8591:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8583:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8367:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8381:4:19","type":""}],"src":"8216:400:19"},{"body":{"nodeType":"YulBlock","src":"8795:227:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8812:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8823:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8805:6:19"},"nodeType":"YulFunctionCall","src":"8805:21:19"},"nodeType":"YulExpressionStatement","src":"8805:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8846:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8857:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8842:3:19"},"nodeType":"YulFunctionCall","src":"8842:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"8862:2:19","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8835:6:19"},"nodeType":"YulFunctionCall","src":"8835:30:19"},"nodeType":"YulExpressionStatement","src":"8835:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8885:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8896:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8881:3:19"},"nodeType":"YulFunctionCall","src":"8881:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"8901:34:19","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8874:6:19"},"nodeType":"YulFunctionCall","src":"8874:62:19"},"nodeType":"YulExpressionStatement","src":"8874:62:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8956:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8967:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8952:3:19"},"nodeType":"YulFunctionCall","src":"8952:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"8972:7:19","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8945:6:19"},"nodeType":"YulFunctionCall","src":"8945:35:19"},"nodeType":"YulExpressionStatement","src":"8945:35:19"},{"nodeType":"YulAssignment","src":"8989:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9001:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9012:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8997:3:19"},"nodeType":"YulFunctionCall","src":"8997:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8989:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8772:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8786:4:19","type":""}],"src":"8621:401:19"},{"body":{"nodeType":"YulBlock","src":"9201:237:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9218:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9229:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9211:6:19"},"nodeType":"YulFunctionCall","src":"9211:21:19"},"nodeType":"YulExpressionStatement","src":"9211:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9252:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9263:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9248:3:19"},"nodeType":"YulFunctionCall","src":"9248:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"9268:2:19","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9241:6:19"},"nodeType":"YulFunctionCall","src":"9241:30:19"},"nodeType":"YulExpressionStatement","src":"9241:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9291:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9302:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9287:3:19"},"nodeType":"YulFunctionCall","src":"9287:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"9307:34:19","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9280:6:19"},"nodeType":"YulFunctionCall","src":"9280:62:19"},"nodeType":"YulExpressionStatement","src":"9280:62:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9362:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9373:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9358:3:19"},"nodeType":"YulFunctionCall","src":"9358:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"9378:17:19","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9351:6:19"},"nodeType":"YulFunctionCall","src":"9351:45:19"},"nodeType":"YulExpressionStatement","src":"9351:45:19"},{"nodeType":"YulAssignment","src":"9405:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9417:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9428:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9413:3:19"},"nodeType":"YulFunctionCall","src":"9413:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9405:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9178:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9192:4:19","type":""}],"src":"9027:411:19"},{"body":{"nodeType":"YulBlock","src":"9617:181:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9634:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9645:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9627:6:19"},"nodeType":"YulFunctionCall","src":"9627:21:19"},"nodeType":"YulExpressionStatement","src":"9627:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9668:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9679:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9664:3:19"},"nodeType":"YulFunctionCall","src":"9664:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"9684:2:19","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9657:6:19"},"nodeType":"YulFunctionCall","src":"9657:30:19"},"nodeType":"YulExpressionStatement","src":"9657:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9707:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9718:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9703:3:19"},"nodeType":"YulFunctionCall","src":"9703:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"9723:33:19","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9696:6:19"},"nodeType":"YulFunctionCall","src":"9696:61:19"},"nodeType":"YulExpressionStatement","src":"9696:61:19"},{"nodeType":"YulAssignment","src":"9766:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9778:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9789:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9774:3:19"},"nodeType":"YulFunctionCall","src":"9774:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9766:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9594:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9608:4:19","type":""}],"src":"9443:355:19"},{"body":{"nodeType":"YulBlock","src":"9904:76:19","statements":[{"nodeType":"YulAssignment","src":"9914:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9926:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9937:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9922:3:19"},"nodeType":"YulFunctionCall","src":"9922:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9914:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9956:9:19"},{"name":"value0","nodeType":"YulIdentifier","src":"9967:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9949:6:19"},"nodeType":"YulFunctionCall","src":"9949:25:19"},"nodeType":"YulExpressionStatement","src":"9949:25:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9873:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9884:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9895:4:19","type":""}],"src":"9803:177:19"},{"body":{"nodeType":"YulBlock","src":"10082:87:19","statements":[{"nodeType":"YulAssignment","src":"10092:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10104:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10115:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10100:3:19"},"nodeType":"YulFunctionCall","src":"10100:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10092:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10134:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10149:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"10157:4:19","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10145:3:19"},"nodeType":"YulFunctionCall","src":"10145:17:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10127:6:19"},"nodeType":"YulFunctionCall","src":"10127:36:19"},"nodeType":"YulExpressionStatement","src":"10127:36:19"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10051:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10062:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10073:4:19","type":""}],"src":"9985:184:19"},{"body":{"nodeType":"YulBlock","src":"10222:80:19","statements":[{"body":{"nodeType":"YulBlock","src":"10249:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10251:16:19"},"nodeType":"YulFunctionCall","src":"10251:18:19"},"nodeType":"YulExpressionStatement","src":"10251:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10238:1:19"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10245:1:19"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10241:3:19"},"nodeType":"YulFunctionCall","src":"10241:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10235:2:19"},"nodeType":"YulFunctionCall","src":"10235:13:19"},"nodeType":"YulIf","src":"10232:2:19"},{"nodeType":"YulAssignment","src":"10280:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10291:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"10294:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10287:3:19"},"nodeType":"YulFunctionCall","src":"10287:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10280:3:19"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10205:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"10208:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10214:3:19","type":""}],"src":"10174:128:19"},{"body":{"nodeType":"YulBlock","src":"10359:116:19","statements":[{"body":{"nodeType":"YulBlock","src":"10418:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10420:16:19"},"nodeType":"YulFunctionCall","src":"10420:18:19"},"nodeType":"YulExpressionStatement","src":"10420:18:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10390:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10383:6:19"},"nodeType":"YulFunctionCall","src":"10383:9:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10376:6:19"},"nodeType":"YulFunctionCall","src":"10376:17:19"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10398:1:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10409:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10405:3:19"},"nodeType":"YulFunctionCall","src":"10405:6:19"},{"name":"x","nodeType":"YulIdentifier","src":"10413:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10401:3:19"},"nodeType":"YulFunctionCall","src":"10401:14:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10395:2:19"},"nodeType":"YulFunctionCall","src":"10395:21:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10372:3:19"},"nodeType":"YulFunctionCall","src":"10372:45:19"},"nodeType":"YulIf","src":"10369:2:19"},{"nodeType":"YulAssignment","src":"10449:20:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10464:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"10467:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10460:3:19"},"nodeType":"YulFunctionCall","src":"10460:9:19"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"10449:7:19"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10338:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"10341:1:19","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"10347:7:19","type":""}],"src":"10307:168:19"},{"body":{"nodeType":"YulBlock","src":"10529:76:19","statements":[{"body":{"nodeType":"YulBlock","src":"10551:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10553:16:19"},"nodeType":"YulFunctionCall","src":"10553:18:19"},"nodeType":"YulExpressionStatement","src":"10553:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10545:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"10548:1:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10542:2:19"},"nodeType":"YulFunctionCall","src":"10542:8:19"},"nodeType":"YulIf","src":"10539:2:19"},{"nodeType":"YulAssignment","src":"10582:17:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10594:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"10597:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10590:3:19"},"nodeType":"YulFunctionCall","src":"10590:9:19"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"10582:4:19"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10511:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"10514:1:19","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"10520:4:19","type":""}],"src":"10480:125:19"},{"body":{"nodeType":"YulBlock","src":"10663:205:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10673:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"10682:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10677:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"10742:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10767:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"10772:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10763:3:19"},"nodeType":"YulFunctionCall","src":"10763:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10786:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"10791:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10782:3:19"},"nodeType":"YulFunctionCall","src":"10782:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10776:5:19"},"nodeType":"YulFunctionCall","src":"10776:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10756:6:19"},"nodeType":"YulFunctionCall","src":"10756:39:19"},"nodeType":"YulExpressionStatement","src":"10756:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10703:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"10706:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10700:2:19"},"nodeType":"YulFunctionCall","src":"10700:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10714:19:19","statements":[{"nodeType":"YulAssignment","src":"10716:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10725:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"10728:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10721:3:19"},"nodeType":"YulFunctionCall","src":"10721:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10716:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"10696:3:19","statements":[]},"src":"10692:113:19"},{"body":{"nodeType":"YulBlock","src":"10831:31:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10844:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"10849:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10840:3:19"},"nodeType":"YulFunctionCall","src":"10840:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"10858:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10833:6:19"},"nodeType":"YulFunctionCall","src":"10833:27:19"},"nodeType":"YulExpressionStatement","src":"10833:27:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10820:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"10823:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10817:2:19"},"nodeType":"YulFunctionCall","src":"10817:13:19"},"nodeType":"YulIf","src":"10814:2:19"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10641:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10646:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"10651:6:19","type":""}],"src":"10610:258:19"},{"body":{"nodeType":"YulBlock","src":"10920:89:19","statements":[{"body":{"nodeType":"YulBlock","src":"10947:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10949:16:19"},"nodeType":"YulFunctionCall","src":"10949:18:19"},"nodeType":"YulExpressionStatement","src":"10949:18:19"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10940:5:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10933:6:19"},"nodeType":"YulFunctionCall","src":"10933:13:19"},"nodeType":"YulIf","src":"10930:2:19"},{"nodeType":"YulAssignment","src":"10978:25:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10989:5:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11000:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10996:3:19"},"nodeType":"YulFunctionCall","src":"10996:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10985:3:19"},"nodeType":"YulFunctionCall","src":"10985:18:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10978:3:19"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10902:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10912:3:19","type":""}],"src":"10873:136:19"},{"body":{"nodeType":"YulBlock","src":"11069:325:19","statements":[{"nodeType":"YulAssignment","src":"11079:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11093:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"11099:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11089:3:19"},"nodeType":"YulFunctionCall","src":"11089:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11079:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"11110:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11140:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"11146:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11136:3:19"},"nodeType":"YulFunctionCall","src":"11136:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11114:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"11187:31:19","statements":[{"nodeType":"YulAssignment","src":"11189:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11203:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"11211:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11199:3:19"},"nodeType":"YulFunctionCall","src":"11199:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11189:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11167:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11160:6:19"},"nodeType":"YulFunctionCall","src":"11160:26:19"},"nodeType":"YulIf","src":"11157:2:19"},{"body":{"nodeType":"YulBlock","src":"11277:111:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11298:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11305:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11310:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11301:3:19"},"nodeType":"YulFunctionCall","src":"11301:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11291:6:19"},"nodeType":"YulFunctionCall","src":"11291:31:19"},"nodeType":"YulExpressionStatement","src":"11291:31:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11342:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11345:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11335:6:19"},"nodeType":"YulFunctionCall","src":"11335:15:19"},"nodeType":"YulExpressionStatement","src":"11335:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11370:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11373:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11363:6:19"},"nodeType":"YulFunctionCall","src":"11363:15:19"},"nodeType":"YulExpressionStatement","src":"11363:15:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11233:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11256:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"11264:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11253:2:19"},"nodeType":"YulFunctionCall","src":"11253:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11230:2:19"},"nodeType":"YulFunctionCall","src":"11230:38:19"},"nodeType":"YulIf","src":"11227:2:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11049:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11058:6:19","type":""}],"src":"11014:380:19"},{"body":{"nodeType":"YulBlock","src":"11431:95:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11448:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11455:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11460:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11451:3:19"},"nodeType":"YulFunctionCall","src":"11451:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:19"},"nodeType":"YulFunctionCall","src":"11441:31:19"},"nodeType":"YulExpressionStatement","src":"11441:31:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11488:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11491:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11481:6:19"},"nodeType":"YulFunctionCall","src":"11481:15:19"},"nodeType":"YulExpressionStatement","src":"11481:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11512:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11515:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11505:6:19"},"nodeType":"YulFunctionCall","src":"11505:15:19"},"nodeType":"YulExpressionStatement","src":"11505:15:19"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11399:127:19"}]},"contents":"{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7f8280ee5bc0ce19de983d53d21d8eb08d84b6288c0d629ced3e043b1f61a7f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Token can't tradable right now\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"ERC20PresetMinterPauser: must ha\")\n        mstore(add(headStart, 96), \"ve minter role to mint\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x149 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x206B60F9 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xD68FC93C EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xE88B24BA EQ PUSH2 0x330 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x127E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x421 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1114 JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1660 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH2 0x161 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x517 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C8 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x586 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x11B2 JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x126A JUMP JUMPDEST PUSH2 0x161 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x161 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x2F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x675 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x310 CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xADE5221 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x35D JUMPI POP PUSH2 0x35D DUP3 PUSH2 0x792 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x374 SWAP1 PUSH2 0x16FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A0 SWAP1 PUSH2 0x16FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x402 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x40F DUP2 DUP6 DUP6 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1751 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x43E PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x44B DUP6 DUP3 DUP6 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x456 DUP6 DUP6 DUP6 PUSH2 0x8B9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x47F DUP3 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x488 DUP2 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 PUSH2 0x9B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH2 0x4A4 PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E7 DUP3 DUP3 PUSH2 0x9DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4F6 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x40F DUP2 DUP6 DUP6 PUSH2 0x508 DUP6 DUP10 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x166E JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x531 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1771 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2AC PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x4E7 DUP3 DUP3 PUSH2 0x9FD JUMP JUMPDEST PUSH2 0x568 PUSH2 0x562 PUSH2 0x7B7 JUMP JUMPDEST DUP3 PUSH2 0xA95 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x598 DUP3 PUSH2 0x592 PUSH2 0x7B7 JUMP JUMPDEST DUP4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x4E7 DUP3 DUP3 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x5BA SWAP1 DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x374 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x609 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x617 DUP3 DUP7 PUSH2 0x6C7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x456 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x651 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x40F DUP2 DUP6 DUP6 PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x35D SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1771 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x690 DUP3 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x699 DUP2 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 PUSH2 0x9DB JUMP JUMPDEST PUSH32 0x1179BEC0CCBE6D15EA750B5422555E189E0FA411A2104DA6763FEDB6C73C1470 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x702 DUP3 DUP3 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x739 PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x35D JUMPI POP PUSH2 0x35D DUP3 PUSH2 0xBBB JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x862 SWAP1 DUP6 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87B DUP5 DUP5 PUSH2 0x6C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x8B3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x13C1 JUMP JUMPDEST PUSH2 0x8B3 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x7BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x910 DUP4 DUP4 DUP4 PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1791 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x995 SWAP1 DUP7 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x8B3 DUP5 DUP5 DUP5 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x568 DUP2 PUSH2 0x9B4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x9C3 DUP3 DUP3 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x492 SWAP1 DUP3 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x9E5 DUP3 DUP3 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x492 SWAP1 DUP3 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1629 JUMP JUMPDEST PUSH2 0xA2F PUSH1 0x0 DUP4 DUP4 PUSH2 0xBE0 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA41 SWAP2 SWAP1 PUSH2 0x166E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1791 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xA81 SWAP1 DUP6 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0xAC7 DUP3 PUSH1 0x0 DUP4 PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x133D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP7 SWAP1 SUB SWAP1 SSTORE MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1791 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xB46 SWAP1 DUP7 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x492 DUP4 PUSH1 0x0 DUP5 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP4 DUP4 PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D DUP3 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7D DUP4 DUP4 PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0xBB3 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x415 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x35D JUMPI POP PUSH2 0x35D DUP3 PUSH2 0xDB8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC00 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC21 JUMPI POP PUSH2 0xC1F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1751 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x5C1 JUMP JUMPDEST ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC42 JUMPI POP PUSH2 0xC40 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1751 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x5C1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xC68 JUMPI PUSH1 0x7 SLOAD TIMESTAMP GT PUSH2 0xC68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 DUP4 PUSH2 0x492 JUMP JUMPDEST PUSH2 0xC7D DUP3 DUP3 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x4E7 JUMPI PUSH2 0xC8A DUP2 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xC95 DUP4 PUSH1 0x20 PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCA6 SWAP3 SWAP2 SWAP1 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x4D4 SWAP2 PUSH1 0x4 ADD PUSH2 0x1292 JUMP JUMPDEST PUSH2 0xCD6 DUP3 DUP3 PUSH2 0x5C1 JUMP JUMPDEST ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xD0B PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xF94 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD89 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x35D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xDF2 DUP4 PUSH1 0x2 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0xDFD SWAP1 PUSH1 0x2 PUSH2 0x166E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xE22 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE4C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE75 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xEB2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0xED6 DUP5 PUSH1 0x2 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0xEE1 SWAP1 PUSH1 0x1 PUSH2 0x166E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF75 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0xF23 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF47 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0xF6E DUP2 PUSH2 0x16E8 JUMP JUMPDEST SWAP1 POP PUSH2 0xEE4 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x10A7 JUMPI PUSH1 0x0 PUSH2 0xFB8 PUSH1 0x1 DUP4 PUSH2 0x16A5 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xFCC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x104D JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFFA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x102B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x106C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x415 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5BA DUP3 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10F4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x10FD DUP4 PUSH2 0x10B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x110B PUSH1 0x20 DUP5 ADD PUSH2 0x10B1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1128 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1131 DUP5 PUSH2 0x10B1 JUMP JUMPDEST SWAP3 POP PUSH2 0x113F PUSH1 0x20 DUP6 ADD PUSH2 0x10B1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1161 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x116A DUP4 PUSH2 0x10B1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1189 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x110B PUSH1 0x20 DUP5 ADD PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11C4 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5BA JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH23 0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1 PUSH1 0x4D SHL DUP3 MSTORE DUP4 MLOAD PUSH2 0x122D DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x16BC JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x125E DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x16BC JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x12B1 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E2063616E2774207472616461626C65207269676874206E6F770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305072657365744D696E7465725061757365723A206D757374206861 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x1D99481B5A5B9D195C881C9BDB19481D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1681 JUMPI PUSH2 0x1681 PUSH2 0x173A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x16A0 JUMPI PUSH2 0x16A0 PUSH2 0x173A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x16B7 JUMPI PUSH2 0x16B7 PUSH2 0x173A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16BF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x8B3 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x16F7 JUMPI PUSH2 0x16F7 PUSH2 0x173A JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1713 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1734 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID DUP6 MUL 0x23 ADDRESS SWAP7 0xD9 MULMOD 0xBE 0xFB 0xDA MULMOD SWAP10 0xBB DUP15 LOG2 RETURN 0xA6 0xBE EXTCODECOPY SGT DUP12 SWAP16 0xBF STOP CALLDATACOPY MSTORE LOG4 0xC8 0xBC 0xE8 PUSH16 0x6C9F2DF0FED2C77648DE5860A4CC508C 0xD0 DUP2 DUP13 DUP6 0xB8 0xB8 LOG1 0xAB 0x4C 0xEE 0xEF DUP14 SWAP9 SHR DUP10 JUMP 0xA6 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xE4 SWAP1 0xA8 0xC0 PUSH20 0x8D885DC8B046A53FCC729731D0D9E70A6DE068D8 0xA6 0x5D PUSH17 0x4C7F5464736F6C63430008000033000000 ","sourceMap":"666:2075:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2051:228;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98:4;;;:::i;:::-;;;;;;;:::i;4444:197::-;;;;;;:::i;:::-;;:::i;3255:106::-;;;:::i;:::-;;;;;;;:::i;806:66:15:-;;;:::i;5203:256:4:-;;;;;;:::i;:::-;;:::i;4504:129:0:-;;;;;;:::i;:::-;;:::i;4929:145::-;;;;;;:::i;:::-;;:::i;:::-;;3104:91:4;;;:::i;:::-;;;;;;;:::i;6038:214:0:-;;;;;;:::i;:::-;;:::i;5854:234:4:-;;;;;;:::i;:::-;;:::i;1841:204:15:-;;;;;;:::i;:::-;;:::i;578:89:6:-;;;;;;:::i;:::-;;:::i;3419:125:4:-;;;;;;:::i;:::-;;:::i;973:161:6:-;;;;;;:::i;:::-;;:::i;1431:151:1:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3021:145:0:-;;;;;;:::i;:::-;;:::i;2369:102:4:-;;;:::i;2153:49:0:-;;;:::i;6575:427:4:-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;1750:140:1:-;;;;;;:::i;:::-;;:::i;738:62:15:-;;;:::i;5354:147:0:-;;;;;;:::i;:::-;;:::i;878:78:15:-;;;:::i;3987:149:4:-;;;;;;:::i;:::-;;:::i;963:32:15:-;;;:::i;2051:228::-;2136:4;-1:-1:-1;;;;;;;;;2159:57:15;;;;:113;;;2236:36;2260:11;2236:23;:36::i;:::-;2152:120;;2051:228;;;;:::o;2158:98:4:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;3255:106::-;3342:12;;3255:106;:::o;806:66:15:-;-1:-1:-1;;;;;;;;;;;806:66:15;:::o;5203:256:4:-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:4;;5203:256;-1:-1:-1;;;;5203:256:4:o;4504:129:0:-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129::o;4929:145::-;5012:18;5025:4;5012:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;3104:91:4:-;3186:2;3104:91;:::o;6038:214:0:-;6144:12;:10;:12::i;:::-;-1:-1:-1;;;;;6133:23:0;;;;;;6125:83;;;;-1:-1:-1;;;6125:83:0;;;;;;;:::i;:::-;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;5854:234:4:-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;1841:204:15:-;1918:34;-1:-1:-1;;;;;;;;;;;1939:12:15;:10;:12::i;1918:34::-;1910:101;;;;-1:-1:-1;;;1910:101:15;;;;;;;:::i;:::-;2021:17;2027:2;2031:6;2021:5;:17::i;578:89:6:-;633:27;639:12;:10;:12::i;:::-;653:6;633:5;:27::i;:::-;578:89;:::o;3419:125:4:-;-1:-1:-1;;;;;3519:18:4;3493:7;3519:18;;;:9;:18;;;;;;;3419:125::o;973:161:6:-;1049:46;1065:7;1074:12;:10;:12::i;:::-;1088:6;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;1431:151:1:-;1521:7;1547:18;;;:12;:18;;;;;:28;;1569:5;1547:21;:28::i;:::-;1540:35;1431:151;-1:-1:-1;;;1431:151:1:o;3021:145:0:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;;;;3021:145::o;2369:102:4:-;2425:13;2457:7;2450:14;;;;;:::i;2153:49:0:-;2198:4;2153:49;:::o;6575:427:4:-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:4;;;;;;;:::i;:::-;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;1750:140:1:-;1830:7;1856:18;;;:12;:18;;;;;:27;;:25;:27::i;738:62:15:-;-1:-1:-1;;;;;;;;;;;738:62:15;:::o;5354:147:0:-;5438:18;5451:4;5438:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;878:78:15:-:0;924:32;878:78;:::o;3987:149:4:-;-1:-1:-1;;;;;4102:18:4;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;963:32:15:-;;;;:::o;7587:233:0:-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;-1:-1:-1;7708:36:0;;;7790:12;:10;:12::i;:::-;7763:40;;-1:-1:-1;;;;;7763:40:0;;;;;;;7775:4;;7763:40;;;;;7587:233;;:::o;8305:150:14:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:14;;8398:4;:50::i;634:212:1:-;719:4;-1:-1:-1;;;;;;;;;742:57:1;;;;:97;;;803:36;827:11;803:23;:36::i;640:96:8:-;719:10;640:96;:::o;10457:340:4:-;-1:-1:-1;;;;;10558:19:4;;10550:68;;;;-1:-1:-1;;;10550:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;10636:21:4;;10628:68;;;;-1:-1:-1;;;10628:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;10707:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10758:32;;;;;10707:36;;10758:32;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;-1:-1:-1;;;11244:37:4;;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:4;;;;;;;:::i;:::-;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11078:411;;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:4;;7544:68;;;;-1:-1:-1;;;7544:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;7630:16:4;;7622:64;;;;-1:-1:-1;;;7622:64:4;;;;;;;:::i;:::-;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;-1:-1:-1;;;;;7768:15:4;;7746:19;7768:15;;;:9;:15;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;7899:15:4;;;;;;;:9;:15;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;:23;;;;;;8163:26;;;7899:15;8114:13;;-1:-1:-1;7899:15:4;-1:-1:-1;;;;;8163:26:4;;;7931:6;;8163:26;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;3460:103:0:-;3526:30;3537:4;3543:12;:10;:12::i;:::-;3526:10;:30::i;1978:166:1:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106:18;;;;:12;:18;;;;;:31;;2129:7;2106:22;:31::i;2233:171::-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:18;;;;:12;:18;;;;;:34;;2389:7;2363:25;:34::i;8520:535:4:-;-1:-1:-1;;;;;8603:21:4;;8595:65;;;;-1:-1:-1;;;8595:65:4;;;;;;;:::i;:::-;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:4;;;;;;:9;:18;;;;;;;;:28;;;;;;8952:37;;8899:18;;;;-1:-1:-1;8899:18:4;-1:-1:-1;;;;;8952:37:4;;;8921:6;;8952:37;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;:48::i;9375:659::-;-1:-1:-1;;;;;9458:21:4;;9450:67;;;;-1:-1:-1;;;9450:67:4;;;;;;;:::i;:::-;9528:49;9549:7;9566:1;9570:6;9528:20;:49::i;:::-;-1:-1:-1;;;;;9613:18:4;;9588:22;9613:18;;;:9;:18;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;9746:18:4;;;;;;:9;:18;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;9746:18;;;9931:37;9746:18;;;;-1:-1:-1;9746:18:4;-1:-1:-1;;;;;9931:37:4;;;9784:6;;9931:37;:::i;:::-;;;;;;;;9979:48;9999:7;10016:1;10020:6;9979:19;:48::i;9563:156:14:-;9637:7;9687:22;9691:3;9703:5;9687:3;:22::i;9106:115::-;9169:7;9195:19;9203:3;9195:7;:19::i;2214:404::-;2277:4;2298:21;2308:3;2313:5;2298:9;:21::i;:::-;2293:319;;-1:-1:-1;2335:23:14;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:14;2589:12;;2732:202:0;2817:4;-1:-1:-1;;;;;;;;;2840:47:0;;;;:87;;;2891:36;2915:11;2891:23;:36::i;2285:454:15:-;-1:-1:-1;;;;;2434:18:15;;;;;;:38;;-1:-1:-1;;;;;;2456:16:15;;;;2434:38;:71;;;;;2477:28;-1:-1:-1;;;;;;;;;;;2500:4:15;2477:7;:28::i;:::-;2476:29;2434:71;:102;;;;;2510:26;-1:-1:-1;;;;;;;;;;;2533:2:15;2510:7;:26::i;:::-;2509:27;2434:102;2430:249;;;2616:17;;2598:15;:35;2590:78;;;;-1:-1:-1;;;2590:78:15;;;;;;;:::i;:::-;2688:44;2715:4;2721:2;2725:6;2688:26;:44::i;3844:479:0:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;4022:252:0;;;;;;;-1:-1:-1;;;3970:336:0;;;;;;;:::i;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:0;;;;;;;;;:37;;-1:-1:-1;;8112:37:0;;;8195:12;:10;:12::i;:::-;8168:40;;-1:-1:-1;;;;;8168:40:0;;;;;;;8180:4;;8168:40;;;;;7991:234;;:::o;8623:156:14:-;8696:4;8719:53;8727:3;-1:-1:-1;;;;;8747:23:14;;8719:7;:53::i;4912:118::-;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;-1:-1:-1;;;5005:18:14;;;;;;;;;;;;;;;;;4998:25;;4912:118;;;;:::o;4463:107::-;4545:18;;4463:107::o;4255:127::-;4328:4;4351:19;;;:12;;;;;:19;;;;;;:24;;;4255:127::o;829:155:10:-;-1:-1:-1;;;;;;937:40:10;-1:-1:-1;;;937:40:10;;829:155::o;2407:149:9:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:9;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;-1:-1:-1;;;;;1940:25:9;;;;;-1:-1:-1;;;1940:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:9;;1918:47;;-1:-1:-1;;;1975:6:9;1982:1;1975:9;;;;;;-1:-1:-1;;;1975:9:9;;;;;;;;;-1:-1:-1;;;;;;1975:15:9;;;;;;;;;:9;;;:15;;-1:-1:-1;;;2000:6:9;2007:1;2000:9;;;;;;-1:-1:-1;;;2000:9:9;;;;;;;;;-1:-1:-1;;;;;;2000:15:9;;;;;;;;;:9;;;:15;-1:-1:-1;2030:9:9;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2113:3:9;2105:11;;2096:21;;;;;-1:-1:-1;;;2096:21:9;;;;;;;;;;;;2084:6;2091:1;2084:9;;;;;;-1:-1:-1;;;2084:9:9;;;;;;;;;-1:-1:-1;;;;;;2084:33:9;;;;;;;;;:9;;;:33;-1:-1:-1;2141:1:9;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:9;;2162:55;;;;-1:-1:-1;;;2162:55:9;;;;;;;:::i;2786:1388:14:-;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:14;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;-1:-1:-1;;;3571:22:14;;;;;;;;;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;-1:-1:-1;;;3693:26:14;;;;;;;;;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;-1:-1:-1;;;3977:17:14;;;;;;;;;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;14:175:19;84:20;;-1:-1:-1;;;;;133:31:19;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:19:o;1294:190::-;;1406:2;1394:9;1385:7;1381:23;1377:32;1374:2;;;1427:6;1419;1412:22;1374:2;-1:-1:-1;1455:23:19;;1364:120;-1:-1:-1;1364:120:19:o;1489:266::-;;;1618:2;1606:9;1597:7;1593:23;1589:32;1586:2;;;1639:6;1631;1624:22;1586:2;1680:9;1667:23;1657:33;;1709:40;1745:2;1734:9;1730:18;1709:40;:::i;1760:258::-;;;1889:2;1877:9;1868:7;1864:23;1860:32;1857:2;;;1910:6;1902;1895:22;1857:2;-1:-1:-1;;1938:23:19;;;2008:2;1993:18;;;1980:32;;-1:-1:-1;1847:171:19:o;2023:306::-;;2134:2;2122:9;2113:7;2109:23;2105:32;2102:2;;;2155:6;2147;2140:22;2102:2;2186:23;;-1:-1:-1;;;;;;2238:32:19;;2228:43;;2218:2;;2290:6;2282;2275:22;2529:786;-1:-1:-1;;;2928:38:19;;2989:13;;2529:786;;3011:62;2989:13;3061:2;3052:12;;3045:4;3033:17;;3011:62;:::i;:::-;-1:-1:-1;;;3132:2:19;3092:16;;;3124:11;;;3117:40;3182:13;;3204:63;3182:13;3253:2;3245:11;;3238:4;3226:17;;3204:63;:::i;:::-;3287:17;3306:2;3283:26;;2918:397;-1:-1:-1;;;;2918:397:19:o;3320:203::-;-1:-1:-1;;;;;3484:32:19;;;;3466:51;;3454:2;3439:18;;3421:102::o;3528:187::-;3693:14;;3686:22;3668:41;;3656:2;3641:18;;3623:92::o;3720:177::-;3866:25;;;3854:2;3839:18;;3821:76::o;3902:383::-;;4051:2;4040:9;4033:21;4083:6;4077:13;4126:6;4121:2;4110:9;4106:18;4099:34;4142:66;4201:6;4196:2;4185:9;4181:18;4176:2;4168:6;4164:15;4142:66;:::i;:::-;4269:2;4248:15;-1:-1:-1;;4244:29:19;4229:45;;;;4276:2;4225:54;;4023:262;-1:-1:-1;;4023:262:19:o;4290:356::-;4492:2;4474:21;;;4511:18;;;4504:30;4570:34;4565:2;4550:18;;4543:62;4637:2;4622:18;;4464:182::o;4651:399::-;4853:2;4835:21;;;4892:2;4872:18;;;4865:30;4931:34;4926:2;4911:18;;4904:62;-1:-1:-1;;;4997:2:19;4982:18;;4975:33;5040:3;5025:19;;4825:225::o;5055:398::-;5257:2;5239:21;;;5296:2;5276:18;;;5269:30;5335:34;5330:2;5315:18;;5308:62;-1:-1:-1;;;5401:2:19;5386:18;;5379:32;5443:3;5428:19;;5229:224::o;5458:398::-;5660:2;5642:21;;;5699:2;5679:18;;;5672:30;5738:34;5733:2;5718:18;;5711:62;-1:-1:-1;;;5804:2:19;5789:18;;5782:32;5846:3;5831:19;;5632:224::o;5861:353::-;6063:2;6045:21;;;6102:2;6082:18;;;6075:30;6141:31;6136:2;6121:18;;6114:59;6205:2;6190:18;;6035:179::o;6219:402::-;6421:2;6403:21;;;6460:2;6440:18;;;6433:30;6499:34;6494:2;6479:18;;6472:62;-1:-1:-1;;;6565:2:19;6550:18;;6543:36;6611:3;6596:19;;6393:228::o;6626:354::-;6828:2;6810:21;;;6867:2;6847:18;;;6840:30;6906:32;6901:2;6886:18;;6879:60;6971:2;6956:18;;6800:180::o;6985:418::-;7187:2;7169:21;;;7226:2;7206:18;;;7199:30;7265:34;7260:2;7245:18;;7238:62;-1:-1:-1;;;7331:2:19;7316:18;;7309:52;7393:3;7378:19;;7159:244::o;7408:397::-;7610:2;7592:21;;;7649:2;7629:18;;;7622:30;7688:34;7683:2;7668:18;;7661:62;-1:-1:-1;;;7754:2:19;7739:18;;7732:31;7795:3;7780:19;;7582:223::o;7810:401::-;8012:2;7994:21;;;8051:2;8031:18;;;8024:30;8090:34;8085:2;8070:18;;8063:62;-1:-1:-1;;;8156:2:19;8141:18;;8134:35;8201:3;8186:19;;7984:227::o;8216:400::-;8418:2;8400:21;;;8457:2;8437:18;;;8430:30;8496:34;8491:2;8476:18;;8469:62;-1:-1:-1;;;8562:2:19;8547:18;;8540:34;8606:3;8591:19;;8390:226::o;8621:401::-;8823:2;8805:21;;;8862:2;8842:18;;;8835:30;8901:34;8896:2;8881:18;;8874:62;-1:-1:-1;;;8967:2:19;8952:18;;8945:35;9012:3;8997:19;;8795:227::o;9027:411::-;9229:2;9211:21;;;9268:2;9248:18;;;9241:30;9307:34;9302:2;9287:18;;9280:62;-1:-1:-1;;;9373:2:19;9358:18;;9351:45;9428:3;9413:19;;9201:237::o;9443:355::-;9645:2;9627:21;;;9684:2;9664:18;;;9657:30;9723:33;9718:2;9703:18;;9696:61;9789:2;9774:18;;9617:181::o;9985:184::-;10157:4;10145:17;;;;10127:36;;10115:2;10100:18;;10082:87::o;10174:128::-;;10245:1;10241:6;10238:1;10235:13;10232:2;;;10251:18;;:::i;:::-;-1:-1:-1;10287:9:19;;10222:80::o;10307:168::-;;10413:1;10409;10405:6;10401:14;10398:1;10395:21;10390:1;10383:9;10376:17;10372:45;10369:2;;;10420:18;;:::i;:::-;-1:-1:-1;10460:9:19;;10359:116::o;10480:125::-;;10548:1;10545;10542:8;10539:2;;;10553:18;;:::i;:::-;-1:-1:-1;10590:9:19;;10529:76::o;10610:258::-;10682:1;10692:113;10706:6;10703:1;10700:13;10692:113;;;10782:11;;;10776:18;10763:11;;;10756:39;10728:2;10721:10;10692:113;;;10823:6;10820:1;10817:13;10814:2;;;-1:-1:-1;;10858:1:19;10840:16;;10833:27;10663:205::o;10873:136::-;;10940:5;10930:2;;10949:18;;:::i;:::-;-1:-1:-1;;;10985:18:19;;10920:89::o;11014:380::-;11099:1;11089:12;;11146:1;11136:12;;;11157:2;;11211:4;11203:6;11199:17;11189:27;;11157:2;11264;11256:6;11253:14;11233:18;11230:38;11227:2;;;11310:10;11305:3;11301:20;11298:1;11291:31;11345:4;11342:1;11335:15;11373:4;11370:1;11363:15;11227:2;;11069:325;;;:::o;11399:127::-;11460:10;11455:3;11451:20;11448:1;11441:31;11491:4;11488:1;11481:15;11515:4;11512:1;11505:15"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","TRANSFER_ROLE()":"206b60f9","TRANSFER_ROLE_ADMIN()":"d68fc93c","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","startTradableTime()":"e88b24ba","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_startTradableTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"communityFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_ROLE_ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTradableTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC20} token, including:  - Preminted initial supply  - Ability for holders to burn (destroy) their tokens  - No access control mechanism (for minting/pausing) and hence no governance This contract uses {ERC20Burnable} to include burn capabilities - head to its documentation for details. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"constructor\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE` to the community factory contract, then community factory will grant mint role to the community. See {ERC20-constructor}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/community-token/Point.sol\":\"Point\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"contracts/community-token/Point.sol\":{\"keccak256\":\"0x5e46ffa38005311e2fb506af5724b4ae5aa99caf12fbbca9e4339e609d4255ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c33f8c6ae116c338f5a4f72fd31e8cb8eec31387eff863b13a35fa705e9005d0\",\"dweb:/ipfs/QmeMLdwNtasbDCCk54odHBo8munreVCa53JMB9Q7w5HDZF\"]}},\"version\":1}"}},"contracts/community-token/PointFactory.sol":{"PointFactory":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes","name":"meta","type":"bytes"}],"name":"createCommunityToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2757 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x2E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3120DB1B EQ PUSH3 0x33 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x4A PUSH3 0x44 CALLDATASIZE PUSH1 0x4 PUSH3 0x4D6 JUMP JUMPDEST PUSH3 0x62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x59 SWAP2 SWAP1 PUSH3 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xAB PUSH1 0x0 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 SWAP3 POP POP PUSH3 0x331 SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0xFA PUSH1 0x1 DUP4 PUSH1 0xFF AND DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP PUSH3 0x375 SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x152 PUSH3 0x10F DUP5 PUSH1 0x1 PUSH3 0x6FA JUMP JUMPDEST PUSH1 0xFF AND DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 SWAP3 POP POP PUSH3 0x331 SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x1AF PUSH3 0x167 DUP6 PUSH1 0x2 PUSH3 0x6FA JUMP JUMPDEST PUSH1 0xFF AND DUP4 PUSH1 0xFF AND DUP10 DUP10 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP PUSH3 0x375 SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x213 PUSH3 0x1C3 DUP5 DUP8 PUSH3 0x6FA JUMP JUMPDEST PUSH3 0x1D0 SWAP1 PUSH1 0x2 PUSH3 0x6FA JUMP JUMPDEST PUSH1 0xFF AND DUP10 DUP10 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 SWAP3 POP POP PUSH3 0x44B SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x277 PUSH3 0x227 DUP6 DUP9 PUSH3 0x6FA JUMP JUMPDEST PUSH3 0x234 SWAP1 PUSH1 0x22 PUSH3 0x6FA JUMP JUMPDEST PUSH1 0xFF AND DUP11 DUP11 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 SWAP3 POP POP PUSH3 0x44B SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x2DB PUSH3 0x28B DUP7 DUP10 PUSH3 0x6FA JUMP JUMPDEST PUSH3 0x298 SWAP1 PUSH1 0x42 PUSH3 0x6FA JUMP JUMPDEST PUSH1 0xFF AND DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 SWAP3 POP POP PUSH3 0x486 SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP6 DUP6 DUP6 DUP6 CALLER PUSH1 0x40 MLOAD PUSH3 0x2F3 SWAP1 PUSH3 0x4C8 JUMP JUMPDEST PUSH3 0x304 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x5A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x321 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x340 DUP3 PUSH1 0x1 PUSH3 0x6DF JUMP JUMPDEST DUP4 MLOAD LT ISZERO PUSH3 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x363 SWAP1 PUSH3 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP ADD PUSH1 0x1 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH3 0x385 DUP2 PUSH1 0x1F PUSH3 0x6DF JUMP JUMPDEST LT ISZERO PUSH3 0x3A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x363 SWAP1 PUSH3 0x601 JUMP JUMPDEST PUSH3 0x3B2 DUP3 DUP5 PUSH3 0x6DF JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH3 0x3D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x363 SWAP1 PUSH3 0x687 JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH3 0x3F6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH3 0x442 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH3 0x431 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH3 0x417 JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x45A DUP3 PUSH1 0x20 PUSH3 0x6DF JUMP JUMPDEST DUP4 MLOAD LT ISZERO PUSH3 0x47D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x363 SWAP1 PUSH3 0x629 JUMP JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x495 DUP3 PUSH1 0x14 PUSH3 0x6DF JUMP JUMPDEST DUP4 MLOAD LT ISZERO PUSH3 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x363 SWAP1 PUSH3 0x658 JUMP JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH2 0x1FE9 DUP1 PUSH3 0x739 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x4E9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x500 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x514 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH3 0x523 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH3 0x535 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x56E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x550 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH3 0x580 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 MSTORE PUSH3 0x5BE PUSH1 0xC0 DUP4 ADD DUP10 PUSH3 0x547 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x5D2 DUP2 DUP10 PUSH3 0x547 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 DUP5 ADD MSTORE AND PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x746F55696E743235365F6F75744F66426F756E6473 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x746F416464726573735F6F75744F66426F756E6473 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x746F55696E74385F6F75744F66426F756E6473 PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x6F5 JUMPI PUSH3 0x6F5 PUSH3 0x722 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH3 0x71A JUMPI PUSH3 0x71A PUSH3 0x722 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1FE9 CODESIZE SUB DUP1 PUSH3 0x1FE9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x5DB JUMP JUMPDEST DUP6 MLOAD DUP7 SWAP1 DUP7 SWAP1 PUSH3 0x4D SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x472 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x63 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x472 JUMP JUMPDEST POP POP POP PUSH1 0x7 DUP5 SWAP1 SSTORE PUSH3 0x95 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1FA9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1FC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH3 0xD5 JUMP JUMPDEST PUSH3 0xA2 PUSH1 0x0 DUP3 PUSH3 0x12A JUMP JUMPDEST PUSH3 0xBD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1FC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH3 0x12A JUMP JUMPDEST PUSH3 0xC9 DUP3 DUP5 PUSH3 0x13A JUMP JUMPDEST POP POP POP POP POP POP PUSH3 0x7B3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE2 DUP4 PUSH3 0x212 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 POP DUP4 SWAP2 DUP4 SWAP2 DUP7 SWAP2 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF SWAP2 SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH3 0x136 DUP3 DUP3 PUSH3 0x22A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x186 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17D SWAP1 PUSH3 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x194 PUSH1 0x0 DUP4 DUP4 PUSH3 0x26D JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1A8 SWAP2 SWAP1 PUSH3 0x6F0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH3 0x1FC SWAP1 DUP6 SWAP1 PUSH3 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x136 PUSH1 0x0 DUP4 DUP4 PUSH3 0x268 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x241 DUP3 DUP3 PUSH3 0x334 PUSH1 0x20 SHL PUSH3 0x6F8 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH3 0x268 SWAP2 DUP4 SWAP1 PUSH3 0x77D PUSH3 0x3BE DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH3 0x28E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x2B3 JUMPI POP PUSH3 0x2B1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1FA9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH3 0x3DE JUMP JUMPDEST ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x2D8 JUMPI POP PUSH3 0x2D6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1FA9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH3 0x3DE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH3 0x31C JUMPI PUSH1 0x7 SLOAD TIMESTAMP GT PUSH3 0x31C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17D SWAP1 PUSH3 0x679 JUMP JUMPDEST PUSH3 0x268 DUP4 DUP4 DUP4 PUSH3 0x268 PUSH1 0x20 SHL PUSH3 0x492 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x340 DUP3 DUP3 PUSH3 0x3DE JUMP JUMPDEST PUSH3 0x136 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x37A PUSH3 0x407 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3D5 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x40B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x419 DUP4 DUP4 PUSH3 0x45A JUMP JUMPDEST PUSH3 0x451 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH3 0x3D8 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x3D8 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x480 SWAP1 PUSH3 0x72E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x4A4 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x4EF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x4BF JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x4EF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x4EF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x4EF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x4D2 JUMP JUMPDEST POP PUSH3 0x4FD SWAP3 SWAP2 POP PUSH3 0x501 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x4FD JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x502 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x541 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x55E JUMPI PUSH3 0x55E PUSH3 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP3 ADD DUP2 ADD DUP4 DUP2 GT DUP4 DUP3 LT OR ISZERO PUSH3 0x586 JUMPI PUSH3 0x586 PUSH3 0x784 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 ADD DUP2 ADD DUP8 LT ISZERO PUSH3 0x59D JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH3 0x5C0 JUMPI DUP6 DUP4 ADD DUP2 ADD MLOAD DUP3 DUP5 ADD DUP3 ADD MSTORE SWAP2 DUP3 ADD SWAP2 PUSH3 0x5A1 JUMP JUMPDEST DUP4 DUP4 GT ISZERO PUSH3 0x5D1 JUMPI DUP5 DUP2 DUP6 DUP5 ADD ADD MSTORE JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x5F4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x60B JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x619 DUP11 DUP4 DUP12 ADD PUSH3 0x530 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x62F JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH3 0x63E DUP10 DUP3 DUP11 ADD PUSH3 0x530 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD MLOAD SWAP4 POP PUSH1 0x60 DUP8 ADD MLOAD SWAP3 POP PUSH3 0x65D PUSH1 0x80 DUP9 ADD PUSH3 0x518 JUMP JUMPDEST SWAP2 POP PUSH3 0x66D PUSH1 0xA0 DUP9 ADD PUSH3 0x518 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E2063616E2774207472616461626C65207269676874206E6F770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x729 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x743 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x77E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x17E6 DUP1 PUSH3 0x7C3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x149 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x206B60F9 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xD68FC93C EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xE88B24BA EQ PUSH2 0x330 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x127E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x421 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1114 JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1660 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH2 0x161 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x517 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C8 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x586 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x11B2 JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x126A JUMP JUMPDEST PUSH2 0x161 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x161 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x2F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x675 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x310 CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xADE5221 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x35D JUMPI POP PUSH2 0x35D DUP3 PUSH2 0x792 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x374 SWAP1 PUSH2 0x16FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A0 SWAP1 PUSH2 0x16FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x402 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x40F DUP2 DUP6 DUP6 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1751 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x43E PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x44B DUP6 DUP3 DUP6 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x456 DUP6 DUP6 DUP6 PUSH2 0x8B9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x47F DUP3 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x488 DUP2 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 PUSH2 0x9B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH2 0x4A4 PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E7 DUP3 DUP3 PUSH2 0x9DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4F6 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x40F DUP2 DUP6 DUP6 PUSH2 0x508 DUP6 DUP10 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x166E JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x531 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1771 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2AC PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x4E7 DUP3 DUP3 PUSH2 0x9FD JUMP JUMPDEST PUSH2 0x568 PUSH2 0x562 PUSH2 0x7B7 JUMP JUMPDEST DUP3 PUSH2 0xA95 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x598 DUP3 PUSH2 0x592 PUSH2 0x7B7 JUMP JUMPDEST DUP4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x4E7 DUP3 DUP3 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x5BA SWAP1 DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x374 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x609 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x617 DUP3 DUP7 PUSH2 0x6C7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x456 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x651 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x40F DUP2 DUP6 DUP6 PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x35D SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1771 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x690 DUP3 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x699 DUP2 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 PUSH2 0x9DB JUMP JUMPDEST PUSH32 0x1179BEC0CCBE6D15EA750B5422555E189E0FA411A2104DA6763FEDB6C73C1470 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x702 DUP3 DUP3 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x739 PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x35D JUMPI POP PUSH2 0x35D DUP3 PUSH2 0xBBB JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x862 SWAP1 DUP6 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87B DUP5 DUP5 PUSH2 0x6C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x8B3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x13C1 JUMP JUMPDEST PUSH2 0x8B3 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x7BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x910 DUP4 DUP4 DUP4 PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1791 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x995 SWAP1 DUP7 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x8B3 DUP5 DUP5 DUP5 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x568 DUP2 PUSH2 0x9B4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x9C3 DUP3 DUP3 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x492 SWAP1 DUP3 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x9E5 DUP3 DUP3 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x492 SWAP1 DUP3 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1629 JUMP JUMPDEST PUSH2 0xA2F PUSH1 0x0 DUP4 DUP4 PUSH2 0xBE0 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA41 SWAP2 SWAP1 PUSH2 0x166E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1791 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xA81 SWAP1 DUP6 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0xAC7 DUP3 PUSH1 0x0 DUP4 PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x133D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP7 SWAP1 SUB SWAP1 SSTORE MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1791 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xB46 SWAP1 DUP7 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x492 DUP4 PUSH1 0x0 DUP5 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP4 DUP4 PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D DUP3 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7D DUP4 DUP4 PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0xBB3 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x415 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x35D JUMPI POP PUSH2 0x35D DUP3 PUSH2 0xDB8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC00 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC21 JUMPI POP PUSH2 0xC1F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1751 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x5C1 JUMP JUMPDEST ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC42 JUMPI POP PUSH2 0xC40 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1751 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x5C1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xC68 JUMPI PUSH1 0x7 SLOAD TIMESTAMP GT PUSH2 0xC68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 DUP4 PUSH2 0x492 JUMP JUMPDEST PUSH2 0xC7D DUP3 DUP3 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x4E7 JUMPI PUSH2 0xC8A DUP2 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xC95 DUP4 PUSH1 0x20 PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCA6 SWAP3 SWAP2 SWAP1 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x4D4 SWAP2 PUSH1 0x4 ADD PUSH2 0x1292 JUMP JUMPDEST PUSH2 0xCD6 DUP3 DUP3 PUSH2 0x5C1 JUMP JUMPDEST ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xD0B PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xF94 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD89 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x35D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xDF2 DUP4 PUSH1 0x2 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0xDFD SWAP1 PUSH1 0x2 PUSH2 0x166E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xE22 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE4C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE75 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xEB2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0xED6 DUP5 PUSH1 0x2 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0xEE1 SWAP1 PUSH1 0x1 PUSH2 0x166E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF75 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0xF23 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF47 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0xF6E DUP2 PUSH2 0x16E8 JUMP JUMPDEST SWAP1 POP PUSH2 0xEE4 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x10A7 JUMPI PUSH1 0x0 PUSH2 0xFB8 PUSH1 0x1 DUP4 PUSH2 0x16A5 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xFCC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x104D JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFFA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x102B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x106C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x415 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5BA DUP3 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10F4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x10FD DUP4 PUSH2 0x10B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x110B PUSH1 0x20 DUP5 ADD PUSH2 0x10B1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1128 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1131 DUP5 PUSH2 0x10B1 JUMP JUMPDEST SWAP3 POP PUSH2 0x113F PUSH1 0x20 DUP6 ADD PUSH2 0x10B1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1161 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x116A DUP4 PUSH2 0x10B1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1189 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x110B PUSH1 0x20 DUP5 ADD PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11C4 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5BA JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH23 0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1 PUSH1 0x4D SHL DUP3 MSTORE DUP4 MLOAD PUSH2 0x122D DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x16BC JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x125E DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x16BC JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x12B1 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E2063616E2774207472616461626C65207269676874206E6F770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305072657365744D696E7465725061757365723A206D757374206861 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x1D99481B5A5B9D195C881C9BDB19481D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1681 JUMPI PUSH2 0x1681 PUSH2 0x173A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x16A0 JUMPI PUSH2 0x16A0 PUSH2 0x173A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x16B7 JUMPI PUSH2 0x16B7 PUSH2 0x173A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16BF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x8B3 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x16F7 JUMPI PUSH2 0x16F7 PUSH2 0x173A JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1713 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1734 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID DUP6 MUL 0x23 ADDRESS SWAP7 0xD9 MULMOD 0xBE 0xFB 0xDA MULMOD SWAP10 0xBB DUP15 LOG2 RETURN 0xA6 0xBE EXTCODECOPY SGT DUP12 SWAP16 0xBF STOP CALLDATACOPY MSTORE LOG4 0xC8 0xBC 0xE8 PUSH16 0x6C9F2DF0FED2C77648DE5860A4CC508C 0xD0 DUP2 DUP13 DUP6 0xB8 0xB8 LOG1 0xAB 0x4C 0xEE 0xEF DUP14 SWAP9 SHR DUP10 JUMP 0xA6 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xE4 SWAP1 0xA8 0xC0 PUSH20 0x8D885DC8B046A53FCC729731D0D9E70A6DE068D8 0xA6 0x5D PUSH17 0x4C7F5464736F6C63430008000033850223 ADDRESS SWAP7 0xD9 MULMOD 0xBE 0xFB 0xDA MULMOD SWAP10 0xBB DUP15 LOG2 RETURN 0xA6 0xBE EXTCODECOPY SGT DUP12 SWAP16 0xBF STOP CALLDATACOPY MSTORE LOG4 0xC8 0xBC 0xE8 PUSH16 0x6C1179BEC0CCBE6D15EA750B5422555E XOR SWAP15 0xF LOG4 GT LOG2 LT 0x4D 0xA6 PUSH23 0x3FEDB6C73C1470A2646970667358221220A9234915973C 0x49 SWAP11 0xE2 COINBASE PUSH21 0xBA5AC31A86E263F0843DAF97C1A39C66B269CEB4F7 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"373:804:16:-:0;;;459:22;;;;;;;;;;373:804;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4295:19","statements":[{"nodeType":"YulBlock","src":"6:3:19","statements":[]},{"body":{"nodeType":"YulBlock","src":"103:552:19","statements":[{"body":{"nodeType":"YulBlock","src":"149:26:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"158:6:19"},{"name":"value0","nodeType":"YulIdentifier","src":"166:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"151:6:19"},"nodeType":"YulFunctionCall","src":"151:22:19"},"nodeType":"YulExpressionStatement","src":"151:22:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"124:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"133:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"120:3:19"},"nodeType":"YulFunctionCall","src":"120:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"145:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"116:3:19"},"nodeType":"YulFunctionCall","src":"116:32:19"},"nodeType":"YulIf","src":"113:2:19"},{"nodeType":"YulVariableDeclaration","src":"184:37:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"211:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"198:12:19"},"nodeType":"YulFunctionCall","src":"198:23:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"188:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"230:28:19","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"248:2:19","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"244:3:19"},"nodeType":"YulFunctionCall","src":"244:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"256:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"240:3:19"},"nodeType":"YulFunctionCall","src":"240:18:19"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"234:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"285:26:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"294:6:19"},{"name":"value0","nodeType":"YulIdentifier","src":"302:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"287:6:19"},"nodeType":"YulFunctionCall","src":"287:22:19"},"nodeType":"YulExpressionStatement","src":"287:22:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"273:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"281:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"270:2:19"},"nodeType":"YulFunctionCall","src":"270:14:19"},"nodeType":"YulIf","src":"267:2:19"},{"nodeType":"YulVariableDeclaration","src":"320:32:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"345:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:19"},"nodeType":"YulFunctionCall","src":"330:22:19"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"324:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"400:26:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"409:6:19"},{"name":"value0","nodeType":"YulIdentifier","src":"417:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"402:6:19"},"nodeType":"YulFunctionCall","src":"402:22:19"},"nodeType":"YulExpressionStatement","src":"402:22:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"379:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"383:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"375:3:19"},"nodeType":"YulFunctionCall","src":"375:13:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"390:7:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"371:3:19"},"nodeType":"YulFunctionCall","src":"371:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"364:6:19"},"nodeType":"YulFunctionCall","src":"364:35:19"},"nodeType":"YulIf","src":"361:2:19"},{"nodeType":"YulVariableDeclaration","src":"435:30:19","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"462:2:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"449:12:19"},"nodeType":"YulFunctionCall","src":"449:16:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"439:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"492:26:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"501:6:19"},{"name":"value0","nodeType":"YulIdentifier","src":"509:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"494:6:19"},"nodeType":"YulFunctionCall","src":"494:22:19"},"nodeType":"YulExpressionStatement","src":"494:22:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"480:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"488:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"477:2:19"},"nodeType":"YulFunctionCall","src":"477:14:19"},"nodeType":"YulIf","src":"474:2:19"},{"body":{"nodeType":"YulBlock","src":"568:26:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"577:6:19"},{"name":"value0","nodeType":"YulIdentifier","src":"585:6:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"570:6:19"},"nodeType":"YulFunctionCall","src":"570:22:19"},"nodeType":"YulExpressionStatement","src":"570:22:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"541:2:19"},{"name":"length","nodeType":"YulIdentifier","src":"545:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"537:3:19"},"nodeType":"YulFunctionCall","src":"537:15:19"},{"kind":"number","nodeType":"YulLiteral","src":"554:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"533:3:19"},"nodeType":"YulFunctionCall","src":"533:24:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"559:7:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"530:2:19"},"nodeType":"YulFunctionCall","src":"530:37:19"},"nodeType":"YulIf","src":"527:2:19"},{"nodeType":"YulAssignment","src":"603:21:19","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"617:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"621:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"613:3:19"},"nodeType":"YulFunctionCall","src":"613:11:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"603:6:19"}]},{"nodeType":"YulAssignment","src":"633:16:19","value":{"name":"length","nodeType":"YulIdentifier","src":"643:6:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"633:6:19"}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"92:6:19","type":""}],"src":"14:641:19"},{"body":{"nodeType":"YulBlock","src":"712:426:19","statements":[{"nodeType":"YulVariableDeclaration","src":"722:26:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"742:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"736:5:19"},"nodeType":"YulFunctionCall","src":"736:12:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"726:6:19","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"764:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"769:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"757:6:19"},"nodeType":"YulFunctionCall","src":"757:19:19"},"nodeType":"YulExpressionStatement","src":"757:19:19"},{"nodeType":"YulVariableDeclaration","src":"785:12:19","value":{"name":"end","nodeType":"YulIdentifier","src":"794:3:19"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"789:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"858:110:19","statements":[{"nodeType":"YulVariableDeclaration","src":"872:14:19","value":{"kind":"number","nodeType":"YulLiteral","src":"882:4:19","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"876:2:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"914:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"919:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"910:3:19"},"nodeType":"YulFunctionCall","src":"910:11:19"},{"name":"_1","nodeType":"YulIdentifier","src":"923:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"906:3:19"},"nodeType":"YulFunctionCall","src":"906:20:19"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"942:5:19"},{"name":"i","nodeType":"YulIdentifier","src":"949:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"938:3:19"},"nodeType":"YulFunctionCall","src":"938:13:19"},{"name":"_1","nodeType":"YulIdentifier","src":"953:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"934:3:19"},"nodeType":"YulFunctionCall","src":"934:22:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"928:5:19"},"nodeType":"YulFunctionCall","src":"928:29:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"899:6:19"},"nodeType":"YulFunctionCall","src":"899:59:19"},"nodeType":"YulExpressionStatement","src":"899:59:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"817:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"820:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"814:2:19"},"nodeType":"YulFunctionCall","src":"814:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"828:21:19","statements":[{"nodeType":"YulAssignment","src":"830:17:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"839:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"842:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"835:3:19"},"nodeType":"YulFunctionCall","src":"835:12:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"830:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"810:3:19","statements":[]},"src":"806:162:19"},{"body":{"nodeType":"YulBlock","src":"1002:64:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1031:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"1036:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1027:3:19"},"nodeType":"YulFunctionCall","src":"1027:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"1045:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:19"},"nodeType":"YulFunctionCall","src":"1023:27:19"},{"name":"end","nodeType":"YulIdentifier","src":"1052:3:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1016:6:19"},"nodeType":"YulFunctionCall","src":"1016:40:19"},"nodeType":"YulExpressionStatement","src":"1016:40:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"983:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"986:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"980:2:19"},"nodeType":"YulFunctionCall","src":"980:13:19"},"nodeType":"YulIf","src":"977:2:19"},{"nodeType":"YulAssignment","src":"1075:57:19","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1090:3:19"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1103:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1111:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1099:3:19"},"nodeType":"YulFunctionCall","src":"1099:15:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1120:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1116:3:19"},"nodeType":"YulFunctionCall","src":"1116:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1095:3:19"},"nodeType":"YulFunctionCall","src":"1095:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1086:3:19"},"nodeType":"YulFunctionCall","src":"1086:39:19"},{"kind":"number","nodeType":"YulLiteral","src":"1127:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1082:3:19"},"nodeType":"YulFunctionCall","src":"1082:50:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1075:3:19"}]}]},"name":"abi_encode_t_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"689:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"696:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"704:3:19","type":""}],"src":"660:478:19"},{"body":{"nodeType":"YulBlock","src":"1244:102:19","statements":[{"nodeType":"YulAssignment","src":"1254:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1266:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1277:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1262:3:19"},"nodeType":"YulFunctionCall","src":"1262:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1254:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1296:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1311:6:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1327:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1332:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1323:3:19"},"nodeType":"YulFunctionCall","src":"1323:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"1336:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1319:3:19"},"nodeType":"YulFunctionCall","src":"1319:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1307:3:19"},"nodeType":"YulFunctionCall","src":"1307:32:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1289:6:19"},"nodeType":"YulFunctionCall","src":"1289:51:19"},"nodeType":"YulExpressionStatement","src":"1289:51:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1213:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1224:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1235:4:19","type":""}],"src":"1143:203:19"},{"body":{"nodeType":"YulBlock","src":"1632:450:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1649:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1660:3:19","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1642:6:19"},"nodeType":"YulFunctionCall","src":"1642:22:19"},"nodeType":"YulExpressionStatement","src":"1642:22:19"},{"nodeType":"YulVariableDeclaration","src":"1673:62:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1707:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1719:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1730:3:19","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1715:3:19"},"nodeType":"YulFunctionCall","src":"1715:19:19"}],"functionName":{"name":"abi_encode_t_string","nodeType":"YulIdentifier","src":"1687:19:19"},"nodeType":"YulFunctionCall","src":"1687:48:19"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"1677:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1755:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1766:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1751:3:19"},"nodeType":"YulFunctionCall","src":"1751:18:19"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"1775:6:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1783:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1771:3:19"},"nodeType":"YulFunctionCall","src":"1771:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1744:6:19"},"nodeType":"YulFunctionCall","src":"1744:50:19"},"nodeType":"YulExpressionStatement","src":"1744:50:19"},{"nodeType":"YulAssignment","src":"1803:43:19","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1831:6:19"},{"name":"tail_1","nodeType":"YulIdentifier","src":"1839:6:19"}],"functionName":{"name":"abi_encode_t_string","nodeType":"YulIdentifier","src":"1811:19:19"},"nodeType":"YulFunctionCall","src":"1811:35:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1803:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1866:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1877:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1862:3:19"},"nodeType":"YulFunctionCall","src":"1862:18:19"},{"name":"value2","nodeType":"YulIdentifier","src":"1882:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1855:6:19"},"nodeType":"YulFunctionCall","src":"1855:34:19"},"nodeType":"YulExpressionStatement","src":"1855:34:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1909:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1920:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:19"},"nodeType":"YulFunctionCall","src":"1905:18:19"},{"name":"value3","nodeType":"YulIdentifier","src":"1925:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1898:6:19"},"nodeType":"YulFunctionCall","src":"1898:34:19"},"nodeType":"YulExpressionStatement","src":"1898:34:19"},{"nodeType":"YulVariableDeclaration","src":"1941:29:19","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1959:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1964:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1955:3:19"},"nodeType":"YulFunctionCall","src":"1955:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"1968:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1951:3:19"},"nodeType":"YulFunctionCall","src":"1951:19:19"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1945:2:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1990:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2001:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1986:3:19"},"nodeType":"YulFunctionCall","src":"1986:19:19"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2011:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"2019:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2007:3:19"},"nodeType":"YulFunctionCall","src":"2007:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1979:6:19"},"nodeType":"YulFunctionCall","src":"1979:44:19"},"nodeType":"YulExpressionStatement","src":"1979:44:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2043:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2054:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2039:3:19"},"nodeType":"YulFunctionCall","src":"2039:19:19"},{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"2064:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"2072:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2060:3:19"},"nodeType":"YulFunctionCall","src":"2060:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2032:6:19"},"nodeType":"YulFunctionCall","src":"2032:44:19"},"nodeType":"YulExpressionStatement","src":"2032:44:19"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1561:9:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1572:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1580:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1588:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1596:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1604:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1612:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1623:4:19","type":""}],"src":"1351:731:19"},{"body":{"nodeType":"YulBlock","src":"2261:164:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2289:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2271:6:19"},"nodeType":"YulFunctionCall","src":"2271:21:19"},"nodeType":"YulExpressionStatement","src":"2271:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2312:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2323:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2308:3:19"},"nodeType":"YulFunctionCall","src":"2308:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"2328:2:19","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2301:6:19"},"nodeType":"YulFunctionCall","src":"2301:30:19"},"nodeType":"YulExpressionStatement","src":"2301:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2351:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2362:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:19"},"nodeType":"YulFunctionCall","src":"2347:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"2367:16:19","type":"","value":"slice_overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2340:6:19"},"nodeType":"YulFunctionCall","src":"2340:44:19"},"nodeType":"YulExpressionStatement","src":"2340:44:19"},{"nodeType":"YulAssignment","src":"2393:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2405:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2416:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2401:3:19"},"nodeType":"YulFunctionCall","src":"2401:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2393:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2238:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2252:4:19","type":""}],"src":"2087:338:19"},{"body":{"nodeType":"YulBlock","src":"2604:171:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2621:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2632:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2614:6:19"},"nodeType":"YulFunctionCall","src":"2614:21:19"},"nodeType":"YulExpressionStatement","src":"2614:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2655:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2666:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2651:3:19"},"nodeType":"YulFunctionCall","src":"2651:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"2671:2:19","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2644:6:19"},"nodeType":"YulFunctionCall","src":"2644:30:19"},"nodeType":"YulExpressionStatement","src":"2644:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2694:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2705:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:19"},"nodeType":"YulFunctionCall","src":"2690:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"2710:23:19","type":"","value":"toUint256_outOfBounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2683:6:19"},"nodeType":"YulFunctionCall","src":"2683:51:19"},"nodeType":"YulExpressionStatement","src":"2683:51:19"},{"nodeType":"YulAssignment","src":"2743:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2755:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2766:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2751:3:19"},"nodeType":"YulFunctionCall","src":"2751:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2743:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2581:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2595:4:19","type":""}],"src":"2430:345:19"},{"body":{"nodeType":"YulBlock","src":"2954:171:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2971:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2982:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2964:6:19"},"nodeType":"YulFunctionCall","src":"2964:21:19"},"nodeType":"YulExpressionStatement","src":"2964:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3005:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3016:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3001:3:19"},"nodeType":"YulFunctionCall","src":"3001:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"3021:2:19","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2994:6:19"},"nodeType":"YulFunctionCall","src":"2994:30:19"},"nodeType":"YulExpressionStatement","src":"2994:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3044:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3055:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3040:3:19"},"nodeType":"YulFunctionCall","src":"3040:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"3060:23:19","type":"","value":"toAddress_outOfBounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3033:6:19"},"nodeType":"YulFunctionCall","src":"3033:51:19"},"nodeType":"YulExpressionStatement","src":"3033:51:19"},{"nodeType":"YulAssignment","src":"3093:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3105:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3116:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3101:3:19"},"nodeType":"YulFunctionCall","src":"3101:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3093:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2931:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2945:4:19","type":""}],"src":"2780:345:19"},{"body":{"nodeType":"YulBlock","src":"3304:167:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3321:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3332:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3314:6:19"},"nodeType":"YulFunctionCall","src":"3314:21:19"},"nodeType":"YulExpressionStatement","src":"3314:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3355:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3366:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3351:3:19"},"nodeType":"YulFunctionCall","src":"3351:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"3371:2:19","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3344:6:19"},"nodeType":"YulFunctionCall","src":"3344:30:19"},"nodeType":"YulExpressionStatement","src":"3344:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3394:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3405:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3390:3:19"},"nodeType":"YulFunctionCall","src":"3390:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"3410:19:19","type":"","value":"slice_outOfBounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3383:6:19"},"nodeType":"YulFunctionCall","src":"3383:47:19"},"nodeType":"YulExpressionStatement","src":"3383:47:19"},{"nodeType":"YulAssignment","src":"3439:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3451:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3462:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3447:3:19"},"nodeType":"YulFunctionCall","src":"3447:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3439:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3281:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3295:4:19","type":""}],"src":"3130:341:19"},{"body":{"nodeType":"YulBlock","src":"3650:169:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3667:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3678:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3660:6:19"},"nodeType":"YulFunctionCall","src":"3660:21:19"},"nodeType":"YulExpressionStatement","src":"3660:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3701:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3712:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3697:3:19"},"nodeType":"YulFunctionCall","src":"3697:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"3717:2:19","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3690:6:19"},"nodeType":"YulFunctionCall","src":"3690:30:19"},"nodeType":"YulExpressionStatement","src":"3690:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3740:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3751:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3736:3:19"},"nodeType":"YulFunctionCall","src":"3736:18:19"},{"kind":"string","nodeType":"YulLiteral","src":"3756:21:19","type":"","value":"toUint8_outOfBounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3729:6:19"},"nodeType":"YulFunctionCall","src":"3729:49:19"},"nodeType":"YulExpressionStatement","src":"3729:49:19"},{"nodeType":"YulAssignment","src":"3787:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3799:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3810:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3795:3:19"},"nodeType":"YulFunctionCall","src":"3795:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3787:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3627:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3641:4:19","type":""}],"src":"3476:343:19"},{"body":{"nodeType":"YulBlock","src":"3872:80:19","statements":[{"body":{"nodeType":"YulBlock","src":"3899:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3901:16:19"},"nodeType":"YulFunctionCall","src":"3901:18:19"},"nodeType":"YulExpressionStatement","src":"3901:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3888:1:19"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3895:1:19"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3891:3:19"},"nodeType":"YulFunctionCall","src":"3891:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3885:2:19"},"nodeType":"YulFunctionCall","src":"3885:13:19"},"nodeType":"YulIf","src":"3882:2:19"},{"nodeType":"YulAssignment","src":"3930:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3941:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"3944:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:19"},"nodeType":"YulFunctionCall","src":"3937:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3930:3:19"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3855:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"3858:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3864:3:19","type":""}],"src":"3824:128:19"},{"body":{"nodeType":"YulBlock","src":"4003:158:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4013:23:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4028:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"4031:4:19","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4024:3:19"},"nodeType":"YulFunctionCall","src":"4024:12:19"},"variables":[{"name":"x_1","nodeType":"YulTypedName","src":"4017:3:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4045:23:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4060:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"4063:4:19","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4056:3:19"},"nodeType":"YulFunctionCall","src":"4056:12:19"},"variables":[{"name":"y_1","nodeType":"YulTypedName","src":"4049:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"4104:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4106:16:19"},"nodeType":"YulFunctionCall","src":"4106:18:19"},"nodeType":"YulExpressionStatement","src":"4106:18:19"}]},"condition":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"4083:3:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4092:4:19","type":"","value":"0xff"},{"name":"y_1","nodeType":"YulIdentifier","src":"4098:3:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4088:3:19"},"nodeType":"YulFunctionCall","src":"4088:14:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4080:2:19"},"nodeType":"YulFunctionCall","src":"4080:23:19"},"nodeType":"YulIf","src":"4077:2:19"},{"nodeType":"YulAssignment","src":"4135:20:19","value":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"4146:3:19"},{"name":"y_1","nodeType":"YulIdentifier","src":"4151:3:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4142:3:19"},"nodeType":"YulFunctionCall","src":"4142:13:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4135:3:19"}]}]},"name":"checked_add_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3986:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"3989:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3995:3:19","type":""}],"src":"3957:204:19"},{"body":{"nodeType":"YulBlock","src":"4198:95:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4215:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4222:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4227:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4218:3:19"},"nodeType":"YulFunctionCall","src":"4218:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4208:6:19"},"nodeType":"YulFunctionCall","src":"4208:31:19"},"nodeType":"YulExpressionStatement","src":"4208:31:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4255:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4258:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4248:6:19"},"nodeType":"YulFunctionCall","src":"4248:15:19"},"nodeType":"YulExpressionStatement","src":"4248:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4272:6:19"},"nodeType":"YulFunctionCall","src":"4272:15:19"},"nodeType":"YulExpressionStatement","src":"4272:15:19"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4166:127:19"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value0, value0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value0, value0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_t_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_address_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 192)\n        let tail_1 := abi_encode_t_string(value0, add(headStart, 192))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_t_string(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), and(value5, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"slice_overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"toUint256_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"toAddress_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"slice_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"toUint8_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if gt(x_1, sub(0xff, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x2E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3120DB1B EQ PUSH3 0x33 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x4A PUSH3 0x44 CALLDATASIZE PUSH1 0x4 PUSH3 0x4D6 JUMP JUMPDEST PUSH3 0x62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x59 SWAP2 SWAP1 PUSH3 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xAB PUSH1 0x0 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 SWAP3 POP POP PUSH3 0x331 SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0xFA PUSH1 0x1 DUP4 PUSH1 0xFF AND DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP PUSH3 0x375 SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x152 PUSH3 0x10F DUP5 PUSH1 0x1 PUSH3 0x6FA JUMP JUMPDEST PUSH1 0xFF AND DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 SWAP3 POP POP PUSH3 0x331 SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x1AF PUSH3 0x167 DUP6 PUSH1 0x2 PUSH3 0x6FA JUMP JUMPDEST PUSH1 0xFF AND DUP4 PUSH1 0xFF AND DUP10 DUP10 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP PUSH3 0x375 SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x213 PUSH3 0x1C3 DUP5 DUP8 PUSH3 0x6FA JUMP JUMPDEST PUSH3 0x1D0 SWAP1 PUSH1 0x2 PUSH3 0x6FA JUMP JUMPDEST PUSH1 0xFF AND DUP10 DUP10 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 SWAP3 POP POP PUSH3 0x44B SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x277 PUSH3 0x227 DUP6 DUP9 PUSH3 0x6FA JUMP JUMPDEST PUSH3 0x234 SWAP1 PUSH1 0x22 PUSH3 0x6FA JUMP JUMPDEST PUSH1 0xFF AND DUP11 DUP11 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 SWAP3 POP POP PUSH3 0x44B SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x2DB PUSH3 0x28B DUP7 DUP10 PUSH3 0x6FA JUMP JUMPDEST PUSH3 0x298 SWAP1 PUSH1 0x42 PUSH3 0x6FA JUMP JUMPDEST PUSH1 0xFF AND DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 SWAP3 POP POP PUSH3 0x486 SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP6 DUP6 DUP6 DUP6 CALLER PUSH1 0x40 MLOAD PUSH3 0x2F3 SWAP1 PUSH3 0x4C8 JUMP JUMPDEST PUSH3 0x304 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x5A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x321 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x340 DUP3 PUSH1 0x1 PUSH3 0x6DF JUMP JUMPDEST DUP4 MLOAD LT ISZERO PUSH3 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x363 SWAP1 PUSH3 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP ADD PUSH1 0x1 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH3 0x385 DUP2 PUSH1 0x1F PUSH3 0x6DF JUMP JUMPDEST LT ISZERO PUSH3 0x3A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x363 SWAP1 PUSH3 0x601 JUMP JUMPDEST PUSH3 0x3B2 DUP3 DUP5 PUSH3 0x6DF JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH3 0x3D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x363 SWAP1 PUSH3 0x687 JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH3 0x3F6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH3 0x442 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH3 0x431 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH3 0x417 JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x45A DUP3 PUSH1 0x20 PUSH3 0x6DF JUMP JUMPDEST DUP4 MLOAD LT ISZERO PUSH3 0x47D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x363 SWAP1 PUSH3 0x629 JUMP JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x495 DUP3 PUSH1 0x14 PUSH3 0x6DF JUMP JUMPDEST DUP4 MLOAD LT ISZERO PUSH3 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x363 SWAP1 PUSH3 0x658 JUMP JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH2 0x1FE9 DUP1 PUSH3 0x739 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x4E9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x500 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x514 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH3 0x523 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH3 0x535 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x56E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x550 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH3 0x580 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 MSTORE PUSH3 0x5BE PUSH1 0xC0 DUP4 ADD DUP10 PUSH3 0x547 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x5D2 DUP2 DUP10 PUSH3 0x547 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 DUP5 ADD MSTORE AND PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x746F55696E743235365F6F75744F66426F756E6473 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x746F416464726573735F6F75744F66426F756E6473 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x746F55696E74385F6F75744F66426F756E6473 PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x6F5 JUMPI PUSH3 0x6F5 PUSH3 0x722 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH3 0x71A JUMPI PUSH3 0x71A PUSH3 0x722 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1FE9 CODESIZE SUB DUP1 PUSH3 0x1FE9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x5DB JUMP JUMPDEST DUP6 MLOAD DUP7 SWAP1 DUP7 SWAP1 PUSH3 0x4D SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x472 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x63 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x472 JUMP JUMPDEST POP POP POP PUSH1 0x7 DUP5 SWAP1 SSTORE PUSH3 0x95 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1FA9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1FC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH3 0xD5 JUMP JUMPDEST PUSH3 0xA2 PUSH1 0x0 DUP3 PUSH3 0x12A JUMP JUMPDEST PUSH3 0xBD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1FC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH3 0x12A JUMP JUMPDEST PUSH3 0xC9 DUP3 DUP5 PUSH3 0x13A JUMP JUMPDEST POP POP POP POP POP POP PUSH3 0x7B3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE2 DUP4 PUSH3 0x212 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 POP DUP4 SWAP2 DUP4 SWAP2 DUP7 SWAP2 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF SWAP2 SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH3 0x136 DUP3 DUP3 PUSH3 0x22A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x186 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17D SWAP1 PUSH3 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x194 PUSH1 0x0 DUP4 DUP4 PUSH3 0x26D JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1A8 SWAP2 SWAP1 PUSH3 0x6F0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH3 0x1FC SWAP1 DUP6 SWAP1 PUSH3 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x136 PUSH1 0x0 DUP4 DUP4 PUSH3 0x268 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x241 DUP3 DUP3 PUSH3 0x334 PUSH1 0x20 SHL PUSH3 0x6F8 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH3 0x268 SWAP2 DUP4 SWAP1 PUSH3 0x77D PUSH3 0x3BE DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH3 0x28E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x2B3 JUMPI POP PUSH3 0x2B1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1FA9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH3 0x3DE JUMP JUMPDEST ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x2D8 JUMPI POP PUSH3 0x2D6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1FA9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH3 0x3DE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH3 0x31C JUMPI PUSH1 0x7 SLOAD TIMESTAMP GT PUSH3 0x31C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17D SWAP1 PUSH3 0x679 JUMP JUMPDEST PUSH3 0x268 DUP4 DUP4 DUP4 PUSH3 0x268 PUSH1 0x20 SHL PUSH3 0x492 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x340 DUP3 DUP3 PUSH3 0x3DE JUMP JUMPDEST PUSH3 0x136 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x37A PUSH3 0x407 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3D5 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x40B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x419 DUP4 DUP4 PUSH3 0x45A JUMP JUMPDEST PUSH3 0x451 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH3 0x3D8 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x3D8 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x480 SWAP1 PUSH3 0x72E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x4A4 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x4EF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x4BF JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x4EF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x4EF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x4EF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x4D2 JUMP JUMPDEST POP PUSH3 0x4FD SWAP3 SWAP2 POP PUSH3 0x501 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x4FD JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x502 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x541 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x55E JUMPI PUSH3 0x55E PUSH3 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP3 ADD DUP2 ADD DUP4 DUP2 GT DUP4 DUP3 LT OR ISZERO PUSH3 0x586 JUMPI PUSH3 0x586 PUSH3 0x784 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 ADD DUP2 ADD DUP8 LT ISZERO PUSH3 0x59D JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH3 0x5C0 JUMPI DUP6 DUP4 ADD DUP2 ADD MLOAD DUP3 DUP5 ADD DUP3 ADD MSTORE SWAP2 DUP3 ADD SWAP2 PUSH3 0x5A1 JUMP JUMPDEST DUP4 DUP4 GT ISZERO PUSH3 0x5D1 JUMPI DUP5 DUP2 DUP6 DUP5 ADD ADD MSTORE JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x5F4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x60B JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x619 DUP11 DUP4 DUP12 ADD PUSH3 0x530 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x62F JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH3 0x63E DUP10 DUP3 DUP11 ADD PUSH3 0x530 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD MLOAD SWAP4 POP PUSH1 0x60 DUP8 ADD MLOAD SWAP3 POP PUSH3 0x65D PUSH1 0x80 DUP9 ADD PUSH3 0x518 JUMP JUMPDEST SWAP2 POP PUSH3 0x66D PUSH1 0xA0 DUP9 ADD PUSH3 0x518 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E2063616E2774207472616461626C65207269676874206E6F770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x729 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x743 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x77E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x17E6 DUP1 PUSH3 0x7C3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x149 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x206B60F9 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xD68FC93C EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xE88B24BA EQ PUSH2 0x330 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x127E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x421 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1114 JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1660 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH2 0x161 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x517 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C8 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x586 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x11B2 JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x126A JUMP JUMPDEST PUSH2 0x161 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x161 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x114F JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x2F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x675 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x310 CALLDATASIZE PUSH1 0x4 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xADE5221 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x35D JUMPI POP PUSH2 0x35D DUP3 PUSH2 0x792 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x374 SWAP1 PUSH2 0x16FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A0 SWAP1 PUSH2 0x16FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x402 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x40F DUP2 DUP6 DUP6 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1751 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x43E PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x44B DUP6 DUP3 DUP6 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x456 DUP6 DUP6 DUP6 PUSH2 0x8B9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x47F DUP3 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x488 DUP2 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 PUSH2 0x9B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH2 0x4A4 PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E7 DUP3 DUP3 PUSH2 0x9DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4F6 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x40F DUP2 DUP6 DUP6 PUSH2 0x508 DUP6 DUP10 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x166E JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x531 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1771 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2AC PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x4E7 DUP3 DUP3 PUSH2 0x9FD JUMP JUMPDEST PUSH2 0x568 PUSH2 0x562 PUSH2 0x7B7 JUMP JUMPDEST DUP3 PUSH2 0xA95 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x598 DUP3 PUSH2 0x592 PUSH2 0x7B7 JUMP JUMPDEST DUP4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x4E7 DUP3 DUP3 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x5BA SWAP1 DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x374 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x609 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x617 DUP3 DUP7 PUSH2 0x6C7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x456 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x651 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x40F DUP2 DUP6 DUP6 PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x35D SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1771 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x690 DUP3 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x699 DUP2 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 PUSH2 0x9DB JUMP JUMPDEST PUSH32 0x1179BEC0CCBE6D15EA750B5422555E189E0FA411A2104DA6763FEDB6C73C1470 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x702 DUP3 DUP3 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x739 PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x35D JUMPI POP PUSH2 0x35D DUP3 PUSH2 0xBBB JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x862 SWAP1 DUP6 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87B DUP5 DUP5 PUSH2 0x6C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x8B3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x13C1 JUMP JUMPDEST PUSH2 0x8B3 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x7BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x910 DUP4 DUP4 DUP4 PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1791 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x995 SWAP1 DUP7 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x8B3 DUP5 DUP5 DUP5 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x568 DUP2 PUSH2 0x9B4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x9C3 DUP3 DUP3 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x492 SWAP1 DUP3 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x9E5 DUP3 DUP3 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x492 SWAP1 DUP3 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x1629 JUMP JUMPDEST PUSH2 0xA2F PUSH1 0x0 DUP4 DUP4 PUSH2 0xBE0 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA41 SWAP2 SWAP1 PUSH2 0x166E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1791 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xA81 SWAP1 DUP6 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0xAC7 DUP3 PUSH1 0x0 DUP4 PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x133D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP7 SWAP1 SUB SWAP1 SSTORE MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1791 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xB46 SWAP1 DUP7 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x492 DUP4 PUSH1 0x0 DUP5 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP4 DUP4 PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D DUP3 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7D DUP4 DUP4 PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0xBB3 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x415 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x35D JUMPI POP PUSH2 0x35D DUP3 PUSH2 0xDB8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC00 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC21 JUMPI POP PUSH2 0xC1F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1751 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x5C1 JUMP JUMPDEST ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC42 JUMPI POP PUSH2 0xC40 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1751 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x5C1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xC68 JUMPI PUSH1 0x7 SLOAD TIMESTAMP GT PUSH2 0xC68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x492 DUP4 DUP4 DUP4 PUSH2 0x492 JUMP JUMPDEST PUSH2 0xC7D DUP3 DUP3 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x4E7 JUMPI PUSH2 0xC8A DUP2 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xC95 DUP4 PUSH1 0x20 PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCA6 SWAP3 SWAP2 SWAP1 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x4D4 SWAP2 PUSH1 0x4 ADD PUSH2 0x1292 JUMP JUMPDEST PUSH2 0xCD6 DUP3 DUP3 PUSH2 0x5C1 JUMP JUMPDEST ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xD0B PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xF94 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD89 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x35D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xDF2 DUP4 PUSH1 0x2 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0xDFD SWAP1 PUSH1 0x2 PUSH2 0x166E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xE22 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE4C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE75 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xEB2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0xED6 DUP5 PUSH1 0x2 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0xEE1 SWAP1 PUSH1 0x1 PUSH2 0x166E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF75 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0xF23 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF47 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0xF6E DUP2 PUSH2 0x16E8 JUMP JUMPDEST SWAP1 POP PUSH2 0xEE4 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x10A7 JUMPI PUSH1 0x0 PUSH2 0xFB8 PUSH1 0x1 DUP4 PUSH2 0x16A5 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xFCC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x104D JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFFA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x102B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x106C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x415 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5BA DUP3 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10F4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x10FD DUP4 PUSH2 0x10B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x110B PUSH1 0x20 DUP5 ADD PUSH2 0x10B1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1128 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1131 DUP5 PUSH2 0x10B1 JUMP JUMPDEST SWAP3 POP PUSH2 0x113F PUSH1 0x20 DUP6 ADD PUSH2 0x10B1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1161 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x116A DUP4 PUSH2 0x10B1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1189 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x110B PUSH1 0x20 DUP5 ADD PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11C4 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5BA JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH23 0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1 PUSH1 0x4D SHL DUP3 MSTORE DUP4 MLOAD PUSH2 0x122D DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x16BC JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x125E DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x16BC JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x12B1 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E2063616E2774207472616461626C65207269676874206E6F770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305072657365744D696E7465725061757365723A206D757374206861 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x1D99481B5A5B9D195C881C9BDB19481D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1681 JUMPI PUSH2 0x1681 PUSH2 0x173A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x16A0 JUMPI PUSH2 0x16A0 PUSH2 0x173A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x16B7 JUMPI PUSH2 0x16B7 PUSH2 0x173A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16BF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x8B3 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x16F7 JUMPI PUSH2 0x16F7 PUSH2 0x173A JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1713 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1734 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID DUP6 MUL 0x23 ADDRESS SWAP7 0xD9 MULMOD 0xBE 0xFB 0xDA MULMOD SWAP10 0xBB DUP15 LOG2 RETURN 0xA6 0xBE EXTCODECOPY SGT DUP12 SWAP16 0xBF STOP CALLDATACOPY MSTORE LOG4 0xC8 0xBC 0xE8 PUSH16 0x6C9F2DF0FED2C77648DE5860A4CC508C 0xD0 DUP2 DUP13 DUP6 0xB8 0xB8 LOG1 0xAB 0x4C 0xEE 0xEF DUP14 SWAP9 SHR DUP10 JUMP 0xA6 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xE4 SWAP1 0xA8 0xC0 PUSH20 0x8D885DC8B046A53FCC729731D0D9E70A6DE068D8 0xA6 0x5D PUSH17 0x4C7F5464736F6C63430008000033850223 ADDRESS SWAP7 0xD9 MULMOD 0xBE 0xFB 0xDA MULMOD SWAP10 0xBB DUP15 LOG2 RETURN 0xA6 0xBE EXTCODECOPY SGT DUP12 SWAP16 0xBF STOP CALLDATACOPY MSTORE LOG4 0xC8 0xBC 0xE8 PUSH16 0x6C1179BEC0CCBE6D15EA750B5422555E XOR SWAP15 0xF LOG4 GT LOG2 LT 0x4D 0xA6 PUSH23 0x3FEDB6C73C1470A2646970667358221220A9234915973C 0x49 SWAP11 0xE2 COINBASE PUSH21 0xBA5AC31A86E263F0843DAF97C1A39C66B269CEB4F7 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"373:804:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;487:688;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;565:7;584:16;603:15;616:1;603:4;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;603:12:16;;:15;-1:-1:-1;;603:12:16;:15;-1:-1:-1;603:15:16:i;:::-;584:34;;628:18;656:25;667:1;670:10;656:25;;:4;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;656:10:16;;:25;;-1:-1:-1;;656:10:16;:25;-1:-1:-1;656:25:16:i;:::-;628:54;-1:-1:-1;692:18:16;713:28;726:14;:10;739:1;726:14;:::i;:::-;713:28;;:4;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;713:12:16;;:28;-1:-1:-1;;713:12:16;:28;-1:-1:-1;713:28:16:i;:::-;692:49;-1:-1:-1;751:20:16;781:40;792:14;:10;805:1;792:14;:::i;:::-;781:40;;808:12;781:40;;:4;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;781:10:16;;:40;;-1:-1:-1;;781:10:16;:40;-1:-1:-1;781:40:16:i;:::-;751:71;-1:-1:-1;832:22:16;857:45;872:25;885:12;872:10;:25;:::i;:::-;:29;;900:1;872:29;:::i;:::-;857:45;;:4;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;857:14:16;;:45;-1:-1:-1;;857:14:16;:45;-1:-1:-1;857:45:16:i;:::-;832:70;-1:-1:-1;912:14:16;929:46;944:25;957:12;944:10;:25;:::i;:::-;:30;;972:2;944:30;:::i;:::-;929:46;;:4;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;929:14:16;;:46;-1:-1:-1;;929:14:16;:46;-1:-1:-1;929:46:16:i;:::-;912:63;-1:-1:-1;985:13:16;1001:46;1016:25;1029:12;1016:10;:25;:::i;:::-;:30;;1044:2;1016:30;:::i;:::-;1001:46;;:4;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1001:14:16;;:46;-1:-1:-1;;1001:14:16;:46;-1:-1:-1;1001:46:16:i;:::-;985:62;;1057:11;1081:4;1087:6;1095:14;1111:6;1119:5;1126:10;1071:66;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1057:80:16;487:688;-1:-1:-1;;;;;;;;;;;487:688:16:o;12627:302:18:-;12704:5;12746:10;:6;12755:1;12746:10;:::i;:::-;12729:6;:13;:27;;12721:60;;;;-1:-1:-1;;;12721:60:18;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;12857:29:18;12873:3;12857:29;12851:36;;12627:302::o;9457:2804::-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:18;;;;;;;:::i;:::-;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:18;;;;;;;:::i;:::-;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:18;;;11804:2;11787:11;-1:-1:-1;;11783:25:18;11777:4;11770:39;-1:-1:-1;9821:2397:18;-1:-1:-1;12245:9:18;9457:2804;-1:-1:-1;;;;9457:2804:18:o;14497:311::-;14576:7;14620:11;:6;14629:2;14620:11;:::i;:::-;14603:6;:13;:28;;14595:62;;;;-1:-1:-1;;;14595:62:18;;;;;;;:::i;:::-;-1:-1:-1;14735:30:18;14751:4;14735:30;14729:37;;14497:311::o;12267:354::-;12346:7;12390:11;:6;12399:2;12390:11;:::i;:::-;12373:6;:13;:28;;12365:62;;;;-1:-1:-1;;;12365:62:18;;;;;;;:::i;:::-;-1:-1:-1;12515:30:18;12531:4;12515:30;12509:37;-1:-1:-1;;;12505:71:18;;;12267:354::o;-1:-1:-1:-;;;;;;;;:::o;14:641:19:-;;;145:2;133:9;124:7;120:23;116:32;113:2;;;166:6;158;151:22;113:2;198:23;;-1:-1:-1;;;;;270:14:19;;;267:2;;;302:6;294;287:22;267:2;345:6;334:9;330:22;320:32;;390:7;383:4;379:2;375:13;371:27;361:2;;417:6;409;402:22;361:2;462;449:16;488:2;480:6;477:14;474:2;;;509:6;501;494:22;474:2;559:7;554:2;545:6;541:2;537:15;533:24;530:37;527:2;;;585:6;577;570:22;527:2;621;613:11;;;;;643:6;;-1:-1:-1;103:552:19;;-1:-1:-1;;;;103:552:19:o;660:478::-;;742:5;736:12;769:6;764:3;757:19;794:3;806:162;820:6;817:1;814:13;806:162;;;882:4;938:13;;;934:22;;928:29;910:11;;;906:20;;899:59;835:12;806:162;;;986:6;983:1;980:13;977:2;;;1052:3;1045:4;1036:6;1031:3;1027:16;1023:27;1016:40;977:2;-1:-1:-1;1120:2:19;1099:15;-1:-1:-1;;1095:29:19;1086:39;;;;1127:4;1082:50;;712:426;-1:-1:-1;;712:426:19:o;1143:203::-;-1:-1:-1;;;;;1307:32:19;;;;1289:51;;1277:2;1262:18;;1244:102::o;1351:731::-;;1660:3;1649:9;1642:22;1687:48;1730:3;1719:9;1715:19;1707:6;1687:48;:::i;:::-;1783:9;1775:6;1771:22;1766:2;1755:9;1751:18;1744:50;1811:35;1839:6;1831;1811:35;:::i;:::-;1877:2;1862:18;;1855:34;;;;-1:-1:-1;;1920:2:19;1905:18;;1898:34;;;;-1:-1:-1;;;;;2007:15:19;;;2001:3;1986:19;;1979:44;2060:15;1959:3;2039:19;;;2032:44;1803:43;1632:450;-1:-1:-1;;1632:450:19:o;2087:338::-;2289:2;2271:21;;;2328:2;2308:18;;;2301:30;-1:-1:-1;;;2362:2:19;2347:18;;2340:44;2416:2;2401:18;;2261:164::o;2430:345::-;2632:2;2614:21;;;2671:2;2651:18;;;2644:30;-1:-1:-1;;;2705:2:19;2690:18;;2683:51;2766:2;2751:18;;2604:171::o;2780:345::-;2982:2;2964:21;;;3021:2;3001:18;;;2994:30;-1:-1:-1;;;3055:2:19;3040:18;;3033:51;3116:2;3101:18;;2954:171::o;3130:341::-;3332:2;3314:21;;;3371:2;3351:18;;;3344:30;-1:-1:-1;;;3405:2:19;3390:18;;3383:47;3462:2;3447:18;;3304:167::o;3476:343::-;3678:2;3660:21;;;3717:2;3697:18;;;3690:30;-1:-1:-1;;;3751:2:19;3736:18;;3729:49;3810:2;3795:18;;3650:169::o;3824:128::-;;3895:1;3891:6;3888:1;3885:13;3882:2;;;3901:18;;:::i;:::-;-1:-1:-1;3937:9:19;;3872:80::o;3957:204::-;;4031:4;4028:1;4024:12;4063:4;4060:1;4056:12;4098:3;4092:4;4088:14;4083:3;4080:23;4077:2;;;4106:18;;:::i;:::-;4142:13;;4003:158;-1:-1:-1;;;4003:158:19:o;4166:127::-;4227:10;4222:3;4218:20;4215:1;4208:31;4258:4;4255:1;4248:15;4282:4;4279:1;4272:15"},"methodIdentifiers":{"createCommunityToken(bytes)":"3120db1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"name\":\"createCommunityToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/community-token/PointFactory.sol\":\"PointFactory\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"contracts/community-token/Point.sol\":{\"keccak256\":\"0x5e46ffa38005311e2fb506af5724b4ae5aa99caf12fbbca9e4339e609d4255ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c33f8c6ae116c338f5a4f72fd31e8cb8eec31387eff863b13a35fa705e9005d0\",\"dweb:/ipfs/QmeMLdwNtasbDCCk54odHBo8munreVCa53JMB9Q7w5HDZF\"]},\"contracts/community-token/PointFactory.sol\":{\"keccak256\":\"0x866ebf15988ec9707e681cf919080bdee6566775a78e199fa1855ef20b371b52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b5a2d0a4a9eb8b8865740236858c088adc8e8907c0a47e9217801af7ba828ad\",\"dweb:/ipfs/QmNWrZumrYbgYw9ESuuY6e3jXEursTXzVt9CRFLvPWnctT\"]},\"contracts/interfaces/ICommunityTokenFactory.sol\":{\"keccak256\":\"0x9a69a2d0752d3002d55ec2734724891fdab03de0a88e15ff297d85a3878924b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54fcdeb38c2292e11b14d0ff2b2d772ab8e14ce56d080685fede2f38749ff1d\",\"dweb:/ipfs/QmZdUicfe2kiGG5WaYpYN9yzNoXN7X3AmCMaosF4Vj6kzz\"]},\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}"}},"contracts/interfaces/ICommunityTokenFactory.sol":{"ICommunityTokenFactory":{"abi":[{"inputs":[{"internalType":"bytes","name":"meta","type":"bytes"}],"name":"createCommunityToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"createCommunityToken(bytes)":"3120db1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"name\":\"createCommunityToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the community token factory.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICommunityTokenFactory.sol\":\"ICommunityTokenFactory\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICommunityTokenFactory.sol\":{\"keccak256\":\"0x9a69a2d0752d3002d55ec2734724891fdab03de0a88e15ff297d85a3878924b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54fcdeb38c2292e11b14d0ff2b2d772ab8e14ce56d080685fede2f38749ff1d\",\"dweb:/ipfs/QmZdUicfe2kiGG5WaYpYN9yzNoXN7X3AmCMaosF4Vj6kzz\"]}},\"version\":1}"}},"solidity-bytes-utils/contracts/BytesLib.sol":{"BytesLib":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200c61df01f7543506f0128cb1fd621b1a5c94c71b241fc106dc43d9123235b42664736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC PUSH2 0xDF01 0xF7 SLOAD CALLDATALOAD MOD CREATE SLT DUP13 0xB1 REVERT PUSH3 0x1B1A5C SWAP5 0xC7 SHL 0x24 0x1F 0xC1 MOD 0xDC NUMBER 0xD9 SLT ORIGIN CALLDATALOAD 0xB4 0x26 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"370:18904:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200c61df01f7543506f0128cb1fd621b1a5c94c71b241fc106dc43d9123235b42664736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC PUSH2 0xDF01 0xF7 SLOAD CALLDATALOAD MOD CREATE SLT DUP13 0xB1 REVERT PUSH3 0x1B1A5C SWAP5 0xC7 SHL 0x24 0x1F 0xC1 MOD 0xDC NUMBER 0xD9 SLT ORIGIN CALLDATALOAD 0xB4 0x26 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"370:18904:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity-bytes-utils/contracts/BytesLib.sol\":\"BytesLib\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}"}}}}}